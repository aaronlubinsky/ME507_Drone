
ME507_Drone.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007810  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000244  080079b0  080079b0  000089b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007bf4  08007bf4  0000908c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007bf4  08007bf4  00008bf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007bfc  08007bfc  0000908c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007bfc  08007bfc  00008bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08007c00  08007c00  00008c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000008c  20000000  08007c04  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00013ca0  2000008c  08007c90  0000908c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20013d2c  08007c90  00009d2c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000908c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00011d38  00000000  00000000  000090bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002782  00000000  00000000  0001adf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001050  00000000  00000000  0001d578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000cd9  00000000  00000000  0001e5c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018b2b  00000000  00000000  0001f2a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014347  00000000  00000000  00037dcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093df2  00000000  00000000  0004c113  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000dff05  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005104  00000000  00000000  000dff48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  000e504c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000008c 	.word	0x2000008c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08007998 	.word	0x08007998

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000090 	.word	0x20000090
 80001dc:	08007998 	.word	0x08007998

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b988 	b.w	80005b8 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	468e      	mov	lr, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	4688      	mov	r8, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4617      	mov	r7, r2
 80002d4:	d962      	bls.n	800039c <__udivmoddi4+0xdc>
 80002d6:	fab2 f682 	clz	r6, r2
 80002da:	b14e      	cbz	r6, 80002f0 <__udivmoddi4+0x30>
 80002dc:	f1c6 0320 	rsb	r3, r6, #32
 80002e0:	fa01 f806 	lsl.w	r8, r1, r6
 80002e4:	fa20 f303 	lsr.w	r3, r0, r3
 80002e8:	40b7      	lsls	r7, r6
 80002ea:	ea43 0808 	orr.w	r8, r3, r8
 80002ee:	40b4      	lsls	r4, r6
 80002f0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002f4:	fa1f fc87 	uxth.w	ip, r7
 80002f8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002fc:	0c23      	lsrs	r3, r4, #16
 80002fe:	fb0e 8811 	mls	r8, lr, r1, r8
 8000302:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000306:	fb01 f20c 	mul.w	r2, r1, ip
 800030a:	429a      	cmp	r2, r3
 800030c:	d909      	bls.n	8000322 <__udivmoddi4+0x62>
 800030e:	18fb      	adds	r3, r7, r3
 8000310:	f101 30ff 	add.w	r0, r1, #4294967295
 8000314:	f080 80ea 	bcs.w	80004ec <__udivmoddi4+0x22c>
 8000318:	429a      	cmp	r2, r3
 800031a:	f240 80e7 	bls.w	80004ec <__udivmoddi4+0x22c>
 800031e:	3902      	subs	r1, #2
 8000320:	443b      	add	r3, r7
 8000322:	1a9a      	subs	r2, r3, r2
 8000324:	b2a3      	uxth	r3, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000332:	fb00 fc0c 	mul.w	ip, r0, ip
 8000336:	459c      	cmp	ip, r3
 8000338:	d909      	bls.n	800034e <__udivmoddi4+0x8e>
 800033a:	18fb      	adds	r3, r7, r3
 800033c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000340:	f080 80d6 	bcs.w	80004f0 <__udivmoddi4+0x230>
 8000344:	459c      	cmp	ip, r3
 8000346:	f240 80d3 	bls.w	80004f0 <__udivmoddi4+0x230>
 800034a:	443b      	add	r3, r7
 800034c:	3802      	subs	r0, #2
 800034e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000352:	eba3 030c 	sub.w	r3, r3, ip
 8000356:	2100      	movs	r1, #0
 8000358:	b11d      	cbz	r5, 8000362 <__udivmoddi4+0xa2>
 800035a:	40f3      	lsrs	r3, r6
 800035c:	2200      	movs	r2, #0
 800035e:	e9c5 3200 	strd	r3, r2, [r5]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d905      	bls.n	8000376 <__udivmoddi4+0xb6>
 800036a:	b10d      	cbz	r5, 8000370 <__udivmoddi4+0xb0>
 800036c:	e9c5 0100 	strd	r0, r1, [r5]
 8000370:	2100      	movs	r1, #0
 8000372:	4608      	mov	r0, r1
 8000374:	e7f5      	b.n	8000362 <__udivmoddi4+0xa2>
 8000376:	fab3 f183 	clz	r1, r3
 800037a:	2900      	cmp	r1, #0
 800037c:	d146      	bne.n	800040c <__udivmoddi4+0x14c>
 800037e:	4573      	cmp	r3, lr
 8000380:	d302      	bcc.n	8000388 <__udivmoddi4+0xc8>
 8000382:	4282      	cmp	r2, r0
 8000384:	f200 8105 	bhi.w	8000592 <__udivmoddi4+0x2d2>
 8000388:	1a84      	subs	r4, r0, r2
 800038a:	eb6e 0203 	sbc.w	r2, lr, r3
 800038e:	2001      	movs	r0, #1
 8000390:	4690      	mov	r8, r2
 8000392:	2d00      	cmp	r5, #0
 8000394:	d0e5      	beq.n	8000362 <__udivmoddi4+0xa2>
 8000396:	e9c5 4800 	strd	r4, r8, [r5]
 800039a:	e7e2      	b.n	8000362 <__udivmoddi4+0xa2>
 800039c:	2a00      	cmp	r2, #0
 800039e:	f000 8090 	beq.w	80004c2 <__udivmoddi4+0x202>
 80003a2:	fab2 f682 	clz	r6, r2
 80003a6:	2e00      	cmp	r6, #0
 80003a8:	f040 80a4 	bne.w	80004f4 <__udivmoddi4+0x234>
 80003ac:	1a8a      	subs	r2, r1, r2
 80003ae:	0c03      	lsrs	r3, r0, #16
 80003b0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003b4:	b280      	uxth	r0, r0
 80003b6:	b2bc      	uxth	r4, r7
 80003b8:	2101      	movs	r1, #1
 80003ba:	fbb2 fcfe 	udiv	ip, r2, lr
 80003be:	fb0e 221c 	mls	r2, lr, ip, r2
 80003c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003c6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ca:	429a      	cmp	r2, r3
 80003cc:	d907      	bls.n	80003de <__udivmoddi4+0x11e>
 80003ce:	18fb      	adds	r3, r7, r3
 80003d0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003d4:	d202      	bcs.n	80003dc <__udivmoddi4+0x11c>
 80003d6:	429a      	cmp	r2, r3
 80003d8:	f200 80e0 	bhi.w	800059c <__udivmoddi4+0x2dc>
 80003dc:	46c4      	mov	ip, r8
 80003de:	1a9b      	subs	r3, r3, r2
 80003e0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003e4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003e8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003ec:	fb02 f404 	mul.w	r4, r2, r4
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x144>
 80003f4:	18fb      	adds	r3, r7, r3
 80003f6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x142>
 80003fc:	429c      	cmp	r4, r3
 80003fe:	f200 80ca 	bhi.w	8000596 <__udivmoddi4+0x2d6>
 8000402:	4602      	mov	r2, r0
 8000404:	1b1b      	subs	r3, r3, r4
 8000406:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800040a:	e7a5      	b.n	8000358 <__udivmoddi4+0x98>
 800040c:	f1c1 0620 	rsb	r6, r1, #32
 8000410:	408b      	lsls	r3, r1
 8000412:	fa22 f706 	lsr.w	r7, r2, r6
 8000416:	431f      	orrs	r7, r3
 8000418:	fa0e f401 	lsl.w	r4, lr, r1
 800041c:	fa20 f306 	lsr.w	r3, r0, r6
 8000420:	fa2e fe06 	lsr.w	lr, lr, r6
 8000424:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000428:	4323      	orrs	r3, r4
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	fa1f fc87 	uxth.w	ip, r7
 8000432:	fbbe f0f9 	udiv	r0, lr, r9
 8000436:	0c1c      	lsrs	r4, r3, #16
 8000438:	fb09 ee10 	mls	lr, r9, r0, lr
 800043c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000440:	fb00 fe0c 	mul.w	lr, r0, ip
 8000444:	45a6      	cmp	lr, r4
 8000446:	fa02 f201 	lsl.w	r2, r2, r1
 800044a:	d909      	bls.n	8000460 <__udivmoddi4+0x1a0>
 800044c:	193c      	adds	r4, r7, r4
 800044e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000452:	f080 809c 	bcs.w	800058e <__udivmoddi4+0x2ce>
 8000456:	45a6      	cmp	lr, r4
 8000458:	f240 8099 	bls.w	800058e <__udivmoddi4+0x2ce>
 800045c:	3802      	subs	r0, #2
 800045e:	443c      	add	r4, r7
 8000460:	eba4 040e 	sub.w	r4, r4, lr
 8000464:	fa1f fe83 	uxth.w	lr, r3
 8000468:	fbb4 f3f9 	udiv	r3, r4, r9
 800046c:	fb09 4413 	mls	r4, r9, r3, r4
 8000470:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000474:	fb03 fc0c 	mul.w	ip, r3, ip
 8000478:	45a4      	cmp	ip, r4
 800047a:	d908      	bls.n	800048e <__udivmoddi4+0x1ce>
 800047c:	193c      	adds	r4, r7, r4
 800047e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000482:	f080 8082 	bcs.w	800058a <__udivmoddi4+0x2ca>
 8000486:	45a4      	cmp	ip, r4
 8000488:	d97f      	bls.n	800058a <__udivmoddi4+0x2ca>
 800048a:	3b02      	subs	r3, #2
 800048c:	443c      	add	r4, r7
 800048e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000492:	eba4 040c 	sub.w	r4, r4, ip
 8000496:	fba0 ec02 	umull	lr, ip, r0, r2
 800049a:	4564      	cmp	r4, ip
 800049c:	4673      	mov	r3, lr
 800049e:	46e1      	mov	r9, ip
 80004a0:	d362      	bcc.n	8000568 <__udivmoddi4+0x2a8>
 80004a2:	d05f      	beq.n	8000564 <__udivmoddi4+0x2a4>
 80004a4:	b15d      	cbz	r5, 80004be <__udivmoddi4+0x1fe>
 80004a6:	ebb8 0203 	subs.w	r2, r8, r3
 80004aa:	eb64 0409 	sbc.w	r4, r4, r9
 80004ae:	fa04 f606 	lsl.w	r6, r4, r6
 80004b2:	fa22 f301 	lsr.w	r3, r2, r1
 80004b6:	431e      	orrs	r6, r3
 80004b8:	40cc      	lsrs	r4, r1
 80004ba:	e9c5 6400 	strd	r6, r4, [r5]
 80004be:	2100      	movs	r1, #0
 80004c0:	e74f      	b.n	8000362 <__udivmoddi4+0xa2>
 80004c2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004c6:	0c01      	lsrs	r1, r0, #16
 80004c8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004cc:	b280      	uxth	r0, r0
 80004ce:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004d2:	463b      	mov	r3, r7
 80004d4:	4638      	mov	r0, r7
 80004d6:	463c      	mov	r4, r7
 80004d8:	46b8      	mov	r8, r7
 80004da:	46be      	mov	lr, r7
 80004dc:	2620      	movs	r6, #32
 80004de:	fbb1 f1f7 	udiv	r1, r1, r7
 80004e2:	eba2 0208 	sub.w	r2, r2, r8
 80004e6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ea:	e766      	b.n	80003ba <__udivmoddi4+0xfa>
 80004ec:	4601      	mov	r1, r0
 80004ee:	e718      	b.n	8000322 <__udivmoddi4+0x62>
 80004f0:	4610      	mov	r0, r2
 80004f2:	e72c      	b.n	800034e <__udivmoddi4+0x8e>
 80004f4:	f1c6 0220 	rsb	r2, r6, #32
 80004f8:	fa2e f302 	lsr.w	r3, lr, r2
 80004fc:	40b7      	lsls	r7, r6
 80004fe:	40b1      	lsls	r1, r6
 8000500:	fa20 f202 	lsr.w	r2, r0, r2
 8000504:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000508:	430a      	orrs	r2, r1
 800050a:	fbb3 f8fe 	udiv	r8, r3, lr
 800050e:	b2bc      	uxth	r4, r7
 8000510:	fb0e 3318 	mls	r3, lr, r8, r3
 8000514:	0c11      	lsrs	r1, r2, #16
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb08 f904 	mul.w	r9, r8, r4
 800051e:	40b0      	lsls	r0, r6
 8000520:	4589      	cmp	r9, r1
 8000522:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000526:	b280      	uxth	r0, r0
 8000528:	d93e      	bls.n	80005a8 <__udivmoddi4+0x2e8>
 800052a:	1879      	adds	r1, r7, r1
 800052c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000530:	d201      	bcs.n	8000536 <__udivmoddi4+0x276>
 8000532:	4589      	cmp	r9, r1
 8000534:	d81f      	bhi.n	8000576 <__udivmoddi4+0x2b6>
 8000536:	eba1 0109 	sub.w	r1, r1, r9
 800053a:	fbb1 f9fe 	udiv	r9, r1, lr
 800053e:	fb09 f804 	mul.w	r8, r9, r4
 8000542:	fb0e 1119 	mls	r1, lr, r9, r1
 8000546:	b292      	uxth	r2, r2
 8000548:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800054c:	4542      	cmp	r2, r8
 800054e:	d229      	bcs.n	80005a4 <__udivmoddi4+0x2e4>
 8000550:	18ba      	adds	r2, r7, r2
 8000552:	f109 31ff 	add.w	r1, r9, #4294967295
 8000556:	d2c4      	bcs.n	80004e2 <__udivmoddi4+0x222>
 8000558:	4542      	cmp	r2, r8
 800055a:	d2c2      	bcs.n	80004e2 <__udivmoddi4+0x222>
 800055c:	f1a9 0102 	sub.w	r1, r9, #2
 8000560:	443a      	add	r2, r7
 8000562:	e7be      	b.n	80004e2 <__udivmoddi4+0x222>
 8000564:	45f0      	cmp	r8, lr
 8000566:	d29d      	bcs.n	80004a4 <__udivmoddi4+0x1e4>
 8000568:	ebbe 0302 	subs.w	r3, lr, r2
 800056c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000570:	3801      	subs	r0, #1
 8000572:	46e1      	mov	r9, ip
 8000574:	e796      	b.n	80004a4 <__udivmoddi4+0x1e4>
 8000576:	eba7 0909 	sub.w	r9, r7, r9
 800057a:	4449      	add	r1, r9
 800057c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000580:	fbb1 f9fe 	udiv	r9, r1, lr
 8000584:	fb09 f804 	mul.w	r8, r9, r4
 8000588:	e7db      	b.n	8000542 <__udivmoddi4+0x282>
 800058a:	4673      	mov	r3, lr
 800058c:	e77f      	b.n	800048e <__udivmoddi4+0x1ce>
 800058e:	4650      	mov	r0, sl
 8000590:	e766      	b.n	8000460 <__udivmoddi4+0x1a0>
 8000592:	4608      	mov	r0, r1
 8000594:	e6fd      	b.n	8000392 <__udivmoddi4+0xd2>
 8000596:	443b      	add	r3, r7
 8000598:	3a02      	subs	r2, #2
 800059a:	e733      	b.n	8000404 <__udivmoddi4+0x144>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	443b      	add	r3, r7
 80005a2:	e71c      	b.n	80003de <__udivmoddi4+0x11e>
 80005a4:	4649      	mov	r1, r9
 80005a6:	e79c      	b.n	80004e2 <__udivmoddi4+0x222>
 80005a8:	eba1 0109 	sub.w	r1, r1, r9
 80005ac:	46c4      	mov	ip, r8
 80005ae:	fbb1 f9fe 	udiv	r9, r1, lr
 80005b2:	fb09 f804 	mul.w	r8, r9, r4
 80005b6:	e7c4      	b.n	8000542 <__udivmoddi4+0x282>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <BNO_Init>:
 * @warning This function blocks until calibration is complete
 * @warning Ensure sensor is moved through various orientations for proper calibration
 *
 * @see BNO_Read()
 */
void BNO_Init(){
 80005bc:	b580      	push	{r7, lr}
 80005be:	b088      	sub	sp, #32
 80005c0:	af04      	add	r7, sp, #16
    uint8_t ndof_mode = 0x0C;      ///< NDOF operation mode value
 80005c2:	230c      	movs	r3, #12
 80005c4:	71fb      	strb	r3, [r7, #7]
    uint8_t config_mode = 0x00;    ///< Configuration mode value
 80005c6:	2300      	movs	r3, #0
 80005c8:	71bb      	strb	r3, [r7, #6]
    uint8_t successfulRead = false; ///< Flag for successful I2C communication
 80005ca:	2300      	movs	r3, #0
 80005cc:	73fb      	strb	r3, [r7, #15]
    uint8_t sampleData = 0x00;     ///< Data read from chip ID register
 80005ce:	2300      	movs	r3, #0
 80005d0:	717b      	strb	r3, [r7, #5]
    int calibrated = false;        ///< Calibration completion flag
 80005d2:	2300      	movs	r3, #0
 80005d4:	60bb      	str	r3, [r7, #8]

    /* ===== COMMUNICATION VERIFICATION ===== */
    while(successfulRead == false){
 80005d6:	e025      	b.n	8000624 <BNO_Init+0x68>
        // Wait to verify IMU connection
        HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); // Reset BNO055 via hardware pin
 80005d8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80005dc:	4836      	ldr	r0, [pc, #216]	@ (80006b8 <BNO_Init+0xfc>)
 80005de:	f002 fc40 	bl	8002e62 <HAL_GPIO_TogglePin>
        HAL_Delay(1000);                       // Wait for BNO055 boot sequence
 80005e2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80005e6:	f001 fc83 	bl	8001ef0 <HAL_Delay>
        HAL_I2C_DeInit(&hi2c1);                // Reset I2C1 peripheral
 80005ea:	4834      	ldr	r0, [pc, #208]	@ (80006bc <BNO_Init+0x100>)
 80005ec:	f002 fd98 	bl	8003120 <HAL_I2C_DeInit>
        HAL_I2C_Init(&hi2c1);                  // Reinitialize I2C1
 80005f0:	4832      	ldr	r0, [pc, #200]	@ (80006bc <BNO_Init+0x100>)
 80005f2:	f002 fc51 	bl	8002e98 <HAL_I2C_Init>

        if (hi2c1.State == HAL_I2C_STATE_READY) {
 80005f6:	4b31      	ldr	r3, [pc, #196]	@ (80006bc <BNO_Init+0x100>)
 80005f8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80005fc:	b2db      	uxtb	r3, r3
 80005fe:	2b20      	cmp	r3, #32
 8000600:	d10b      	bne.n	800061a <BNO_Init+0x5e>
            // Once I2C is reset, attempt to read chip ID
            HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, 0x00, 1, &sampleData, 1, 100);
 8000602:	2364      	movs	r3, #100	@ 0x64
 8000604:	9302      	str	r3, [sp, #8]
 8000606:	2301      	movs	r3, #1
 8000608:	9301      	str	r3, [sp, #4]
 800060a:	1d7b      	adds	r3, r7, #5
 800060c:	9300      	str	r3, [sp, #0]
 800060e:	2301      	movs	r3, #1
 8000610:	2200      	movs	r2, #0
 8000612:	2150      	movs	r1, #80	@ 0x50
 8000614:	4829      	ldr	r0, [pc, #164]	@ (80006bc <BNO_Init+0x100>)
 8000616:	f002 fead 	bl	8003374 <HAL_I2C_Mem_Read>
        }

        // Verify chip ID (should be 0xA0 for BNO055)
        if (sampleData == 0xa0){
 800061a:	797b      	ldrb	r3, [r7, #5]
 800061c:	2ba0      	cmp	r3, #160	@ 0xa0
 800061e:	d101      	bne.n	8000624 <BNO_Init+0x68>
            successfulRead = true;
 8000620:	2301      	movs	r3, #1
 8000622:	73fb      	strb	r3, [r7, #15]
    while(successfulRead == false){
 8000624:	7bfb      	ldrb	r3, [r7, #15]
 8000626:	2b00      	cmp	r3, #0
 8000628:	d0d6      	beq.n	80005d8 <BNO_Init+0x1c>
        }
    }

    /* ===== MODE CONFIGURATION ===== */
    // Set to CONFIG mode to allow register writes
    HAL_I2C_Mem_Write(&hi2c1, BNO055_I2C_ADDR, BNO055_OPR_MODE_ADDR,
 800062a:	2364      	movs	r3, #100	@ 0x64
 800062c:	9302      	str	r3, [sp, #8]
 800062e:	2301      	movs	r3, #1
 8000630:	9301      	str	r3, [sp, #4]
 8000632:	1dbb      	adds	r3, r7, #6
 8000634:	9300      	str	r3, [sp, #0]
 8000636:	2301      	movs	r3, #1
 8000638:	223d      	movs	r2, #61	@ 0x3d
 800063a:	2150      	movs	r1, #80	@ 0x50
 800063c:	481f      	ldr	r0, [pc, #124]	@ (80006bc <BNO_Init+0x100>)
 800063e:	f002 fd9f 	bl	8003180 <HAL_I2C_Mem_Write>
                      I2C_MEMADD_SIZE_8BIT, &config_mode, 1, 100);
    HAL_Delay(25);
 8000642:	2019      	movs	r0, #25
 8000644:	f001 fc54 	bl	8001ef0 <HAL_Delay>

    // Set to NDOF mode for full sensor fusion
    HAL_I2C_Mem_Write(&hi2c1, BNO055_I2C_ADDR, BNO055_OPR_MODE_ADDR,
 8000648:	2364      	movs	r3, #100	@ 0x64
 800064a:	9302      	str	r3, [sp, #8]
 800064c:	2301      	movs	r3, #1
 800064e:	9301      	str	r3, [sp, #4]
 8000650:	1dfb      	adds	r3, r7, #7
 8000652:	9300      	str	r3, [sp, #0]
 8000654:	2301      	movs	r3, #1
 8000656:	223d      	movs	r2, #61	@ 0x3d
 8000658:	2150      	movs	r1, #80	@ 0x50
 800065a:	4818      	ldr	r0, [pc, #96]	@ (80006bc <BNO_Init+0x100>)
 800065c:	f002 fd90 	bl	8003180 <HAL_I2C_Mem_Write>
                      I2C_MEMADD_SIZE_8BIT, &ndof_mode, 1, 100);
    HAL_Delay(25);
 8000660:	2019      	movs	r0, #25
 8000662:	f001 fc45 	bl	8001ef0 <HAL_Delay>

    /* ===== CALIBRATION MONITORING ===== */
    while(calibrated == false){
 8000666:	e01f      	b.n	80006a8 <BNO_Init+0xec>
        // Wait for IMU to calibrate
        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);   // Red LED on during calibration
 8000668:	2201      	movs	r2, #1
 800066a:	2101      	movs	r1, #1
 800066c:	4814      	ldr	r0, [pc, #80]	@ (80006c0 <BNO_Init+0x104>)
 800066e:	f002 fbdf 	bl	8002e30 <HAL_GPIO_WritePin>

        // Read calibration status register
        HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, BNO055_CALIB_STAT, 1, &calibData, 1, 100);
 8000672:	2364      	movs	r3, #100	@ 0x64
 8000674:	9302      	str	r3, [sp, #8]
 8000676:	2301      	movs	r3, #1
 8000678:	9301      	str	r3, [sp, #4]
 800067a:	4b12      	ldr	r3, [pc, #72]	@ (80006c4 <BNO_Init+0x108>)
 800067c:	9300      	str	r3, [sp, #0]
 800067e:	2301      	movs	r3, #1
 8000680:	2235      	movs	r2, #53	@ 0x35
 8000682:	2150      	movs	r1, #80	@ 0x50
 8000684:	480d      	ldr	r0, [pc, #52]	@ (80006bc <BNO_Init+0x100>)
 8000686:	f002 fe75 	bl	8003374 <HAL_I2C_Mem_Read>

        // Check if system calibration is complete (bits 7:6 == 0b11)
        if (((calibData >> 6) & 0x03) == 0x03){
 800068a:	4b0e      	ldr	r3, [pc, #56]	@ (80006c4 <BNO_Init+0x108>)
 800068c:	781b      	ldrb	r3, [r3, #0]
 800068e:	099b      	lsrs	r3, r3, #6
 8000690:	b2db      	uxtb	r3, r3
 8000692:	f003 0303 	and.w	r3, r3, #3
 8000696:	2b03      	cmp	r3, #3
 8000698:	d101      	bne.n	800069e <BNO_Init+0xe2>
            calibrated = true;
 800069a:	2301      	movs	r3, #1
 800069c:	60bb      	str	r3, [r7, #8]
        }

        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);   // Red LED off
 800069e:	2200      	movs	r2, #0
 80006a0:	2101      	movs	r1, #1
 80006a2:	4807      	ldr	r0, [pc, #28]	@ (80006c0 <BNO_Init+0x104>)
 80006a4:	f002 fbc4 	bl	8002e30 <HAL_GPIO_WritePin>
    while(calibrated == false){
 80006a8:	68bb      	ldr	r3, [r7, #8]
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d0dc      	beq.n	8000668 <BNO_Init+0xac>
    }
}
 80006ae:	bf00      	nop
 80006b0:	bf00      	nop
 80006b2:	3710      	adds	r7, #16
 80006b4:	46bd      	mov	sp, r7
 80006b6:	bd80      	pop	{r7, pc}
 80006b8:	40020400 	.word	0x40020400
 80006bc:	2001394c 	.word	0x2001394c
 80006c0:	40020000 	.word	0x40020000
 80006c4:	200000a8 	.word	0x200000a8

080006c8 <BNO_Read>:
 * @warning Pointers must be valid and point to allocated memory
 * @warning Function should be called at regular intervals for smooth control
 *
 * @see BNO_Init()
 */
void BNO_Read(int32_t *roll, int32_t *pitch, int32_t *yaw){
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b08e      	sub	sp, #56	@ 0x38
 80006cc:	af04      	add	r7, sp, #16
 80006ce:	60f8      	str	r0, [r7, #12]
 80006d0:	60b9      	str	r1, [r7, #8]
 80006d2:	607a      	str	r2, [r7, #4]
    int32_t rawPitch16;    ///< Raw 16-bit pitch value
    int32_t rawRoll16;     ///< Raw 16-bit roll value

    /* ===== READ RAW EULER DATA ===== */
    // Read 6 bytes starting from Euler LSB register
    HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, BNO055_EULER_LSB,
 80006d4:	2364      	movs	r3, #100	@ 0x64
 80006d6:	9302      	str	r3, [sp, #8]
 80006d8:	2306      	movs	r3, #6
 80006da:	9301      	str	r3, [sp, #4]
 80006dc:	f107 0314 	add.w	r3, r7, #20
 80006e0:	9300      	str	r3, [sp, #0]
 80006e2:	2301      	movs	r3, #1
 80006e4:	221a      	movs	r2, #26
 80006e6:	2150      	movs	r1, #80	@ 0x50
 80006e8:	4841      	ldr	r0, [pc, #260]	@ (80007f0 <BNO_Read+0x128>)
 80006ea:	f002 fe43 	bl	8003374 <HAL_I2C_Mem_Read>
                     I2C_MEMADD_SIZE_8BIT, eulerData, 6, 100);

    /* ===== DATA CONVERSION ===== */
    // Combine LSB and MSB bytes to form 16-bit signed values
    rawYaw16   = (int16_t)((eulerData[1] << 8) | eulerData[0]);  // Bytes 0-1: Yaw
 80006ee:	7d7b      	ldrb	r3, [r7, #21]
 80006f0:	b21b      	sxth	r3, r3
 80006f2:	021b      	lsls	r3, r3, #8
 80006f4:	b21a      	sxth	r2, r3
 80006f6:	7d3b      	ldrb	r3, [r7, #20]
 80006f8:	b21b      	sxth	r3, r3
 80006fa:	4313      	orrs	r3, r2
 80006fc:	b21b      	sxth	r3, r3
 80006fe:	627b      	str	r3, [r7, #36]	@ 0x24
    rawRoll16  = (int16_t)((eulerData[3] << 8) | eulerData[2]);  // Bytes 2-3: Roll
 8000700:	7dfb      	ldrb	r3, [r7, #23]
 8000702:	b21b      	sxth	r3, r3
 8000704:	021b      	lsls	r3, r3, #8
 8000706:	b21a      	sxth	r2, r3
 8000708:	7dbb      	ldrb	r3, [r7, #22]
 800070a:	b21b      	sxth	r3, r3
 800070c:	4313      	orrs	r3, r2
 800070e:	b21b      	sxth	r3, r3
 8000710:	623b      	str	r3, [r7, #32]
    rawPitch16 = (int16_t)((eulerData[5] << 8) | eulerData[4]);  // Bytes 4-5: Pitch
 8000712:	7e7b      	ldrb	r3, [r7, #25]
 8000714:	b21b      	sxth	r3, r3
 8000716:	021b      	lsls	r3, r3, #8
 8000718:	b21a      	sxth	r2, r3
 800071a:	7e3b      	ldrb	r3, [r7, #24]
 800071c:	b21b      	sxth	r3, r3
 800071e:	4313      	orrs	r3, r2
 8000720:	b21b      	sxth	r3, r3
 8000722:	61fb      	str	r3, [r7, #28]

    // Convert from 1/16 degree resolution to millidegrees
    *yaw   = ((int32_t)rawYaw16 * 1000) / 16;
 8000724:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000726:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800072a:	fb02 f303 	mul.w	r3, r2, r3
 800072e:	2b00      	cmp	r3, #0
 8000730:	da00      	bge.n	8000734 <BNO_Read+0x6c>
 8000732:	330f      	adds	r3, #15
 8000734:	111b      	asrs	r3, r3, #4
 8000736:	461a      	mov	r2, r3
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	601a      	str	r2, [r3, #0]
    *roll  = ((int32_t)rawRoll16 * 1000) / 16;
 800073c:	6a3b      	ldr	r3, [r7, #32]
 800073e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000742:	fb02 f303 	mul.w	r3, r2, r3
 8000746:	2b00      	cmp	r3, #0
 8000748:	da00      	bge.n	800074c <BNO_Read+0x84>
 800074a:	330f      	adds	r3, #15
 800074c:	111b      	asrs	r3, r3, #4
 800074e:	461a      	mov	r2, r3
 8000750:	68fb      	ldr	r3, [r7, #12]
 8000752:	601a      	str	r2, [r3, #0]
    *pitch = ((int32_t)rawPitch16 * 1000) / 16;
 8000754:	69fb      	ldr	r3, [r7, #28]
 8000756:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800075a:	fb02 f303 	mul.w	r3, r2, r3
 800075e:	2b00      	cmp	r3, #0
 8000760:	da00      	bge.n	8000764 <BNO_Read+0x9c>
 8000762:	330f      	adds	r3, #15
 8000764:	111b      	asrs	r3, r3, #4
 8000766:	461a      	mov	r2, r3
 8000768:	68bb      	ldr	r3, [r7, #8]
 800076a:	601a      	str	r2, [r3, #0]

    /* ===== FLIGHT DATA LOGGING ===== */
    // Log data to blackbox at specified frequency
    if (counter++ == blackboxFreq) {
 800076c:	4b21      	ldr	r3, [pc, #132]	@ (80007f4 <BNO_Read+0x12c>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	1c5a      	adds	r2, r3, #1
 8000772:	4920      	ldr	r1, [pc, #128]	@ (80007f4 <BNO_Read+0x12c>)
 8000774:	600a      	str	r2, [r1, #0]
 8000776:	2b02      	cmp	r3, #2
 8000778:	d135      	bne.n	80007e6 <BNO_Read+0x11e>
        if (sample_index < MAX_SAMPLES) {
 800077a:	4b1f      	ldr	r3, [pc, #124]	@ (80007f8 <BNO_Read+0x130>)
 800077c:	881b      	ldrh	r3, [r3, #0]
 800077e:	f241 3287 	movw	r2, #4999	@ 0x1387
 8000782:	4293      	cmp	r3, r2
 8000784:	d82c      	bhi.n	80007e0 <BNO_Read+0x118>
            blackbox[sample_index].pitch = *pitch;
 8000786:	4b1c      	ldr	r3, [pc, #112]	@ (80007f8 <BNO_Read+0x130>)
 8000788:	881b      	ldrh	r3, [r3, #0]
 800078a:	4618      	mov	r0, r3
 800078c:	68bb      	ldr	r3, [r7, #8]
 800078e:	681a      	ldr	r2, [r3, #0]
 8000790:	491a      	ldr	r1, [pc, #104]	@ (80007fc <BNO_Read+0x134>)
 8000792:	0103      	lsls	r3, r0, #4
 8000794:	440b      	add	r3, r1
 8000796:	601a      	str	r2, [r3, #0]
            blackbox[sample_index].roll  = *roll;
 8000798:	4b17      	ldr	r3, [pc, #92]	@ (80007f8 <BNO_Read+0x130>)
 800079a:	881b      	ldrh	r3, [r3, #0]
 800079c:	4618      	mov	r0, r3
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	681a      	ldr	r2, [r3, #0]
 80007a2:	4916      	ldr	r1, [pc, #88]	@ (80007fc <BNO_Read+0x134>)
 80007a4:	0103      	lsls	r3, r0, #4
 80007a6:	440b      	add	r3, r1
 80007a8:	3304      	adds	r3, #4
 80007aa:	601a      	str	r2, [r3, #0]
            blackbox[sample_index].pitchSet = pitch_set;
 80007ac:	4b12      	ldr	r3, [pc, #72]	@ (80007f8 <BNO_Read+0x130>)
 80007ae:	881b      	ldrh	r3, [r3, #0]
 80007b0:	4618      	mov	r0, r3
 80007b2:	4b13      	ldr	r3, [pc, #76]	@ (8000800 <BNO_Read+0x138>)
 80007b4:	681a      	ldr	r2, [r3, #0]
 80007b6:	4911      	ldr	r1, [pc, #68]	@ (80007fc <BNO_Read+0x134>)
 80007b8:	0103      	lsls	r3, r0, #4
 80007ba:	440b      	add	r3, r1
 80007bc:	3308      	adds	r3, #8
 80007be:	601a      	str	r2, [r3, #0]
            blackbox[sample_index].rollSet  = roll_set;
 80007c0:	4b0d      	ldr	r3, [pc, #52]	@ (80007f8 <BNO_Read+0x130>)
 80007c2:	881b      	ldrh	r3, [r3, #0]
 80007c4:	4618      	mov	r0, r3
 80007c6:	4b0f      	ldr	r3, [pc, #60]	@ (8000804 <BNO_Read+0x13c>)
 80007c8:	681a      	ldr	r2, [r3, #0]
 80007ca:	490c      	ldr	r1, [pc, #48]	@ (80007fc <BNO_Read+0x134>)
 80007cc:	0103      	lsls	r3, r0, #4
 80007ce:	440b      	add	r3, r1
 80007d0:	330c      	adds	r3, #12
 80007d2:	601a      	str	r2, [r3, #0]
            sample_index++;
 80007d4:	4b08      	ldr	r3, [pc, #32]	@ (80007f8 <BNO_Read+0x130>)
 80007d6:	881b      	ldrh	r3, [r3, #0]
 80007d8:	3301      	adds	r3, #1
 80007da:	b29a      	uxth	r2, r3
 80007dc:	4b06      	ldr	r3, [pc, #24]	@ (80007f8 <BNO_Read+0x130>)
 80007de:	801a      	strh	r2, [r3, #0]
        }
        counter = 0;
 80007e0:	4b04      	ldr	r3, [pc, #16]	@ (80007f4 <BNO_Read+0x12c>)
 80007e2:	2200      	movs	r2, #0
 80007e4:	601a      	str	r2, [r3, #0]
    }
}
 80007e6:	bf00      	nop
 80007e8:	3728      	adds	r7, #40	@ 0x28
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bd80      	pop	{r7, pc}
 80007ee:	bf00      	nop
 80007f0:	2001394c 	.word	0x2001394c
 80007f4:	20013930 	.word	0x20013930
 80007f8:	2001392c 	.word	0x2001392c
 80007fc:	200000ac 	.word	0x200000ac
 8000800:	20013b38 	.word	0x20013b38
 8000804:	20013b34 	.word	0x20013b34

08000808 <armESC>:
 * @warning Ensure motors are properly secured before calling this function
 *
 * @see update_Motors()
 */
void armESC()
{
 8000808:	b580      	push	{r7, lr}
 800080a:	af00      	add	r7, sp, #0
    effort_set = 1000;
 800080c:	4b2b      	ldr	r3, [pc, #172]	@ (80008bc <armESC+0xb4>)
 800080e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000812:	601a      	str	r2, [r3, #0]

    while(roll_set < 10000){
 8000814:	e043      	b.n	800089e <armESC+0x96>
        // Start PWM generation on all timer channels
        HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000816:	2100      	movs	r1, #0
 8000818:	4829      	ldr	r0, [pc, #164]	@ (80008c0 <armESC+0xb8>)
 800081a:	f004 f839 	bl	8004890 <HAL_TIM_PWM_Start>
        HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 800081e:	2104      	movs	r1, #4
 8000820:	4827      	ldr	r0, [pc, #156]	@ (80008c0 <armESC+0xb8>)
 8000822:	f004 f835 	bl	8004890 <HAL_TIM_PWM_Start>
        HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 8000826:	2108      	movs	r1, #8
 8000828:	4825      	ldr	r0, [pc, #148]	@ (80008c0 <armESC+0xb8>)
 800082a:	f004 f831 	bl	8004890 <HAL_TIM_PWM_Start>
        HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 800082e:	210c      	movs	r1, #12
 8000830:	4823      	ldr	r0, [pc, #140]	@ (80008c0 <armESC+0xb8>)
 8000832:	f004 f82d 	bl	8004890 <HAL_TIM_PWM_Start>

        // Calculate arming PWM value (approximately 1000μs pulse width)
        armCompare = effort_set*4 - 2000;
 8000836:	4b21      	ldr	r3, [pc, #132]	@ (80008bc <armESC+0xb4>)
 8000838:	681b      	ldr	r3, [r3, #0]
 800083a:	f5a3 73fa 	sub.w	r3, r3, #500	@ 0x1f4
 800083e:	009b      	lsls	r3, r3, #2
 8000840:	4a20      	ldr	r2, [pc, #128]	@ (80008c4 <armESC+0xbc>)
 8000842:	6013      	str	r3, [r2, #0]

        // Clamp arming value to safe range
        if (armCompare < 960) armCompare = 960;
 8000844:	4b1f      	ldr	r3, [pc, #124]	@ (80008c4 <armESC+0xbc>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 800084c:	da03      	bge.n	8000856 <armESC+0x4e>
 800084e:	4b1d      	ldr	r3, [pc, #116]	@ (80008c4 <armESC+0xbc>)
 8000850:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000854:	601a      	str	r2, [r3, #0]
        if (armCompare > 2000) armCompare = 2000;
 8000856:	4b1b      	ldr	r3, [pc, #108]	@ (80008c4 <armESC+0xbc>)
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 800085e:	dd03      	ble.n	8000868 <armESC+0x60>
 8000860:	4b18      	ldr	r3, [pc, #96]	@ (80008c4 <armESC+0xbc>)
 8000862:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000866:	601a      	str	r2, [r3, #0]

        // Set PWM compare values for all motors
        __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, armCompare);
 8000868:	4b16      	ldr	r3, [pc, #88]	@ (80008c4 <armESC+0xbc>)
 800086a:	681a      	ldr	r2, [r3, #0]
 800086c:	4b14      	ldr	r3, [pc, #80]	@ (80008c0 <armESC+0xb8>)
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_2, armCompare);
 8000872:	4b14      	ldr	r3, [pc, #80]	@ (80008c4 <armESC+0xbc>)
 8000874:	681a      	ldr	r2, [r3, #0]
 8000876:	4b12      	ldr	r3, [pc, #72]	@ (80008c0 <armESC+0xb8>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, armCompare);
 800087c:	4b11      	ldr	r3, [pc, #68]	@ (80008c4 <armESC+0xbc>)
 800087e:	681a      	ldr	r2, [r3, #0]
 8000880:	4b0f      	ldr	r3, [pc, #60]	@ (80008c0 <armESC+0xb8>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	63da      	str	r2, [r3, #60]	@ 0x3c
        __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, armCompare);
 8000886:	4b0f      	ldr	r3, [pc, #60]	@ (80008c4 <armESC+0xbc>)
 8000888:	681a      	ldr	r2, [r3, #0]
 800088a:	4b0d      	ldr	r3, [pc, #52]	@ (80008c0 <armESC+0xb8>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	641a      	str	r2, [r3, #64]	@ 0x40

        // Toggle status LED during arming
        HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0);
 8000890:	2101      	movs	r1, #1
 8000892:	480d      	ldr	r0, [pc, #52]	@ (80008c8 <armESC+0xc0>)
 8000894:	f002 fae5 	bl	8002e62 <HAL_GPIO_TogglePin>
        HAL_Delay(125);
 8000898:	207d      	movs	r0, #125	@ 0x7d
 800089a:	f001 fb29 	bl	8001ef0 <HAL_Delay>
    while(roll_set < 10000){
 800089e:	4b0b      	ldr	r3, [pc, #44]	@ (80008cc <armESC+0xc4>)
 80008a0:	681b      	ldr	r3, [r3, #0]
 80008a2:	f242 720f 	movw	r2, #9999	@ 0x270f
 80008a6:	4293      	cmp	r3, r2
 80008a8:	ddb5      	ble.n	8000816 <armESC+0xe>
    }

    // Reset effort and compare values after arming
    effort_set = 0;
 80008aa:	4b04      	ldr	r3, [pc, #16]	@ (80008bc <armESC+0xb4>)
 80008ac:	2200      	movs	r2, #0
 80008ae:	601a      	str	r2, [r3, #0]
    armCompare = 0;
 80008b0:	4b04      	ldr	r3, [pc, #16]	@ (80008c4 <armESC+0xbc>)
 80008b2:	2200      	movs	r2, #0
 80008b4:	601a      	str	r2, [r3, #0]
}
 80008b6:	bf00      	nop
 80008b8:	bd80      	pop	{r7, pc}
 80008ba:	bf00      	nop
 80008bc:	20013b40 	.word	0x20013b40
 80008c0:	200139f4 	.word	0x200139f4
 80008c4:	20013944 	.word	0x20013944
 80008c8:	40020000 	.word	0x40020000
 80008cc:	20013b34 	.word	0x20013b34

080008d0 <update_Motors>:
 * @warning
 *
 * @see armESC()
 */
void update_Motors()
{
 80008d0:	b480      	push	{r7}
 80008d2:	af00      	add	r7, sp, #0
    // PWM Mapping: Compare 960 = 1ms (0%), Compare 2000 = 2ms (100%)

    /* ===== ROLL PID CALCULATION ===== */
    roll_error = -roll_set + roll_true;
 80008d4:	4b3d      	ldr	r3, [pc, #244]	@ (80009cc <update_Motors+0xfc>)
 80008d6:	681a      	ldr	r2, [r3, #0]
 80008d8:	4b3d      	ldr	r3, [pc, #244]	@ (80009d0 <update_Motors+0x100>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	1ad3      	subs	r3, r2, r3
 80008de:	4a3d      	ldr	r2, [pc, #244]	@ (80009d4 <update_Motors+0x104>)
 80008e0:	6013      	str	r3, [r2, #0]

    roll_integral += roll_error/1000; //Wind up protection for integral
 80008e2:	4b3c      	ldr	r3, [pc, #240]	@ (80009d4 <update_Motors+0x104>)
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	4a3c      	ldr	r2, [pc, #240]	@ (80009d8 <update_Motors+0x108>)
 80008e8:	fb82 1203 	smull	r1, r2, r2, r3
 80008ec:	1192      	asrs	r2, r2, #6
 80008ee:	17db      	asrs	r3, r3, #31
 80008f0:	1ad2      	subs	r2, r2, r3
 80008f2:	4b3a      	ldr	r3, [pc, #232]	@ (80009dc <update_Motors+0x10c>)
 80008f4:	681b      	ldr	r3, [r3, #0]
 80008f6:	4413      	add	r3, r2
 80008f8:	4a38      	ldr	r2, [pc, #224]	@ (80009dc <update_Motors+0x10c>)
 80008fa:	6013      	str	r3, [r2, #0]
        if (roll_integral > max_integral) {
 80008fc:	4b37      	ldr	r3, [pc, #220]	@ (80009dc <update_Motors+0x10c>)
 80008fe:	681a      	ldr	r2, [r3, #0]
 8000900:	4b37      	ldr	r3, [pc, #220]	@ (80009e0 <update_Motors+0x110>)
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	429a      	cmp	r2, r3
 8000906:	dd04      	ble.n	8000912 <update_Motors+0x42>
            roll_integral = max_integral;
 8000908:	4b35      	ldr	r3, [pc, #212]	@ (80009e0 <update_Motors+0x110>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	4a33      	ldr	r2, [pc, #204]	@ (80009dc <update_Motors+0x10c>)
 800090e:	6013      	str	r3, [r2, #0]
 8000910:	e00b      	b.n	800092a <update_Motors+0x5a>
        } else if (roll_integral < -max_integral) {
 8000912:	4b33      	ldr	r3, [pc, #204]	@ (80009e0 <update_Motors+0x110>)
 8000914:	681b      	ldr	r3, [r3, #0]
 8000916:	425a      	negs	r2, r3
 8000918:	4b30      	ldr	r3, [pc, #192]	@ (80009dc <update_Motors+0x10c>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	429a      	cmp	r2, r3
 800091e:	dd04      	ble.n	800092a <update_Motors+0x5a>
            roll_integral = -max_integral;
 8000920:	4b2f      	ldr	r3, [pc, #188]	@ (80009e0 <update_Motors+0x110>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	425b      	negs	r3, r3
 8000926:	4a2d      	ldr	r2, [pc, #180]	@ (80009dc <update_Motors+0x10c>)
 8000928:	6013      	str	r3, [r2, #0]
        }
    roll_integral += roll_error;
 800092a:	4b2c      	ldr	r3, [pc, #176]	@ (80009dc <update_Motors+0x10c>)
 800092c:	681a      	ldr	r2, [r3, #0]
 800092e:	4b29      	ldr	r3, [pc, #164]	@ (80009d4 <update_Motors+0x104>)
 8000930:	681b      	ldr	r3, [r3, #0]
 8000932:	4413      	add	r3, r2
 8000934:	4a29      	ldr	r2, [pc, #164]	@ (80009dc <update_Motors+0x10c>)
 8000936:	6013      	str	r3, [r2, #0]
    roll_derivative = roll_error - last_roll_error;
 8000938:	4b26      	ldr	r3, [pc, #152]	@ (80009d4 <update_Motors+0x104>)
 800093a:	681a      	ldr	r2, [r3, #0]
 800093c:	4b29      	ldr	r3, [pc, #164]	@ (80009e4 <update_Motors+0x114>)
 800093e:	681b      	ldr	r3, [r3, #0]
 8000940:	1ad3      	subs	r3, r2, r3
 8000942:	4a29      	ldr	r2, [pc, #164]	@ (80009e8 <update_Motors+0x118>)
 8000944:	6013      	str	r3, [r2, #0]
    // TESTING ONLY - Roll effort disabled
    roll_effort = -(Kp_roll * roll_error + Ki_roll * roll_integral + Kd_roll * roll_derivative) / PID_SCALE;
 8000946:	4b29      	ldr	r3, [pc, #164]	@ (80009ec <update_Motors+0x11c>)
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	4a22      	ldr	r2, [pc, #136]	@ (80009d4 <update_Motors+0x104>)
 800094c:	6812      	ldr	r2, [r2, #0]
 800094e:	fb03 f202 	mul.w	r2, r3, r2
 8000952:	4b27      	ldr	r3, [pc, #156]	@ (80009f0 <update_Motors+0x120>)
 8000954:	681b      	ldr	r3, [r3, #0]
 8000956:	4921      	ldr	r1, [pc, #132]	@ (80009dc <update_Motors+0x10c>)
 8000958:	6809      	ldr	r1, [r1, #0]
 800095a:	fb01 f303 	mul.w	r3, r1, r3
 800095e:	441a      	add	r2, r3
 8000960:	4b24      	ldr	r3, [pc, #144]	@ (80009f4 <update_Motors+0x124>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	4920      	ldr	r1, [pc, #128]	@ (80009e8 <update_Motors+0x118>)
 8000966:	6809      	ldr	r1, [r1, #0]
 8000968:	fb01 f303 	mul.w	r3, r1, r3
 800096c:	4413      	add	r3, r2
 800096e:	425b      	negs	r3, r3
 8000970:	4a21      	ldr	r2, [pc, #132]	@ (80009f8 <update_Motors+0x128>)
 8000972:	fb82 1203 	smull	r1, r2, r2, r3
 8000976:	1352      	asrs	r2, r2, #13
 8000978:	17db      	asrs	r3, r3, #31
 800097a:	1ad3      	subs	r3, r2, r3
 800097c:	4a1f      	ldr	r2, [pc, #124]	@ (80009fc <update_Motors+0x12c>)
 800097e:	6013      	str	r3, [r2, #0]
    roll_effort = 0; // Disabled for testing
 8000980:	4b1e      	ldr	r3, [pc, #120]	@ (80009fc <update_Motors+0x12c>)
 8000982:	2200      	movs	r2, #0
 8000984:	601a      	str	r2, [r3, #0]
    last_roll_error = roll_error;
 8000986:	4b13      	ldr	r3, [pc, #76]	@ (80009d4 <update_Motors+0x104>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	4a16      	ldr	r2, [pc, #88]	@ (80009e4 <update_Motors+0x114>)
 800098c:	6013      	str	r3, [r2, #0]

    /* ===== ROLL PID CALCULATION ===== */
    pitch_error = -pitch_set + pitch_true;
 800098e:	4b1c      	ldr	r3, [pc, #112]	@ (8000a00 <update_Motors+0x130>)
 8000990:	681a      	ldr	r2, [r3, #0]
 8000992:	4b1c      	ldr	r3, [pc, #112]	@ (8000a04 <update_Motors+0x134>)
 8000994:	681b      	ldr	r3, [r3, #0]
 8000996:	1ad3      	subs	r3, r2, r3
 8000998:	4a1b      	ldr	r2, [pc, #108]	@ (8000a08 <update_Motors+0x138>)
 800099a:	6013      	str	r3, [r2, #0]

    pitch_integral += pitch_error/1000; //Wind up protection for integral
 800099c:	4b1a      	ldr	r3, [pc, #104]	@ (8000a08 <update_Motors+0x138>)
 800099e:	681b      	ldr	r3, [r3, #0]
 80009a0:	4a0d      	ldr	r2, [pc, #52]	@ (80009d8 <update_Motors+0x108>)
 80009a2:	fb82 1203 	smull	r1, r2, r2, r3
 80009a6:	1192      	asrs	r2, r2, #6
 80009a8:	17db      	asrs	r3, r3, #31
 80009aa:	1ad2      	subs	r2, r2, r3
 80009ac:	4b17      	ldr	r3, [pc, #92]	@ (8000a0c <update_Motors+0x13c>)
 80009ae:	681b      	ldr	r3, [r3, #0]
 80009b0:	4413      	add	r3, r2
 80009b2:	4a16      	ldr	r2, [pc, #88]	@ (8000a0c <update_Motors+0x13c>)
 80009b4:	6013      	str	r3, [r2, #0]
    if (pitch_integral > max_integral) {
 80009b6:	4b15      	ldr	r3, [pc, #84]	@ (8000a0c <update_Motors+0x13c>)
 80009b8:	681a      	ldr	r2, [r3, #0]
 80009ba:	4b09      	ldr	r3, [pc, #36]	@ (80009e0 <update_Motors+0x110>)
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	429a      	cmp	r2, r3
 80009c0:	dd26      	ble.n	8000a10 <update_Motors+0x140>
        pitch_integral = max_integral;
 80009c2:	4b07      	ldr	r3, [pc, #28]	@ (80009e0 <update_Motors+0x110>)
 80009c4:	681b      	ldr	r3, [r3, #0]
 80009c6:	4a11      	ldr	r2, [pc, #68]	@ (8000a0c <update_Motors+0x13c>)
 80009c8:	6013      	str	r3, [r2, #0]
 80009ca:	e02d      	b.n	8000a28 <update_Motors+0x158>
 80009cc:	20013b44 	.word	0x20013b44
 80009d0:	20013b34 	.word	0x20013b34
 80009d4:	20013b78 	.word	0x20013b78
 80009d8:	10624dd3 	.word	0x10624dd3
 80009dc:	20013b60 	.word	0x20013b60
 80009e0:	20000010 	.word	0x20000010
 80009e4:	20013b84 	.word	0x20013b84
 80009e8:	20013b6c 	.word	0x20013b6c
 80009ec:	20013b90 	.word	0x20013b90
 80009f0:	20013b94 	.word	0x20013b94
 80009f4:	20013b98 	.word	0x20013b98
 80009f8:	14f8b589 	.word	0x14f8b589
 80009fc:	20013b50 	.word	0x20013b50
 8000a00:	20013b48 	.word	0x20013b48
 8000a04:	20013b38 	.word	0x20013b38
 8000a08:	20013b7c 	.word	0x20013b7c
 8000a0c:	20013b64 	.word	0x20013b64
    } else if (pitch_integral < -max_integral) {
 8000a10:	4b85      	ldr	r3, [pc, #532]	@ (8000c28 <update_Motors+0x358>)
 8000a12:	681b      	ldr	r3, [r3, #0]
 8000a14:	425a      	negs	r2, r3
 8000a16:	4b85      	ldr	r3, [pc, #532]	@ (8000c2c <update_Motors+0x35c>)
 8000a18:	681b      	ldr	r3, [r3, #0]
 8000a1a:	429a      	cmp	r2, r3
 8000a1c:	dd04      	ble.n	8000a28 <update_Motors+0x158>
        pitch_integral = -max_integral;
 8000a1e:	4b82      	ldr	r3, [pc, #520]	@ (8000c28 <update_Motors+0x358>)
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	425b      	negs	r3, r3
 8000a24:	4a81      	ldr	r2, [pc, #516]	@ (8000c2c <update_Motors+0x35c>)
 8000a26:	6013      	str	r3, [r2, #0]
    }
    pitch_derivative = pitch_error - last_pitch_error;
 8000a28:	4b81      	ldr	r3, [pc, #516]	@ (8000c30 <update_Motors+0x360>)
 8000a2a:	681a      	ldr	r2, [r3, #0]
 8000a2c:	4b81      	ldr	r3, [pc, #516]	@ (8000c34 <update_Motors+0x364>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	1ad3      	subs	r3, r2, r3
 8000a32:	4a81      	ldr	r2, [pc, #516]	@ (8000c38 <update_Motors+0x368>)
 8000a34:	6013      	str	r3, [r2, #0]
    pitch_effort = -(Kp_pitch * pitch_error + Ki_pitch * pitch_integral + Kd_pitch * pitch_derivative) / PID_SCALE;
 8000a36:	4b81      	ldr	r3, [pc, #516]	@ (8000c3c <update_Motors+0x36c>)
 8000a38:	681b      	ldr	r3, [r3, #0]
 8000a3a:	4a7d      	ldr	r2, [pc, #500]	@ (8000c30 <update_Motors+0x360>)
 8000a3c:	6812      	ldr	r2, [r2, #0]
 8000a3e:	fb03 f202 	mul.w	r2, r3, r2
 8000a42:	4b7f      	ldr	r3, [pc, #508]	@ (8000c40 <update_Motors+0x370>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	4979      	ldr	r1, [pc, #484]	@ (8000c2c <update_Motors+0x35c>)
 8000a48:	6809      	ldr	r1, [r1, #0]
 8000a4a:	fb01 f303 	mul.w	r3, r1, r3
 8000a4e:	441a      	add	r2, r3
 8000a50:	4b7c      	ldr	r3, [pc, #496]	@ (8000c44 <update_Motors+0x374>)
 8000a52:	681b      	ldr	r3, [r3, #0]
 8000a54:	4978      	ldr	r1, [pc, #480]	@ (8000c38 <update_Motors+0x368>)
 8000a56:	6809      	ldr	r1, [r1, #0]
 8000a58:	fb01 f303 	mul.w	r3, r1, r3
 8000a5c:	4413      	add	r3, r2
 8000a5e:	425b      	negs	r3, r3
 8000a60:	4a79      	ldr	r2, [pc, #484]	@ (8000c48 <update_Motors+0x378>)
 8000a62:	fb82 1203 	smull	r1, r2, r2, r3
 8000a66:	1352      	asrs	r2, r2, #13
 8000a68:	17db      	asrs	r3, r3, #31
 8000a6a:	1ad3      	subs	r3, r2, r3
 8000a6c:	4a77      	ldr	r2, [pc, #476]	@ (8000c4c <update_Motors+0x37c>)
 8000a6e:	6013      	str	r3, [r2, #0]
    last_pitch_error = pitch_error;
 8000a70:	4b6f      	ldr	r3, [pc, #444]	@ (8000c30 <update_Motors+0x360>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	4a6f      	ldr	r2, [pc, #444]	@ (8000c34 <update_Motors+0x364>)
 8000a76:	6013      	str	r3, [r2, #0]

    /* ===== YAW PID CALCULATION ===== */
    yaw_error = -yaw_set + yaw_true;
 8000a78:	4b75      	ldr	r3, [pc, #468]	@ (8000c50 <update_Motors+0x380>)
 8000a7a:	681a      	ldr	r2, [r3, #0]
 8000a7c:	4b75      	ldr	r3, [pc, #468]	@ (8000c54 <update_Motors+0x384>)
 8000a7e:	681b      	ldr	r3, [r3, #0]
 8000a80:	1ad3      	subs	r3, r2, r3
 8000a82:	4a75      	ldr	r2, [pc, #468]	@ (8000c58 <update_Motors+0x388>)
 8000a84:	6013      	str	r3, [r2, #0]
    yaw_integral += yaw_error;
 8000a86:	4b75      	ldr	r3, [pc, #468]	@ (8000c5c <update_Motors+0x38c>)
 8000a88:	681a      	ldr	r2, [r3, #0]
 8000a8a:	4b73      	ldr	r3, [pc, #460]	@ (8000c58 <update_Motors+0x388>)
 8000a8c:	681b      	ldr	r3, [r3, #0]
 8000a8e:	4413      	add	r3, r2
 8000a90:	4a72      	ldr	r2, [pc, #456]	@ (8000c5c <update_Motors+0x38c>)
 8000a92:	6013      	str	r3, [r2, #0]
    yaw_derivative = yaw_error - last_yaw_error;
 8000a94:	4b70      	ldr	r3, [pc, #448]	@ (8000c58 <update_Motors+0x388>)
 8000a96:	681a      	ldr	r2, [r3, #0]
 8000a98:	4b71      	ldr	r3, [pc, #452]	@ (8000c60 <update_Motors+0x390>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	1ad3      	subs	r3, r2, r3
 8000a9e:	4a71      	ldr	r2, [pc, #452]	@ (8000c64 <update_Motors+0x394>)
 8000aa0:	6013      	str	r3, [r2, #0]
    yaw_effort = -(Kp_yaw * yaw_error + Ki_yaw * yaw_integral + Kd_yaw * yaw_derivative) / PID_SCALE;
 8000aa2:	4b71      	ldr	r3, [pc, #452]	@ (8000c68 <update_Motors+0x398>)
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	4a6c      	ldr	r2, [pc, #432]	@ (8000c58 <update_Motors+0x388>)
 8000aa8:	6812      	ldr	r2, [r2, #0]
 8000aaa:	fb03 f202 	mul.w	r2, r3, r2
 8000aae:	4b6f      	ldr	r3, [pc, #444]	@ (8000c6c <update_Motors+0x39c>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	496a      	ldr	r1, [pc, #424]	@ (8000c5c <update_Motors+0x38c>)
 8000ab4:	6809      	ldr	r1, [r1, #0]
 8000ab6:	fb01 f303 	mul.w	r3, r1, r3
 8000aba:	441a      	add	r2, r3
 8000abc:	4b6c      	ldr	r3, [pc, #432]	@ (8000c70 <update_Motors+0x3a0>)
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	4968      	ldr	r1, [pc, #416]	@ (8000c64 <update_Motors+0x394>)
 8000ac2:	6809      	ldr	r1, [r1, #0]
 8000ac4:	fb01 f303 	mul.w	r3, r1, r3
 8000ac8:	4413      	add	r3, r2
 8000aca:	425b      	negs	r3, r3
 8000acc:	4a5e      	ldr	r2, [pc, #376]	@ (8000c48 <update_Motors+0x378>)
 8000ace:	fb82 1203 	smull	r1, r2, r2, r3
 8000ad2:	1352      	asrs	r2, r2, #13
 8000ad4:	17db      	asrs	r3, r3, #31
 8000ad6:	1ad3      	subs	r3, r2, r3
 8000ad8:	4a66      	ldr	r2, [pc, #408]	@ (8000c74 <update_Motors+0x3a4>)
 8000ada:	6013      	str	r3, [r2, #0]
    last_yaw_error = yaw_error;
 8000adc:	4b5e      	ldr	r3, [pc, #376]	@ (8000c58 <update_Motors+0x388>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	4a5f      	ldr	r2, [pc, #380]	@ (8000c60 <update_Motors+0x390>)
 8000ae2:	6013      	str	r3, [r2, #0]


    /* ===== BASE THROTTLE CALCULATION ===== */
    // Start with base throttle plus individual motor offsets
    A = effort_set * K_effort/PID_SCALE + motA_offset;
 8000ae4:	4b64      	ldr	r3, [pc, #400]	@ (8000c78 <update_Motors+0x3a8>)
 8000ae6:	681b      	ldr	r3, [r3, #0]
 8000ae8:	4a64      	ldr	r2, [pc, #400]	@ (8000c7c <update_Motors+0x3ac>)
 8000aea:	6812      	ldr	r2, [r2, #0]
 8000aec:	fb02 f303 	mul.w	r3, r2, r3
 8000af0:	4a55      	ldr	r2, [pc, #340]	@ (8000c48 <update_Motors+0x378>)
 8000af2:	fb82 1203 	smull	r1, r2, r2, r3
 8000af6:	1352      	asrs	r2, r2, #13
 8000af8:	17db      	asrs	r3, r3, #31
 8000afa:	1ad2      	subs	r2, r2, r3
 8000afc:	4b60      	ldr	r3, [pc, #384]	@ (8000c80 <update_Motors+0x3b0>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	4413      	add	r3, r2
 8000b02:	4a60      	ldr	r2, [pc, #384]	@ (8000c84 <update_Motors+0x3b4>)
 8000b04:	6013      	str	r3, [r2, #0]
    B = effort_set * K_effort/PID_SCALE + motB_offset;
 8000b06:	4b5c      	ldr	r3, [pc, #368]	@ (8000c78 <update_Motors+0x3a8>)
 8000b08:	681b      	ldr	r3, [r3, #0]
 8000b0a:	4a5c      	ldr	r2, [pc, #368]	@ (8000c7c <update_Motors+0x3ac>)
 8000b0c:	6812      	ldr	r2, [r2, #0]
 8000b0e:	fb02 f303 	mul.w	r3, r2, r3
 8000b12:	4a4d      	ldr	r2, [pc, #308]	@ (8000c48 <update_Motors+0x378>)
 8000b14:	fb82 1203 	smull	r1, r2, r2, r3
 8000b18:	1352      	asrs	r2, r2, #13
 8000b1a:	17db      	asrs	r3, r3, #31
 8000b1c:	1ad2      	subs	r2, r2, r3
 8000b1e:	4b5a      	ldr	r3, [pc, #360]	@ (8000c88 <update_Motors+0x3b8>)
 8000b20:	681b      	ldr	r3, [r3, #0]
 8000b22:	4413      	add	r3, r2
 8000b24:	4a59      	ldr	r2, [pc, #356]	@ (8000c8c <update_Motors+0x3bc>)
 8000b26:	6013      	str	r3, [r2, #0]
    C = effort_set * K_effort/PID_SCALE + motC_offset;
 8000b28:	4b53      	ldr	r3, [pc, #332]	@ (8000c78 <update_Motors+0x3a8>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	4a53      	ldr	r2, [pc, #332]	@ (8000c7c <update_Motors+0x3ac>)
 8000b2e:	6812      	ldr	r2, [r2, #0]
 8000b30:	fb02 f303 	mul.w	r3, r2, r3
 8000b34:	4a44      	ldr	r2, [pc, #272]	@ (8000c48 <update_Motors+0x378>)
 8000b36:	fb82 1203 	smull	r1, r2, r2, r3
 8000b3a:	1352      	asrs	r2, r2, #13
 8000b3c:	17db      	asrs	r3, r3, #31
 8000b3e:	1ad2      	subs	r2, r2, r3
 8000b40:	4b53      	ldr	r3, [pc, #332]	@ (8000c90 <update_Motors+0x3c0>)
 8000b42:	681b      	ldr	r3, [r3, #0]
 8000b44:	4413      	add	r3, r2
 8000b46:	4a53      	ldr	r2, [pc, #332]	@ (8000c94 <update_Motors+0x3c4>)
 8000b48:	6013      	str	r3, [r2, #0]
    D = effort_set * K_effort/PID_SCALE + motD_offset;
 8000b4a:	4b4b      	ldr	r3, [pc, #300]	@ (8000c78 <update_Motors+0x3a8>)
 8000b4c:	681b      	ldr	r3, [r3, #0]
 8000b4e:	4a4b      	ldr	r2, [pc, #300]	@ (8000c7c <update_Motors+0x3ac>)
 8000b50:	6812      	ldr	r2, [r2, #0]
 8000b52:	fb02 f303 	mul.w	r3, r2, r3
 8000b56:	4a3c      	ldr	r2, [pc, #240]	@ (8000c48 <update_Motors+0x378>)
 8000b58:	fb82 1203 	smull	r1, r2, r2, r3
 8000b5c:	1352      	asrs	r2, r2, #13
 8000b5e:	17db      	asrs	r3, r3, #31
 8000b60:	1ad2      	subs	r2, r2, r3
 8000b62:	4b4d      	ldr	r3, [pc, #308]	@ (8000c98 <update_Motors+0x3c8>)
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	4413      	add	r3, r2
 8000b68:	4a4c      	ldr	r2, [pc, #304]	@ (8000c9c <update_Motors+0x3cc>)
 8000b6a:	6013      	str	r3, [r2, #0]

    /* ===== CONTROL MIXING ===== */
    // Apply pitch control (affects front/rear motor pairs)
    if (pitch_effort > 0) {
 8000b6c:	4b37      	ldr	r3, [pc, #220]	@ (8000c4c <update_Motors+0x37c>)
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	dd0e      	ble.n	8000b92 <update_Motors+0x2c2>
        A += pitch_effort; // Front motors get more power
 8000b74:	4b43      	ldr	r3, [pc, #268]	@ (8000c84 <update_Motors+0x3b4>)
 8000b76:	681a      	ldr	r2, [r3, #0]
 8000b78:	4b34      	ldr	r3, [pc, #208]	@ (8000c4c <update_Motors+0x37c>)
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	4413      	add	r3, r2
 8000b7e:	4a41      	ldr	r2, [pc, #260]	@ (8000c84 <update_Motors+0x3b4>)
 8000b80:	6013      	str	r3, [r2, #0]
        D += pitch_effort;
 8000b82:	4b46      	ldr	r3, [pc, #280]	@ (8000c9c <update_Motors+0x3cc>)
 8000b84:	681a      	ldr	r2, [r3, #0]
 8000b86:	4b31      	ldr	r3, [pc, #196]	@ (8000c4c <update_Motors+0x37c>)
 8000b88:	681b      	ldr	r3, [r3, #0]
 8000b8a:	4413      	add	r3, r2
 8000b8c:	4a43      	ldr	r2, [pc, #268]	@ (8000c9c <update_Motors+0x3cc>)
 8000b8e:	6013      	str	r3, [r2, #0]
 8000b90:	e011      	b.n	8000bb6 <update_Motors+0x2e6>
    }
    else if (pitch_effort < 0) {
 8000b92:	4b2e      	ldr	r3, [pc, #184]	@ (8000c4c <update_Motors+0x37c>)
 8000b94:	681b      	ldr	r3, [r3, #0]
 8000b96:	2b00      	cmp	r3, #0
 8000b98:	da0d      	bge.n	8000bb6 <update_Motors+0x2e6>
        B -= pitch_effort; // Rear motors get more power
 8000b9a:	4b3c      	ldr	r3, [pc, #240]	@ (8000c8c <update_Motors+0x3bc>)
 8000b9c:	681a      	ldr	r2, [r3, #0]
 8000b9e:	4b2b      	ldr	r3, [pc, #172]	@ (8000c4c <update_Motors+0x37c>)
 8000ba0:	681b      	ldr	r3, [r3, #0]
 8000ba2:	1ad3      	subs	r3, r2, r3
 8000ba4:	4a39      	ldr	r2, [pc, #228]	@ (8000c8c <update_Motors+0x3bc>)
 8000ba6:	6013      	str	r3, [r2, #0]
        C -= pitch_effort;
 8000ba8:	4b3a      	ldr	r3, [pc, #232]	@ (8000c94 <update_Motors+0x3c4>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	4b27      	ldr	r3, [pc, #156]	@ (8000c4c <update_Motors+0x37c>)
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	1ad3      	subs	r3, r2, r3
 8000bb2:	4a38      	ldr	r2, [pc, #224]	@ (8000c94 <update_Motors+0x3c4>)
 8000bb4:	6013      	str	r3, [r2, #0]
    }

    // Apply roll control (affects left/right motor pairs)
    if (roll_effort > 0) {
 8000bb6:	4b3a      	ldr	r3, [pc, #232]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	2b00      	cmp	r3, #0
 8000bbc:	dd0e      	ble.n	8000bdc <update_Motors+0x30c>
        D += roll_effort; // Left motors get more power
 8000bbe:	4b37      	ldr	r3, [pc, #220]	@ (8000c9c <update_Motors+0x3cc>)
 8000bc0:	681a      	ldr	r2, [r3, #0]
 8000bc2:	4b37      	ldr	r3, [pc, #220]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	4413      	add	r3, r2
 8000bc8:	4a34      	ldr	r2, [pc, #208]	@ (8000c9c <update_Motors+0x3cc>)
 8000bca:	6013      	str	r3, [r2, #0]
        C += roll_effort;
 8000bcc:	4b31      	ldr	r3, [pc, #196]	@ (8000c94 <update_Motors+0x3c4>)
 8000bce:	681a      	ldr	r2, [r3, #0]
 8000bd0:	4b33      	ldr	r3, [pc, #204]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	4413      	add	r3, r2
 8000bd6:	4a2f      	ldr	r2, [pc, #188]	@ (8000c94 <update_Motors+0x3c4>)
 8000bd8:	6013      	str	r3, [r2, #0]
 8000bda:	e011      	b.n	8000c00 <update_Motors+0x330>
    }
    else if (roll_effort < 0) {
 8000bdc:	4b30      	ldr	r3, [pc, #192]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	da0d      	bge.n	8000c00 <update_Motors+0x330>
        B -= roll_effort; // Right motors get more power
 8000be4:	4b29      	ldr	r3, [pc, #164]	@ (8000c8c <update_Motors+0x3bc>)
 8000be6:	681a      	ldr	r2, [r3, #0]
 8000be8:	4b2d      	ldr	r3, [pc, #180]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	1ad3      	subs	r3, r2, r3
 8000bee:	4a27      	ldr	r2, [pc, #156]	@ (8000c8c <update_Motors+0x3bc>)
 8000bf0:	6013      	str	r3, [r2, #0]
        A -= roll_effort;
 8000bf2:	4b24      	ldr	r3, [pc, #144]	@ (8000c84 <update_Motors+0x3b4>)
 8000bf4:	681a      	ldr	r2, [r3, #0]
 8000bf6:	4b2a      	ldr	r3, [pc, #168]	@ (8000ca0 <update_Motors+0x3d0>)
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	1ad3      	subs	r3, r2, r3
 8000bfc:	4a21      	ldr	r2, [pc, #132]	@ (8000c84 <update_Motors+0x3b4>)
 8000bfe:	6013      	str	r3, [r2, #0]
    }

    // Apply yaw control (affects diagonal motor pairs)
    if (yaw_effort > 0) {
 8000c00:	4b1c      	ldr	r3, [pc, #112]	@ (8000c74 <update_Motors+0x3a4>)
 8000c02:	681b      	ldr	r3, [r3, #0]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	dd4d      	ble.n	8000ca4 <update_Motors+0x3d4>
        B += yaw_effort; // CW motors get more power
 8000c08:	4b20      	ldr	r3, [pc, #128]	@ (8000c8c <update_Motors+0x3bc>)
 8000c0a:	681a      	ldr	r2, [r3, #0]
 8000c0c:	4b19      	ldr	r3, [pc, #100]	@ (8000c74 <update_Motors+0x3a4>)
 8000c0e:	681b      	ldr	r3, [r3, #0]
 8000c10:	4413      	add	r3, r2
 8000c12:	4a1e      	ldr	r2, [pc, #120]	@ (8000c8c <update_Motors+0x3bc>)
 8000c14:	6013      	str	r3, [r2, #0]
        D += yaw_effort;
 8000c16:	4b21      	ldr	r3, [pc, #132]	@ (8000c9c <update_Motors+0x3cc>)
 8000c18:	681a      	ldr	r2, [r3, #0]
 8000c1a:	4b16      	ldr	r3, [pc, #88]	@ (8000c74 <update_Motors+0x3a4>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	4413      	add	r3, r2
 8000c20:	4a1e      	ldr	r2, [pc, #120]	@ (8000c9c <update_Motors+0x3cc>)
 8000c22:	6013      	str	r3, [r2, #0]
 8000c24:	e050      	b.n	8000cc8 <update_Motors+0x3f8>
 8000c26:	bf00      	nop
 8000c28:	20000010 	.word	0x20000010
 8000c2c:	20013b64 	.word	0x20013b64
 8000c30:	20013b7c 	.word	0x20013b7c
 8000c34:	20013b88 	.word	0x20013b88
 8000c38:	20013b70 	.word	0x20013b70
 8000c3c:	2000001c 	.word	0x2000001c
 8000c40:	20000020 	.word	0x20000020
 8000c44:	20013b9c 	.word	0x20013b9c
 8000c48:	14f8b589 	.word	0x14f8b589
 8000c4c:	20013b54 	.word	0x20013b54
 8000c50:	20013b4c 	.word	0x20013b4c
 8000c54:	20013b3c 	.word	0x20013b3c
 8000c58:	20013b80 	.word	0x20013b80
 8000c5c:	20013b68 	.word	0x20013b68
 8000c60:	20013b8c 	.word	0x20013b8c
 8000c64:	20013b74 	.word	0x20013b74
 8000c68:	20013ba0 	.word	0x20013ba0
 8000c6c:	20013ba4 	.word	0x20013ba4
 8000c70:	20013ba8 	.word	0x20013ba8
 8000c74:	20013b58 	.word	0x20013b58
 8000c78:	20013b40 	.word	0x20013b40
 8000c7c:	20000018 	.word	0x20000018
 8000c80:	20000000 	.word	0x20000000
 8000c84:	20013934 	.word	0x20013934
 8000c88:	20000004 	.word	0x20000004
 8000c8c:	20013938 	.word	0x20013938
 8000c90:	20000008 	.word	0x20000008
 8000c94:	2001393c 	.word	0x2001393c
 8000c98:	2000000c 	.word	0x2000000c
 8000c9c:	20013940 	.word	0x20013940
 8000ca0:	20013b50 	.word	0x20013b50
    }
    else if (yaw_effort < 0) {
 8000ca4:	4b59      	ldr	r3, [pc, #356]	@ (8000e0c <update_Motors+0x53c>)
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	da0d      	bge.n	8000cc8 <update_Motors+0x3f8>
        A -= yaw_effort; // CCW motors get more power
 8000cac:	4b58      	ldr	r3, [pc, #352]	@ (8000e10 <update_Motors+0x540>)
 8000cae:	681a      	ldr	r2, [r3, #0]
 8000cb0:	4b56      	ldr	r3, [pc, #344]	@ (8000e0c <update_Motors+0x53c>)
 8000cb2:	681b      	ldr	r3, [r3, #0]
 8000cb4:	1ad3      	subs	r3, r2, r3
 8000cb6:	4a56      	ldr	r2, [pc, #344]	@ (8000e10 <update_Motors+0x540>)
 8000cb8:	6013      	str	r3, [r2, #0]
        C -= yaw_effort;
 8000cba:	4b56      	ldr	r3, [pc, #344]	@ (8000e14 <update_Motors+0x544>)
 8000cbc:	681a      	ldr	r2, [r3, #0]
 8000cbe:	4b53      	ldr	r3, [pc, #332]	@ (8000e0c <update_Motors+0x53c>)
 8000cc0:	681b      	ldr	r3, [r3, #0]
 8000cc2:	1ad3      	subs	r3, r2, r3
 8000cc4:	4a53      	ldr	r2, [pc, #332]	@ (8000e14 <update_Motors+0x544>)
 8000cc6:	6013      	str	r3, [r2, #0]
    }

    /* ===== SAFETY LIMITS ===== */
    // Clamp all motors between 960 (0%) and 1500 (≈50% for safety)
    if (A < 960 | (stopFlag == true)) A = 960;
 8000cc8:	4b51      	ldr	r3, [pc, #324]	@ (8000e10 <update_Motors+0x540>)
 8000cca:	681b      	ldr	r3, [r3, #0]
 8000ccc:	f240 32bf 	movw	r2, #959	@ 0x3bf
 8000cd0:	4293      	cmp	r3, r2
 8000cd2:	bfd4      	ite	le
 8000cd4:	2301      	movle	r3, #1
 8000cd6:	2300      	movgt	r3, #0
 8000cd8:	b2da      	uxtb	r2, r3
 8000cda:	4b4f      	ldr	r3, [pc, #316]	@ (8000e18 <update_Motors+0x548>)
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	2b01      	cmp	r3, #1
 8000ce0:	bf0c      	ite	eq
 8000ce2:	2301      	moveq	r3, #1
 8000ce4:	2300      	movne	r3, #0
 8000ce6:	b2db      	uxtb	r3, r3
 8000ce8:	4313      	orrs	r3, r2
 8000cea:	b2db      	uxtb	r3, r3
 8000cec:	2b00      	cmp	r3, #0
 8000cee:	d003      	beq.n	8000cf8 <update_Motors+0x428>
 8000cf0:	4b47      	ldr	r3, [pc, #284]	@ (8000e10 <update_Motors+0x540>)
 8000cf2:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000cf6:	601a      	str	r2, [r3, #0]
    if (A > 1500) A = 1500;
 8000cf8:	4b45      	ldr	r3, [pc, #276]	@ (8000e10 <update_Motors+0x540>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d00:	4293      	cmp	r3, r2
 8000d02:	dd03      	ble.n	8000d0c <update_Motors+0x43c>
 8000d04:	4b42      	ldr	r3, [pc, #264]	@ (8000e10 <update_Motors+0x540>)
 8000d06:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d0a:	601a      	str	r2, [r3, #0]

    if (B < 960 | (stopFlag == true)) B = 960;
 8000d0c:	4b43      	ldr	r3, [pc, #268]	@ (8000e1c <update_Motors+0x54c>)
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	f240 32bf 	movw	r2, #959	@ 0x3bf
 8000d14:	4293      	cmp	r3, r2
 8000d16:	bfd4      	ite	le
 8000d18:	2301      	movle	r3, #1
 8000d1a:	2300      	movgt	r3, #0
 8000d1c:	b2da      	uxtb	r2, r3
 8000d1e:	4b3e      	ldr	r3, [pc, #248]	@ (8000e18 <update_Motors+0x548>)
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	2b01      	cmp	r3, #1
 8000d24:	bf0c      	ite	eq
 8000d26:	2301      	moveq	r3, #1
 8000d28:	2300      	movne	r3, #0
 8000d2a:	b2db      	uxtb	r3, r3
 8000d2c:	4313      	orrs	r3, r2
 8000d2e:	b2db      	uxtb	r3, r3
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d003      	beq.n	8000d3c <update_Motors+0x46c>
 8000d34:	4b39      	ldr	r3, [pc, #228]	@ (8000e1c <update_Motors+0x54c>)
 8000d36:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000d3a:	601a      	str	r2, [r3, #0]
    if (B > 1500) B = 1500;
 8000d3c:	4b37      	ldr	r3, [pc, #220]	@ (8000e1c <update_Motors+0x54c>)
 8000d3e:	681b      	ldr	r3, [r3, #0]
 8000d40:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d44:	4293      	cmp	r3, r2
 8000d46:	dd03      	ble.n	8000d50 <update_Motors+0x480>
 8000d48:	4b34      	ldr	r3, [pc, #208]	@ (8000e1c <update_Motors+0x54c>)
 8000d4a:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d4e:	601a      	str	r2, [r3, #0]

    if (C < 960 | (stopFlag == true)) C = 960;
 8000d50:	4b30      	ldr	r3, [pc, #192]	@ (8000e14 <update_Motors+0x544>)
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	f240 32bf 	movw	r2, #959	@ 0x3bf
 8000d58:	4293      	cmp	r3, r2
 8000d5a:	bfd4      	ite	le
 8000d5c:	2301      	movle	r3, #1
 8000d5e:	2300      	movgt	r3, #0
 8000d60:	b2da      	uxtb	r2, r3
 8000d62:	4b2d      	ldr	r3, [pc, #180]	@ (8000e18 <update_Motors+0x548>)
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	2b01      	cmp	r3, #1
 8000d68:	bf0c      	ite	eq
 8000d6a:	2301      	moveq	r3, #1
 8000d6c:	2300      	movne	r3, #0
 8000d6e:	b2db      	uxtb	r3, r3
 8000d70:	4313      	orrs	r3, r2
 8000d72:	b2db      	uxtb	r3, r3
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	d003      	beq.n	8000d80 <update_Motors+0x4b0>
 8000d78:	4b26      	ldr	r3, [pc, #152]	@ (8000e14 <update_Motors+0x544>)
 8000d7a:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000d7e:	601a      	str	r2, [r3, #0]
    if (C > 1500) C = 1500;
 8000d80:	4b24      	ldr	r3, [pc, #144]	@ (8000e14 <update_Motors+0x544>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d88:	4293      	cmp	r3, r2
 8000d8a:	dd03      	ble.n	8000d94 <update_Motors+0x4c4>
 8000d8c:	4b21      	ldr	r3, [pc, #132]	@ (8000e14 <update_Motors+0x544>)
 8000d8e:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000d92:	601a      	str	r2, [r3, #0]

    if (D < 960 | (stopFlag == true)) D = 960;
 8000d94:	4b22      	ldr	r3, [pc, #136]	@ (8000e20 <update_Motors+0x550>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	f240 32bf 	movw	r2, #959	@ 0x3bf
 8000d9c:	4293      	cmp	r3, r2
 8000d9e:	bfd4      	ite	le
 8000da0:	2301      	movle	r3, #1
 8000da2:	2300      	movgt	r3, #0
 8000da4:	b2da      	uxtb	r2, r3
 8000da6:	4b1c      	ldr	r3, [pc, #112]	@ (8000e18 <update_Motors+0x548>)
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	2b01      	cmp	r3, #1
 8000dac:	bf0c      	ite	eq
 8000dae:	2301      	moveq	r3, #1
 8000db0:	2300      	movne	r3, #0
 8000db2:	b2db      	uxtb	r3, r3
 8000db4:	4313      	orrs	r3, r2
 8000db6:	b2db      	uxtb	r3, r3
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d003      	beq.n	8000dc4 <update_Motors+0x4f4>
 8000dbc:	4b18      	ldr	r3, [pc, #96]	@ (8000e20 <update_Motors+0x550>)
 8000dbe:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000dc2:	601a      	str	r2, [r3, #0]
    if (D > 1500) D = 1500;
 8000dc4:	4b16      	ldr	r3, [pc, #88]	@ (8000e20 <update_Motors+0x550>)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000dcc:	4293      	cmp	r3, r2
 8000dce:	dd03      	ble.n	8000dd8 <update_Motors+0x508>
 8000dd0:	4b13      	ldr	r3, [pc, #76]	@ (8000e20 <update_Motors+0x550>)
 8000dd2:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000dd6:	601a      	str	r2, [r3, #0]
    // Debug output (commented)
    //printf("%d,%d,%d,%d \r\n", pitch_true, 0, 0, 0);

    /* ===== PWM OUTPUT UPDATE ===== */
    // Update timer compare registers to set motor speeds
    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, A);
 8000dd8:	4b0d      	ldr	r3, [pc, #52]	@ (8000e10 <update_Motors+0x540>)
 8000dda:	681a      	ldr	r2, [r3, #0]
 8000ddc:	4b11      	ldr	r3, [pc, #68]	@ (8000e24 <update_Motors+0x554>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_2, B);
 8000de2:	4b0e      	ldr	r3, [pc, #56]	@ (8000e1c <update_Motors+0x54c>)
 8000de4:	681a      	ldr	r2, [r3, #0]
 8000de6:	4b0f      	ldr	r3, [pc, #60]	@ (8000e24 <update_Motors+0x554>)
 8000de8:	681b      	ldr	r3, [r3, #0]
 8000dea:	639a      	str	r2, [r3, #56]	@ 0x38
    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, C);
 8000dec:	4b09      	ldr	r3, [pc, #36]	@ (8000e14 <update_Motors+0x544>)
 8000dee:	681a      	ldr	r2, [r3, #0]
 8000df0:	4b0c      	ldr	r3, [pc, #48]	@ (8000e24 <update_Motors+0x554>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, D);
 8000df6:	4b0a      	ldr	r3, [pc, #40]	@ (8000e20 <update_Motors+0x550>)
 8000df8:	681a      	ldr	r2, [r3, #0]
 8000dfa:	4b0a      	ldr	r3, [pc, #40]	@ (8000e24 <update_Motors+0x554>)
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8000e00:	bf00      	nop
 8000e02:	46bd      	mov	sp, r7
 8000e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e08:	4770      	bx	lr
 8000e0a:	bf00      	nop
 8000e0c:	20013b58 	.word	0x20013b58
 8000e10:	20013934 	.word	0x20013934
 8000e14:	2001393c 	.word	0x2001393c
 8000e18:	20013b5c 	.word	0x20013b5c
 8000e1c:	20013938 	.word	0x20013938
 8000e20:	20013940 	.word	0x20013940
 8000e24:	200139f4 	.word	0x200139f4

08000e28 <processInput>:
 * @warning Function modifies input buffer (uses strtok)
 *
 * @see InitializeBT()
 * @see dumpBlackbox()
 */
void processInput(char *charBuf, int32_t *roll, int32_t *pitch, int32_t *yaw, int32_t *effort, int *dumpFlag){
 8000e28:	b580      	push	{r7, lr}
 8000e2a:	b08c      	sub	sp, #48	@ 0x30
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	60f8      	str	r0, [r7, #12]
 8000e30:	60b9      	str	r1, [r7, #8]
 8000e32:	607a      	str	r2, [r7, #4]
 8000e34:	603b      	str	r3, [r7, #0]
    int32_t LjoyX, LjoyY, RjoyX, LT, RT, ENTER; ///< Parsed joystick and button values

    /* ===== INPUT VALIDATION ===== */
    // Skip pound sign if present
    if (charBuf[0] == '#') {
 8000e36:	68fb      	ldr	r3, [r7, #12]
 8000e38:	781b      	ldrb	r3, [r3, #0]
 8000e3a:	2b23      	cmp	r3, #35	@ 0x23
 8000e3c:	d10b      	bne.n	8000e56 <processInput+0x2e>
        charBuf++; // Move pointer to the next character
 8000e3e:	68fb      	ldr	r3, [r7, #12]
 8000e40:	3301      	adds	r3, #1
 8000e42:	60fb      	str	r3, [r7, #12]
        return;
    }

    /* ===== DATA PARSING ===== */
    // Parse comma-separated values using strtok
    char *token = strtok(charBuf, ",");
 8000e44:	4962      	ldr	r1, [pc, #392]	@ (8000fd0 <processInput+0x1a8>)
 8000e46:	68f8      	ldr	r0, [r7, #12]
 8000e48:	f005 fd02 	bl	8006850 <strtok>
 8000e4c:	6178      	str	r0, [r7, #20]
    if (token) LjoyX = (int32_t)strtol(token, NULL, 10);
 8000e4e:	697b      	ldr	r3, [r7, #20]
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d012      	beq.n	8000e7a <processInput+0x52>
 8000e54:	e00b      	b.n	8000e6e <processInput+0x46>
        badBTcount++;
 8000e56:	4b5f      	ldr	r3, [pc, #380]	@ (8000fd4 <processInput+0x1ac>)
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	3301      	adds	r3, #1
 8000e5c:	4a5d      	ldr	r2, [pc, #372]	@ (8000fd4 <processInput+0x1ac>)
 8000e5e:	6013      	str	r3, [r2, #0]
        printf("Bad BT input (did not process): %d\r\n", badBTcount);
 8000e60:	4b5c      	ldr	r3, [pc, #368]	@ (8000fd4 <processInput+0x1ac>)
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	4619      	mov	r1, r3
 8000e66:	485c      	ldr	r0, [pc, #368]	@ (8000fd8 <processInput+0x1b0>)
 8000e68:	f005 fc5e 	bl	8006728 <iprintf>
        return;
 8000e6c:	e0ad      	b.n	8000fca <processInput+0x1a2>
    if (token) LjoyX = (int32_t)strtol(token, NULL, 10);
 8000e6e:	220a      	movs	r2, #10
 8000e70:	2100      	movs	r1, #0
 8000e72:	6978      	ldr	r0, [r7, #20]
 8000e74:	f005 fb8c 	bl	8006590 <strtol>
 8000e78:	62f8      	str	r0, [r7, #44]	@ 0x2c

    token = strtok(NULL, ",");
 8000e7a:	4955      	ldr	r1, [pc, #340]	@ (8000fd0 <processInput+0x1a8>)
 8000e7c:	2000      	movs	r0, #0
 8000e7e:	f005 fce7 	bl	8006850 <strtok>
 8000e82:	6178      	str	r0, [r7, #20]
    if (token) LjoyY = (int32_t)strtol(token, NULL, 10);
 8000e84:	697b      	ldr	r3, [r7, #20]
 8000e86:	2b00      	cmp	r3, #0
 8000e88:	d005      	beq.n	8000e96 <processInput+0x6e>
 8000e8a:	220a      	movs	r2, #10
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	6978      	ldr	r0, [r7, #20]
 8000e90:	f005 fb7e 	bl	8006590 <strtol>
 8000e94:	62b8      	str	r0, [r7, #40]	@ 0x28

    token = strtok(NULL, ",");
 8000e96:	494e      	ldr	r1, [pc, #312]	@ (8000fd0 <processInput+0x1a8>)
 8000e98:	2000      	movs	r0, #0
 8000e9a:	f005 fcd9 	bl	8006850 <strtok>
 8000e9e:	6178      	str	r0, [r7, #20]
    if (token) RjoyX = (int32_t)strtol(token, NULL, 10);
 8000ea0:	697b      	ldr	r3, [r7, #20]
 8000ea2:	2b00      	cmp	r3, #0
 8000ea4:	d005      	beq.n	8000eb2 <processInput+0x8a>
 8000ea6:	220a      	movs	r2, #10
 8000ea8:	2100      	movs	r1, #0
 8000eaa:	6978      	ldr	r0, [r7, #20]
 8000eac:	f005 fb70 	bl	8006590 <strtol>
 8000eb0:	6278      	str	r0, [r7, #36]	@ 0x24

    token = strtok(NULL, ",");
 8000eb2:	4947      	ldr	r1, [pc, #284]	@ (8000fd0 <processInput+0x1a8>)
 8000eb4:	2000      	movs	r0, #0
 8000eb6:	f005 fccb 	bl	8006850 <strtok>
 8000eba:	6178      	str	r0, [r7, #20]
    if (token) LT = (int32_t)strtol(token, NULL, 10);
 8000ebc:	697b      	ldr	r3, [r7, #20]
 8000ebe:	2b00      	cmp	r3, #0
 8000ec0:	d005      	beq.n	8000ece <processInput+0xa6>
 8000ec2:	220a      	movs	r2, #10
 8000ec4:	2100      	movs	r1, #0
 8000ec6:	6978      	ldr	r0, [r7, #20]
 8000ec8:	f005 fb62 	bl	8006590 <strtol>
 8000ecc:	6238      	str	r0, [r7, #32]

    token = strtok(NULL, ",");
 8000ece:	4940      	ldr	r1, [pc, #256]	@ (8000fd0 <processInput+0x1a8>)
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	f005 fcbd 	bl	8006850 <strtok>
 8000ed6:	6178      	str	r0, [r7, #20]
    if (token) RT = (int32_t)strtol(token, NULL, 10);
 8000ed8:	697b      	ldr	r3, [r7, #20]
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d005      	beq.n	8000eea <processInput+0xc2>
 8000ede:	220a      	movs	r2, #10
 8000ee0:	2100      	movs	r1, #0
 8000ee2:	6978      	ldr	r0, [r7, #20]
 8000ee4:	f005 fb54 	bl	8006590 <strtol>
 8000ee8:	61f8      	str	r0, [r7, #28]

    token = strtok(NULL, ",");
 8000eea:	4939      	ldr	r1, [pc, #228]	@ (8000fd0 <processInput+0x1a8>)
 8000eec:	2000      	movs	r0, #0
 8000eee:	f005 fcaf 	bl	8006850 <strtok>
 8000ef2:	6178      	str	r0, [r7, #20]
    if (token) ENTER = (int32_t)strtol(token, NULL, 10);
 8000ef4:	697b      	ldr	r3, [r7, #20]
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d005      	beq.n	8000f06 <processInput+0xde>
 8000efa:	220a      	movs	r2, #10
 8000efc:	2100      	movs	r1, #0
 8000efe:	6978      	ldr	r0, [r7, #20]
 8000f00:	f005 fb46 	bl	8006590 <strtol>
 8000f04:	61b8      	str	r0, [r7, #24]

    /* ===== CONTROL MAPPING ===== */
    // Convert joystick values to flight control commands

    // Roll/Pitch: Scale joystick input to ±20° (assuming joystick range ±1000)
    *roll = LjoyX * 180 / 9;   // Scale to millidegrees (±20000)
 8000f06:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000f08:	4613      	mov	r3, r2
 8000f0a:	009b      	lsls	r3, r3, #2
 8000f0c:	4413      	add	r3, r2
 8000f0e:	009b      	lsls	r3, r3, #2
 8000f10:	461a      	mov	r2, r3
 8000f12:	68bb      	ldr	r3, [r7, #8]
 8000f14:	601a      	str	r2, [r3, #0]
    *pitch = LjoyY * 180 / 9;  // Scale to millidegrees (±20000)
 8000f16:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000f18:	4613      	mov	r3, r2
 8000f1a:	009b      	lsls	r3, r3, #2
 8000f1c:	4413      	add	r3, r2
 8000f1e:	009b      	lsls	r3, r3, #2
 8000f20:	461a      	mov	r2, r3
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	601a      	str	r2, [r3, #0]

    // Yaw: Relative control - add rate command to current heading
    *yaw = yaw_true + (RjoyX) / 10;
 8000f26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f28:	4a2c      	ldr	r2, [pc, #176]	@ (8000fdc <processInput+0x1b4>)
 8000f2a:	fb82 1203 	smull	r1, r2, r2, r3
 8000f2e:	1092      	asrs	r2, r2, #2
 8000f30:	17db      	asrs	r3, r3, #31
 8000f32:	1ad2      	subs	r2, r2, r3
 8000f34:	4b2a      	ldr	r3, [pc, #168]	@ (8000fe0 <processInput+0x1b8>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	441a      	add	r2, r3
 8000f3a:	683b      	ldr	r3, [r7, #0]
 8000f3c:	601a      	str	r2, [r3, #0]

    // Handle yaw wraparound (0-360°)
    if (*yaw < 0) {
 8000f3e:	683b      	ldr	r3, [r7, #0]
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	da08      	bge.n	8000f58 <processInput+0x130>
        *yaw = *yaw + 360000;
 8000f46:	683b      	ldr	r3, [r7, #0]
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	f503 23af 	add.w	r3, r3, #358400	@ 0x57800
 8000f4e:	f503 63c8 	add.w	r3, r3, #1600	@ 0x640
 8000f52:	683a      	ldr	r2, [r7, #0]
 8000f54:	6013      	str	r3, [r2, #0]
 8000f56:	e00c      	b.n	8000f72 <processInput+0x14a>
    } else if (*yaw > 360000) {
 8000f58:	683b      	ldr	r3, [r7, #0]
 8000f5a:	681b      	ldr	r3, [r3, #0]
 8000f5c:	4a21      	ldr	r2, [pc, #132]	@ (8000fe4 <processInput+0x1bc>)
 8000f5e:	4293      	cmp	r3, r2
 8000f60:	dd07      	ble.n	8000f72 <processInput+0x14a>
        *yaw = *yaw - 360000;
 8000f62:	683b      	ldr	r3, [r7, #0]
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	f5a3 23af 	sub.w	r3, r3, #358400	@ 0x57800
 8000f6a:	f5a3 63c8 	sub.w	r3, r3, #1600	@ 0x640
 8000f6e:	683a      	ldr	r2, [r7, #0]
 8000f70:	6013      	str	r3, [r2, #0]
    }

    // Throttle: Differential trigger control (RT increases, LT decreases)
    *effort = *effort + (RT - LT) * effortRate / 1000;
 8000f72:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000f74:	681a      	ldr	r2, [r3, #0]
 8000f76:	69f9      	ldr	r1, [r7, #28]
 8000f78:	6a3b      	ldr	r3, [r7, #32]
 8000f7a:	1acb      	subs	r3, r1, r3
 8000f7c:	491a      	ldr	r1, [pc, #104]	@ (8000fe8 <processInput+0x1c0>)
 8000f7e:	6809      	ldr	r1, [r1, #0]
 8000f80:	fb01 f303 	mul.w	r3, r1, r3
 8000f84:	4919      	ldr	r1, [pc, #100]	@ (8000fec <processInput+0x1c4>)
 8000f86:	fb81 0103 	smull	r0, r1, r1, r3
 8000f8a:	1189      	asrs	r1, r1, #6
 8000f8c:	17db      	asrs	r3, r3, #31
 8000f8e:	1acb      	subs	r3, r1, r3
 8000f90:	441a      	add	r2, r3
 8000f92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000f94:	601a      	str	r2, [r3, #0]

    // Constrain effort to safe limits
    if (*effort < 0) {
 8000f96:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	da06      	bge.n	8000fac <processInput+0x184>
        *effort = 0;
 8000f9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	601a      	str	r2, [r3, #0]
        stopFlag = true;
 8000fa4:	4b12      	ldr	r3, [pc, #72]	@ (8000ff0 <processInput+0x1c8>)
 8000fa6:	2201      	movs	r2, #1
 8000fa8:	601a      	str	r2, [r3, #0]
 8000faa:	e008      	b.n	8000fbe <processInput+0x196>
    } else if (*effort > 1000) {
 8000fac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000fb4:	dd03      	ble.n	8000fbe <processInput+0x196>
        *effort = 1000;
 8000fb6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000fb8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000fbc:	601a      	str	r2, [r3, #0]
    }

    // Blackbox dump trigger
    if (ENTER == 1) {
 8000fbe:	69bb      	ldr	r3, [r7, #24]
 8000fc0:	2b01      	cmp	r3, #1
 8000fc2:	d102      	bne.n	8000fca <processInput+0x1a2>
        *dumpFlag = 1;
 8000fc4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	601a      	str	r2, [r3, #0]
    }
}
 8000fca:	3730      	adds	r7, #48	@ 0x30
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bd80      	pop	{r7, pc}
 8000fd0:	080079d8 	.word	0x080079d8
 8000fd4:	20013948 	.word	0x20013948
 8000fd8:	080079b0 	.word	0x080079b0
 8000fdc:	66666667 	.word	0x66666667
 8000fe0:	20013b4c 	.word	0x20013b4c
 8000fe4:	00057e40 	.word	0x00057e40
 8000fe8:	20000014 	.word	0x20000014
 8000fec:	10624dd3 	.word	0x10624dd3
 8000ff0:	20013b5c 	.word	0x20013b5c

08000ff4 <dumpBlackbox>:
 *
 * @see processInput()
 * @see InitializeBT()
 */
void dumpBlackbox(void)
{
 8000ff4:	b590      	push	{r4, r7, lr}
 8000ff6:	b097      	sub	sp, #92	@ 0x5c
 8000ff8:	af04      	add	r7, sp, #16
    // Optional: Send PID parameters first (currently commented)
    //char paramMsg[128];
    //snprintf(paramMsg, sizeof(paramMsg), "Kp_pitch: %ld, Ki_pitch: %ld, Kd_pitch: %ld, Kp_roll: %ld, Ki_roll: %ld, Kd_roll: %ld \r\n",Kp_pitch, Ki_pitch, Kd_pitch, Kp_roll, Ki_roll, Kd_roll);
    //HAL_UART_Transmit(&huart2, (uint8_t*)paramMsg, strlen(paramMsg), HAL_MAX_DELAY);

    HAL_Delay(200); // Give receiver time to prepare for data stream
 8000ffa:	20c8      	movs	r0, #200	@ 0xc8
 8000ffc:	f000 ff78 	bl	8001ef0 <HAL_Delay>

    char msg[64]; ///< Message buffer for each data line

    // Transmit all blackbox samples
    for (uint16_t i = 0; i < sample_index; i++) {
 8001000:	2300      	movs	r3, #0
 8001002:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8001006:	e034      	b.n	8001072 <dumpBlackbox+0x7e>
        snprintf(msg, sizeof(msg), "%ld,%ld,%ld,%ld\r\n",
 8001008:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 800100c:	4a1e      	ldr	r2, [pc, #120]	@ (8001088 <dumpBlackbox+0x94>)
 800100e:	011b      	lsls	r3, r3, #4
 8001010:	4413      	add	r3, r2
 8001012:	681c      	ldr	r4, [r3, #0]
 8001014:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8001018:	4a1b      	ldr	r2, [pc, #108]	@ (8001088 <dumpBlackbox+0x94>)
 800101a:	011b      	lsls	r3, r3, #4
 800101c:	4413      	add	r3, r2
 800101e:	3308      	adds	r3, #8
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	f8b7 2046 	ldrh.w	r2, [r7, #70]	@ 0x46
 8001026:	4918      	ldr	r1, [pc, #96]	@ (8001088 <dumpBlackbox+0x94>)
 8001028:	0112      	lsls	r2, r2, #4
 800102a:	440a      	add	r2, r1
 800102c:	3204      	adds	r2, #4
 800102e:	6812      	ldr	r2, [r2, #0]
 8001030:	f8b7 1046 	ldrh.w	r1, [r7, #70]	@ 0x46
 8001034:	4814      	ldr	r0, [pc, #80]	@ (8001088 <dumpBlackbox+0x94>)
 8001036:	0109      	lsls	r1, r1, #4
 8001038:	4401      	add	r1, r0
 800103a:	310c      	adds	r1, #12
 800103c:	6809      	ldr	r1, [r1, #0]
 800103e:	1d38      	adds	r0, r7, #4
 8001040:	9102      	str	r1, [sp, #8]
 8001042:	9201      	str	r2, [sp, #4]
 8001044:	9300      	str	r3, [sp, #0]
 8001046:	4623      	mov	r3, r4
 8001048:	4a10      	ldr	r2, [pc, #64]	@ (800108c <dumpBlackbox+0x98>)
 800104a:	2140      	movs	r1, #64	@ 0x40
 800104c:	f005 fb7e 	bl	800674c <sniprintf>
                blackbox[i].pitch,
                blackbox[i].pitchSet,
                blackbox[i].roll,
                blackbox[i].rollSet);
        HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001050:	1d3b      	adds	r3, r7, #4
 8001052:	4618      	mov	r0, r3
 8001054:	f7ff f8c4 	bl	80001e0 <strlen>
 8001058:	4603      	mov	r3, r0
 800105a:	b29a      	uxth	r2, r3
 800105c:	1d39      	adds	r1, r7, #4
 800105e:	f04f 33ff 	mov.w	r3, #4294967295
 8001062:	480b      	ldr	r0, [pc, #44]	@ (8001090 <dumpBlackbox+0x9c>)
 8001064:	f004 f882 	bl	800516c <HAL_UART_Transmit>
    for (uint16_t i = 0; i < sample_index; i++) {
 8001068:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 800106c:	3301      	adds	r3, #1
 800106e:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8001072:	4b08      	ldr	r3, [pc, #32]	@ (8001094 <dumpBlackbox+0xa0>)
 8001074:	881b      	ldrh	r3, [r3, #0]
 8001076:	f8b7 2046 	ldrh.w	r2, [r7, #70]	@ 0x46
 800107a:	429a      	cmp	r2, r3
 800107c:	d3c4      	bcc.n	8001008 <dumpBlackbox+0x14>
    }
}
 800107e:	bf00      	nop
 8001080:	bf00      	nop
 8001082:	374c      	adds	r7, #76	@ 0x4c
 8001084:	46bd      	mov	sp, r7
 8001086:	bd90      	pop	{r4, r7, pc}
 8001088:	200000ac 	.word	0x200000ac
 800108c:	080079dc 	.word	0x080079dc
 8001090:	20013a84 	.word	0x20013a84
 8001094:	2001392c 	.word	0x2001392c

08001098 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001098:	b580      	push	{r7, lr}
 800109a:	af00      	add	r7, sp, #0

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */

	HAL_Init();
 800109c:	f000 feb6 	bl	8001e0c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80010a0:	f000 f88e 	bl	80011c0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80010a4:	f000 fa42 	bl	800152c <MX_GPIO_Init>
  MX_DMA_Init();
 80010a8:	f000 fa20 	bl	80014ec <MX_DMA_Init>
  MX_I2C1_Init();
 80010ac:	f000 f8f0 	bl	8001290 <MX_I2C1_Init>
  MX_TIM3_Init();
 80010b0:	f000 f94a 	bl	8001348 <MX_TIM3_Init>
  MX_USART1_UART_Init();
 80010b4:	f000 f9c6 	bl	8001444 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80010b8:	f000 f9ee 	bl	8001498 <MX_USART2_UART_Init>
  MX_I2C3_Init();
 80010bc:	f000 f916 	bl	80012ec <MX_I2C3_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  { //potential to use HAL tim int flag if control loop needs to run at percise intervals to avoid spike in derivative/integral calculation
	 if (state == 0){
 80010c0:	4b2f      	ldr	r3, [pc, #188]	@ (8001180 <main+0xe8>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d105      	bne.n	80010d4 <main+0x3c>

		 BNO_Init();
 80010c8:	f7ff fa78 	bl	80005bc <BNO_Init>
		 state = 1;
 80010cc:	4b2c      	ldr	r3, [pc, #176]	@ (8001180 <main+0xe8>)
 80010ce:	2201      	movs	r2, #1
 80010d0:	601a      	str	r2, [r3, #0]
 80010d2:	e7f5      	b.n	80010c0 <main+0x28>
	 }else if (state == 1){
 80010d4:	4b2a      	ldr	r3, [pc, #168]	@ (8001180 <main+0xe8>)
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	2b01      	cmp	r3, #1
 80010da:	d11a      	bne.n	8001112 <main+0x7a>
		 HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1);
 80010dc:	2224      	movs	r2, #36	@ 0x24
 80010de:	4929      	ldr	r1, [pc, #164]	@ (8001184 <main+0xec>)
 80010e0:	4829      	ldr	r0, [pc, #164]	@ (8001188 <main+0xf0>)
 80010e2:	f004 f8ce 	bl	8005282 <HAL_UART_Receive_DMA>
		 if (roll_set<-10000){
 80010e6:	4b29      	ldr	r3, [pc, #164]	@ (800118c <main+0xf4>)
 80010e8:	681b      	ldr	r3, [r3, #0]
 80010ea:	4a29      	ldr	r2, [pc, #164]	@ (8001190 <main+0xf8>)
 80010ec:	4293      	cmp	r3, r2
 80010ee:	da09      	bge.n	8001104 <main+0x6c>
			 armESC();
 80010f0:	f7ff fb8a 	bl	8000808 <armESC>
			 state = 2;
 80010f4:	4b22      	ldr	r3, [pc, #136]	@ (8001180 <main+0xe8>)
 80010f6:	2202      	movs	r2, #2
 80010f8:	601a      	str	r2, [r3, #0]
			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);   // Set PA0 High (go signal)
 80010fa:	2201      	movs	r2, #1
 80010fc:	2102      	movs	r1, #2
 80010fe:	4825      	ldr	r0, [pc, #148]	@ (8001194 <main+0xfc>)
 8001100:	f001 fe96 	bl	8002e30 <HAL_GPIO_WritePin>
		 }
		 effort_set, roll_set, pitch_set = 0;
 8001104:	4b24      	ldr	r3, [pc, #144]	@ (8001198 <main+0x100>)
 8001106:	2200      	movs	r2, #0
 8001108:	601a      	str	r2, [r3, #0]
		 pitch_integral = 0;
 800110a:	4b24      	ldr	r3, [pc, #144]	@ (800119c <main+0x104>)
 800110c:	2200      	movs	r2, #0
 800110e:	601a      	str	r2, [r3, #0]
 8001110:	e7d6      	b.n	80010c0 <main+0x28>

	 }else if(state == 2){
 8001112:	4b1b      	ldr	r3, [pc, #108]	@ (8001180 <main+0xe8>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	2b02      	cmp	r3, #2
 8001118:	d116      	bne.n	8001148 <main+0xb0>
	//		 imu_request = true;
	//	  if (imu_request) {
    //		  imu_request = false;
		      BNO_Read(&roll_true, &pitch_true, &yaw_true);
 800111a:	4a21      	ldr	r2, [pc, #132]	@ (80011a0 <main+0x108>)
 800111c:	4921      	ldr	r1, [pc, #132]	@ (80011a4 <main+0x10c>)
 800111e:	4822      	ldr	r0, [pc, #136]	@ (80011a8 <main+0x110>)
 8001120:	f7ff fad2 	bl	80006c8 <BNO_Read>
			  update_Motors(roll_effort, pitch_effort, yaw_effort, effort_set);
 8001124:	4b21      	ldr	r3, [pc, #132]	@ (80011ac <main+0x114>)
 8001126:	6818      	ldr	r0, [r3, #0]
 8001128:	4b21      	ldr	r3, [pc, #132]	@ (80011b0 <main+0x118>)
 800112a:	6819      	ldr	r1, [r3, #0]
 800112c:	4b21      	ldr	r3, [pc, #132]	@ (80011b4 <main+0x11c>)
 800112e:	681a      	ldr	r2, [r3, #0]
 8001130:	4b21      	ldr	r3, [pc, #132]	@ (80011b8 <main+0x120>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	f7ff fbcc 	bl	80008d0 <update_Motors>
			  if (dumpFlag == 1){
 8001138:	4b20      	ldr	r3, [pc, #128]	@ (80011bc <main+0x124>)
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	2b01      	cmp	r3, #1
 800113e:	d1bf      	bne.n	80010c0 <main+0x28>
				  state = 3; }
 8001140:	4b0f      	ldr	r3, [pc, #60]	@ (8001180 <main+0xe8>)
 8001142:	2203      	movs	r2, #3
 8001144:	601a      	str	r2, [r3, #0]
 8001146:	e7bb      	b.n	80010c0 <main+0x28>

	 }else if(state == 3){
 8001148:	4b0d      	ldr	r3, [pc, #52]	@ (8001180 <main+0xe8>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	2b03      	cmp	r3, #3
 800114e:	d1b7      	bne.n	80010c0 <main+0x28>
		 	 dumpBlackbox();
 8001150:	f7ff ff50 	bl	8000ff4 <dumpBlackbox>
		 	 dumpFlag = 0;
 8001154:	4b19      	ldr	r3, [pc, #100]	@ (80011bc <main+0x124>)
 8001156:	2200      	movs	r2, #0
 8001158:	601a      	str	r2, [r3, #0]
		 	HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1);
 800115a:	2224      	movs	r2, #36	@ 0x24
 800115c:	4909      	ldr	r1, [pc, #36]	@ (8001184 <main+0xec>)
 800115e:	480a      	ldr	r0, [pc, #40]	@ (8001188 <main+0xf0>)
 8001160:	f004 f88f 	bl	8005282 <HAL_UART_Receive_DMA>
		 	armESC();
 8001164:	f7ff fb50 	bl	8000808 <armESC>
		 	state = 2;
 8001168:	4b05      	ldr	r3, [pc, #20]	@ (8001180 <main+0xe8>)
 800116a:	2202      	movs	r2, #2
 800116c:	601a      	str	r2, [r3, #0]
		 	effort_set = 0;
 800116e:	4b12      	ldr	r3, [pc, #72]	@ (80011b8 <main+0x120>)
 8001170:	2200      	movs	r2, #0
 8001172:	601a      	str	r2, [r3, #0]
		 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);   // Set PA0 High (go signal)
 8001174:	2201      	movs	r2, #1
 8001176:	2102      	movs	r1, #2
 8001178:	4806      	ldr	r0, [pc, #24]	@ (8001194 <main+0xfc>)
 800117a:	f001 fe59 	bl	8002e30 <HAL_GPIO_WritePin>
	 if (state == 0){
 800117e:	e79f      	b.n	80010c0 <main+0x28>
 8001180:	20013b30 	.word	0x20013b30
 8001184:	20013bac 	.word	0x20013bac
 8001188:	20013a84 	.word	0x20013a84
 800118c:	20013b34 	.word	0x20013b34
 8001190:	ffffd8f0 	.word	0xffffd8f0
 8001194:	40020000 	.word	0x40020000
 8001198:	20013b38 	.word	0x20013b38
 800119c:	20013b64 	.word	0x20013b64
 80011a0:	20013b4c 	.word	0x20013b4c
 80011a4:	20013b48 	.word	0x20013b48
 80011a8:	20013b44 	.word	0x20013b44
 80011ac:	20013b50 	.word	0x20013b50
 80011b0:	20013b54 	.word	0x20013b54
 80011b4:	20013b58 	.word	0x20013b58
 80011b8:	20013b40 	.word	0x20013b40
 80011bc:	20013bd4 	.word	0x20013bd4

080011c0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b094      	sub	sp, #80	@ 0x50
 80011c4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011c6:	f107 0320 	add.w	r3, r7, #32
 80011ca:	2230      	movs	r2, #48	@ 0x30
 80011cc:	2100      	movs	r1, #0
 80011ce:	4618      	mov	r0, r3
 80011d0:	f005 fb35 	bl	800683e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011d4:	f107 030c 	add.w	r3, r7, #12
 80011d8:	2200      	movs	r2, #0
 80011da:	601a      	str	r2, [r3, #0]
 80011dc:	605a      	str	r2, [r3, #4]
 80011de:	609a      	str	r2, [r3, #8]
 80011e0:	60da      	str	r2, [r3, #12]
 80011e2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80011e4:	2300      	movs	r3, #0
 80011e6:	60bb      	str	r3, [r7, #8]
 80011e8:	4b27      	ldr	r3, [pc, #156]	@ (8001288 <SystemClock_Config+0xc8>)
 80011ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011ec:	4a26      	ldr	r2, [pc, #152]	@ (8001288 <SystemClock_Config+0xc8>)
 80011ee:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80011f4:	4b24      	ldr	r3, [pc, #144]	@ (8001288 <SystemClock_Config+0xc8>)
 80011f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011f8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011fc:	60bb      	str	r3, [r7, #8]
 80011fe:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001200:	2300      	movs	r3, #0
 8001202:	607b      	str	r3, [r7, #4]
 8001204:	4b21      	ldr	r3, [pc, #132]	@ (800128c <SystemClock_Config+0xcc>)
 8001206:	681b      	ldr	r3, [r3, #0]
 8001208:	4a20      	ldr	r2, [pc, #128]	@ (800128c <SystemClock_Config+0xcc>)
 800120a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800120e:	6013      	str	r3, [r2, #0]
 8001210:	4b1e      	ldr	r3, [pc, #120]	@ (800128c <SystemClock_Config+0xcc>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001218:	607b      	str	r3, [r7, #4]
 800121a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800121c:	2302      	movs	r3, #2
 800121e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001220:	2301      	movs	r3, #1
 8001222:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001224:	2310      	movs	r3, #16
 8001226:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001228:	2302      	movs	r3, #2
 800122a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800122c:	2300      	movs	r3, #0
 800122e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001230:	2308      	movs	r3, #8
 8001232:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 50;
 8001234:	2332      	movs	r3, #50	@ 0x32
 8001236:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001238:	2302      	movs	r3, #2
 800123a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800123c:	2304      	movs	r3, #4
 800123e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001240:	f107 0320 	add.w	r3, r7, #32
 8001244:	4618      	mov	r0, r3
 8001246:	f002 fe7b 	bl	8003f40 <HAL_RCC_OscConfig>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001250:	f000 fa4e 	bl	80016f0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001254:	230f      	movs	r3, #15
 8001256:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001258:	2302      	movs	r3, #2
 800125a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800125c:	2300      	movs	r3, #0
 800125e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001260:	2300      	movs	r3, #0
 8001262:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001264:	2300      	movs	r3, #0
 8001266:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001268:	f107 030c 	add.w	r3, r7, #12
 800126c:	2101      	movs	r1, #1
 800126e:	4618      	mov	r0, r3
 8001270:	f003 f8de 	bl	8004430 <HAL_RCC_ClockConfig>
 8001274:	4603      	mov	r3, r0
 8001276:	2b00      	cmp	r3, #0
 8001278:	d001      	beq.n	800127e <SystemClock_Config+0xbe>
  {
    Error_Handler();
 800127a:	f000 fa39 	bl	80016f0 <Error_Handler>
  }
}
 800127e:	bf00      	nop
 8001280:	3750      	adds	r7, #80	@ 0x50
 8001282:	46bd      	mov	sp, r7
 8001284:	bd80      	pop	{r7, pc}
 8001286:	bf00      	nop
 8001288:	40023800 	.word	0x40023800
 800128c:	40007000 	.word	0x40007000

08001290 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001294:	4b12      	ldr	r3, [pc, #72]	@ (80012e0 <MX_I2C1_Init+0x50>)
 8001296:	4a13      	ldr	r2, [pc, #76]	@ (80012e4 <MX_I2C1_Init+0x54>)
 8001298:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800129a:	4b11      	ldr	r3, [pc, #68]	@ (80012e0 <MX_I2C1_Init+0x50>)
 800129c:	4a12      	ldr	r2, [pc, #72]	@ (80012e8 <MX_I2C1_Init+0x58>)
 800129e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012a0:	4b0f      	ldr	r3, [pc, #60]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012a2:	2200      	movs	r2, #0
 80012a4:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80012a6:	4b0e      	ldr	r3, [pc, #56]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012a8:	2200      	movs	r2, #0
 80012aa:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012ac:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012ae:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012b2:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012b4:	4b0a      	ldr	r3, [pc, #40]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80012ba:	4b09      	ldr	r3, [pc, #36]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012bc:	2200      	movs	r2, #0
 80012be:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012c0:	4b07      	ldr	r3, [pc, #28]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012c2:	2200      	movs	r2, #0
 80012c4:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012c6:	4b06      	ldr	r3, [pc, #24]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012c8:	2200      	movs	r2, #0
 80012ca:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80012cc:	4804      	ldr	r0, [pc, #16]	@ (80012e0 <MX_I2C1_Init+0x50>)
 80012ce:	f001 fde3 	bl	8002e98 <HAL_I2C_Init>
 80012d2:	4603      	mov	r3, r0
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	d001      	beq.n	80012dc <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80012d8:	f000 fa0a 	bl	80016f0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80012dc:	bf00      	nop
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	2001394c 	.word	0x2001394c
 80012e4:	40005400 	.word	0x40005400
 80012e8:	000186a0 	.word	0x000186a0

080012ec <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 80012f0:	4b12      	ldr	r3, [pc, #72]	@ (800133c <MX_I2C3_Init+0x50>)
 80012f2:	4a13      	ldr	r2, [pc, #76]	@ (8001340 <MX_I2C3_Init+0x54>)
 80012f4:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 80012f6:	4b11      	ldr	r3, [pc, #68]	@ (800133c <MX_I2C3_Init+0x50>)
 80012f8:	4a12      	ldr	r2, [pc, #72]	@ (8001344 <MX_I2C3_Init+0x58>)
 80012fa:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012fc:	4b0f      	ldr	r3, [pc, #60]	@ (800133c <MX_I2C3_Init+0x50>)
 80012fe:	2200      	movs	r2, #0
 8001300:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8001302:	4b0e      	ldr	r3, [pc, #56]	@ (800133c <MX_I2C3_Init+0x50>)
 8001304:	2200      	movs	r2, #0
 8001306:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001308:	4b0c      	ldr	r3, [pc, #48]	@ (800133c <MX_I2C3_Init+0x50>)
 800130a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800130e:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001310:	4b0a      	ldr	r3, [pc, #40]	@ (800133c <MX_I2C3_Init+0x50>)
 8001312:	2200      	movs	r2, #0
 8001314:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 8001316:	4b09      	ldr	r3, [pc, #36]	@ (800133c <MX_I2C3_Init+0x50>)
 8001318:	2200      	movs	r2, #0
 800131a:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800131c:	4b07      	ldr	r3, [pc, #28]	@ (800133c <MX_I2C3_Init+0x50>)
 800131e:	2200      	movs	r2, #0
 8001320:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001322:	4b06      	ldr	r3, [pc, #24]	@ (800133c <MX_I2C3_Init+0x50>)
 8001324:	2200      	movs	r2, #0
 8001326:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001328:	4804      	ldr	r0, [pc, #16]	@ (800133c <MX_I2C3_Init+0x50>)
 800132a:	f001 fdb5 	bl	8002e98 <HAL_I2C_Init>
 800132e:	4603      	mov	r3, r0
 8001330:	2b00      	cmp	r3, #0
 8001332:	d001      	beq.n	8001338 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8001334:	f000 f9dc 	bl	80016f0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001338:	bf00      	nop
 800133a:	bd80      	pop	{r7, pc}
 800133c:	200139a0 	.word	0x200139a0
 8001340:	40005c00 	.word	0x40005c00
 8001344:	000186a0 	.word	0x000186a0

08001348 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001348:	b580      	push	{r7, lr}
 800134a:	b08a      	sub	sp, #40	@ 0x28
 800134c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800134e:	f107 0320 	add.w	r3, r7, #32
 8001352:	2200      	movs	r2, #0
 8001354:	601a      	str	r2, [r3, #0]
 8001356:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001358:	1d3b      	adds	r3, r7, #4
 800135a:	2200      	movs	r2, #0
 800135c:	601a      	str	r2, [r3, #0]
 800135e:	605a      	str	r2, [r3, #4]
 8001360:	609a      	str	r2, [r3, #8]
 8001362:	60da      	str	r2, [r3, #12]
 8001364:	611a      	str	r2, [r3, #16]
 8001366:	615a      	str	r2, [r3, #20]
 8001368:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800136a:	4b34      	ldr	r3, [pc, #208]	@ (800143c <MX_TIM3_Init+0xf4>)
 800136c:	4a34      	ldr	r2, [pc, #208]	@ (8001440 <MX_TIM3_Init+0xf8>)
 800136e:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 50;
 8001370:	4b32      	ldr	r3, [pc, #200]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001372:	2232      	movs	r2, #50	@ 0x32
 8001374:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001376:	4b31      	ldr	r3, [pc, #196]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001378:	2200      	movs	r2, #0
 800137a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 20660;
 800137c:	4b2f      	ldr	r3, [pc, #188]	@ (800143c <MX_TIM3_Init+0xf4>)
 800137e:	f245 02b4 	movw	r2, #20660	@ 0x50b4
 8001382:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001384:	4b2d      	ldr	r3, [pc, #180]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001386:	2200      	movs	r2, #0
 8001388:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800138a:	4b2c      	ldr	r3, [pc, #176]	@ (800143c <MX_TIM3_Init+0xf4>)
 800138c:	2200      	movs	r2, #0
 800138e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001390:	482a      	ldr	r0, [pc, #168]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001392:	f003 fa2d 	bl	80047f0 <HAL_TIM_PWM_Init>
 8001396:	4603      	mov	r3, r0
 8001398:	2b00      	cmp	r3, #0
 800139a:	d001      	beq.n	80013a0 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 800139c:	f000 f9a8 	bl	80016f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013a0:	2300      	movs	r3, #0
 80013a2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80013a4:	2300      	movs	r3, #0
 80013a6:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80013a8:	f107 0320 	add.w	r3, r7, #32
 80013ac:	4619      	mov	r1, r3
 80013ae:	4823      	ldr	r0, [pc, #140]	@ (800143c <MX_TIM3_Init+0xf4>)
 80013b0:	f003 fe1e 	bl	8004ff0 <HAL_TIMEx_MasterConfigSynchronization>
 80013b4:	4603      	mov	r3, r0
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	d001      	beq.n	80013be <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80013ba:	f000 f999 	bl	80016f0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013be:	2360      	movs	r3, #96	@ 0x60
 80013c0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 400;
 80013c2:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 80013c6:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013c8:	2300      	movs	r3, #0
 80013ca:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013cc:	2300      	movs	r3, #0
 80013ce:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80013d0:	1d3b      	adds	r3, r7, #4
 80013d2:	2200      	movs	r2, #0
 80013d4:	4619      	mov	r1, r3
 80013d6:	4819      	ldr	r0, [pc, #100]	@ (800143c <MX_TIM3_Init+0xf4>)
 80013d8:	f003 fb0a 	bl	80049f0 <HAL_TIM_PWM_ConfigChannel>
 80013dc:	4603      	mov	r3, r0
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d001      	beq.n	80013e6 <MX_TIM3_Init+0x9e>
  {
    Error_Handler();
 80013e2:	f000 f985 	bl	80016f0 <Error_Handler>
  }
  sConfigOC.Pulse = 3200;
 80013e6:	f44f 6348 	mov.w	r3, #3200	@ 0xc80
 80013ea:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80013ec:	1d3b      	adds	r3, r7, #4
 80013ee:	2204      	movs	r2, #4
 80013f0:	4619      	mov	r1, r3
 80013f2:	4812      	ldr	r0, [pc, #72]	@ (800143c <MX_TIM3_Init+0xf4>)
 80013f4:	f003 fafc 	bl	80049f0 <HAL_TIM_PWM_ConfigChannel>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <MX_TIM3_Init+0xba>
  {
    Error_Handler();
 80013fe:	f000 f977 	bl	80016f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001402:	1d3b      	adds	r3, r7, #4
 8001404:	2208      	movs	r2, #8
 8001406:	4619      	mov	r1, r3
 8001408:	480c      	ldr	r0, [pc, #48]	@ (800143c <MX_TIM3_Init+0xf4>)
 800140a:	f003 faf1 	bl	80049f0 <HAL_TIM_PWM_ConfigChannel>
 800140e:	4603      	mov	r3, r0
 8001410:	2b00      	cmp	r3, #0
 8001412:	d001      	beq.n	8001418 <MX_TIM3_Init+0xd0>
  {
    Error_Handler();
 8001414:	f000 f96c 	bl	80016f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001418:	1d3b      	adds	r3, r7, #4
 800141a:	220c      	movs	r2, #12
 800141c:	4619      	mov	r1, r3
 800141e:	4807      	ldr	r0, [pc, #28]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001420:	f003 fae6 	bl	80049f0 <HAL_TIM_PWM_ConfigChannel>
 8001424:	4603      	mov	r3, r0
 8001426:	2b00      	cmp	r3, #0
 8001428:	d001      	beq.n	800142e <MX_TIM3_Init+0xe6>
  {
    Error_Handler();
 800142a:	f000 f961 	bl	80016f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800142e:	4803      	ldr	r0, [pc, #12]	@ (800143c <MX_TIM3_Init+0xf4>)
 8001430:	f000 fa84 	bl	800193c <HAL_TIM_MspPostInit>

}
 8001434:	bf00      	nop
 8001436:	3728      	adds	r7, #40	@ 0x28
 8001438:	46bd      	mov	sp, r7
 800143a:	bd80      	pop	{r7, pc}
 800143c:	200139f4 	.word	0x200139f4
 8001440:	40000400 	.word	0x40000400

08001444 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001444:	b580      	push	{r7, lr}
 8001446:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001448:	4b11      	ldr	r3, [pc, #68]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 800144a:	4a12      	ldr	r2, [pc, #72]	@ (8001494 <MX_USART1_UART_Init+0x50>)
 800144c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800144e:	4b10      	ldr	r3, [pc, #64]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 8001450:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001454:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001456:	4b0e      	ldr	r3, [pc, #56]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 8001458:	2200      	movs	r2, #0
 800145a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800145c:	4b0c      	ldr	r3, [pc, #48]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 800145e:	2200      	movs	r2, #0
 8001460:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001462:	4b0b      	ldr	r3, [pc, #44]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 8001464:	2200      	movs	r2, #0
 8001466:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001468:	4b09      	ldr	r3, [pc, #36]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 800146a:	220c      	movs	r2, #12
 800146c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800146e:	4b08      	ldr	r3, [pc, #32]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 8001470:	2200      	movs	r2, #0
 8001472:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001474:	4b06      	ldr	r3, [pc, #24]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 8001476:	2200      	movs	r2, #0
 8001478:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800147a:	4805      	ldr	r0, [pc, #20]	@ (8001490 <MX_USART1_UART_Init+0x4c>)
 800147c:	f003 fe26 	bl	80050cc <HAL_UART_Init>
 8001480:	4603      	mov	r3, r0
 8001482:	2b00      	cmp	r3, #0
 8001484:	d001      	beq.n	800148a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001486:	f000 f933 	bl	80016f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800148a:	bf00      	nop
 800148c:	bd80      	pop	{r7, pc}
 800148e:	bf00      	nop
 8001490:	20013a3c 	.word	0x20013a3c
 8001494:	40011000 	.word	0x40011000

08001498 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001498:	b580      	push	{r7, lr}
 800149a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800149c:	4b11      	ldr	r3, [pc, #68]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 800149e:	4a12      	ldr	r2, [pc, #72]	@ (80014e8 <MX_USART2_UART_Init+0x50>)
 80014a0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80014a2:	4b10      	ldr	r3, [pc, #64]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014a4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80014a8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80014aa:	4b0e      	ldr	r3, [pc, #56]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014ac:	2200      	movs	r2, #0
 80014ae:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80014b0:	4b0c      	ldr	r3, [pc, #48]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014b2:	2200      	movs	r2, #0
 80014b4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80014b6:	4b0b      	ldr	r3, [pc, #44]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014b8:	2200      	movs	r2, #0
 80014ba:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80014bc:	4b09      	ldr	r3, [pc, #36]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014be:	220c      	movs	r2, #12
 80014c0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014c2:	4b08      	ldr	r3, [pc, #32]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014c4:	2200      	movs	r2, #0
 80014c6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014c8:	4b06      	ldr	r3, [pc, #24]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014ca:	2200      	movs	r2, #0
 80014cc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014ce:	4805      	ldr	r0, [pc, #20]	@ (80014e4 <MX_USART2_UART_Init+0x4c>)
 80014d0:	f003 fdfc 	bl	80050cc <HAL_UART_Init>
 80014d4:	4603      	mov	r3, r0
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d001      	beq.n	80014de <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80014da:	f000 f909 	bl	80016f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80014de:	bf00      	nop
 80014e0:	bd80      	pop	{r7, pc}
 80014e2:	bf00      	nop
 80014e4:	20013a84 	.word	0x20013a84
 80014e8:	40004400 	.word	0x40004400

080014ec <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b082      	sub	sp, #8
 80014f0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80014f2:	2300      	movs	r3, #0
 80014f4:	607b      	str	r3, [r7, #4]
 80014f6:	4b0c      	ldr	r3, [pc, #48]	@ (8001528 <MX_DMA_Init+0x3c>)
 80014f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014fa:	4a0b      	ldr	r2, [pc, #44]	@ (8001528 <MX_DMA_Init+0x3c>)
 80014fc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001500:	6313      	str	r3, [r2, #48]	@ 0x30
 8001502:	4b09      	ldr	r3, [pc, #36]	@ (8001528 <MX_DMA_Init+0x3c>)
 8001504:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001506:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800150a:	607b      	str	r3, [r7, #4]
 800150c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 800150e:	2200      	movs	r2, #0
 8001510:	2100      	movs	r1, #0
 8001512:	2010      	movs	r0, #16
 8001514:	f000 fdeb 	bl	80020ee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8001518:	2010      	movs	r0, #16
 800151a:	f000 fe04 	bl	8002126 <HAL_NVIC_EnableIRQ>

}
 800151e:	bf00      	nop
 8001520:	3708      	adds	r7, #8
 8001522:	46bd      	mov	sp, r7
 8001524:	bd80      	pop	{r7, pc}
 8001526:	bf00      	nop
 8001528:	40023800 	.word	0x40023800

0800152c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800152c:	b580      	push	{r7, lr}
 800152e:	b08a      	sub	sp, #40	@ 0x28
 8001530:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001532:	f107 0314 	add.w	r3, r7, #20
 8001536:	2200      	movs	r2, #0
 8001538:	601a      	str	r2, [r3, #0]
 800153a:	605a      	str	r2, [r3, #4]
 800153c:	609a      	str	r2, [r3, #8]
 800153e:	60da      	str	r2, [r3, #12]
 8001540:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001542:	2300      	movs	r3, #0
 8001544:	613b      	str	r3, [r7, #16]
 8001546:	4b42      	ldr	r3, [pc, #264]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001548:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800154a:	4a41      	ldr	r2, [pc, #260]	@ (8001650 <MX_GPIO_Init+0x124>)
 800154c:	f043 0304 	orr.w	r3, r3, #4
 8001550:	6313      	str	r3, [r2, #48]	@ 0x30
 8001552:	4b3f      	ldr	r3, [pc, #252]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001556:	f003 0304 	and.w	r3, r3, #4
 800155a:	613b      	str	r3, [r7, #16]
 800155c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800155e:	2300      	movs	r3, #0
 8001560:	60fb      	str	r3, [r7, #12]
 8001562:	4b3b      	ldr	r3, [pc, #236]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001564:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001566:	4a3a      	ldr	r2, [pc, #232]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001568:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800156c:	6313      	str	r3, [r2, #48]	@ 0x30
 800156e:	4b38      	ldr	r3, [pc, #224]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001570:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001572:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001576:	60fb      	str	r3, [r7, #12]
 8001578:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800157a:	2300      	movs	r3, #0
 800157c:	60bb      	str	r3, [r7, #8]
 800157e:	4b34      	ldr	r3, [pc, #208]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001580:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001582:	4a33      	ldr	r2, [pc, #204]	@ (8001650 <MX_GPIO_Init+0x124>)
 8001584:	f043 0301 	orr.w	r3, r3, #1
 8001588:	6313      	str	r3, [r2, #48]	@ 0x30
 800158a:	4b31      	ldr	r3, [pc, #196]	@ (8001650 <MX_GPIO_Init+0x124>)
 800158c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800158e:	f003 0301 	and.w	r3, r3, #1
 8001592:	60bb      	str	r3, [r7, #8]
 8001594:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001596:	2300      	movs	r3, #0
 8001598:	607b      	str	r3, [r7, #4]
 800159a:	4b2d      	ldr	r3, [pc, #180]	@ (8001650 <MX_GPIO_Init+0x124>)
 800159c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800159e:	4a2c      	ldr	r2, [pc, #176]	@ (8001650 <MX_GPIO_Init+0x124>)
 80015a0:	f043 0302 	orr.w	r3, r3, #2
 80015a4:	6313      	str	r3, [r2, #48]	@ 0x30
 80015a6:	4b2a      	ldr	r3, [pc, #168]	@ (8001650 <MX_GPIO_Init+0x124>)
 80015a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015aa:	f003 0302 	and.w	r3, r3, #2
 80015ae:	607b      	str	r3, [r7, #4]
 80015b0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 80015b2:	2200      	movs	r2, #0
 80015b4:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 80015b8:	4826      	ldr	r0, [pc, #152]	@ (8001654 <MX_GPIO_Init+0x128>)
 80015ba:	f001 fc39 	bl	8002e30 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 80015be:	2200      	movs	r2, #0
 80015c0:	f641 0103 	movw	r1, #6147	@ 0x1803
 80015c4:	4824      	ldr	r0, [pc, #144]	@ (8001658 <MX_GPIO_Init+0x12c>)
 80015c6:	f001 fc33 	bl	8002e30 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, US_ECHO_Pin|US_TRIG_Pin|GPIO_PIN_14|GPIO_PIN_9, GPIO_PIN_RESET);
 80015ca:	2200      	movs	r2, #0
 80015cc:	f44f 41e4 	mov.w	r1, #29184	@ 0x7200
 80015d0:	4822      	ldr	r0, [pc, #136]	@ (800165c <MX_GPIO_Init+0x130>)
 80015d2:	f001 fc2d 	bl	8002e30 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC13 PC14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 80015d6:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 80015da:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	2301      	movs	r3, #1
 80015de:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e0:	2300      	movs	r3, #0
 80015e2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015e4:	2300      	movs	r3, #0
 80015e6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015e8:	f107 0314 	add.w	r3, r7, #20
 80015ec:	4619      	mov	r1, r3
 80015ee:	4819      	ldr	r0, [pc, #100]	@ (8001654 <MX_GPIO_Init+0x128>)
 80015f0:	f001 f9b6 	bl	8002960 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12;
 80015f4:	f641 0303 	movw	r3, #6147	@ 0x1803
 80015f8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fa:	2301      	movs	r3, #1
 80015fc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015fe:	2300      	movs	r3, #0
 8001600:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001602:	2300      	movs	r3, #0
 8001604:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	f107 0314 	add.w	r3, r7, #20
 800160a:	4619      	mov	r1, r3
 800160c:	4812      	ldr	r0, [pc, #72]	@ (8001658 <MX_GPIO_Init+0x12c>)
 800160e:	f001 f9a7 	bl	8002960 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001612:	2310      	movs	r3, #16
 8001614:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001616:	2300      	movs	r3, #0
 8001618:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800161a:	2300      	movs	r3, #0
 800161c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800161e:	f107 0314 	add.w	r3, r7, #20
 8001622:	4619      	mov	r1, r3
 8001624:	480c      	ldr	r0, [pc, #48]	@ (8001658 <MX_GPIO_Init+0x12c>)
 8001626:	f001 f99b 	bl	8002960 <HAL_GPIO_Init>

  /*Configure GPIO pins : US_ECHO_Pin US_TRIG_Pin PB14 PB9 */
  GPIO_InitStruct.Pin = US_ECHO_Pin|US_TRIG_Pin|GPIO_PIN_14|GPIO_PIN_9;
 800162a:	f44f 43e4 	mov.w	r3, #29184	@ 0x7200
 800162e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001630:	2301      	movs	r3, #1
 8001632:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001634:	2300      	movs	r3, #0
 8001636:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001638:	2300      	movs	r3, #0
 800163a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800163c:	f107 0314 	add.w	r3, r7, #20
 8001640:	4619      	mov	r1, r3
 8001642:	4806      	ldr	r0, [pc, #24]	@ (800165c <MX_GPIO_Init+0x130>)
 8001644:	f001 f98c 	bl	8002960 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8001648:	bf00      	nop
 800164a:	3728      	adds	r7, #40	@ 0x28
 800164c:	46bd      	mov	sp, r7
 800164e:	bd80      	pop	{r7, pc}
 8001650:	40023800 	.word	0x40023800
 8001654:	40020800 	.word	0x40020800
 8001658:	40020000 	.word	0x40020000
 800165c:	40020400 	.word	0x40020400

08001660 <HAL_UART_RxCpltCallback>:
  *  It adds an end message statment, sends the buffer to the processInput function and sets the imu_request flag
  *
  * @retval None
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)//should trigger when DMA reads complete message
{    if (huart->Instance == USART2) {
 8001660:	b580      	push	{r7, lr}
 8001662:	b084      	sub	sp, #16
 8001664:	af02      	add	r7, sp, #8
 8001666:	6078      	str	r0, [r7, #4]
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	4a0e      	ldr	r2, [pc, #56]	@ (80016a8 <HAL_UART_RxCpltCallback+0x48>)
 800166e:	4293      	cmp	r3, r2
 8001670:	d10d      	bne.n	800168e <HAL_UART_RxCpltCallback+0x2e>
        // Null-terminate just in case you're using sscanf or string functions
        BT_RxBuf[BT_MSG_LEN - 1] = '\0';
 8001672:	4b0e      	ldr	r3, [pc, #56]	@ (80016ac <HAL_UART_RxCpltCallback+0x4c>)
 8001674:	2200      	movs	r2, #0
 8001676:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24

        // Process entire message

        processInput((char *)BT_RxBuf, &roll_set, &pitch_set, &yaw_set, &effort_set, &dumpFlag);
 800167a:	4b0d      	ldr	r3, [pc, #52]	@ (80016b0 <HAL_UART_RxCpltCallback+0x50>)
 800167c:	9301      	str	r3, [sp, #4]
 800167e:	4b0d      	ldr	r3, [pc, #52]	@ (80016b4 <HAL_UART_RxCpltCallback+0x54>)
 8001680:	9300      	str	r3, [sp, #0]
 8001682:	4b0d      	ldr	r3, [pc, #52]	@ (80016b8 <HAL_UART_RxCpltCallback+0x58>)
 8001684:	4a0d      	ldr	r2, [pc, #52]	@ (80016bc <HAL_UART_RxCpltCallback+0x5c>)
 8001686:	490e      	ldr	r1, [pc, #56]	@ (80016c0 <HAL_UART_RxCpltCallback+0x60>)
 8001688:	4808      	ldr	r0, [pc, #32]	@ (80016ac <HAL_UART_RxCpltCallback+0x4c>)
 800168a:	f7ff fbcd 	bl	8000e28 <processInput>
        }
        // Restart DMA to receive next message
        //HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN); //set up this function to run on next BT input
        imu_request = true; //set up IMU to run when interupt exits
 800168e:	4b0d      	ldr	r3, [pc, #52]	@ (80016c4 <HAL_UART_RxCpltCallback+0x64>)
 8001690:	2201      	movs	r2, #1
 8001692:	601a      	str	r2, [r3, #0]
        HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1); //set up this function to run on next BT input
 8001694:	2224      	movs	r2, #36	@ 0x24
 8001696:	4905      	ldr	r1, [pc, #20]	@ (80016ac <HAL_UART_RxCpltCallback+0x4c>)
 8001698:	480b      	ldr	r0, [pc, #44]	@ (80016c8 <HAL_UART_RxCpltCallback+0x68>)
 800169a:	f003 fdf2 	bl	8005282 <HAL_UART_Receive_DMA>
}
 800169e:	bf00      	nop
 80016a0:	3708      	adds	r7, #8
 80016a2:	46bd      	mov	sp, r7
 80016a4:	bd80      	pop	{r7, pc}
 80016a6:	bf00      	nop
 80016a8:	40004400 	.word	0x40004400
 80016ac:	20013bac 	.word	0x20013bac
 80016b0:	20013bd4 	.word	0x20013bd4
 80016b4:	20013b40 	.word	0x20013b40
 80016b8:	20013b3c 	.word	0x20013b3c
 80016bc:	20013b38 	.word	0x20013b38
 80016c0:	20013b34 	.word	0x20013b34
 80016c4:	20013b2c 	.word	0x20013b2c
 80016c8:	20013a84 	.word	0x20013a84

080016cc <__io_putchar>:
/**
  * @brief  This function is used to send printf() statments to the ST-Link UART
  * @retval None
  */
int __io_putchar(int ch) {
 80016cc:	b580      	push	{r7, lr}
 80016ce:	b082      	sub	sp, #8
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	6078      	str	r0, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80016d4:	1d39      	adds	r1, r7, #4
 80016d6:	f04f 33ff 	mov.w	r3, #4294967295
 80016da:	2201      	movs	r2, #1
 80016dc:	4803      	ldr	r0, [pc, #12]	@ (80016ec <__io_putchar+0x20>)
 80016de:	f003 fd45 	bl	800516c <HAL_UART_Transmit>
    return ch;
 80016e2:	687b      	ldr	r3, [r7, #4]
}
 80016e4:	4618      	mov	r0, r3
 80016e6:	3708      	adds	r7, #8
 80016e8:	46bd      	mov	sp, r7
 80016ea:	bd80      	pop	{r7, pc}
 80016ec:	20013a84 	.word	0x20013a84

080016f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80016f0:	b480      	push	{r7}
 80016f2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80016f4:	b672      	cpsid	i
}
 80016f6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80016f8:	bf00      	nop
 80016fa:	e7fd      	b.n	80016f8 <Error_Handler+0x8>

080016fc <HAL_MspInit>:
 80016fc:	b480      	push	{r7}
 80016fe:	b083      	sub	sp, #12
 8001700:	af00      	add	r7, sp, #0
 8001702:	2300      	movs	r3, #0
 8001704:	607b      	str	r3, [r7, #4]
 8001706:	4b10      	ldr	r3, [pc, #64]	@ (8001748 <HAL_MspInit+0x4c>)
 8001708:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800170a:	4a0f      	ldr	r2, [pc, #60]	@ (8001748 <HAL_MspInit+0x4c>)
 800170c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001710:	6453      	str	r3, [r2, #68]	@ 0x44
 8001712:	4b0d      	ldr	r3, [pc, #52]	@ (8001748 <HAL_MspInit+0x4c>)
 8001714:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001716:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800171a:	607b      	str	r3, [r7, #4]
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	2300      	movs	r3, #0
 8001720:	603b      	str	r3, [r7, #0]
 8001722:	4b09      	ldr	r3, [pc, #36]	@ (8001748 <HAL_MspInit+0x4c>)
 8001724:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001726:	4a08      	ldr	r2, [pc, #32]	@ (8001748 <HAL_MspInit+0x4c>)
 8001728:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800172c:	6413      	str	r3, [r2, #64]	@ 0x40
 800172e:	4b06      	ldr	r3, [pc, #24]	@ (8001748 <HAL_MspInit+0x4c>)
 8001730:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001732:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001736:	603b      	str	r3, [r7, #0]
 8001738:	683b      	ldr	r3, [r7, #0]
 800173a:	bf00      	nop
 800173c:	370c      	adds	r7, #12
 800173e:	46bd      	mov	sp, r7
 8001740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001744:	4770      	bx	lr
 8001746:	bf00      	nop
 8001748:	40023800 	.word	0x40023800

0800174c <HAL_I2C_MspInit>:
 800174c:	b580      	push	{r7, lr}
 800174e:	b08c      	sub	sp, #48	@ 0x30
 8001750:	af00      	add	r7, sp, #0
 8001752:	6078      	str	r0, [r7, #4]
 8001754:	f107 031c 	add.w	r3, r7, #28
 8001758:	2200      	movs	r2, #0
 800175a:	601a      	str	r2, [r3, #0]
 800175c:	605a      	str	r2, [r3, #4]
 800175e:	609a      	str	r2, [r3, #8]
 8001760:	60da      	str	r2, [r3, #12]
 8001762:	611a      	str	r2, [r3, #16]
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	4a41      	ldr	r2, [pc, #260]	@ (8001870 <HAL_I2C_MspInit+0x124>)
 800176a:	4293      	cmp	r3, r2
 800176c:	d12c      	bne.n	80017c8 <HAL_I2C_MspInit+0x7c>
 800176e:	2300      	movs	r3, #0
 8001770:	61bb      	str	r3, [r7, #24]
 8001772:	4b40      	ldr	r3, [pc, #256]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001774:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001776:	4a3f      	ldr	r2, [pc, #252]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001778:	f043 0302 	orr.w	r3, r3, #2
 800177c:	6313      	str	r3, [r2, #48]	@ 0x30
 800177e:	4b3d      	ldr	r3, [pc, #244]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001780:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001782:	f003 0302 	and.w	r3, r3, #2
 8001786:	61bb      	str	r3, [r7, #24]
 8001788:	69bb      	ldr	r3, [r7, #24]
 800178a:	23c0      	movs	r3, #192	@ 0xc0
 800178c:	61fb      	str	r3, [r7, #28]
 800178e:	2312      	movs	r3, #18
 8001790:	623b      	str	r3, [r7, #32]
 8001792:	2300      	movs	r3, #0
 8001794:	627b      	str	r3, [r7, #36]	@ 0x24
 8001796:	2303      	movs	r3, #3
 8001798:	62bb      	str	r3, [r7, #40]	@ 0x28
 800179a:	2304      	movs	r3, #4
 800179c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800179e:	f107 031c 	add.w	r3, r7, #28
 80017a2:	4619      	mov	r1, r3
 80017a4:	4834      	ldr	r0, [pc, #208]	@ (8001878 <HAL_I2C_MspInit+0x12c>)
 80017a6:	f001 f8db 	bl	8002960 <HAL_GPIO_Init>
 80017aa:	2300      	movs	r3, #0
 80017ac:	617b      	str	r3, [r7, #20]
 80017ae:	4b31      	ldr	r3, [pc, #196]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017b2:	4a30      	ldr	r2, [pc, #192]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017b4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80017b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80017ba:	4b2e      	ldr	r3, [pc, #184]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017be:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80017c2:	617b      	str	r3, [r7, #20]
 80017c4:	697b      	ldr	r3, [r7, #20]
 80017c6:	e04f      	b.n	8001868 <HAL_I2C_MspInit+0x11c>
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	4a2b      	ldr	r2, [pc, #172]	@ (800187c <HAL_I2C_MspInit+0x130>)
 80017ce:	4293      	cmp	r3, r2
 80017d0:	d14a      	bne.n	8001868 <HAL_I2C_MspInit+0x11c>
 80017d2:	2300      	movs	r3, #0
 80017d4:	613b      	str	r3, [r7, #16]
 80017d6:	4b27      	ldr	r3, [pc, #156]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017da:	4a26      	ldr	r2, [pc, #152]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017dc:	f043 0301 	orr.w	r3, r3, #1
 80017e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80017e2:	4b24      	ldr	r3, [pc, #144]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017e6:	f003 0301 	and.w	r3, r3, #1
 80017ea:	613b      	str	r3, [r7, #16]
 80017ec:	693b      	ldr	r3, [r7, #16]
 80017ee:	2300      	movs	r3, #0
 80017f0:	60fb      	str	r3, [r7, #12]
 80017f2:	4b20      	ldr	r3, [pc, #128]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017f6:	4a1f      	ldr	r2, [pc, #124]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 80017f8:	f043 0302 	orr.w	r3, r3, #2
 80017fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80017fe:	4b1d      	ldr	r3, [pc, #116]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001800:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001802:	f003 0302 	and.w	r3, r3, #2
 8001806:	60fb      	str	r3, [r7, #12]
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800180e:	61fb      	str	r3, [r7, #28]
 8001810:	2312      	movs	r3, #18
 8001812:	623b      	str	r3, [r7, #32]
 8001814:	2300      	movs	r3, #0
 8001816:	627b      	str	r3, [r7, #36]	@ 0x24
 8001818:	2303      	movs	r3, #3
 800181a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800181c:	2304      	movs	r3, #4
 800181e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001820:	f107 031c 	add.w	r3, r7, #28
 8001824:	4619      	mov	r1, r3
 8001826:	4816      	ldr	r0, [pc, #88]	@ (8001880 <HAL_I2C_MspInit+0x134>)
 8001828:	f001 f89a 	bl	8002960 <HAL_GPIO_Init>
 800182c:	2310      	movs	r3, #16
 800182e:	61fb      	str	r3, [r7, #28]
 8001830:	2312      	movs	r3, #18
 8001832:	623b      	str	r3, [r7, #32]
 8001834:	2300      	movs	r3, #0
 8001836:	627b      	str	r3, [r7, #36]	@ 0x24
 8001838:	2303      	movs	r3, #3
 800183a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800183c:	2309      	movs	r3, #9
 800183e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001840:	f107 031c 	add.w	r3, r7, #28
 8001844:	4619      	mov	r1, r3
 8001846:	480c      	ldr	r0, [pc, #48]	@ (8001878 <HAL_I2C_MspInit+0x12c>)
 8001848:	f001 f88a 	bl	8002960 <HAL_GPIO_Init>
 800184c:	2300      	movs	r3, #0
 800184e:	60bb      	str	r3, [r7, #8]
 8001850:	4b08      	ldr	r3, [pc, #32]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001852:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001854:	4a07      	ldr	r2, [pc, #28]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 8001856:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800185a:	6413      	str	r3, [r2, #64]	@ 0x40
 800185c:	4b05      	ldr	r3, [pc, #20]	@ (8001874 <HAL_I2C_MspInit+0x128>)
 800185e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001860:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001864:	60bb      	str	r3, [r7, #8]
 8001866:	68bb      	ldr	r3, [r7, #8]
 8001868:	bf00      	nop
 800186a:	3730      	adds	r7, #48	@ 0x30
 800186c:	46bd      	mov	sp, r7
 800186e:	bd80      	pop	{r7, pc}
 8001870:	40005400 	.word	0x40005400
 8001874:	40023800 	.word	0x40023800
 8001878:	40020400 	.word	0x40020400
 800187c:	40005c00 	.word	0x40005c00
 8001880:	40020000 	.word	0x40020000

08001884 <HAL_I2C_MspDeInit>:
 8001884:	b580      	push	{r7, lr}
 8001886:	b082      	sub	sp, #8
 8001888:	af00      	add	r7, sp, #0
 800188a:	6078      	str	r0, [r7, #4]
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	4a14      	ldr	r2, [pc, #80]	@ (80018e4 <HAL_I2C_MspDeInit+0x60>)
 8001892:	4293      	cmp	r3, r2
 8001894:	d10e      	bne.n	80018b4 <HAL_I2C_MspDeInit+0x30>
 8001896:	4b14      	ldr	r3, [pc, #80]	@ (80018e8 <HAL_I2C_MspDeInit+0x64>)
 8001898:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800189a:	4a13      	ldr	r2, [pc, #76]	@ (80018e8 <HAL_I2C_MspDeInit+0x64>)
 800189c:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80018a0:	6413      	str	r3, [r2, #64]	@ 0x40
 80018a2:	2140      	movs	r1, #64	@ 0x40
 80018a4:	4811      	ldr	r0, [pc, #68]	@ (80018ec <HAL_I2C_MspDeInit+0x68>)
 80018a6:	f001 f9df 	bl	8002c68 <HAL_GPIO_DeInit>
 80018aa:	2180      	movs	r1, #128	@ 0x80
 80018ac:	480f      	ldr	r0, [pc, #60]	@ (80018ec <HAL_I2C_MspDeInit+0x68>)
 80018ae:	f001 f9db 	bl	8002c68 <HAL_GPIO_DeInit>
 80018b2:	e013      	b.n	80018dc <HAL_I2C_MspDeInit+0x58>
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	4a0d      	ldr	r2, [pc, #52]	@ (80018f0 <HAL_I2C_MspDeInit+0x6c>)
 80018ba:	4293      	cmp	r3, r2
 80018bc:	d10e      	bne.n	80018dc <HAL_I2C_MspDeInit+0x58>
 80018be:	4b0a      	ldr	r3, [pc, #40]	@ (80018e8 <HAL_I2C_MspDeInit+0x64>)
 80018c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018c2:	4a09      	ldr	r2, [pc, #36]	@ (80018e8 <HAL_I2C_MspDeInit+0x64>)
 80018c4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80018c8:	6413      	str	r3, [r2, #64]	@ 0x40
 80018ca:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80018ce:	4809      	ldr	r0, [pc, #36]	@ (80018f4 <HAL_I2C_MspDeInit+0x70>)
 80018d0:	f001 f9ca 	bl	8002c68 <HAL_GPIO_DeInit>
 80018d4:	2110      	movs	r1, #16
 80018d6:	4805      	ldr	r0, [pc, #20]	@ (80018ec <HAL_I2C_MspDeInit+0x68>)
 80018d8:	f001 f9c6 	bl	8002c68 <HAL_GPIO_DeInit>
 80018dc:	bf00      	nop
 80018de:	3708      	adds	r7, #8
 80018e0:	46bd      	mov	sp, r7
 80018e2:	bd80      	pop	{r7, pc}
 80018e4:	40005400 	.word	0x40005400
 80018e8:	40023800 	.word	0x40023800
 80018ec:	40020400 	.word	0x40020400
 80018f0:	40005c00 	.word	0x40005c00
 80018f4:	40020000 	.word	0x40020000

080018f8 <HAL_TIM_PWM_MspInit>:
 80018f8:	b480      	push	{r7}
 80018fa:	b085      	sub	sp, #20
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	4a0b      	ldr	r2, [pc, #44]	@ (8001934 <HAL_TIM_PWM_MspInit+0x3c>)
 8001906:	4293      	cmp	r3, r2
 8001908:	d10d      	bne.n	8001926 <HAL_TIM_PWM_MspInit+0x2e>
 800190a:	2300      	movs	r3, #0
 800190c:	60fb      	str	r3, [r7, #12]
 800190e:	4b0a      	ldr	r3, [pc, #40]	@ (8001938 <HAL_TIM_PWM_MspInit+0x40>)
 8001910:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001912:	4a09      	ldr	r2, [pc, #36]	@ (8001938 <HAL_TIM_PWM_MspInit+0x40>)
 8001914:	f043 0302 	orr.w	r3, r3, #2
 8001918:	6413      	str	r3, [r2, #64]	@ 0x40
 800191a:	4b07      	ldr	r3, [pc, #28]	@ (8001938 <HAL_TIM_PWM_MspInit+0x40>)
 800191c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800191e:	f003 0302 	and.w	r3, r3, #2
 8001922:	60fb      	str	r3, [r7, #12]
 8001924:	68fb      	ldr	r3, [r7, #12]
 8001926:	bf00      	nop
 8001928:	3714      	adds	r7, #20
 800192a:	46bd      	mov	sp, r7
 800192c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001930:	4770      	bx	lr
 8001932:	bf00      	nop
 8001934:	40000400 	.word	0x40000400
 8001938:	40023800 	.word	0x40023800

0800193c <HAL_TIM_MspPostInit>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b08a      	sub	sp, #40	@ 0x28
 8001940:	af00      	add	r7, sp, #0
 8001942:	6078      	str	r0, [r7, #4]
 8001944:	f107 0314 	add.w	r3, r7, #20
 8001948:	2200      	movs	r2, #0
 800194a:	601a      	str	r2, [r3, #0]
 800194c:	605a      	str	r2, [r3, #4]
 800194e:	609a      	str	r2, [r3, #8]
 8001950:	60da      	str	r2, [r3, #12]
 8001952:	611a      	str	r2, [r3, #16]
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	4a21      	ldr	r2, [pc, #132]	@ (80019e0 <HAL_TIM_MspPostInit+0xa4>)
 800195a:	4293      	cmp	r3, r2
 800195c:	d13b      	bne.n	80019d6 <HAL_TIM_MspPostInit+0x9a>
 800195e:	2300      	movs	r3, #0
 8001960:	613b      	str	r3, [r7, #16]
 8001962:	4b20      	ldr	r3, [pc, #128]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 8001964:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001966:	4a1f      	ldr	r2, [pc, #124]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 8001968:	f043 0301 	orr.w	r3, r3, #1
 800196c:	6313      	str	r3, [r2, #48]	@ 0x30
 800196e:	4b1d      	ldr	r3, [pc, #116]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 8001970:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001972:	f003 0301 	and.w	r3, r3, #1
 8001976:	613b      	str	r3, [r7, #16]
 8001978:	693b      	ldr	r3, [r7, #16]
 800197a:	2300      	movs	r3, #0
 800197c:	60fb      	str	r3, [r7, #12]
 800197e:	4b19      	ldr	r3, [pc, #100]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 8001980:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001982:	4a18      	ldr	r2, [pc, #96]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 8001984:	f043 0302 	orr.w	r3, r3, #2
 8001988:	6313      	str	r3, [r2, #48]	@ 0x30
 800198a:	4b16      	ldr	r3, [pc, #88]	@ (80019e4 <HAL_TIM_MspPostInit+0xa8>)
 800198c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800198e:	f003 0302 	and.w	r3, r3, #2
 8001992:	60fb      	str	r3, [r7, #12]
 8001994:	68fb      	ldr	r3, [r7, #12]
 8001996:	23c0      	movs	r3, #192	@ 0xc0
 8001998:	617b      	str	r3, [r7, #20]
 800199a:	2302      	movs	r3, #2
 800199c:	61bb      	str	r3, [r7, #24]
 800199e:	2300      	movs	r3, #0
 80019a0:	61fb      	str	r3, [r7, #28]
 80019a2:	2300      	movs	r3, #0
 80019a4:	623b      	str	r3, [r7, #32]
 80019a6:	2302      	movs	r3, #2
 80019a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80019aa:	f107 0314 	add.w	r3, r7, #20
 80019ae:	4619      	mov	r1, r3
 80019b0:	480d      	ldr	r0, [pc, #52]	@ (80019e8 <HAL_TIM_MspPostInit+0xac>)
 80019b2:	f000 ffd5 	bl	8002960 <HAL_GPIO_Init>
 80019b6:	2303      	movs	r3, #3
 80019b8:	617b      	str	r3, [r7, #20]
 80019ba:	2302      	movs	r3, #2
 80019bc:	61bb      	str	r3, [r7, #24]
 80019be:	2300      	movs	r3, #0
 80019c0:	61fb      	str	r3, [r7, #28]
 80019c2:	2300      	movs	r3, #0
 80019c4:	623b      	str	r3, [r7, #32]
 80019c6:	2302      	movs	r3, #2
 80019c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80019ca:	f107 0314 	add.w	r3, r7, #20
 80019ce:	4619      	mov	r1, r3
 80019d0:	4806      	ldr	r0, [pc, #24]	@ (80019ec <HAL_TIM_MspPostInit+0xb0>)
 80019d2:	f000 ffc5 	bl	8002960 <HAL_GPIO_Init>
 80019d6:	bf00      	nop
 80019d8:	3728      	adds	r7, #40	@ 0x28
 80019da:	46bd      	mov	sp, r7
 80019dc:	bd80      	pop	{r7, pc}
 80019de:	bf00      	nop
 80019e0:	40000400 	.word	0x40000400
 80019e4:	40023800 	.word	0x40023800
 80019e8:	40020000 	.word	0x40020000
 80019ec:	40020400 	.word	0x40020400

080019f0 <HAL_UART_MspInit>:
 80019f0:	b580      	push	{r7, lr}
 80019f2:	b08c      	sub	sp, #48	@ 0x30
 80019f4:	af00      	add	r7, sp, #0
 80019f6:	6078      	str	r0, [r7, #4]
 80019f8:	f107 031c 	add.w	r3, r7, #28
 80019fc:	2200      	movs	r2, #0
 80019fe:	601a      	str	r2, [r3, #0]
 8001a00:	605a      	str	r2, [r3, #4]
 8001a02:	609a      	str	r2, [r3, #8]
 8001a04:	60da      	str	r2, [r3, #12]
 8001a06:	611a      	str	r2, [r3, #16]
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	4a51      	ldr	r2, [pc, #324]	@ (8001b54 <HAL_UART_MspInit+0x164>)
 8001a0e:	4293      	cmp	r3, r2
 8001a10:	d135      	bne.n	8001a7e <HAL_UART_MspInit+0x8e>
 8001a12:	2300      	movs	r3, #0
 8001a14:	61bb      	str	r3, [r7, #24]
 8001a16:	4b50      	ldr	r3, [pc, #320]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a1a:	4a4f      	ldr	r2, [pc, #316]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a1c:	f043 0310 	orr.w	r3, r3, #16
 8001a20:	6453      	str	r3, [r2, #68]	@ 0x44
 8001a22:	4b4d      	ldr	r3, [pc, #308]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a26:	f003 0310 	and.w	r3, r3, #16
 8001a2a:	61bb      	str	r3, [r7, #24]
 8001a2c:	69bb      	ldr	r3, [r7, #24]
 8001a2e:	2300      	movs	r3, #0
 8001a30:	617b      	str	r3, [r7, #20]
 8001a32:	4b49      	ldr	r3, [pc, #292]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a36:	4a48      	ldr	r2, [pc, #288]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a38:	f043 0301 	orr.w	r3, r3, #1
 8001a3c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a3e:	4b46      	ldr	r3, [pc, #280]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a42:	f003 0301 	and.w	r3, r3, #1
 8001a46:	617b      	str	r3, [r7, #20]
 8001a48:	697b      	ldr	r3, [r7, #20]
 8001a4a:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8001a4e:	61fb      	str	r3, [r7, #28]
 8001a50:	2302      	movs	r3, #2
 8001a52:	623b      	str	r3, [r7, #32]
 8001a54:	2300      	movs	r3, #0
 8001a56:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a58:	2303      	movs	r3, #3
 8001a5a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001a5c:	2307      	movs	r3, #7
 8001a5e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001a60:	f107 031c 	add.w	r3, r7, #28
 8001a64:	4619      	mov	r1, r3
 8001a66:	483d      	ldr	r0, [pc, #244]	@ (8001b5c <HAL_UART_MspInit+0x16c>)
 8001a68:	f000 ff7a 	bl	8002960 <HAL_GPIO_Init>
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	2100      	movs	r1, #0
 8001a70:	2025      	movs	r0, #37	@ 0x25
 8001a72:	f000 fb3c 	bl	80020ee <HAL_NVIC_SetPriority>
 8001a76:	2025      	movs	r0, #37	@ 0x25
 8001a78:	f000 fb55 	bl	8002126 <HAL_NVIC_EnableIRQ>
 8001a7c:	e066      	b.n	8001b4c <HAL_UART_MspInit+0x15c>
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	4a37      	ldr	r2, [pc, #220]	@ (8001b60 <HAL_UART_MspInit+0x170>)
 8001a84:	4293      	cmp	r3, r2
 8001a86:	d161      	bne.n	8001b4c <HAL_UART_MspInit+0x15c>
 8001a88:	2300      	movs	r3, #0
 8001a8a:	613b      	str	r3, [r7, #16]
 8001a8c:	4b32      	ldr	r3, [pc, #200]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a90:	4a31      	ldr	r2, [pc, #196]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a92:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001a96:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a98:	4b2f      	ldr	r3, [pc, #188]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001a9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a9c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001aa0:	613b      	str	r3, [r7, #16]
 8001aa2:	693b      	ldr	r3, [r7, #16]
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	60fb      	str	r3, [r7, #12]
 8001aa8:	4b2b      	ldr	r3, [pc, #172]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001aaa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001aac:	4a2a      	ldr	r2, [pc, #168]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001aae:	f043 0301 	orr.w	r3, r3, #1
 8001ab2:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ab4:	4b28      	ldr	r3, [pc, #160]	@ (8001b58 <HAL_UART_MspInit+0x168>)
 8001ab6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ab8:	f003 0301 	and.w	r3, r3, #1
 8001abc:	60fb      	str	r3, [r7, #12]
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	230c      	movs	r3, #12
 8001ac2:	61fb      	str	r3, [r7, #28]
 8001ac4:	2302      	movs	r3, #2
 8001ac6:	623b      	str	r3, [r7, #32]
 8001ac8:	2300      	movs	r3, #0
 8001aca:	627b      	str	r3, [r7, #36]	@ 0x24
 8001acc:	2303      	movs	r3, #3
 8001ace:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001ad0:	2307      	movs	r3, #7
 8001ad2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001ad4:	f107 031c 	add.w	r3, r7, #28
 8001ad8:	4619      	mov	r1, r3
 8001ada:	4820      	ldr	r0, [pc, #128]	@ (8001b5c <HAL_UART_MspInit+0x16c>)
 8001adc:	f000 ff40 	bl	8002960 <HAL_GPIO_Init>
 8001ae0:	4b20      	ldr	r3, [pc, #128]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001ae2:	4a21      	ldr	r2, [pc, #132]	@ (8001b68 <HAL_UART_MspInit+0x178>)
 8001ae4:	601a      	str	r2, [r3, #0]
 8001ae6:	4b1f      	ldr	r3, [pc, #124]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001ae8:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001aec:	605a      	str	r2, [r3, #4]
 8001aee:	4b1d      	ldr	r3, [pc, #116]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	609a      	str	r2, [r3, #8]
 8001af4:	4b1b      	ldr	r3, [pc, #108]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001af6:	2200      	movs	r2, #0
 8001af8:	60da      	str	r2, [r3, #12]
 8001afa:	4b1a      	ldr	r3, [pc, #104]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001afc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001b00:	611a      	str	r2, [r3, #16]
 8001b02:	4b18      	ldr	r3, [pc, #96]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b04:	2200      	movs	r2, #0
 8001b06:	615a      	str	r2, [r3, #20]
 8001b08:	4b16      	ldr	r3, [pc, #88]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b0a:	2200      	movs	r2, #0
 8001b0c:	619a      	str	r2, [r3, #24]
 8001b0e:	4b15      	ldr	r3, [pc, #84]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b10:	2200      	movs	r2, #0
 8001b12:	61da      	str	r2, [r3, #28]
 8001b14:	4b13      	ldr	r3, [pc, #76]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b16:	2200      	movs	r2, #0
 8001b18:	621a      	str	r2, [r3, #32]
 8001b1a:	4b12      	ldr	r3, [pc, #72]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b1c:	2200      	movs	r2, #0
 8001b1e:	625a      	str	r2, [r3, #36]	@ 0x24
 8001b20:	4810      	ldr	r0, [pc, #64]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b22:	f000 fb1b 	bl	800215c <HAL_DMA_Init>
 8001b26:	4603      	mov	r3, r0
 8001b28:	2b00      	cmp	r3, #0
 8001b2a:	d001      	beq.n	8001b30 <HAL_UART_MspInit+0x140>
 8001b2c:	f7ff fde0 	bl	80016f0 <Error_Handler>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	4a0c      	ldr	r2, [pc, #48]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b34:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001b36:	4a0b      	ldr	r2, [pc, #44]	@ (8001b64 <HAL_UART_MspInit+0x174>)
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	6393      	str	r3, [r2, #56]	@ 0x38
 8001b3c:	2200      	movs	r2, #0
 8001b3e:	2100      	movs	r1, #0
 8001b40:	2026      	movs	r0, #38	@ 0x26
 8001b42:	f000 fad4 	bl	80020ee <HAL_NVIC_SetPriority>
 8001b46:	2026      	movs	r0, #38	@ 0x26
 8001b48:	f000 faed 	bl	8002126 <HAL_NVIC_EnableIRQ>
 8001b4c:	bf00      	nop
 8001b4e:	3730      	adds	r7, #48	@ 0x30
 8001b50:	46bd      	mov	sp, r7
 8001b52:	bd80      	pop	{r7, pc}
 8001b54:	40011000 	.word	0x40011000
 8001b58:	40023800 	.word	0x40023800
 8001b5c:	40020000 	.word	0x40020000
 8001b60:	40004400 	.word	0x40004400
 8001b64:	20013acc 	.word	0x20013acc
 8001b68:	40026088 	.word	0x40026088

08001b6c <NMI_Handler>:
 8001b6c:	b480      	push	{r7}
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	bf00      	nop
 8001b72:	e7fd      	b.n	8001b70 <NMI_Handler+0x4>

08001b74 <HardFault_Handler>:
 8001b74:	b480      	push	{r7}
 8001b76:	af00      	add	r7, sp, #0
 8001b78:	bf00      	nop
 8001b7a:	e7fd      	b.n	8001b78 <HardFault_Handler+0x4>

08001b7c <MemManage_Handler>:
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	bf00      	nop
 8001b82:	e7fd      	b.n	8001b80 <MemManage_Handler+0x4>

08001b84 <BusFault_Handler>:
 8001b84:	b480      	push	{r7}
 8001b86:	af00      	add	r7, sp, #0
 8001b88:	bf00      	nop
 8001b8a:	e7fd      	b.n	8001b88 <BusFault_Handler+0x4>

08001b8c <UsageFault_Handler>:
 8001b8c:	b480      	push	{r7}
 8001b8e:	af00      	add	r7, sp, #0
 8001b90:	bf00      	nop
 8001b92:	e7fd      	b.n	8001b90 <UsageFault_Handler+0x4>

08001b94 <SVC_Handler>:
 8001b94:	b480      	push	{r7}
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	bf00      	nop
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba0:	4770      	bx	lr

08001ba2 <DebugMon_Handler>:
 8001ba2:	b480      	push	{r7}
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	bf00      	nop
 8001ba8:	46bd      	mov	sp, r7
 8001baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bae:	4770      	bx	lr

08001bb0 <PendSV_Handler>:
 8001bb0:	b480      	push	{r7}
 8001bb2:	af00      	add	r7, sp, #0
 8001bb4:	bf00      	nop
 8001bb6:	46bd      	mov	sp, r7
 8001bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bbc:	4770      	bx	lr

08001bbe <SysTick_Handler>:
 8001bbe:	b580      	push	{r7, lr}
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	f000 f975 	bl	8001eb0 <HAL_IncTick>
 8001bc6:	bf00      	nop
 8001bc8:	bd80      	pop	{r7, pc}
	...

08001bcc <DMA1_Stream5_IRQHandler>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	4802      	ldr	r0, [pc, #8]	@ (8001bdc <DMA1_Stream5_IRQHandler+0x10>)
 8001bd2:	f000 fc5b 	bl	800248c <HAL_DMA_IRQHandler>
 8001bd6:	bf00      	nop
 8001bd8:	bd80      	pop	{r7, pc}
 8001bda:	bf00      	nop
 8001bdc:	20013acc 	.word	0x20013acc

08001be0 <USART1_IRQHandler>:
 8001be0:	b580      	push	{r7, lr}
 8001be2:	af00      	add	r7, sp, #0
 8001be4:	4802      	ldr	r0, [pc, #8]	@ (8001bf0 <USART1_IRQHandler+0x10>)
 8001be6:	f003 fb71 	bl	80052cc <HAL_UART_IRQHandler>
 8001bea:	bf00      	nop
 8001bec:	bd80      	pop	{r7, pc}
 8001bee:	bf00      	nop
 8001bf0:	20013a3c 	.word	0x20013a3c

08001bf4 <USART2_IRQHandler>:
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	4802      	ldr	r0, [pc, #8]	@ (8001c04 <USART2_IRQHandler+0x10>)
 8001bfa:	f003 fb67 	bl	80052cc <HAL_UART_IRQHandler>
 8001bfe:	bf00      	nop
 8001c00:	bd80      	pop	{r7, pc}
 8001c02:	bf00      	nop
 8001c04:	20013a84 	.word	0x20013a84

08001c08 <_getpid>:
 8001c08:	b480      	push	{r7}
 8001c0a:	af00      	add	r7, sp, #0
 8001c0c:	2301      	movs	r3, #1
 8001c0e:	4618      	mov	r0, r3
 8001c10:	46bd      	mov	sp, r7
 8001c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c16:	4770      	bx	lr

08001c18 <_kill>:
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	6078      	str	r0, [r7, #4]
 8001c20:	6039      	str	r1, [r7, #0]
 8001c22:	f004 feb7 	bl	8006994 <__errno>
 8001c26:	4603      	mov	r3, r0
 8001c28:	2216      	movs	r2, #22
 8001c2a:	601a      	str	r2, [r3, #0]
 8001c2c:	f04f 33ff 	mov.w	r3, #4294967295
 8001c30:	4618      	mov	r0, r3
 8001c32:	3708      	adds	r7, #8
 8001c34:	46bd      	mov	sp, r7
 8001c36:	bd80      	pop	{r7, pc}

08001c38 <_exit>:
 8001c38:	b580      	push	{r7, lr}
 8001c3a:	b082      	sub	sp, #8
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
 8001c40:	f04f 31ff 	mov.w	r1, #4294967295
 8001c44:	6878      	ldr	r0, [r7, #4]
 8001c46:	f7ff ffe7 	bl	8001c18 <_kill>
 8001c4a:	bf00      	nop
 8001c4c:	e7fd      	b.n	8001c4a <_exit+0x12>

08001c4e <_read>:
 8001c4e:	b580      	push	{r7, lr}
 8001c50:	b086      	sub	sp, #24
 8001c52:	af00      	add	r7, sp, #0
 8001c54:	60f8      	str	r0, [r7, #12]
 8001c56:	60b9      	str	r1, [r7, #8]
 8001c58:	607a      	str	r2, [r7, #4]
 8001c5a:	2300      	movs	r3, #0
 8001c5c:	617b      	str	r3, [r7, #20]
 8001c5e:	e00a      	b.n	8001c76 <_read+0x28>
 8001c60:	f3af 8000 	nop.w
 8001c64:	4601      	mov	r1, r0
 8001c66:	68bb      	ldr	r3, [r7, #8]
 8001c68:	1c5a      	adds	r2, r3, #1
 8001c6a:	60ba      	str	r2, [r7, #8]
 8001c6c:	b2ca      	uxtb	r2, r1
 8001c6e:	701a      	strb	r2, [r3, #0]
 8001c70:	697b      	ldr	r3, [r7, #20]
 8001c72:	3301      	adds	r3, #1
 8001c74:	617b      	str	r3, [r7, #20]
 8001c76:	697a      	ldr	r2, [r7, #20]
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	429a      	cmp	r2, r3
 8001c7c:	dbf0      	blt.n	8001c60 <_read+0x12>
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	4618      	mov	r0, r3
 8001c82:	3718      	adds	r7, #24
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd80      	pop	{r7, pc}

08001c88 <_write>:
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b086      	sub	sp, #24
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	60f8      	str	r0, [r7, #12]
 8001c90:	60b9      	str	r1, [r7, #8]
 8001c92:	607a      	str	r2, [r7, #4]
 8001c94:	2300      	movs	r3, #0
 8001c96:	617b      	str	r3, [r7, #20]
 8001c98:	e009      	b.n	8001cae <_write+0x26>
 8001c9a:	68bb      	ldr	r3, [r7, #8]
 8001c9c:	1c5a      	adds	r2, r3, #1
 8001c9e:	60ba      	str	r2, [r7, #8]
 8001ca0:	781b      	ldrb	r3, [r3, #0]
 8001ca2:	4618      	mov	r0, r3
 8001ca4:	f7ff fd12 	bl	80016cc <__io_putchar>
 8001ca8:	697b      	ldr	r3, [r7, #20]
 8001caa:	3301      	adds	r3, #1
 8001cac:	617b      	str	r3, [r7, #20]
 8001cae:	697a      	ldr	r2, [r7, #20]
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	429a      	cmp	r2, r3
 8001cb4:	dbf1      	blt.n	8001c9a <_write+0x12>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	4618      	mov	r0, r3
 8001cba:	3718      	adds	r7, #24
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bd80      	pop	{r7, pc}

08001cc0 <_close>:
 8001cc0:	b480      	push	{r7}
 8001cc2:	b083      	sub	sp, #12
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	6078      	str	r0, [r7, #4]
 8001cc8:	f04f 33ff 	mov.w	r3, #4294967295
 8001ccc:	4618      	mov	r0, r3
 8001cce:	370c      	adds	r7, #12
 8001cd0:	46bd      	mov	sp, r7
 8001cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd6:	4770      	bx	lr

08001cd8 <_fstat>:
 8001cd8:	b480      	push	{r7}
 8001cda:	b083      	sub	sp, #12
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	6078      	str	r0, [r7, #4]
 8001ce0:	6039      	str	r1, [r7, #0]
 8001ce2:	683b      	ldr	r3, [r7, #0]
 8001ce4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001ce8:	605a      	str	r2, [r3, #4]
 8001cea:	2300      	movs	r3, #0
 8001cec:	4618      	mov	r0, r3
 8001cee:	370c      	adds	r7, #12
 8001cf0:	46bd      	mov	sp, r7
 8001cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cf6:	4770      	bx	lr

08001cf8 <_isatty>:
 8001cf8:	b480      	push	{r7}
 8001cfa:	b083      	sub	sp, #12
 8001cfc:	af00      	add	r7, sp, #0
 8001cfe:	6078      	str	r0, [r7, #4]
 8001d00:	2301      	movs	r3, #1
 8001d02:	4618      	mov	r0, r3
 8001d04:	370c      	adds	r7, #12
 8001d06:	46bd      	mov	sp, r7
 8001d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d0c:	4770      	bx	lr

08001d0e <_lseek>:
 8001d0e:	b480      	push	{r7}
 8001d10:	b085      	sub	sp, #20
 8001d12:	af00      	add	r7, sp, #0
 8001d14:	60f8      	str	r0, [r7, #12]
 8001d16:	60b9      	str	r1, [r7, #8]
 8001d18:	607a      	str	r2, [r7, #4]
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	4618      	mov	r0, r3
 8001d1e:	3714      	adds	r7, #20
 8001d20:	46bd      	mov	sp, r7
 8001d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d26:	4770      	bx	lr

08001d28 <_sbrk>:
 8001d28:	b580      	push	{r7, lr}
 8001d2a:	b086      	sub	sp, #24
 8001d2c:	af00      	add	r7, sp, #0
 8001d2e:	6078      	str	r0, [r7, #4]
 8001d30:	4a14      	ldr	r2, [pc, #80]	@ (8001d84 <_sbrk+0x5c>)
 8001d32:	4b15      	ldr	r3, [pc, #84]	@ (8001d88 <_sbrk+0x60>)
 8001d34:	1ad3      	subs	r3, r2, r3
 8001d36:	617b      	str	r3, [r7, #20]
 8001d38:	697b      	ldr	r3, [r7, #20]
 8001d3a:	613b      	str	r3, [r7, #16]
 8001d3c:	4b13      	ldr	r3, [pc, #76]	@ (8001d8c <_sbrk+0x64>)
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d102      	bne.n	8001d4a <_sbrk+0x22>
 8001d44:	4b11      	ldr	r3, [pc, #68]	@ (8001d8c <_sbrk+0x64>)
 8001d46:	4a12      	ldr	r2, [pc, #72]	@ (8001d90 <_sbrk+0x68>)
 8001d48:	601a      	str	r2, [r3, #0]
 8001d4a:	4b10      	ldr	r3, [pc, #64]	@ (8001d8c <_sbrk+0x64>)
 8001d4c:	681a      	ldr	r2, [r3, #0]
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	4413      	add	r3, r2
 8001d52:	693a      	ldr	r2, [r7, #16]
 8001d54:	429a      	cmp	r2, r3
 8001d56:	d207      	bcs.n	8001d68 <_sbrk+0x40>
 8001d58:	f004 fe1c 	bl	8006994 <__errno>
 8001d5c:	4603      	mov	r3, r0
 8001d5e:	220c      	movs	r2, #12
 8001d60:	601a      	str	r2, [r3, #0]
 8001d62:	f04f 33ff 	mov.w	r3, #4294967295
 8001d66:	e009      	b.n	8001d7c <_sbrk+0x54>
 8001d68:	4b08      	ldr	r3, [pc, #32]	@ (8001d8c <_sbrk+0x64>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	60fb      	str	r3, [r7, #12]
 8001d6e:	4b07      	ldr	r3, [pc, #28]	@ (8001d8c <_sbrk+0x64>)
 8001d70:	681a      	ldr	r2, [r3, #0]
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	4413      	add	r3, r2
 8001d76:	4a05      	ldr	r2, [pc, #20]	@ (8001d8c <_sbrk+0x64>)
 8001d78:	6013      	str	r3, [r2, #0]
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	4618      	mov	r0, r3
 8001d7e:	3718      	adds	r7, #24
 8001d80:	46bd      	mov	sp, r7
 8001d82:	bd80      	pop	{r7, pc}
 8001d84:	20020000 	.word	0x20020000
 8001d88:	00000400 	.word	0x00000400
 8001d8c:	20013bd8 	.word	0x20013bd8
 8001d90:	20013d30 	.word	0x20013d30

08001d94 <SystemInit>:
 8001d94:	b480      	push	{r7}
 8001d96:	af00      	add	r7, sp, #0
 8001d98:	4b06      	ldr	r3, [pc, #24]	@ (8001db4 <SystemInit+0x20>)
 8001d9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001d9e:	4a05      	ldr	r2, [pc, #20]	@ (8001db4 <SystemInit+0x20>)
 8001da0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001da4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001da8:	bf00      	nop
 8001daa:	46bd      	mov	sp, r7
 8001dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db0:	4770      	bx	lr
 8001db2:	bf00      	nop
 8001db4:	e000ed00 	.word	0xe000ed00

08001db8 <Reset_Handler>:
 8001db8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001df0 <LoopFillZerobss+0xe>
 8001dbc:	f7ff ffea 	bl	8001d94 <SystemInit>
 8001dc0:	480c      	ldr	r0, [pc, #48]	@ (8001df4 <LoopFillZerobss+0x12>)
 8001dc2:	490d      	ldr	r1, [pc, #52]	@ (8001df8 <LoopFillZerobss+0x16>)
 8001dc4:	4a0d      	ldr	r2, [pc, #52]	@ (8001dfc <LoopFillZerobss+0x1a>)
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	e002      	b.n	8001dd0 <LoopCopyDataInit>

08001dca <CopyDataInit>:
 8001dca:	58d4      	ldr	r4, [r2, r3]
 8001dcc:	50c4      	str	r4, [r0, r3]
 8001dce:	3304      	adds	r3, #4

08001dd0 <LoopCopyDataInit>:
 8001dd0:	18c4      	adds	r4, r0, r3
 8001dd2:	428c      	cmp	r4, r1
 8001dd4:	d3f9      	bcc.n	8001dca <CopyDataInit>
 8001dd6:	4a0a      	ldr	r2, [pc, #40]	@ (8001e00 <LoopFillZerobss+0x1e>)
 8001dd8:	4c0a      	ldr	r4, [pc, #40]	@ (8001e04 <LoopFillZerobss+0x22>)
 8001dda:	2300      	movs	r3, #0
 8001ddc:	e001      	b.n	8001de2 <LoopFillZerobss>

08001dde <FillZerobss>:
 8001dde:	6013      	str	r3, [r2, #0]
 8001de0:	3204      	adds	r2, #4

08001de2 <LoopFillZerobss>:
 8001de2:	42a2      	cmp	r2, r4
 8001de4:	d3fb      	bcc.n	8001dde <FillZerobss>
 8001de6:	f004 fddb 	bl	80069a0 <__libc_init_array>
 8001dea:	f7ff f955 	bl	8001098 <main>
 8001dee:	4770      	bx	lr
 8001df0:	20020000 	.word	0x20020000
 8001df4:	20000000 	.word	0x20000000
 8001df8:	2000008c 	.word	0x2000008c
 8001dfc:	08007c04 	.word	0x08007c04
 8001e00:	2000008c 	.word	0x2000008c
 8001e04:	20013d2c 	.word	0x20013d2c

08001e08 <ADC_IRQHandler>:
 8001e08:	e7fe      	b.n	8001e08 <ADC_IRQHandler>
	...

08001e0c <HAL_Init>:
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	af00      	add	r7, sp, #0
 8001e10:	4b0e      	ldr	r3, [pc, #56]	@ (8001e4c <HAL_Init+0x40>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	4a0d      	ldr	r2, [pc, #52]	@ (8001e4c <HAL_Init+0x40>)
 8001e16:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001e1a:	6013      	str	r3, [r2, #0]
 8001e1c:	4b0b      	ldr	r3, [pc, #44]	@ (8001e4c <HAL_Init+0x40>)
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	4a0a      	ldr	r2, [pc, #40]	@ (8001e4c <HAL_Init+0x40>)
 8001e22:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001e26:	6013      	str	r3, [r2, #0]
 8001e28:	4b08      	ldr	r3, [pc, #32]	@ (8001e4c <HAL_Init+0x40>)
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	4a07      	ldr	r2, [pc, #28]	@ (8001e4c <HAL_Init+0x40>)
 8001e2e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001e32:	6013      	str	r3, [r2, #0]
 8001e34:	2003      	movs	r0, #3
 8001e36:	f000 f94f 	bl	80020d8 <HAL_NVIC_SetPriorityGrouping>
 8001e3a:	200f      	movs	r0, #15
 8001e3c:	f000 f808 	bl	8001e50 <HAL_InitTick>
 8001e40:	f7ff fc5c 	bl	80016fc <HAL_MspInit>
 8001e44:	2300      	movs	r3, #0
 8001e46:	4618      	mov	r0, r3
 8001e48:	bd80      	pop	{r7, pc}
 8001e4a:	bf00      	nop
 8001e4c:	40023c00 	.word	0x40023c00

08001e50 <HAL_InitTick>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	b082      	sub	sp, #8
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
 8001e58:	4b12      	ldr	r3, [pc, #72]	@ (8001ea4 <HAL_InitTick+0x54>)
 8001e5a:	681a      	ldr	r2, [r3, #0]
 8001e5c:	4b12      	ldr	r3, [pc, #72]	@ (8001ea8 <HAL_InitTick+0x58>)
 8001e5e:	781b      	ldrb	r3, [r3, #0]
 8001e60:	4619      	mov	r1, r3
 8001e62:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001e66:	fbb3 f3f1 	udiv	r3, r3, r1
 8001e6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f000 f967 	bl	8002142 <HAL_SYSTICK_Config>
 8001e74:	4603      	mov	r3, r0
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d001      	beq.n	8001e7e <HAL_InitTick+0x2e>
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	e00e      	b.n	8001e9c <HAL_InitTick+0x4c>
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	2b0f      	cmp	r3, #15
 8001e82:	d80a      	bhi.n	8001e9a <HAL_InitTick+0x4a>
 8001e84:	2200      	movs	r2, #0
 8001e86:	6879      	ldr	r1, [r7, #4]
 8001e88:	f04f 30ff 	mov.w	r0, #4294967295
 8001e8c:	f000 f92f 	bl	80020ee <HAL_NVIC_SetPriority>
 8001e90:	4a06      	ldr	r2, [pc, #24]	@ (8001eac <HAL_InitTick+0x5c>)
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	6013      	str	r3, [r2, #0]
 8001e96:	2300      	movs	r3, #0
 8001e98:	e000      	b.n	8001e9c <HAL_InitTick+0x4c>
 8001e9a:	2301      	movs	r3, #1
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	3708      	adds	r7, #8
 8001ea0:	46bd      	mov	sp, r7
 8001ea2:	bd80      	pop	{r7, pc}
 8001ea4:	20000024 	.word	0x20000024
 8001ea8:	2000002c 	.word	0x2000002c
 8001eac:	20000028 	.word	0x20000028

08001eb0 <HAL_IncTick>:
 8001eb0:	b480      	push	{r7}
 8001eb2:	af00      	add	r7, sp, #0
 8001eb4:	4b06      	ldr	r3, [pc, #24]	@ (8001ed0 <HAL_IncTick+0x20>)
 8001eb6:	781b      	ldrb	r3, [r3, #0]
 8001eb8:	461a      	mov	r2, r3
 8001eba:	4b06      	ldr	r3, [pc, #24]	@ (8001ed4 <HAL_IncTick+0x24>)
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	4413      	add	r3, r2
 8001ec0:	4a04      	ldr	r2, [pc, #16]	@ (8001ed4 <HAL_IncTick+0x24>)
 8001ec2:	6013      	str	r3, [r2, #0]
 8001ec4:	bf00      	nop
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ecc:	4770      	bx	lr
 8001ece:	bf00      	nop
 8001ed0:	2000002c 	.word	0x2000002c
 8001ed4:	20013bdc 	.word	0x20013bdc

08001ed8 <HAL_GetTick>:
 8001ed8:	b480      	push	{r7}
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	4b03      	ldr	r3, [pc, #12]	@ (8001eec <HAL_GetTick+0x14>)
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	46bd      	mov	sp, r7
 8001ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee8:	4770      	bx	lr
 8001eea:	bf00      	nop
 8001eec:	20013bdc 	.word	0x20013bdc

08001ef0 <HAL_Delay>:
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b084      	sub	sp, #16
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	f7ff ffee 	bl	8001ed8 <HAL_GetTick>
 8001efc:	60b8      	str	r0, [r7, #8]
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	60fb      	str	r3, [r7, #12]
 8001f02:	68fb      	ldr	r3, [r7, #12]
 8001f04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f08:	d005      	beq.n	8001f16 <HAL_Delay+0x26>
 8001f0a:	4b0a      	ldr	r3, [pc, #40]	@ (8001f34 <HAL_Delay+0x44>)
 8001f0c:	781b      	ldrb	r3, [r3, #0]
 8001f0e:	461a      	mov	r2, r3
 8001f10:	68fb      	ldr	r3, [r7, #12]
 8001f12:	4413      	add	r3, r2
 8001f14:	60fb      	str	r3, [r7, #12]
 8001f16:	bf00      	nop
 8001f18:	f7ff ffde 	bl	8001ed8 <HAL_GetTick>
 8001f1c:	4602      	mov	r2, r0
 8001f1e:	68bb      	ldr	r3, [r7, #8]
 8001f20:	1ad3      	subs	r3, r2, r3
 8001f22:	68fa      	ldr	r2, [r7, #12]
 8001f24:	429a      	cmp	r2, r3
 8001f26:	d8f7      	bhi.n	8001f18 <HAL_Delay+0x28>
 8001f28:	bf00      	nop
 8001f2a:	bf00      	nop
 8001f2c:	3710      	adds	r7, #16
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bd80      	pop	{r7, pc}
 8001f32:	bf00      	nop
 8001f34:	2000002c 	.word	0x2000002c

08001f38 <__NVIC_SetPriorityGrouping>:
 8001f38:	b480      	push	{r7}
 8001f3a:	b085      	sub	sp, #20
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	6078      	str	r0, [r7, #4]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	f003 0307 	and.w	r3, r3, #7
 8001f46:	60fb      	str	r3, [r7, #12]
 8001f48:	4b0c      	ldr	r3, [pc, #48]	@ (8001f7c <__NVIC_SetPriorityGrouping+0x44>)
 8001f4a:	68db      	ldr	r3, [r3, #12]
 8001f4c:	60bb      	str	r3, [r7, #8]
 8001f4e:	68ba      	ldr	r2, [r7, #8]
 8001f50:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001f54:	4013      	ands	r3, r2
 8001f56:	60bb      	str	r3, [r7, #8]
 8001f58:	68fb      	ldr	r3, [r7, #12]
 8001f5a:	021a      	lsls	r2, r3, #8
 8001f5c:	68bb      	ldr	r3, [r7, #8]
 8001f5e:	4313      	orrs	r3, r2
 8001f60:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001f64:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001f68:	60bb      	str	r3, [r7, #8]
 8001f6a:	4a04      	ldr	r2, [pc, #16]	@ (8001f7c <__NVIC_SetPriorityGrouping+0x44>)
 8001f6c:	68bb      	ldr	r3, [r7, #8]
 8001f6e:	60d3      	str	r3, [r2, #12]
 8001f70:	bf00      	nop
 8001f72:	3714      	adds	r7, #20
 8001f74:	46bd      	mov	sp, r7
 8001f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f7a:	4770      	bx	lr
 8001f7c:	e000ed00 	.word	0xe000ed00

08001f80 <__NVIC_GetPriorityGrouping>:
 8001f80:	b480      	push	{r7}
 8001f82:	af00      	add	r7, sp, #0
 8001f84:	4b04      	ldr	r3, [pc, #16]	@ (8001f98 <__NVIC_GetPriorityGrouping+0x18>)
 8001f86:	68db      	ldr	r3, [r3, #12]
 8001f88:	0a1b      	lsrs	r3, r3, #8
 8001f8a:	f003 0307 	and.w	r3, r3, #7
 8001f8e:	4618      	mov	r0, r3
 8001f90:	46bd      	mov	sp, r7
 8001f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f96:	4770      	bx	lr
 8001f98:	e000ed00 	.word	0xe000ed00

08001f9c <__NVIC_EnableIRQ>:
 8001f9c:	b480      	push	{r7}
 8001f9e:	b083      	sub	sp, #12
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	4603      	mov	r3, r0
 8001fa4:	71fb      	strb	r3, [r7, #7]
 8001fa6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	db0b      	blt.n	8001fc6 <__NVIC_EnableIRQ+0x2a>
 8001fae:	79fb      	ldrb	r3, [r7, #7]
 8001fb0:	f003 021f 	and.w	r2, r3, #31
 8001fb4:	4907      	ldr	r1, [pc, #28]	@ (8001fd4 <__NVIC_EnableIRQ+0x38>)
 8001fb6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fba:	095b      	lsrs	r3, r3, #5
 8001fbc:	2001      	movs	r0, #1
 8001fbe:	fa00 f202 	lsl.w	r2, r0, r2
 8001fc2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001fc6:	bf00      	nop
 8001fc8:	370c      	adds	r7, #12
 8001fca:	46bd      	mov	sp, r7
 8001fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fd0:	4770      	bx	lr
 8001fd2:	bf00      	nop
 8001fd4:	e000e100 	.word	0xe000e100

08001fd8 <__NVIC_SetPriority>:
 8001fd8:	b480      	push	{r7}
 8001fda:	b083      	sub	sp, #12
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	4603      	mov	r3, r0
 8001fe0:	6039      	str	r1, [r7, #0]
 8001fe2:	71fb      	strb	r3, [r7, #7]
 8001fe4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	db0a      	blt.n	8002002 <__NVIC_SetPriority+0x2a>
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	b2da      	uxtb	r2, r3
 8001ff0:	490c      	ldr	r1, [pc, #48]	@ (8002024 <__NVIC_SetPriority+0x4c>)
 8001ff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ff6:	0112      	lsls	r2, r2, #4
 8001ff8:	b2d2      	uxtb	r2, r2
 8001ffa:	440b      	add	r3, r1
 8001ffc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002000:	e00a      	b.n	8002018 <__NVIC_SetPriority+0x40>
 8002002:	683b      	ldr	r3, [r7, #0]
 8002004:	b2da      	uxtb	r2, r3
 8002006:	4908      	ldr	r1, [pc, #32]	@ (8002028 <__NVIC_SetPriority+0x50>)
 8002008:	79fb      	ldrb	r3, [r7, #7]
 800200a:	f003 030f 	and.w	r3, r3, #15
 800200e:	3b04      	subs	r3, #4
 8002010:	0112      	lsls	r2, r2, #4
 8002012:	b2d2      	uxtb	r2, r2
 8002014:	440b      	add	r3, r1
 8002016:	761a      	strb	r2, [r3, #24]
 8002018:	bf00      	nop
 800201a:	370c      	adds	r7, #12
 800201c:	46bd      	mov	sp, r7
 800201e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002022:	4770      	bx	lr
 8002024:	e000e100 	.word	0xe000e100
 8002028:	e000ed00 	.word	0xe000ed00

0800202c <NVIC_EncodePriority>:
 800202c:	b480      	push	{r7}
 800202e:	b089      	sub	sp, #36	@ 0x24
 8002030:	af00      	add	r7, sp, #0
 8002032:	60f8      	str	r0, [r7, #12]
 8002034:	60b9      	str	r1, [r7, #8]
 8002036:	607a      	str	r2, [r7, #4]
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	f003 0307 	and.w	r3, r3, #7
 800203e:	61fb      	str	r3, [r7, #28]
 8002040:	69fb      	ldr	r3, [r7, #28]
 8002042:	f1c3 0307 	rsb	r3, r3, #7
 8002046:	2b04      	cmp	r3, #4
 8002048:	bf28      	it	cs
 800204a:	2304      	movcs	r3, #4
 800204c:	61bb      	str	r3, [r7, #24]
 800204e:	69fb      	ldr	r3, [r7, #28]
 8002050:	3304      	adds	r3, #4
 8002052:	2b06      	cmp	r3, #6
 8002054:	d902      	bls.n	800205c <NVIC_EncodePriority+0x30>
 8002056:	69fb      	ldr	r3, [r7, #28]
 8002058:	3b03      	subs	r3, #3
 800205a:	e000      	b.n	800205e <NVIC_EncodePriority+0x32>
 800205c:	2300      	movs	r3, #0
 800205e:	617b      	str	r3, [r7, #20]
 8002060:	f04f 32ff 	mov.w	r2, #4294967295
 8002064:	69bb      	ldr	r3, [r7, #24]
 8002066:	fa02 f303 	lsl.w	r3, r2, r3
 800206a:	43da      	mvns	r2, r3
 800206c:	68bb      	ldr	r3, [r7, #8]
 800206e:	401a      	ands	r2, r3
 8002070:	697b      	ldr	r3, [r7, #20]
 8002072:	409a      	lsls	r2, r3
 8002074:	f04f 31ff 	mov.w	r1, #4294967295
 8002078:	697b      	ldr	r3, [r7, #20]
 800207a:	fa01 f303 	lsl.w	r3, r1, r3
 800207e:	43d9      	mvns	r1, r3
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	400b      	ands	r3, r1
 8002084:	4313      	orrs	r3, r2
 8002086:	4618      	mov	r0, r3
 8002088:	3724      	adds	r7, #36	@ 0x24
 800208a:	46bd      	mov	sp, r7
 800208c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002090:	4770      	bx	lr
	...

08002094 <SysTick_Config>:
 8002094:	b580      	push	{r7, lr}
 8002096:	b082      	sub	sp, #8
 8002098:	af00      	add	r7, sp, #0
 800209a:	6078      	str	r0, [r7, #4]
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	3b01      	subs	r3, #1
 80020a0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80020a4:	d301      	bcc.n	80020aa <SysTick_Config+0x16>
 80020a6:	2301      	movs	r3, #1
 80020a8:	e00f      	b.n	80020ca <SysTick_Config+0x36>
 80020aa:	4a0a      	ldr	r2, [pc, #40]	@ (80020d4 <SysTick_Config+0x40>)
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	3b01      	subs	r3, #1
 80020b0:	6053      	str	r3, [r2, #4]
 80020b2:	210f      	movs	r1, #15
 80020b4:	f04f 30ff 	mov.w	r0, #4294967295
 80020b8:	f7ff ff8e 	bl	8001fd8 <__NVIC_SetPriority>
 80020bc:	4b05      	ldr	r3, [pc, #20]	@ (80020d4 <SysTick_Config+0x40>)
 80020be:	2200      	movs	r2, #0
 80020c0:	609a      	str	r2, [r3, #8]
 80020c2:	4b04      	ldr	r3, [pc, #16]	@ (80020d4 <SysTick_Config+0x40>)
 80020c4:	2207      	movs	r2, #7
 80020c6:	601a      	str	r2, [r3, #0]
 80020c8:	2300      	movs	r3, #0
 80020ca:	4618      	mov	r0, r3
 80020cc:	3708      	adds	r7, #8
 80020ce:	46bd      	mov	sp, r7
 80020d0:	bd80      	pop	{r7, pc}
 80020d2:	bf00      	nop
 80020d4:	e000e010 	.word	0xe000e010

080020d8 <HAL_NVIC_SetPriorityGrouping>:
 80020d8:	b580      	push	{r7, lr}
 80020da:	b082      	sub	sp, #8
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
 80020e0:	6878      	ldr	r0, [r7, #4]
 80020e2:	f7ff ff29 	bl	8001f38 <__NVIC_SetPriorityGrouping>
 80020e6:	bf00      	nop
 80020e8:	3708      	adds	r7, #8
 80020ea:	46bd      	mov	sp, r7
 80020ec:	bd80      	pop	{r7, pc}

080020ee <HAL_NVIC_SetPriority>:
 80020ee:	b580      	push	{r7, lr}
 80020f0:	b086      	sub	sp, #24
 80020f2:	af00      	add	r7, sp, #0
 80020f4:	4603      	mov	r3, r0
 80020f6:	60b9      	str	r1, [r7, #8]
 80020f8:	607a      	str	r2, [r7, #4]
 80020fa:	73fb      	strb	r3, [r7, #15]
 80020fc:	2300      	movs	r3, #0
 80020fe:	617b      	str	r3, [r7, #20]
 8002100:	f7ff ff3e 	bl	8001f80 <__NVIC_GetPriorityGrouping>
 8002104:	6178      	str	r0, [r7, #20]
 8002106:	687a      	ldr	r2, [r7, #4]
 8002108:	68b9      	ldr	r1, [r7, #8]
 800210a:	6978      	ldr	r0, [r7, #20]
 800210c:	f7ff ff8e 	bl	800202c <NVIC_EncodePriority>
 8002110:	4602      	mov	r2, r0
 8002112:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002116:	4611      	mov	r1, r2
 8002118:	4618      	mov	r0, r3
 800211a:	f7ff ff5d 	bl	8001fd8 <__NVIC_SetPriority>
 800211e:	bf00      	nop
 8002120:	3718      	adds	r7, #24
 8002122:	46bd      	mov	sp, r7
 8002124:	bd80      	pop	{r7, pc}

08002126 <HAL_NVIC_EnableIRQ>:
 8002126:	b580      	push	{r7, lr}
 8002128:	b082      	sub	sp, #8
 800212a:	af00      	add	r7, sp, #0
 800212c:	4603      	mov	r3, r0
 800212e:	71fb      	strb	r3, [r7, #7]
 8002130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002134:	4618      	mov	r0, r3
 8002136:	f7ff ff31 	bl	8001f9c <__NVIC_EnableIRQ>
 800213a:	bf00      	nop
 800213c:	3708      	adds	r7, #8
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}

08002142 <HAL_SYSTICK_Config>:
 8002142:	b580      	push	{r7, lr}
 8002144:	b082      	sub	sp, #8
 8002146:	af00      	add	r7, sp, #0
 8002148:	6078      	str	r0, [r7, #4]
 800214a:	6878      	ldr	r0, [r7, #4]
 800214c:	f7ff ffa2 	bl	8002094 <SysTick_Config>
 8002150:	4603      	mov	r3, r0
 8002152:	4618      	mov	r0, r3
 8002154:	3708      	adds	r7, #8
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}
	...

0800215c <HAL_DMA_Init>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b086      	sub	sp, #24
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
 8002164:	2300      	movs	r3, #0
 8002166:	617b      	str	r3, [r7, #20]
 8002168:	f7ff feb6 	bl	8001ed8 <HAL_GetTick>
 800216c:	6138      	str	r0, [r7, #16]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2b00      	cmp	r3, #0
 8002172:	d101      	bne.n	8002178 <HAL_DMA_Init+0x1c>
 8002174:	2301      	movs	r3, #1
 8002176:	e099      	b.n	80022ac <HAL_DMA_Init+0x150>
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	2202      	movs	r2, #2
 800217c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	2200      	movs	r2, #0
 8002184:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	681a      	ldr	r2, [r3, #0]
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f022 0201 	bic.w	r2, r2, #1
 8002196:	601a      	str	r2, [r3, #0]
 8002198:	e00f      	b.n	80021ba <HAL_DMA_Init+0x5e>
 800219a:	f7ff fe9d 	bl	8001ed8 <HAL_GetTick>
 800219e:	4602      	mov	r2, r0
 80021a0:	693b      	ldr	r3, [r7, #16]
 80021a2:	1ad3      	subs	r3, r2, r3
 80021a4:	2b05      	cmp	r3, #5
 80021a6:	d908      	bls.n	80021ba <HAL_DMA_Init+0x5e>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	2220      	movs	r2, #32
 80021ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	2203      	movs	r2, #3
 80021b2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80021b6:	2303      	movs	r3, #3
 80021b8:	e078      	b.n	80022ac <HAL_DMA_Init+0x150>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	f003 0301 	and.w	r3, r3, #1
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d1e8      	bne.n	800219a <HAL_DMA_Init+0x3e>
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	617b      	str	r3, [r7, #20]
 80021d0:	697a      	ldr	r2, [r7, #20]
 80021d2:	4b38      	ldr	r3, [pc, #224]	@ (80022b4 <HAL_DMA_Init+0x158>)
 80021d4:	4013      	ands	r3, r2
 80021d6:	617b      	str	r3, [r7, #20]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	685a      	ldr	r2, [r3, #4]
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	689b      	ldr	r3, [r3, #8]
 80021e0:	431a      	orrs	r2, r3
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	68db      	ldr	r3, [r3, #12]
 80021e6:	431a      	orrs	r2, r3
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	691b      	ldr	r3, [r3, #16]
 80021ec:	431a      	orrs	r2, r3
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	695b      	ldr	r3, [r3, #20]
 80021f2:	431a      	orrs	r2, r3
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	699b      	ldr	r3, [r3, #24]
 80021f8:	431a      	orrs	r2, r3
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	69db      	ldr	r3, [r3, #28]
 80021fe:	431a      	orrs	r2, r3
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	6a1b      	ldr	r3, [r3, #32]
 8002204:	4313      	orrs	r3, r2
 8002206:	697a      	ldr	r2, [r7, #20]
 8002208:	4313      	orrs	r3, r2
 800220a:	617b      	str	r3, [r7, #20]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002210:	2b04      	cmp	r3, #4
 8002212:	d107      	bne.n	8002224 <HAL_DMA_Init+0xc8>
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800221c:	4313      	orrs	r3, r2
 800221e:	697a      	ldr	r2, [r7, #20]
 8002220:	4313      	orrs	r3, r2
 8002222:	617b      	str	r3, [r7, #20]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	697a      	ldr	r2, [r7, #20]
 800222a:	601a      	str	r2, [r3, #0]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	695b      	ldr	r3, [r3, #20]
 8002232:	617b      	str	r3, [r7, #20]
 8002234:	697b      	ldr	r3, [r7, #20]
 8002236:	f023 0307 	bic.w	r3, r3, #7
 800223a:	617b      	str	r3, [r7, #20]
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002240:	697a      	ldr	r2, [r7, #20]
 8002242:	4313      	orrs	r3, r2
 8002244:	617b      	str	r3, [r7, #20]
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800224a:	2b04      	cmp	r3, #4
 800224c:	d117      	bne.n	800227e <HAL_DMA_Init+0x122>
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002252:	697a      	ldr	r2, [r7, #20]
 8002254:	4313      	orrs	r3, r2
 8002256:	617b      	str	r3, [r7, #20]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800225c:	2b00      	cmp	r3, #0
 800225e:	d00e      	beq.n	800227e <HAL_DMA_Init+0x122>
 8002260:	6878      	ldr	r0, [r7, #4]
 8002262:	f000 fb01 	bl	8002868 <DMA_CheckFifoParam>
 8002266:	4603      	mov	r3, r0
 8002268:	2b00      	cmp	r3, #0
 800226a:	d008      	beq.n	800227e <HAL_DMA_Init+0x122>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	2240      	movs	r2, #64	@ 0x40
 8002270:	655a      	str	r2, [r3, #84]	@ 0x54
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	2201      	movs	r2, #1
 8002276:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800227a:	2301      	movs	r3, #1
 800227c:	e016      	b.n	80022ac <HAL_DMA_Init+0x150>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	697a      	ldr	r2, [r7, #20]
 8002284:	615a      	str	r2, [r3, #20]
 8002286:	6878      	ldr	r0, [r7, #4]
 8002288:	f000 fab8 	bl	80027fc <DMA_CalcBaseAndBitshift>
 800228c:	4603      	mov	r3, r0
 800228e:	60fb      	str	r3, [r7, #12]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002294:	223f      	movs	r2, #63	@ 0x3f
 8002296:	409a      	lsls	r2, r3
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	609a      	str	r2, [r3, #8]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	2200      	movs	r2, #0
 80022a0:	655a      	str	r2, [r3, #84]	@ 0x54
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	2201      	movs	r2, #1
 80022a6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022aa:	2300      	movs	r3, #0
 80022ac:	4618      	mov	r0, r3
 80022ae:	3718      	adds	r7, #24
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd80      	pop	{r7, pc}
 80022b4:	f010803f 	.word	0xf010803f

080022b8 <HAL_DMA_Start_IT>:
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b086      	sub	sp, #24
 80022bc:	af00      	add	r7, sp, #0
 80022be:	60f8      	str	r0, [r7, #12]
 80022c0:	60b9      	str	r1, [r7, #8]
 80022c2:	607a      	str	r2, [r7, #4]
 80022c4:	603b      	str	r3, [r7, #0]
 80022c6:	2300      	movs	r3, #0
 80022c8:	75fb      	strb	r3, [r7, #23]
 80022ca:	68fb      	ldr	r3, [r7, #12]
 80022cc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022ce:	613b      	str	r3, [r7, #16]
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80022d6:	2b01      	cmp	r3, #1
 80022d8:	d101      	bne.n	80022de <HAL_DMA_Start_IT+0x26>
 80022da:	2302      	movs	r3, #2
 80022dc:	e040      	b.n	8002360 <HAL_DMA_Start_IT+0xa8>
 80022de:	68fb      	ldr	r3, [r7, #12]
 80022e0:	2201      	movs	r2, #1
 80022e2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80022ec:	b2db      	uxtb	r3, r3
 80022ee:	2b01      	cmp	r3, #1
 80022f0:	d12f      	bne.n	8002352 <HAL_DMA_Start_IT+0x9a>
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	2202      	movs	r2, #2
 80022f6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022fa:	68fb      	ldr	r3, [r7, #12]
 80022fc:	2200      	movs	r2, #0
 80022fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8002300:	683b      	ldr	r3, [r7, #0]
 8002302:	687a      	ldr	r2, [r7, #4]
 8002304:	68b9      	ldr	r1, [r7, #8]
 8002306:	68f8      	ldr	r0, [r7, #12]
 8002308:	f000 fa4a 	bl	80027a0 <DMA_SetConfig>
 800230c:	68fb      	ldr	r3, [r7, #12]
 800230e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002310:	223f      	movs	r2, #63	@ 0x3f
 8002312:	409a      	lsls	r2, r3
 8002314:	693b      	ldr	r3, [r7, #16]
 8002316:	609a      	str	r2, [r3, #8]
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	681a      	ldr	r2, [r3, #0]
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	f042 0216 	orr.w	r2, r2, #22
 8002326:	601a      	str	r2, [r3, #0]
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232c:	2b00      	cmp	r3, #0
 800232e:	d007      	beq.n	8002340 <HAL_DMA_Start_IT+0x88>
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	681a      	ldr	r2, [r3, #0]
 8002336:	68fb      	ldr	r3, [r7, #12]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	f042 0208 	orr.w	r2, r2, #8
 800233e:	601a      	str	r2, [r3, #0]
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	681a      	ldr	r2, [r3, #0]
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f042 0201 	orr.w	r2, r2, #1
 800234e:	601a      	str	r2, [r3, #0]
 8002350:	e005      	b.n	800235e <HAL_DMA_Start_IT+0xa6>
 8002352:	68fb      	ldr	r3, [r7, #12]
 8002354:	2200      	movs	r2, #0
 8002356:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800235a:	2302      	movs	r3, #2
 800235c:	75fb      	strb	r3, [r7, #23]
 800235e:	7dfb      	ldrb	r3, [r7, #23]
 8002360:	4618      	mov	r0, r3
 8002362:	3718      	adds	r7, #24
 8002364:	46bd      	mov	sp, r7
 8002366:	bd80      	pop	{r7, pc}

08002368 <HAL_DMA_Abort>:
 8002368:	b580      	push	{r7, lr}
 800236a:	b084      	sub	sp, #16
 800236c:	af00      	add	r7, sp, #0
 800236e:	6078      	str	r0, [r7, #4]
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002374:	60fb      	str	r3, [r7, #12]
 8002376:	f7ff fdaf 	bl	8001ed8 <HAL_GetTick>
 800237a:	60b8      	str	r0, [r7, #8]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002382:	b2db      	uxtb	r3, r3
 8002384:	2b02      	cmp	r3, #2
 8002386:	d008      	beq.n	800239a <HAL_DMA_Abort+0x32>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	2280      	movs	r2, #128	@ 0x80
 800238c:	655a      	str	r2, [r3, #84]	@ 0x54
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	2200      	movs	r2, #0
 8002392:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002396:	2301      	movs	r3, #1
 8002398:	e052      	b.n	8002440 <HAL_DMA_Abort+0xd8>
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	681a      	ldr	r2, [r3, #0]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f022 0216 	bic.w	r2, r2, #22
 80023a8:	601a      	str	r2, [r3, #0]
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	695a      	ldr	r2, [r3, #20]
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80023b8:	615a      	str	r2, [r3, #20]
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d103      	bne.n	80023ca <HAL_DMA_Abort+0x62>
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80023c6:	2b00      	cmp	r3, #0
 80023c8:	d007      	beq.n	80023da <HAL_DMA_Abort+0x72>
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	681a      	ldr	r2, [r3, #0]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	f022 0208 	bic.w	r2, r2, #8
 80023d8:	601a      	str	r2, [r3, #0]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	681a      	ldr	r2, [r3, #0]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	f022 0201 	bic.w	r2, r2, #1
 80023e8:	601a      	str	r2, [r3, #0]
 80023ea:	e013      	b.n	8002414 <HAL_DMA_Abort+0xac>
 80023ec:	f7ff fd74 	bl	8001ed8 <HAL_GetTick>
 80023f0:	4602      	mov	r2, r0
 80023f2:	68bb      	ldr	r3, [r7, #8]
 80023f4:	1ad3      	subs	r3, r2, r3
 80023f6:	2b05      	cmp	r3, #5
 80023f8:	d90c      	bls.n	8002414 <HAL_DMA_Abort+0xac>
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	2220      	movs	r2, #32
 80023fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	2203      	movs	r2, #3
 8002404:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	2200      	movs	r2, #0
 800240c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002410:	2303      	movs	r3, #3
 8002412:	e015      	b.n	8002440 <HAL_DMA_Abort+0xd8>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f003 0301 	and.w	r3, r3, #1
 800241e:	2b00      	cmp	r3, #0
 8002420:	d1e4      	bne.n	80023ec <HAL_DMA_Abort+0x84>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002426:	223f      	movs	r2, #63	@ 0x3f
 8002428:	409a      	lsls	r2, r3
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	609a      	str	r2, [r3, #8]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	2201      	movs	r2, #1
 8002432:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	2200      	movs	r2, #0
 800243a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800243e:	2300      	movs	r3, #0
 8002440:	4618      	mov	r0, r3
 8002442:	3710      	adds	r7, #16
 8002444:	46bd      	mov	sp, r7
 8002446:	bd80      	pop	{r7, pc}

08002448 <HAL_DMA_Abort_IT>:
 8002448:	b480      	push	{r7}
 800244a:	b083      	sub	sp, #12
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002456:	b2db      	uxtb	r3, r3
 8002458:	2b02      	cmp	r3, #2
 800245a:	d004      	beq.n	8002466 <HAL_DMA_Abort_IT+0x1e>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	2280      	movs	r2, #128	@ 0x80
 8002460:	655a      	str	r2, [r3, #84]	@ 0x54
 8002462:	2301      	movs	r3, #1
 8002464:	e00c      	b.n	8002480 <HAL_DMA_Abort_IT+0x38>
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	2205      	movs	r2, #5
 800246a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	681a      	ldr	r2, [r3, #0]
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f022 0201 	bic.w	r2, r2, #1
 800247c:	601a      	str	r2, [r3, #0]
 800247e:	2300      	movs	r3, #0
 8002480:	4618      	mov	r0, r3
 8002482:	370c      	adds	r7, #12
 8002484:	46bd      	mov	sp, r7
 8002486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800248a:	4770      	bx	lr

0800248c <HAL_DMA_IRQHandler>:
 800248c:	b580      	push	{r7, lr}
 800248e:	b086      	sub	sp, #24
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
 8002494:	2300      	movs	r3, #0
 8002496:	60bb      	str	r3, [r7, #8]
 8002498:	4b8e      	ldr	r3, [pc, #568]	@ (80026d4 <HAL_DMA_IRQHandler+0x248>)
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	4a8e      	ldr	r2, [pc, #568]	@ (80026d8 <HAL_DMA_IRQHandler+0x24c>)
 800249e:	fba2 2303 	umull	r2, r3, r2, r3
 80024a2:	0a9b      	lsrs	r3, r3, #10
 80024a4:	617b      	str	r3, [r7, #20]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80024aa:	613b      	str	r3, [r7, #16]
 80024ac:	693b      	ldr	r3, [r7, #16]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	60fb      	str	r3, [r7, #12]
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024b6:	2208      	movs	r2, #8
 80024b8:	409a      	lsls	r2, r3
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	4013      	ands	r3, r2
 80024be:	2b00      	cmp	r3, #0
 80024c0:	d01a      	beq.n	80024f8 <HAL_DMA_IRQHandler+0x6c>
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	f003 0304 	and.w	r3, r3, #4
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d013      	beq.n	80024f8 <HAL_DMA_IRQHandler+0x6c>
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	681a      	ldr	r2, [r3, #0]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f022 0204 	bic.w	r2, r2, #4
 80024de:	601a      	str	r2, [r3, #0]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024e4:	2208      	movs	r2, #8
 80024e6:	409a      	lsls	r2, r3
 80024e8:	693b      	ldr	r3, [r7, #16]
 80024ea:	609a      	str	r2, [r3, #8]
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80024f0:	f043 0201 	orr.w	r2, r3, #1
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	655a      	str	r2, [r3, #84]	@ 0x54
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024fc:	2201      	movs	r2, #1
 80024fe:	409a      	lsls	r2, r3
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	4013      	ands	r3, r2
 8002504:	2b00      	cmp	r3, #0
 8002506:	d012      	beq.n	800252e <HAL_DMA_IRQHandler+0xa2>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	695b      	ldr	r3, [r3, #20]
 800250e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002512:	2b00      	cmp	r3, #0
 8002514:	d00b      	beq.n	800252e <HAL_DMA_IRQHandler+0xa2>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800251a:	2201      	movs	r2, #1
 800251c:	409a      	lsls	r2, r3
 800251e:	693b      	ldr	r3, [r7, #16]
 8002520:	609a      	str	r2, [r3, #8]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002526:	f043 0202 	orr.w	r2, r3, #2
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	655a      	str	r2, [r3, #84]	@ 0x54
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002532:	2204      	movs	r2, #4
 8002534:	409a      	lsls	r2, r3
 8002536:	68fb      	ldr	r3, [r7, #12]
 8002538:	4013      	ands	r3, r2
 800253a:	2b00      	cmp	r3, #0
 800253c:	d012      	beq.n	8002564 <HAL_DMA_IRQHandler+0xd8>
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	f003 0302 	and.w	r3, r3, #2
 8002548:	2b00      	cmp	r3, #0
 800254a:	d00b      	beq.n	8002564 <HAL_DMA_IRQHandler+0xd8>
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002550:	2204      	movs	r2, #4
 8002552:	409a      	lsls	r2, r3
 8002554:	693b      	ldr	r3, [r7, #16]
 8002556:	609a      	str	r2, [r3, #8]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800255c:	f043 0204 	orr.w	r2, r3, #4
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	655a      	str	r2, [r3, #84]	@ 0x54
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002568:	2210      	movs	r2, #16
 800256a:	409a      	lsls	r2, r3
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	4013      	ands	r3, r2
 8002570:	2b00      	cmp	r3, #0
 8002572:	d043      	beq.n	80025fc <HAL_DMA_IRQHandler+0x170>
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	f003 0308 	and.w	r3, r3, #8
 800257e:	2b00      	cmp	r3, #0
 8002580:	d03c      	beq.n	80025fc <HAL_DMA_IRQHandler+0x170>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002586:	2210      	movs	r2, #16
 8002588:	409a      	lsls	r2, r3
 800258a:	693b      	ldr	r3, [r7, #16]
 800258c:	609a      	str	r2, [r3, #8]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002598:	2b00      	cmp	r3, #0
 800259a:	d018      	beq.n	80025ce <HAL_DMA_IRQHandler+0x142>
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d108      	bne.n	80025bc <HAL_DMA_IRQHandler+0x130>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d024      	beq.n	80025fc <HAL_DMA_IRQHandler+0x170>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025b6:	6878      	ldr	r0, [r7, #4]
 80025b8:	4798      	blx	r3
 80025ba:	e01f      	b.n	80025fc <HAL_DMA_IRQHandler+0x170>
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80025c0:	2b00      	cmp	r3, #0
 80025c2:	d01b      	beq.n	80025fc <HAL_DMA_IRQHandler+0x170>
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80025c8:	6878      	ldr	r0, [r7, #4]
 80025ca:	4798      	blx	r3
 80025cc:	e016      	b.n	80025fc <HAL_DMA_IRQHandler+0x170>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d107      	bne.n	80025ec <HAL_DMA_IRQHandler+0x160>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	681a      	ldr	r2, [r3, #0]
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	f022 0208 	bic.w	r2, r2, #8
 80025ea:	601a      	str	r2, [r3, #0]
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d003      	beq.n	80025fc <HAL_DMA_IRQHandler+0x170>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025f8:	6878      	ldr	r0, [r7, #4]
 80025fa:	4798      	blx	r3
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002600:	2220      	movs	r2, #32
 8002602:	409a      	lsls	r2, r3
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	4013      	ands	r3, r2
 8002608:	2b00      	cmp	r3, #0
 800260a:	f000 808f 	beq.w	800272c <HAL_DMA_IRQHandler+0x2a0>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	f003 0310 	and.w	r3, r3, #16
 8002618:	2b00      	cmp	r3, #0
 800261a:	f000 8087 	beq.w	800272c <HAL_DMA_IRQHandler+0x2a0>
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002622:	2220      	movs	r2, #32
 8002624:	409a      	lsls	r2, r3
 8002626:	693b      	ldr	r3, [r7, #16]
 8002628:	609a      	str	r2, [r3, #8]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002630:	b2db      	uxtb	r3, r3
 8002632:	2b05      	cmp	r3, #5
 8002634:	d136      	bne.n	80026a4 <HAL_DMA_IRQHandler+0x218>
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	681a      	ldr	r2, [r3, #0]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f022 0216 	bic.w	r2, r2, #22
 8002644:	601a      	str	r2, [r3, #0]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	695a      	ldr	r2, [r3, #20]
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002654:	615a      	str	r2, [r3, #20]
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800265a:	2b00      	cmp	r3, #0
 800265c:	d103      	bne.n	8002666 <HAL_DMA_IRQHandler+0x1da>
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002662:	2b00      	cmp	r3, #0
 8002664:	d007      	beq.n	8002676 <HAL_DMA_IRQHandler+0x1ea>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	681a      	ldr	r2, [r3, #0]
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	f022 0208 	bic.w	r2, r2, #8
 8002674:	601a      	str	r2, [r3, #0]
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800267a:	223f      	movs	r2, #63	@ 0x3f
 800267c:	409a      	lsls	r2, r3
 800267e:	693b      	ldr	r3, [r7, #16]
 8002680:	609a      	str	r2, [r3, #8]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	2201      	movs	r2, #1
 8002686:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	2200      	movs	r2, #0
 800268e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002696:	2b00      	cmp	r3, #0
 8002698:	d07e      	beq.n	8002798 <HAL_DMA_IRQHandler+0x30c>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800269e:	6878      	ldr	r0, [r7, #4]
 80026a0:	4798      	blx	r3
 80026a2:	e079      	b.n	8002798 <HAL_DMA_IRQHandler+0x30c>
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	681b      	ldr	r3, [r3, #0]
 80026aa:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80026ae:	2b00      	cmp	r3, #0
 80026b0:	d01d      	beq.n	80026ee <HAL_DMA_IRQHandler+0x262>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80026bc:	2b00      	cmp	r3, #0
 80026be:	d10d      	bne.n	80026dc <HAL_DMA_IRQHandler+0x250>
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	d031      	beq.n	800272c <HAL_DMA_IRQHandler+0x2a0>
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026cc:	6878      	ldr	r0, [r7, #4]
 80026ce:	4798      	blx	r3
 80026d0:	e02c      	b.n	800272c <HAL_DMA_IRQHandler+0x2a0>
 80026d2:	bf00      	nop
 80026d4:	20000024 	.word	0x20000024
 80026d8:	1b4e81b5 	.word	0x1b4e81b5
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	d023      	beq.n	800272c <HAL_DMA_IRQHandler+0x2a0>
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80026e8:	6878      	ldr	r0, [r7, #4]
 80026ea:	4798      	blx	r3
 80026ec:	e01e      	b.n	800272c <HAL_DMA_IRQHandler+0x2a0>
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d10f      	bne.n	800271c <HAL_DMA_IRQHandler+0x290>
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	681a      	ldr	r2, [r3, #0]
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	f022 0210 	bic.w	r2, r2, #16
 800270a:	601a      	str	r2, [r3, #0]
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	2201      	movs	r2, #1
 8002710:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	2200      	movs	r2, #0
 8002718:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002720:	2b00      	cmp	r3, #0
 8002722:	d003      	beq.n	800272c <HAL_DMA_IRQHandler+0x2a0>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002728:	6878      	ldr	r0, [r7, #4]
 800272a:	4798      	blx	r3
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002730:	2b00      	cmp	r3, #0
 8002732:	d032      	beq.n	800279a <HAL_DMA_IRQHandler+0x30e>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002738:	f003 0301 	and.w	r3, r3, #1
 800273c:	2b00      	cmp	r3, #0
 800273e:	d022      	beq.n	8002786 <HAL_DMA_IRQHandler+0x2fa>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2205      	movs	r2, #5
 8002744:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	681a      	ldr	r2, [r3, #0]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	681b      	ldr	r3, [r3, #0]
 8002752:	f022 0201 	bic.w	r2, r2, #1
 8002756:	601a      	str	r2, [r3, #0]
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	3301      	adds	r3, #1
 800275c:	60bb      	str	r3, [r7, #8]
 800275e:	697a      	ldr	r2, [r7, #20]
 8002760:	429a      	cmp	r2, r3
 8002762:	d307      	bcc.n	8002774 <HAL_DMA_IRQHandler+0x2e8>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	f003 0301 	and.w	r3, r3, #1
 800276e:	2b00      	cmp	r3, #0
 8002770:	d1f2      	bne.n	8002758 <HAL_DMA_IRQHandler+0x2cc>
 8002772:	e000      	b.n	8002776 <HAL_DMA_IRQHandler+0x2ea>
 8002774:	bf00      	nop
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	2201      	movs	r2, #1
 800277a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	2200      	movs	r2, #0
 8002782:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800278a:	2b00      	cmp	r3, #0
 800278c:	d005      	beq.n	800279a <HAL_DMA_IRQHandler+0x30e>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002792:	6878      	ldr	r0, [r7, #4]
 8002794:	4798      	blx	r3
 8002796:	e000      	b.n	800279a <HAL_DMA_IRQHandler+0x30e>
 8002798:	bf00      	nop
 800279a:	3718      	adds	r7, #24
 800279c:	46bd      	mov	sp, r7
 800279e:	bd80      	pop	{r7, pc}

080027a0 <DMA_SetConfig>:
 80027a0:	b480      	push	{r7}
 80027a2:	b085      	sub	sp, #20
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	60f8      	str	r0, [r7, #12]
 80027a8:	60b9      	str	r1, [r7, #8]
 80027aa:	607a      	str	r2, [r7, #4]
 80027ac:	603b      	str	r3, [r7, #0]
 80027ae:	68fb      	ldr	r3, [r7, #12]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	681a      	ldr	r2, [r3, #0]
 80027b4:	68fb      	ldr	r3, [r7, #12]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80027bc:	601a      	str	r2, [r3, #0]
 80027be:	68fb      	ldr	r3, [r7, #12]
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	683a      	ldr	r2, [r7, #0]
 80027c4:	605a      	str	r2, [r3, #4]
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	689b      	ldr	r3, [r3, #8]
 80027ca:	2b40      	cmp	r3, #64	@ 0x40
 80027cc:	d108      	bne.n	80027e0 <DMA_SetConfig+0x40>
 80027ce:	68fb      	ldr	r3, [r7, #12]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	687a      	ldr	r2, [r7, #4]
 80027d4:	609a      	str	r2, [r3, #8]
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	68ba      	ldr	r2, [r7, #8]
 80027dc:	60da      	str	r2, [r3, #12]
 80027de:	e007      	b.n	80027f0 <DMA_SetConfig+0x50>
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	68ba      	ldr	r2, [r7, #8]
 80027e6:	609a      	str	r2, [r3, #8]
 80027e8:	68fb      	ldr	r3, [r7, #12]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	687a      	ldr	r2, [r7, #4]
 80027ee:	60da      	str	r2, [r3, #12]
 80027f0:	bf00      	nop
 80027f2:	3714      	adds	r7, #20
 80027f4:	46bd      	mov	sp, r7
 80027f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027fa:	4770      	bx	lr

080027fc <DMA_CalcBaseAndBitshift>:
 80027fc:	b480      	push	{r7}
 80027fe:	b085      	sub	sp, #20
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	b2db      	uxtb	r3, r3
 800280a:	3b10      	subs	r3, #16
 800280c:	4a14      	ldr	r2, [pc, #80]	@ (8002860 <DMA_CalcBaseAndBitshift+0x64>)
 800280e:	fba2 2303 	umull	r2, r3, r2, r3
 8002812:	091b      	lsrs	r3, r3, #4
 8002814:	60fb      	str	r3, [r7, #12]
 8002816:	4a13      	ldr	r2, [pc, #76]	@ (8002864 <DMA_CalcBaseAndBitshift+0x68>)
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	4413      	add	r3, r2
 800281c:	781b      	ldrb	r3, [r3, #0]
 800281e:	461a      	mov	r2, r3
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	2b03      	cmp	r3, #3
 8002828:	d909      	bls.n	800283e <DMA_CalcBaseAndBitshift+0x42>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002832:	f023 0303 	bic.w	r3, r3, #3
 8002836:	1d1a      	adds	r2, r3, #4
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	659a      	str	r2, [r3, #88]	@ 0x58
 800283c:	e007      	b.n	800284e <DMA_CalcBaseAndBitshift+0x52>
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002846:	f023 0303 	bic.w	r3, r3, #3
 800284a:	687a      	ldr	r2, [r7, #4]
 800284c:	6593      	str	r3, [r2, #88]	@ 0x58
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002852:	4618      	mov	r0, r3
 8002854:	3714      	adds	r7, #20
 8002856:	46bd      	mov	sp, r7
 8002858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop
 8002860:	aaaaaaab 	.word	0xaaaaaaab
 8002864:	08007a08 	.word	0x08007a08

08002868 <DMA_CheckFifoParam>:
 8002868:	b480      	push	{r7}
 800286a:	b085      	sub	sp, #20
 800286c:	af00      	add	r7, sp, #0
 800286e:	6078      	str	r0, [r7, #4]
 8002870:	2300      	movs	r3, #0
 8002872:	73fb      	strb	r3, [r7, #15]
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002878:	60bb      	str	r3, [r7, #8]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	699b      	ldr	r3, [r3, #24]
 800287e:	2b00      	cmp	r3, #0
 8002880:	d11f      	bne.n	80028c2 <DMA_CheckFifoParam+0x5a>
 8002882:	68bb      	ldr	r3, [r7, #8]
 8002884:	2b03      	cmp	r3, #3
 8002886:	d856      	bhi.n	8002936 <DMA_CheckFifoParam+0xce>
 8002888:	a201      	add	r2, pc, #4	@ (adr r2, 8002890 <DMA_CheckFifoParam+0x28>)
 800288a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800288e:	bf00      	nop
 8002890:	080028a1 	.word	0x080028a1
 8002894:	080028b3 	.word	0x080028b3
 8002898:	080028a1 	.word	0x080028a1
 800289c:	08002937 	.word	0x08002937
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028a4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80028a8:	2b00      	cmp	r3, #0
 80028aa:	d046      	beq.n	800293a <DMA_CheckFifoParam+0xd2>
 80028ac:	2301      	movs	r3, #1
 80028ae:	73fb      	strb	r3, [r7, #15]
 80028b0:	e043      	b.n	800293a <DMA_CheckFifoParam+0xd2>
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028b6:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80028ba:	d140      	bne.n	800293e <DMA_CheckFifoParam+0xd6>
 80028bc:	2301      	movs	r3, #1
 80028be:	73fb      	strb	r3, [r7, #15]
 80028c0:	e03d      	b.n	800293e <DMA_CheckFifoParam+0xd6>
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	699b      	ldr	r3, [r3, #24]
 80028c6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80028ca:	d121      	bne.n	8002910 <DMA_CheckFifoParam+0xa8>
 80028cc:	68bb      	ldr	r3, [r7, #8]
 80028ce:	2b03      	cmp	r3, #3
 80028d0:	d837      	bhi.n	8002942 <DMA_CheckFifoParam+0xda>
 80028d2:	a201      	add	r2, pc, #4	@ (adr r2, 80028d8 <DMA_CheckFifoParam+0x70>)
 80028d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028d8:	080028e9 	.word	0x080028e9
 80028dc:	080028ef 	.word	0x080028ef
 80028e0:	080028e9 	.word	0x080028e9
 80028e4:	08002901 	.word	0x08002901
 80028e8:	2301      	movs	r3, #1
 80028ea:	73fb      	strb	r3, [r7, #15]
 80028ec:	e030      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028f2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d025      	beq.n	8002946 <DMA_CheckFifoParam+0xde>
 80028fa:	2301      	movs	r3, #1
 80028fc:	73fb      	strb	r3, [r7, #15]
 80028fe:	e022      	b.n	8002946 <DMA_CheckFifoParam+0xde>
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002904:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002908:	d11f      	bne.n	800294a <DMA_CheckFifoParam+0xe2>
 800290a:	2301      	movs	r3, #1
 800290c:	73fb      	strb	r3, [r7, #15]
 800290e:	e01c      	b.n	800294a <DMA_CheckFifoParam+0xe2>
 8002910:	68bb      	ldr	r3, [r7, #8]
 8002912:	2b02      	cmp	r3, #2
 8002914:	d903      	bls.n	800291e <DMA_CheckFifoParam+0xb6>
 8002916:	68bb      	ldr	r3, [r7, #8]
 8002918:	2b03      	cmp	r3, #3
 800291a:	d003      	beq.n	8002924 <DMA_CheckFifoParam+0xbc>
 800291c:	e018      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 800291e:	2301      	movs	r3, #1
 8002920:	73fb      	strb	r3, [r7, #15]
 8002922:	e015      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002928:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800292c:	2b00      	cmp	r3, #0
 800292e:	d00e      	beq.n	800294e <DMA_CheckFifoParam+0xe6>
 8002930:	2301      	movs	r3, #1
 8002932:	73fb      	strb	r3, [r7, #15]
 8002934:	e00b      	b.n	800294e <DMA_CheckFifoParam+0xe6>
 8002936:	bf00      	nop
 8002938:	e00a      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 800293a:	bf00      	nop
 800293c:	e008      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 800293e:	bf00      	nop
 8002940:	e006      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 8002942:	bf00      	nop
 8002944:	e004      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 8002946:	bf00      	nop
 8002948:	e002      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 800294a:	bf00      	nop
 800294c:	e000      	b.n	8002950 <DMA_CheckFifoParam+0xe8>
 800294e:	bf00      	nop
 8002950:	7bfb      	ldrb	r3, [r7, #15]
 8002952:	4618      	mov	r0, r3
 8002954:	3714      	adds	r7, #20
 8002956:	46bd      	mov	sp, r7
 8002958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800295c:	4770      	bx	lr
 800295e:	bf00      	nop

08002960 <HAL_GPIO_Init>:
 8002960:	b480      	push	{r7}
 8002962:	b089      	sub	sp, #36	@ 0x24
 8002964:	af00      	add	r7, sp, #0
 8002966:	6078      	str	r0, [r7, #4]
 8002968:	6039      	str	r1, [r7, #0]
 800296a:	2300      	movs	r3, #0
 800296c:	617b      	str	r3, [r7, #20]
 800296e:	2300      	movs	r3, #0
 8002970:	613b      	str	r3, [r7, #16]
 8002972:	2300      	movs	r3, #0
 8002974:	61bb      	str	r3, [r7, #24]
 8002976:	2300      	movs	r3, #0
 8002978:	61fb      	str	r3, [r7, #28]
 800297a:	e159      	b.n	8002c30 <HAL_GPIO_Init+0x2d0>
 800297c:	2201      	movs	r2, #1
 800297e:	69fb      	ldr	r3, [r7, #28]
 8002980:	fa02 f303 	lsl.w	r3, r2, r3
 8002984:	617b      	str	r3, [r7, #20]
 8002986:	683b      	ldr	r3, [r7, #0]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	697a      	ldr	r2, [r7, #20]
 800298c:	4013      	ands	r3, r2
 800298e:	613b      	str	r3, [r7, #16]
 8002990:	693a      	ldr	r2, [r7, #16]
 8002992:	697b      	ldr	r3, [r7, #20]
 8002994:	429a      	cmp	r2, r3
 8002996:	f040 8148 	bne.w	8002c2a <HAL_GPIO_Init+0x2ca>
 800299a:	683b      	ldr	r3, [r7, #0]
 800299c:	685b      	ldr	r3, [r3, #4]
 800299e:	f003 0303 	and.w	r3, r3, #3
 80029a2:	2b01      	cmp	r3, #1
 80029a4:	d005      	beq.n	80029b2 <HAL_GPIO_Init+0x52>
 80029a6:	683b      	ldr	r3, [r7, #0]
 80029a8:	685b      	ldr	r3, [r3, #4]
 80029aa:	f003 0303 	and.w	r3, r3, #3
 80029ae:	2b02      	cmp	r3, #2
 80029b0:	d130      	bne.n	8002a14 <HAL_GPIO_Init+0xb4>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	689b      	ldr	r3, [r3, #8]
 80029b6:	61bb      	str	r3, [r7, #24]
 80029b8:	69fb      	ldr	r3, [r7, #28]
 80029ba:	005b      	lsls	r3, r3, #1
 80029bc:	2203      	movs	r2, #3
 80029be:	fa02 f303 	lsl.w	r3, r2, r3
 80029c2:	43db      	mvns	r3, r3
 80029c4:	69ba      	ldr	r2, [r7, #24]
 80029c6:	4013      	ands	r3, r2
 80029c8:	61bb      	str	r3, [r7, #24]
 80029ca:	683b      	ldr	r3, [r7, #0]
 80029cc:	68da      	ldr	r2, [r3, #12]
 80029ce:	69fb      	ldr	r3, [r7, #28]
 80029d0:	005b      	lsls	r3, r3, #1
 80029d2:	fa02 f303 	lsl.w	r3, r2, r3
 80029d6:	69ba      	ldr	r2, [r7, #24]
 80029d8:	4313      	orrs	r3, r2
 80029da:	61bb      	str	r3, [r7, #24]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	69ba      	ldr	r2, [r7, #24]
 80029e0:	609a      	str	r2, [r3, #8]
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	685b      	ldr	r3, [r3, #4]
 80029e6:	61bb      	str	r3, [r7, #24]
 80029e8:	2201      	movs	r2, #1
 80029ea:	69fb      	ldr	r3, [r7, #28]
 80029ec:	fa02 f303 	lsl.w	r3, r2, r3
 80029f0:	43db      	mvns	r3, r3
 80029f2:	69ba      	ldr	r2, [r7, #24]
 80029f4:	4013      	ands	r3, r2
 80029f6:	61bb      	str	r3, [r7, #24]
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	685b      	ldr	r3, [r3, #4]
 80029fc:	091b      	lsrs	r3, r3, #4
 80029fe:	f003 0201 	and.w	r2, r3, #1
 8002a02:	69fb      	ldr	r3, [r7, #28]
 8002a04:	fa02 f303 	lsl.w	r3, r2, r3
 8002a08:	69ba      	ldr	r2, [r7, #24]
 8002a0a:	4313      	orrs	r3, r2
 8002a0c:	61bb      	str	r3, [r7, #24]
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	69ba      	ldr	r2, [r7, #24]
 8002a12:	605a      	str	r2, [r3, #4]
 8002a14:	683b      	ldr	r3, [r7, #0]
 8002a16:	685b      	ldr	r3, [r3, #4]
 8002a18:	f003 0303 	and.w	r3, r3, #3
 8002a1c:	2b03      	cmp	r3, #3
 8002a1e:	d017      	beq.n	8002a50 <HAL_GPIO_Init+0xf0>
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	68db      	ldr	r3, [r3, #12]
 8002a24:	61bb      	str	r3, [r7, #24]
 8002a26:	69fb      	ldr	r3, [r7, #28]
 8002a28:	005b      	lsls	r3, r3, #1
 8002a2a:	2203      	movs	r2, #3
 8002a2c:	fa02 f303 	lsl.w	r3, r2, r3
 8002a30:	43db      	mvns	r3, r3
 8002a32:	69ba      	ldr	r2, [r7, #24]
 8002a34:	4013      	ands	r3, r2
 8002a36:	61bb      	str	r3, [r7, #24]
 8002a38:	683b      	ldr	r3, [r7, #0]
 8002a3a:	689a      	ldr	r2, [r3, #8]
 8002a3c:	69fb      	ldr	r3, [r7, #28]
 8002a3e:	005b      	lsls	r3, r3, #1
 8002a40:	fa02 f303 	lsl.w	r3, r2, r3
 8002a44:	69ba      	ldr	r2, [r7, #24]
 8002a46:	4313      	orrs	r3, r2
 8002a48:	61bb      	str	r3, [r7, #24]
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	69ba      	ldr	r2, [r7, #24]
 8002a4e:	60da      	str	r2, [r3, #12]
 8002a50:	683b      	ldr	r3, [r7, #0]
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	f003 0303 	and.w	r3, r3, #3
 8002a58:	2b02      	cmp	r3, #2
 8002a5a:	d123      	bne.n	8002aa4 <HAL_GPIO_Init+0x144>
 8002a5c:	69fb      	ldr	r3, [r7, #28]
 8002a5e:	08da      	lsrs	r2, r3, #3
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	3208      	adds	r2, #8
 8002a64:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002a68:	61bb      	str	r3, [r7, #24]
 8002a6a:	69fb      	ldr	r3, [r7, #28]
 8002a6c:	f003 0307 	and.w	r3, r3, #7
 8002a70:	009b      	lsls	r3, r3, #2
 8002a72:	220f      	movs	r2, #15
 8002a74:	fa02 f303 	lsl.w	r3, r2, r3
 8002a78:	43db      	mvns	r3, r3
 8002a7a:	69ba      	ldr	r2, [r7, #24]
 8002a7c:	4013      	ands	r3, r2
 8002a7e:	61bb      	str	r3, [r7, #24]
 8002a80:	683b      	ldr	r3, [r7, #0]
 8002a82:	691a      	ldr	r2, [r3, #16]
 8002a84:	69fb      	ldr	r3, [r7, #28]
 8002a86:	f003 0307 	and.w	r3, r3, #7
 8002a8a:	009b      	lsls	r3, r3, #2
 8002a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8002a90:	69ba      	ldr	r2, [r7, #24]
 8002a92:	4313      	orrs	r3, r2
 8002a94:	61bb      	str	r3, [r7, #24]
 8002a96:	69fb      	ldr	r3, [r7, #28]
 8002a98:	08da      	lsrs	r2, r3, #3
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	3208      	adds	r2, #8
 8002a9e:	69b9      	ldr	r1, [r7, #24]
 8002aa0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	61bb      	str	r3, [r7, #24]
 8002aaa:	69fb      	ldr	r3, [r7, #28]
 8002aac:	005b      	lsls	r3, r3, #1
 8002aae:	2203      	movs	r2, #3
 8002ab0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ab4:	43db      	mvns	r3, r3
 8002ab6:	69ba      	ldr	r2, [r7, #24]
 8002ab8:	4013      	ands	r3, r2
 8002aba:	61bb      	str	r3, [r7, #24]
 8002abc:	683b      	ldr	r3, [r7, #0]
 8002abe:	685b      	ldr	r3, [r3, #4]
 8002ac0:	f003 0203 	and.w	r2, r3, #3
 8002ac4:	69fb      	ldr	r3, [r7, #28]
 8002ac6:	005b      	lsls	r3, r3, #1
 8002ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8002acc:	69ba      	ldr	r2, [r7, #24]
 8002ace:	4313      	orrs	r3, r2
 8002ad0:	61bb      	str	r3, [r7, #24]
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	69ba      	ldr	r2, [r7, #24]
 8002ad6:	601a      	str	r2, [r3, #0]
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	685b      	ldr	r3, [r3, #4]
 8002adc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	f000 80a2 	beq.w	8002c2a <HAL_GPIO_Init+0x2ca>
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	60fb      	str	r3, [r7, #12]
 8002aea:	4b57      	ldr	r3, [pc, #348]	@ (8002c48 <HAL_GPIO_Init+0x2e8>)
 8002aec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002aee:	4a56      	ldr	r2, [pc, #344]	@ (8002c48 <HAL_GPIO_Init+0x2e8>)
 8002af0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002af4:	6453      	str	r3, [r2, #68]	@ 0x44
 8002af6:	4b54      	ldr	r3, [pc, #336]	@ (8002c48 <HAL_GPIO_Init+0x2e8>)
 8002af8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002afa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002afe:	60fb      	str	r3, [r7, #12]
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	4a52      	ldr	r2, [pc, #328]	@ (8002c4c <HAL_GPIO_Init+0x2ec>)
 8002b04:	69fb      	ldr	r3, [r7, #28]
 8002b06:	089b      	lsrs	r3, r3, #2
 8002b08:	3302      	adds	r3, #2
 8002b0a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b0e:	61bb      	str	r3, [r7, #24]
 8002b10:	69fb      	ldr	r3, [r7, #28]
 8002b12:	f003 0303 	and.w	r3, r3, #3
 8002b16:	009b      	lsls	r3, r3, #2
 8002b18:	220f      	movs	r2, #15
 8002b1a:	fa02 f303 	lsl.w	r3, r2, r3
 8002b1e:	43db      	mvns	r3, r3
 8002b20:	69ba      	ldr	r2, [r7, #24]
 8002b22:	4013      	ands	r3, r2
 8002b24:	61bb      	str	r3, [r7, #24]
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	4a49      	ldr	r2, [pc, #292]	@ (8002c50 <HAL_GPIO_Init+0x2f0>)
 8002b2a:	4293      	cmp	r3, r2
 8002b2c:	d019      	beq.n	8002b62 <HAL_GPIO_Init+0x202>
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	4a48      	ldr	r2, [pc, #288]	@ (8002c54 <HAL_GPIO_Init+0x2f4>)
 8002b32:	4293      	cmp	r3, r2
 8002b34:	d013      	beq.n	8002b5e <HAL_GPIO_Init+0x1fe>
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	4a47      	ldr	r2, [pc, #284]	@ (8002c58 <HAL_GPIO_Init+0x2f8>)
 8002b3a:	4293      	cmp	r3, r2
 8002b3c:	d00d      	beq.n	8002b5a <HAL_GPIO_Init+0x1fa>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	4a46      	ldr	r2, [pc, #280]	@ (8002c5c <HAL_GPIO_Init+0x2fc>)
 8002b42:	4293      	cmp	r3, r2
 8002b44:	d007      	beq.n	8002b56 <HAL_GPIO_Init+0x1f6>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	4a45      	ldr	r2, [pc, #276]	@ (8002c60 <HAL_GPIO_Init+0x300>)
 8002b4a:	4293      	cmp	r3, r2
 8002b4c:	d101      	bne.n	8002b52 <HAL_GPIO_Init+0x1f2>
 8002b4e:	2304      	movs	r3, #4
 8002b50:	e008      	b.n	8002b64 <HAL_GPIO_Init+0x204>
 8002b52:	2307      	movs	r3, #7
 8002b54:	e006      	b.n	8002b64 <HAL_GPIO_Init+0x204>
 8002b56:	2303      	movs	r3, #3
 8002b58:	e004      	b.n	8002b64 <HAL_GPIO_Init+0x204>
 8002b5a:	2302      	movs	r3, #2
 8002b5c:	e002      	b.n	8002b64 <HAL_GPIO_Init+0x204>
 8002b5e:	2301      	movs	r3, #1
 8002b60:	e000      	b.n	8002b64 <HAL_GPIO_Init+0x204>
 8002b62:	2300      	movs	r3, #0
 8002b64:	69fa      	ldr	r2, [r7, #28]
 8002b66:	f002 0203 	and.w	r2, r2, #3
 8002b6a:	0092      	lsls	r2, r2, #2
 8002b6c:	4093      	lsls	r3, r2
 8002b6e:	69ba      	ldr	r2, [r7, #24]
 8002b70:	4313      	orrs	r3, r2
 8002b72:	61bb      	str	r3, [r7, #24]
 8002b74:	4935      	ldr	r1, [pc, #212]	@ (8002c4c <HAL_GPIO_Init+0x2ec>)
 8002b76:	69fb      	ldr	r3, [r7, #28]
 8002b78:	089b      	lsrs	r3, r3, #2
 8002b7a:	3302      	adds	r3, #2
 8002b7c:	69ba      	ldr	r2, [r7, #24]
 8002b7e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002b82:	4b38      	ldr	r3, [pc, #224]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002b84:	689b      	ldr	r3, [r3, #8]
 8002b86:	61bb      	str	r3, [r7, #24]
 8002b88:	693b      	ldr	r3, [r7, #16]
 8002b8a:	43db      	mvns	r3, r3
 8002b8c:	69ba      	ldr	r2, [r7, #24]
 8002b8e:	4013      	ands	r3, r2
 8002b90:	61bb      	str	r3, [r7, #24]
 8002b92:	683b      	ldr	r3, [r7, #0]
 8002b94:	685b      	ldr	r3, [r3, #4]
 8002b96:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	d003      	beq.n	8002ba6 <HAL_GPIO_Init+0x246>
 8002b9e:	69ba      	ldr	r2, [r7, #24]
 8002ba0:	693b      	ldr	r3, [r7, #16]
 8002ba2:	4313      	orrs	r3, r2
 8002ba4:	61bb      	str	r3, [r7, #24]
 8002ba6:	4a2f      	ldr	r2, [pc, #188]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002ba8:	69bb      	ldr	r3, [r7, #24]
 8002baa:	6093      	str	r3, [r2, #8]
 8002bac:	4b2d      	ldr	r3, [pc, #180]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002bae:	68db      	ldr	r3, [r3, #12]
 8002bb0:	61bb      	str	r3, [r7, #24]
 8002bb2:	693b      	ldr	r3, [r7, #16]
 8002bb4:	43db      	mvns	r3, r3
 8002bb6:	69ba      	ldr	r2, [r7, #24]
 8002bb8:	4013      	ands	r3, r2
 8002bba:	61bb      	str	r3, [r7, #24]
 8002bbc:	683b      	ldr	r3, [r7, #0]
 8002bbe:	685b      	ldr	r3, [r3, #4]
 8002bc0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d003      	beq.n	8002bd0 <HAL_GPIO_Init+0x270>
 8002bc8:	69ba      	ldr	r2, [r7, #24]
 8002bca:	693b      	ldr	r3, [r7, #16]
 8002bcc:	4313      	orrs	r3, r2
 8002bce:	61bb      	str	r3, [r7, #24]
 8002bd0:	4a24      	ldr	r2, [pc, #144]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002bd2:	69bb      	ldr	r3, [r7, #24]
 8002bd4:	60d3      	str	r3, [r2, #12]
 8002bd6:	4b23      	ldr	r3, [pc, #140]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002bd8:	685b      	ldr	r3, [r3, #4]
 8002bda:	61bb      	str	r3, [r7, #24]
 8002bdc:	693b      	ldr	r3, [r7, #16]
 8002bde:	43db      	mvns	r3, r3
 8002be0:	69ba      	ldr	r2, [r7, #24]
 8002be2:	4013      	ands	r3, r2
 8002be4:	61bb      	str	r3, [r7, #24]
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	685b      	ldr	r3, [r3, #4]
 8002bea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d003      	beq.n	8002bfa <HAL_GPIO_Init+0x29a>
 8002bf2:	69ba      	ldr	r2, [r7, #24]
 8002bf4:	693b      	ldr	r3, [r7, #16]
 8002bf6:	4313      	orrs	r3, r2
 8002bf8:	61bb      	str	r3, [r7, #24]
 8002bfa:	4a1a      	ldr	r2, [pc, #104]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002bfc:	69bb      	ldr	r3, [r7, #24]
 8002bfe:	6053      	str	r3, [r2, #4]
 8002c00:	4b18      	ldr	r3, [pc, #96]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	61bb      	str	r3, [r7, #24]
 8002c06:	693b      	ldr	r3, [r7, #16]
 8002c08:	43db      	mvns	r3, r3
 8002c0a:	69ba      	ldr	r2, [r7, #24]
 8002c0c:	4013      	ands	r3, r2
 8002c0e:	61bb      	str	r3, [r7, #24]
 8002c10:	683b      	ldr	r3, [r7, #0]
 8002c12:	685b      	ldr	r3, [r3, #4]
 8002c14:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d003      	beq.n	8002c24 <HAL_GPIO_Init+0x2c4>
 8002c1c:	69ba      	ldr	r2, [r7, #24]
 8002c1e:	693b      	ldr	r3, [r7, #16]
 8002c20:	4313      	orrs	r3, r2
 8002c22:	61bb      	str	r3, [r7, #24]
 8002c24:	4a0f      	ldr	r2, [pc, #60]	@ (8002c64 <HAL_GPIO_Init+0x304>)
 8002c26:	69bb      	ldr	r3, [r7, #24]
 8002c28:	6013      	str	r3, [r2, #0]
 8002c2a:	69fb      	ldr	r3, [r7, #28]
 8002c2c:	3301      	adds	r3, #1
 8002c2e:	61fb      	str	r3, [r7, #28]
 8002c30:	69fb      	ldr	r3, [r7, #28]
 8002c32:	2b0f      	cmp	r3, #15
 8002c34:	f67f aea2 	bls.w	800297c <HAL_GPIO_Init+0x1c>
 8002c38:	bf00      	nop
 8002c3a:	bf00      	nop
 8002c3c:	3724      	adds	r7, #36	@ 0x24
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c44:	4770      	bx	lr
 8002c46:	bf00      	nop
 8002c48:	40023800 	.word	0x40023800
 8002c4c:	40013800 	.word	0x40013800
 8002c50:	40020000 	.word	0x40020000
 8002c54:	40020400 	.word	0x40020400
 8002c58:	40020800 	.word	0x40020800
 8002c5c:	40020c00 	.word	0x40020c00
 8002c60:	40021000 	.word	0x40021000
 8002c64:	40013c00 	.word	0x40013c00

08002c68 <HAL_GPIO_DeInit>:
 8002c68:	b480      	push	{r7}
 8002c6a:	b087      	sub	sp, #28
 8002c6c:	af00      	add	r7, sp, #0
 8002c6e:	6078      	str	r0, [r7, #4]
 8002c70:	6039      	str	r1, [r7, #0]
 8002c72:	2300      	movs	r3, #0
 8002c74:	613b      	str	r3, [r7, #16]
 8002c76:	2300      	movs	r3, #0
 8002c78:	60fb      	str	r3, [r7, #12]
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	60bb      	str	r3, [r7, #8]
 8002c7e:	2300      	movs	r3, #0
 8002c80:	617b      	str	r3, [r7, #20]
 8002c82:	e0bb      	b.n	8002dfc <HAL_GPIO_DeInit+0x194>
 8002c84:	2201      	movs	r2, #1
 8002c86:	697b      	ldr	r3, [r7, #20]
 8002c88:	fa02 f303 	lsl.w	r3, r2, r3
 8002c8c:	613b      	str	r3, [r7, #16]
 8002c8e:	683a      	ldr	r2, [r7, #0]
 8002c90:	693b      	ldr	r3, [r7, #16]
 8002c92:	4013      	ands	r3, r2
 8002c94:	60fb      	str	r3, [r7, #12]
 8002c96:	68fa      	ldr	r2, [r7, #12]
 8002c98:	693b      	ldr	r3, [r7, #16]
 8002c9a:	429a      	cmp	r2, r3
 8002c9c:	f040 80ab 	bne.w	8002df6 <HAL_GPIO_DeInit+0x18e>
 8002ca0:	4a5c      	ldr	r2, [pc, #368]	@ (8002e14 <HAL_GPIO_DeInit+0x1ac>)
 8002ca2:	697b      	ldr	r3, [r7, #20]
 8002ca4:	089b      	lsrs	r3, r3, #2
 8002ca6:	3302      	adds	r3, #2
 8002ca8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002cac:	60bb      	str	r3, [r7, #8]
 8002cae:	697b      	ldr	r3, [r7, #20]
 8002cb0:	f003 0303 	and.w	r3, r3, #3
 8002cb4:	009b      	lsls	r3, r3, #2
 8002cb6:	220f      	movs	r2, #15
 8002cb8:	fa02 f303 	lsl.w	r3, r2, r3
 8002cbc:	68ba      	ldr	r2, [r7, #8]
 8002cbe:	4013      	ands	r3, r2
 8002cc0:	60bb      	str	r3, [r7, #8]
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	4a54      	ldr	r2, [pc, #336]	@ (8002e18 <HAL_GPIO_DeInit+0x1b0>)
 8002cc6:	4293      	cmp	r3, r2
 8002cc8:	d019      	beq.n	8002cfe <HAL_GPIO_DeInit+0x96>
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	4a53      	ldr	r2, [pc, #332]	@ (8002e1c <HAL_GPIO_DeInit+0x1b4>)
 8002cce:	4293      	cmp	r3, r2
 8002cd0:	d013      	beq.n	8002cfa <HAL_GPIO_DeInit+0x92>
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	4a52      	ldr	r2, [pc, #328]	@ (8002e20 <HAL_GPIO_DeInit+0x1b8>)
 8002cd6:	4293      	cmp	r3, r2
 8002cd8:	d00d      	beq.n	8002cf6 <HAL_GPIO_DeInit+0x8e>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	4a51      	ldr	r2, [pc, #324]	@ (8002e24 <HAL_GPIO_DeInit+0x1bc>)
 8002cde:	4293      	cmp	r3, r2
 8002ce0:	d007      	beq.n	8002cf2 <HAL_GPIO_DeInit+0x8a>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	4a50      	ldr	r2, [pc, #320]	@ (8002e28 <HAL_GPIO_DeInit+0x1c0>)
 8002ce6:	4293      	cmp	r3, r2
 8002ce8:	d101      	bne.n	8002cee <HAL_GPIO_DeInit+0x86>
 8002cea:	2304      	movs	r3, #4
 8002cec:	e008      	b.n	8002d00 <HAL_GPIO_DeInit+0x98>
 8002cee:	2307      	movs	r3, #7
 8002cf0:	e006      	b.n	8002d00 <HAL_GPIO_DeInit+0x98>
 8002cf2:	2303      	movs	r3, #3
 8002cf4:	e004      	b.n	8002d00 <HAL_GPIO_DeInit+0x98>
 8002cf6:	2302      	movs	r3, #2
 8002cf8:	e002      	b.n	8002d00 <HAL_GPIO_DeInit+0x98>
 8002cfa:	2301      	movs	r3, #1
 8002cfc:	e000      	b.n	8002d00 <HAL_GPIO_DeInit+0x98>
 8002cfe:	2300      	movs	r3, #0
 8002d00:	697a      	ldr	r2, [r7, #20]
 8002d02:	f002 0203 	and.w	r2, r2, #3
 8002d06:	0092      	lsls	r2, r2, #2
 8002d08:	4093      	lsls	r3, r2
 8002d0a:	68ba      	ldr	r2, [r7, #8]
 8002d0c:	429a      	cmp	r2, r3
 8002d0e:	d132      	bne.n	8002d76 <HAL_GPIO_DeInit+0x10e>
 8002d10:	4b46      	ldr	r3, [pc, #280]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d12:	681a      	ldr	r2, [r3, #0]
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	43db      	mvns	r3, r3
 8002d18:	4944      	ldr	r1, [pc, #272]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d1a:	4013      	ands	r3, r2
 8002d1c:	600b      	str	r3, [r1, #0]
 8002d1e:	4b43      	ldr	r3, [pc, #268]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d20:	685a      	ldr	r2, [r3, #4]
 8002d22:	68fb      	ldr	r3, [r7, #12]
 8002d24:	43db      	mvns	r3, r3
 8002d26:	4941      	ldr	r1, [pc, #260]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d28:	4013      	ands	r3, r2
 8002d2a:	604b      	str	r3, [r1, #4]
 8002d2c:	4b3f      	ldr	r3, [pc, #252]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d2e:	68da      	ldr	r2, [r3, #12]
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	43db      	mvns	r3, r3
 8002d34:	493d      	ldr	r1, [pc, #244]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d36:	4013      	ands	r3, r2
 8002d38:	60cb      	str	r3, [r1, #12]
 8002d3a:	4b3c      	ldr	r3, [pc, #240]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d3c:	689a      	ldr	r2, [r3, #8]
 8002d3e:	68fb      	ldr	r3, [r7, #12]
 8002d40:	43db      	mvns	r3, r3
 8002d42:	493a      	ldr	r1, [pc, #232]	@ (8002e2c <HAL_GPIO_DeInit+0x1c4>)
 8002d44:	4013      	ands	r3, r2
 8002d46:	608b      	str	r3, [r1, #8]
 8002d48:	697b      	ldr	r3, [r7, #20]
 8002d4a:	f003 0303 	and.w	r3, r3, #3
 8002d4e:	009b      	lsls	r3, r3, #2
 8002d50:	220f      	movs	r2, #15
 8002d52:	fa02 f303 	lsl.w	r3, r2, r3
 8002d56:	60bb      	str	r3, [r7, #8]
 8002d58:	4a2e      	ldr	r2, [pc, #184]	@ (8002e14 <HAL_GPIO_DeInit+0x1ac>)
 8002d5a:	697b      	ldr	r3, [r7, #20]
 8002d5c:	089b      	lsrs	r3, r3, #2
 8002d5e:	3302      	adds	r3, #2
 8002d60:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8002d64:	68bb      	ldr	r3, [r7, #8]
 8002d66:	43da      	mvns	r2, r3
 8002d68:	482a      	ldr	r0, [pc, #168]	@ (8002e14 <HAL_GPIO_DeInit+0x1ac>)
 8002d6a:	697b      	ldr	r3, [r7, #20]
 8002d6c:	089b      	lsrs	r3, r3, #2
 8002d6e:	400a      	ands	r2, r1
 8002d70:	3302      	adds	r3, #2
 8002d72:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681a      	ldr	r2, [r3, #0]
 8002d7a:	697b      	ldr	r3, [r7, #20]
 8002d7c:	005b      	lsls	r3, r3, #1
 8002d7e:	2103      	movs	r1, #3
 8002d80:	fa01 f303 	lsl.w	r3, r1, r3
 8002d84:	43db      	mvns	r3, r3
 8002d86:	401a      	ands	r2, r3
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	601a      	str	r2, [r3, #0]
 8002d8c:	697b      	ldr	r3, [r7, #20]
 8002d8e:	08da      	lsrs	r2, r3, #3
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	3208      	adds	r2, #8
 8002d94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002d98:	697b      	ldr	r3, [r7, #20]
 8002d9a:	f003 0307 	and.w	r3, r3, #7
 8002d9e:	009b      	lsls	r3, r3, #2
 8002da0:	220f      	movs	r2, #15
 8002da2:	fa02 f303 	lsl.w	r3, r2, r3
 8002da6:	43db      	mvns	r3, r3
 8002da8:	697a      	ldr	r2, [r7, #20]
 8002daa:	08d2      	lsrs	r2, r2, #3
 8002dac:	4019      	ands	r1, r3
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	3208      	adds	r2, #8
 8002db2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	68da      	ldr	r2, [r3, #12]
 8002dba:	697b      	ldr	r3, [r7, #20]
 8002dbc:	005b      	lsls	r3, r3, #1
 8002dbe:	2103      	movs	r1, #3
 8002dc0:	fa01 f303 	lsl.w	r3, r1, r3
 8002dc4:	43db      	mvns	r3, r3
 8002dc6:	401a      	ands	r2, r3
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	60da      	str	r2, [r3, #12]
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	685a      	ldr	r2, [r3, #4]
 8002dd0:	2101      	movs	r1, #1
 8002dd2:	697b      	ldr	r3, [r7, #20]
 8002dd4:	fa01 f303 	lsl.w	r3, r1, r3
 8002dd8:	43db      	mvns	r3, r3
 8002dda:	401a      	ands	r2, r3
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	605a      	str	r2, [r3, #4]
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	689a      	ldr	r2, [r3, #8]
 8002de4:	697b      	ldr	r3, [r7, #20]
 8002de6:	005b      	lsls	r3, r3, #1
 8002de8:	2103      	movs	r1, #3
 8002dea:	fa01 f303 	lsl.w	r3, r1, r3
 8002dee:	43db      	mvns	r3, r3
 8002df0:	401a      	ands	r2, r3
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	609a      	str	r2, [r3, #8]
 8002df6:	697b      	ldr	r3, [r7, #20]
 8002df8:	3301      	adds	r3, #1
 8002dfa:	617b      	str	r3, [r7, #20]
 8002dfc:	697b      	ldr	r3, [r7, #20]
 8002dfe:	2b0f      	cmp	r3, #15
 8002e00:	f67f af40 	bls.w	8002c84 <HAL_GPIO_DeInit+0x1c>
 8002e04:	bf00      	nop
 8002e06:	bf00      	nop
 8002e08:	371c      	adds	r7, #28
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e10:	4770      	bx	lr
 8002e12:	bf00      	nop
 8002e14:	40013800 	.word	0x40013800
 8002e18:	40020000 	.word	0x40020000
 8002e1c:	40020400 	.word	0x40020400
 8002e20:	40020800 	.word	0x40020800
 8002e24:	40020c00 	.word	0x40020c00
 8002e28:	40021000 	.word	0x40021000
 8002e2c:	40013c00 	.word	0x40013c00

08002e30 <HAL_GPIO_WritePin>:
 8002e30:	b480      	push	{r7}
 8002e32:	b083      	sub	sp, #12
 8002e34:	af00      	add	r7, sp, #0
 8002e36:	6078      	str	r0, [r7, #4]
 8002e38:	460b      	mov	r3, r1
 8002e3a:	807b      	strh	r3, [r7, #2]
 8002e3c:	4613      	mov	r3, r2
 8002e3e:	707b      	strb	r3, [r7, #1]
 8002e40:	787b      	ldrb	r3, [r7, #1]
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d003      	beq.n	8002e4e <HAL_GPIO_WritePin+0x1e>
 8002e46:	887a      	ldrh	r2, [r7, #2]
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	619a      	str	r2, [r3, #24]
 8002e4c:	e003      	b.n	8002e56 <HAL_GPIO_WritePin+0x26>
 8002e4e:	887b      	ldrh	r3, [r7, #2]
 8002e50:	041a      	lsls	r2, r3, #16
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	619a      	str	r2, [r3, #24]
 8002e56:	bf00      	nop
 8002e58:	370c      	adds	r7, #12
 8002e5a:	46bd      	mov	sp, r7
 8002e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e60:	4770      	bx	lr

08002e62 <HAL_GPIO_TogglePin>:
 8002e62:	b480      	push	{r7}
 8002e64:	b085      	sub	sp, #20
 8002e66:	af00      	add	r7, sp, #0
 8002e68:	6078      	str	r0, [r7, #4]
 8002e6a:	460b      	mov	r3, r1
 8002e6c:	807b      	strh	r3, [r7, #2]
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	695b      	ldr	r3, [r3, #20]
 8002e72:	60fb      	str	r3, [r7, #12]
 8002e74:	887a      	ldrh	r2, [r7, #2]
 8002e76:	68fb      	ldr	r3, [r7, #12]
 8002e78:	4013      	ands	r3, r2
 8002e7a:	041a      	lsls	r2, r3, #16
 8002e7c:	68fb      	ldr	r3, [r7, #12]
 8002e7e:	43d9      	mvns	r1, r3
 8002e80:	887b      	ldrh	r3, [r7, #2]
 8002e82:	400b      	ands	r3, r1
 8002e84:	431a      	orrs	r2, r3
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	619a      	str	r2, [r3, #24]
 8002e8a:	bf00      	nop
 8002e8c:	3714      	adds	r7, #20
 8002e8e:	46bd      	mov	sp, r7
 8002e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e94:	4770      	bx	lr
	...

08002e98 <HAL_I2C_Init>:
 8002e98:	b580      	push	{r7, lr}
 8002e9a:	b084      	sub	sp, #16
 8002e9c:	af00      	add	r7, sp, #0
 8002e9e:	6078      	str	r0, [r7, #4]
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d101      	bne.n	8002eaa <HAL_I2C_Init+0x12>
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	e12b      	b.n	8003102 <HAL_I2C_Init+0x26a>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002eb0:	b2db      	uxtb	r3, r3
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d106      	bne.n	8002ec4 <HAL_I2C_Init+0x2c>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	2200      	movs	r2, #0
 8002eba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ebe:	6878      	ldr	r0, [r7, #4]
 8002ec0:	f7fe fc44 	bl	800174c <HAL_I2C_MspInit>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	2224      	movs	r2, #36	@ 0x24
 8002ec8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	681a      	ldr	r2, [r3, #0]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	f022 0201 	bic.w	r2, r2, #1
 8002eda:	601a      	str	r2, [r3, #0]
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	681a      	ldr	r2, [r3, #0]
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002eea:	601a      	str	r2, [r3, #0]
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	681a      	ldr	r2, [r3, #0]
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002efa:	601a      	str	r2, [r3, #0]
 8002efc:	f001 fc50 	bl	80047a0 <HAL_RCC_GetPCLK1Freq>
 8002f00:	60f8      	str	r0, [r7, #12]
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	685b      	ldr	r3, [r3, #4]
 8002f06:	4a81      	ldr	r2, [pc, #516]	@ (800310c <HAL_I2C_Init+0x274>)
 8002f08:	4293      	cmp	r3, r2
 8002f0a:	d807      	bhi.n	8002f1c <HAL_I2C_Init+0x84>
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	4a80      	ldr	r2, [pc, #512]	@ (8003110 <HAL_I2C_Init+0x278>)
 8002f10:	4293      	cmp	r3, r2
 8002f12:	bf94      	ite	ls
 8002f14:	2301      	movls	r3, #1
 8002f16:	2300      	movhi	r3, #0
 8002f18:	b2db      	uxtb	r3, r3
 8002f1a:	e006      	b.n	8002f2a <HAL_I2C_Init+0x92>
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	4a7d      	ldr	r2, [pc, #500]	@ (8003114 <HAL_I2C_Init+0x27c>)
 8002f20:	4293      	cmp	r3, r2
 8002f22:	bf94      	ite	ls
 8002f24:	2301      	movls	r3, #1
 8002f26:	2300      	movhi	r3, #0
 8002f28:	b2db      	uxtb	r3, r3
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d001      	beq.n	8002f32 <HAL_I2C_Init+0x9a>
 8002f2e:	2301      	movs	r3, #1
 8002f30:	e0e7      	b.n	8003102 <HAL_I2C_Init+0x26a>
 8002f32:	68fb      	ldr	r3, [r7, #12]
 8002f34:	4a78      	ldr	r2, [pc, #480]	@ (8003118 <HAL_I2C_Init+0x280>)
 8002f36:	fba2 2303 	umull	r2, r3, r2, r3
 8002f3a:	0c9b      	lsrs	r3, r3, #18
 8002f3c:	60bb      	str	r3, [r7, #8]
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	685b      	ldr	r3, [r3, #4]
 8002f44:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	68ba      	ldr	r2, [r7, #8]
 8002f4e:	430a      	orrs	r2, r1
 8002f50:	605a      	str	r2, [r3, #4]
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	6a1b      	ldr	r3, [r3, #32]
 8002f58:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	685b      	ldr	r3, [r3, #4]
 8002f60:	4a6a      	ldr	r2, [pc, #424]	@ (800310c <HAL_I2C_Init+0x274>)
 8002f62:	4293      	cmp	r3, r2
 8002f64:	d802      	bhi.n	8002f6c <HAL_I2C_Init+0xd4>
 8002f66:	68bb      	ldr	r3, [r7, #8]
 8002f68:	3301      	adds	r3, #1
 8002f6a:	e009      	b.n	8002f80 <HAL_I2C_Init+0xe8>
 8002f6c:	68bb      	ldr	r3, [r7, #8]
 8002f6e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002f72:	fb02 f303 	mul.w	r3, r2, r3
 8002f76:	4a69      	ldr	r2, [pc, #420]	@ (800311c <HAL_I2C_Init+0x284>)
 8002f78:	fba2 2303 	umull	r2, r3, r2, r3
 8002f7c:	099b      	lsrs	r3, r3, #6
 8002f7e:	3301      	adds	r3, #1
 8002f80:	687a      	ldr	r2, [r7, #4]
 8002f82:	6812      	ldr	r2, [r2, #0]
 8002f84:	430b      	orrs	r3, r1
 8002f86:	6213      	str	r3, [r2, #32]
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	69db      	ldr	r3, [r3, #28]
 8002f8e:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002f92:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	685b      	ldr	r3, [r3, #4]
 8002f9a:	495c      	ldr	r1, [pc, #368]	@ (800310c <HAL_I2C_Init+0x274>)
 8002f9c:	428b      	cmp	r3, r1
 8002f9e:	d819      	bhi.n	8002fd4 <HAL_I2C_Init+0x13c>
 8002fa0:	68fb      	ldr	r3, [r7, #12]
 8002fa2:	1e59      	subs	r1, r3, #1
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	685b      	ldr	r3, [r3, #4]
 8002fa8:	005b      	lsls	r3, r3, #1
 8002faa:	fbb1 f3f3 	udiv	r3, r1, r3
 8002fae:	1c59      	adds	r1, r3, #1
 8002fb0:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8002fb4:	400b      	ands	r3, r1
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d00a      	beq.n	8002fd0 <HAL_I2C_Init+0x138>
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	1e59      	subs	r1, r3, #1
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	685b      	ldr	r3, [r3, #4]
 8002fc2:	005b      	lsls	r3, r3, #1
 8002fc4:	fbb1 f3f3 	udiv	r3, r1, r3
 8002fc8:	3301      	adds	r3, #1
 8002fca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002fce:	e051      	b.n	8003074 <HAL_I2C_Init+0x1dc>
 8002fd0:	2304      	movs	r3, #4
 8002fd2:	e04f      	b.n	8003074 <HAL_I2C_Init+0x1dc>
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	689b      	ldr	r3, [r3, #8]
 8002fd8:	2b00      	cmp	r3, #0
 8002fda:	d111      	bne.n	8003000 <HAL_I2C_Init+0x168>
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	1e58      	subs	r0, r3, #1
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	6859      	ldr	r1, [r3, #4]
 8002fe4:	460b      	mov	r3, r1
 8002fe6:	005b      	lsls	r3, r3, #1
 8002fe8:	440b      	add	r3, r1
 8002fea:	fbb0 f3f3 	udiv	r3, r0, r3
 8002fee:	3301      	adds	r3, #1
 8002ff0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	bf0c      	ite	eq
 8002ff8:	2301      	moveq	r3, #1
 8002ffa:	2300      	movne	r3, #0
 8002ffc:	b2db      	uxtb	r3, r3
 8002ffe:	e012      	b.n	8003026 <HAL_I2C_Init+0x18e>
 8003000:	68fb      	ldr	r3, [r7, #12]
 8003002:	1e58      	subs	r0, r3, #1
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	6859      	ldr	r1, [r3, #4]
 8003008:	460b      	mov	r3, r1
 800300a:	009b      	lsls	r3, r3, #2
 800300c:	440b      	add	r3, r1
 800300e:	0099      	lsls	r1, r3, #2
 8003010:	440b      	add	r3, r1
 8003012:	fbb0 f3f3 	udiv	r3, r0, r3
 8003016:	3301      	adds	r3, #1
 8003018:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800301c:	2b00      	cmp	r3, #0
 800301e:	bf0c      	ite	eq
 8003020:	2301      	moveq	r3, #1
 8003022:	2300      	movne	r3, #0
 8003024:	b2db      	uxtb	r3, r3
 8003026:	2b00      	cmp	r3, #0
 8003028:	d001      	beq.n	800302e <HAL_I2C_Init+0x196>
 800302a:	2301      	movs	r3, #1
 800302c:	e022      	b.n	8003074 <HAL_I2C_Init+0x1dc>
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	689b      	ldr	r3, [r3, #8]
 8003032:	2b00      	cmp	r3, #0
 8003034:	d10e      	bne.n	8003054 <HAL_I2C_Init+0x1bc>
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	1e58      	subs	r0, r3, #1
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6859      	ldr	r1, [r3, #4]
 800303e:	460b      	mov	r3, r1
 8003040:	005b      	lsls	r3, r3, #1
 8003042:	440b      	add	r3, r1
 8003044:	fbb0 f3f3 	udiv	r3, r0, r3
 8003048:	3301      	adds	r3, #1
 800304a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800304e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003052:	e00f      	b.n	8003074 <HAL_I2C_Init+0x1dc>
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	1e58      	subs	r0, r3, #1
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	6859      	ldr	r1, [r3, #4]
 800305c:	460b      	mov	r3, r1
 800305e:	009b      	lsls	r3, r3, #2
 8003060:	440b      	add	r3, r1
 8003062:	0099      	lsls	r1, r3, #2
 8003064:	440b      	add	r3, r1
 8003066:	fbb0 f3f3 	udiv	r3, r0, r3
 800306a:	3301      	adds	r3, #1
 800306c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003070:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8003074:	6879      	ldr	r1, [r7, #4]
 8003076:	6809      	ldr	r1, [r1, #0]
 8003078:	4313      	orrs	r3, r2
 800307a:	61cb      	str	r3, [r1, #28]
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	69da      	ldr	r2, [r3, #28]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	6a1b      	ldr	r3, [r3, #32]
 800308e:	431a      	orrs	r2, r3
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	430a      	orrs	r2, r1
 8003096:	601a      	str	r2, [r3, #0]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	689b      	ldr	r3, [r3, #8]
 800309e:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80030a2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80030a6:	687a      	ldr	r2, [r7, #4]
 80030a8:	6911      	ldr	r1, [r2, #16]
 80030aa:	687a      	ldr	r2, [r7, #4]
 80030ac:	68d2      	ldr	r2, [r2, #12]
 80030ae:	4311      	orrs	r1, r2
 80030b0:	687a      	ldr	r2, [r7, #4]
 80030b2:	6812      	ldr	r2, [r2, #0]
 80030b4:	430b      	orrs	r3, r1
 80030b6:	6093      	str	r3, [r2, #8]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	68db      	ldr	r3, [r3, #12]
 80030be:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	695a      	ldr	r2, [r3, #20]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	699b      	ldr	r3, [r3, #24]
 80030ca:	431a      	orrs	r2, r3
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	430a      	orrs	r2, r1
 80030d2:	60da      	str	r2, [r3, #12]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	681a      	ldr	r2, [r3, #0]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f042 0201 	orr.w	r2, r2, #1
 80030e2:	601a      	str	r2, [r3, #0]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	2200      	movs	r2, #0
 80030e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	2220      	movs	r2, #32
 80030ee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	2200      	movs	r2, #0
 80030f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	2200      	movs	r2, #0
 80030fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003100:	2300      	movs	r3, #0
 8003102:	4618      	mov	r0, r3
 8003104:	3710      	adds	r7, #16
 8003106:	46bd      	mov	sp, r7
 8003108:	bd80      	pop	{r7, pc}
 800310a:	bf00      	nop
 800310c:	000186a0 	.word	0x000186a0
 8003110:	001e847f 	.word	0x001e847f
 8003114:	003d08ff 	.word	0x003d08ff
 8003118:	431bde83 	.word	0x431bde83
 800311c:	10624dd3 	.word	0x10624dd3

08003120 <HAL_I2C_DeInit>:
 8003120:	b580      	push	{r7, lr}
 8003122:	b082      	sub	sp, #8
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	2b00      	cmp	r3, #0
 800312c:	d101      	bne.n	8003132 <HAL_I2C_DeInit+0x12>
 800312e:	2301      	movs	r3, #1
 8003130:	e021      	b.n	8003176 <HAL_I2C_DeInit+0x56>
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	2224      	movs	r2, #36	@ 0x24
 8003136:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	681a      	ldr	r2, [r3, #0]
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	f022 0201 	bic.w	r2, r2, #1
 8003148:	601a      	str	r2, [r3, #0]
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f7fe fb9a 	bl	8001884 <HAL_I2C_MspDeInit>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	2200      	movs	r2, #0
 8003154:	641a      	str	r2, [r3, #64]	@ 0x40
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	2200      	movs	r2, #0
 800315a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	2200      	movs	r2, #0
 8003162:	631a      	str	r2, [r3, #48]	@ 0x30
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	2200      	movs	r2, #0
 8003168:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	2200      	movs	r2, #0
 8003170:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003174:	2300      	movs	r3, #0
 8003176:	4618      	mov	r0, r3
 8003178:	3708      	adds	r7, #8
 800317a:	46bd      	mov	sp, r7
 800317c:	bd80      	pop	{r7, pc}
	...

08003180 <HAL_I2C_Mem_Write>:
 8003180:	b580      	push	{r7, lr}
 8003182:	b088      	sub	sp, #32
 8003184:	af02      	add	r7, sp, #8
 8003186:	60f8      	str	r0, [r7, #12]
 8003188:	4608      	mov	r0, r1
 800318a:	4611      	mov	r1, r2
 800318c:	461a      	mov	r2, r3
 800318e:	4603      	mov	r3, r0
 8003190:	817b      	strh	r3, [r7, #10]
 8003192:	460b      	mov	r3, r1
 8003194:	813b      	strh	r3, [r7, #8]
 8003196:	4613      	mov	r3, r2
 8003198:	80fb      	strh	r3, [r7, #6]
 800319a:	f7fe fe9d 	bl	8001ed8 <HAL_GetTick>
 800319e:	6178      	str	r0, [r7, #20]
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031a6:	b2db      	uxtb	r3, r3
 80031a8:	2b20      	cmp	r3, #32
 80031aa:	f040 80d9 	bne.w	8003360 <HAL_I2C_Mem_Write+0x1e0>
 80031ae:	697b      	ldr	r3, [r7, #20]
 80031b0:	9300      	str	r3, [sp, #0]
 80031b2:	2319      	movs	r3, #25
 80031b4:	2201      	movs	r2, #1
 80031b6:	496d      	ldr	r1, [pc, #436]	@ (800336c <HAL_I2C_Mem_Write+0x1ec>)
 80031b8:	68f8      	ldr	r0, [r7, #12]
 80031ba:	f000 fc8b 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 80031be:	4603      	mov	r3, r0
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	d001      	beq.n	80031c8 <HAL_I2C_Mem_Write+0x48>
 80031c4:	2302      	movs	r3, #2
 80031c6:	e0cc      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80031ce:	2b01      	cmp	r3, #1
 80031d0:	d101      	bne.n	80031d6 <HAL_I2C_Mem_Write+0x56>
 80031d2:	2302      	movs	r3, #2
 80031d4:	e0c5      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	2201      	movs	r2, #1
 80031da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	f003 0301 	and.w	r3, r3, #1
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	d007      	beq.n	80031fc <HAL_I2C_Mem_Write+0x7c>
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	681a      	ldr	r2, [r3, #0]
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	f042 0201 	orr.w	r2, r2, #1
 80031fa:	601a      	str	r2, [r3, #0]
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	681a      	ldr	r2, [r3, #0]
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800320a:	601a      	str	r2, [r3, #0]
 800320c:	68fb      	ldr	r3, [r7, #12]
 800320e:	2221      	movs	r2, #33	@ 0x21
 8003210:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	2240      	movs	r2, #64	@ 0x40
 8003218:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	2200      	movs	r2, #0
 8003220:	641a      	str	r2, [r3, #64]	@ 0x40
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	6a3a      	ldr	r2, [r7, #32]
 8003226:	625a      	str	r2, [r3, #36]	@ 0x24
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800322c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003232:	b29a      	uxth	r2, r3
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	4a4d      	ldr	r2, [pc, #308]	@ (8003370 <HAL_I2C_Mem_Write+0x1f0>)
 800323c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800323e:	88f8      	ldrh	r0, [r7, #6]
 8003240:	893a      	ldrh	r2, [r7, #8]
 8003242:	8979      	ldrh	r1, [r7, #10]
 8003244:	697b      	ldr	r3, [r7, #20]
 8003246:	9301      	str	r3, [sp, #4]
 8003248:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800324a:	9300      	str	r3, [sp, #0]
 800324c:	4603      	mov	r3, r0
 800324e:	68f8      	ldr	r0, [r7, #12]
 8003250:	f000 fac2 	bl	80037d8 <I2C_RequestMemoryWrite>
 8003254:	4603      	mov	r3, r0
 8003256:	2b00      	cmp	r3, #0
 8003258:	d052      	beq.n	8003300 <HAL_I2C_Mem_Write+0x180>
 800325a:	2301      	movs	r3, #1
 800325c:	e081      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 800325e:	697a      	ldr	r2, [r7, #20]
 8003260:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003262:	68f8      	ldr	r0, [r7, #12]
 8003264:	f000 fd50 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 8003268:	4603      	mov	r3, r0
 800326a:	2b00      	cmp	r3, #0
 800326c:	d00d      	beq.n	800328a <HAL_I2C_Mem_Write+0x10a>
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003272:	2b04      	cmp	r3, #4
 8003274:	d107      	bne.n	8003286 <HAL_I2C_Mem_Write+0x106>
 8003276:	68fb      	ldr	r3, [r7, #12]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	681a      	ldr	r2, [r3, #0]
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003284:	601a      	str	r2, [r3, #0]
 8003286:	2301      	movs	r3, #1
 8003288:	e06b      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800328e:	781a      	ldrb	r2, [r3, #0]
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	611a      	str	r2, [r3, #16]
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800329a:	1c5a      	adds	r2, r3, #1
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	625a      	str	r2, [r3, #36]	@ 0x24
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032a4:	3b01      	subs	r3, #1
 80032a6:	b29a      	uxth	r2, r3
 80032a8:	68fb      	ldr	r3, [r7, #12]
 80032aa:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032b0:	b29b      	uxth	r3, r3
 80032b2:	3b01      	subs	r3, #1
 80032b4:	b29a      	uxth	r2, r3
 80032b6:	68fb      	ldr	r3, [r7, #12]
 80032b8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80032ba:	68fb      	ldr	r3, [r7, #12]
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	695b      	ldr	r3, [r3, #20]
 80032c0:	f003 0304 	and.w	r3, r3, #4
 80032c4:	2b04      	cmp	r3, #4
 80032c6:	d11b      	bne.n	8003300 <HAL_I2C_Mem_Write+0x180>
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d017      	beq.n	8003300 <HAL_I2C_Mem_Write+0x180>
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032d4:	781a      	ldrb	r2, [r3, #0]
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	611a      	str	r2, [r3, #16]
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032e0:	1c5a      	adds	r2, r3, #1
 80032e2:	68fb      	ldr	r3, [r7, #12]
 80032e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032ea:	3b01      	subs	r3, #1
 80032ec:	b29a      	uxth	r2, r3
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032f6:	b29b      	uxth	r3, r3
 80032f8:	3b01      	subs	r3, #1
 80032fa:	b29a      	uxth	r2, r3
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003300:	68fb      	ldr	r3, [r7, #12]
 8003302:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003304:	2b00      	cmp	r3, #0
 8003306:	d1aa      	bne.n	800325e <HAL_I2C_Mem_Write+0xde>
 8003308:	697a      	ldr	r2, [r7, #20]
 800330a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800330c:	68f8      	ldr	r0, [r7, #12]
 800330e:	f000 fd43 	bl	8003d98 <I2C_WaitOnBTFFlagUntilTimeout>
 8003312:	4603      	mov	r3, r0
 8003314:	2b00      	cmp	r3, #0
 8003316:	d00d      	beq.n	8003334 <HAL_I2C_Mem_Write+0x1b4>
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800331c:	2b04      	cmp	r3, #4
 800331e:	d107      	bne.n	8003330 <HAL_I2C_Mem_Write+0x1b0>
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	681a      	ldr	r2, [r3, #0]
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800332e:	601a      	str	r2, [r3, #0]
 8003330:	2301      	movs	r3, #1
 8003332:	e016      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	681a      	ldr	r2, [r3, #0]
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003342:	601a      	str	r2, [r3, #0]
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	2220      	movs	r2, #32
 8003348:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	2200      	movs	r2, #0
 8003350:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	2200      	movs	r2, #0
 8003358:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800335c:	2300      	movs	r3, #0
 800335e:	e000      	b.n	8003362 <HAL_I2C_Mem_Write+0x1e2>
 8003360:	2302      	movs	r3, #2
 8003362:	4618      	mov	r0, r3
 8003364:	3718      	adds	r7, #24
 8003366:	46bd      	mov	sp, r7
 8003368:	bd80      	pop	{r7, pc}
 800336a:	bf00      	nop
 800336c:	00100002 	.word	0x00100002
 8003370:	ffff0000 	.word	0xffff0000

08003374 <HAL_I2C_Mem_Read>:
 8003374:	b580      	push	{r7, lr}
 8003376:	b08c      	sub	sp, #48	@ 0x30
 8003378:	af02      	add	r7, sp, #8
 800337a:	60f8      	str	r0, [r7, #12]
 800337c:	4608      	mov	r0, r1
 800337e:	4611      	mov	r1, r2
 8003380:	461a      	mov	r2, r3
 8003382:	4603      	mov	r3, r0
 8003384:	817b      	strh	r3, [r7, #10]
 8003386:	460b      	mov	r3, r1
 8003388:	813b      	strh	r3, [r7, #8]
 800338a:	4613      	mov	r3, r2
 800338c:	80fb      	strh	r3, [r7, #6]
 800338e:	f7fe fda3 	bl	8001ed8 <HAL_GetTick>
 8003392:	6278      	str	r0, [r7, #36]	@ 0x24
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800339a:	b2db      	uxtb	r3, r3
 800339c:	2b20      	cmp	r3, #32
 800339e:	f040 8214 	bne.w	80037ca <HAL_I2C_Mem_Read+0x456>
 80033a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033a4:	9300      	str	r3, [sp, #0]
 80033a6:	2319      	movs	r3, #25
 80033a8:	2201      	movs	r2, #1
 80033aa:	497b      	ldr	r1, [pc, #492]	@ (8003598 <HAL_I2C_Mem_Read+0x224>)
 80033ac:	68f8      	ldr	r0, [r7, #12]
 80033ae:	f000 fb91 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 80033b2:	4603      	mov	r3, r0
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d001      	beq.n	80033bc <HAL_I2C_Mem_Read+0x48>
 80033b8:	2302      	movs	r3, #2
 80033ba:	e207      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80033c2:	2b01      	cmp	r3, #1
 80033c4:	d101      	bne.n	80033ca <HAL_I2C_Mem_Read+0x56>
 80033c6:	2302      	movs	r3, #2
 80033c8:	e200      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	2201      	movs	r2, #1
 80033ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f003 0301 	and.w	r3, r3, #1
 80033dc:	2b01      	cmp	r3, #1
 80033de:	d007      	beq.n	80033f0 <HAL_I2C_Mem_Read+0x7c>
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	681a      	ldr	r2, [r3, #0]
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	f042 0201 	orr.w	r2, r2, #1
 80033ee:	601a      	str	r2, [r3, #0]
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	681a      	ldr	r2, [r3, #0]
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80033fe:	601a      	str	r2, [r3, #0]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	2222      	movs	r2, #34	@ 0x22
 8003404:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	2240      	movs	r2, #64	@ 0x40
 800340c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	2200      	movs	r2, #0
 8003414:	641a      	str	r2, [r3, #64]	@ 0x40
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800341a:	625a      	str	r2, [r3, #36]	@ 0x24
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8003420:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003426:	b29a      	uxth	r2, r3
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	4a5b      	ldr	r2, [pc, #364]	@ (800359c <HAL_I2C_Mem_Read+0x228>)
 8003430:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003432:	88f8      	ldrh	r0, [r7, #6]
 8003434:	893a      	ldrh	r2, [r7, #8]
 8003436:	8979      	ldrh	r1, [r7, #10]
 8003438:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800343a:	9301      	str	r3, [sp, #4]
 800343c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800343e:	9300      	str	r3, [sp, #0]
 8003440:	4603      	mov	r3, r0
 8003442:	68f8      	ldr	r0, [r7, #12]
 8003444:	f000 fa5e 	bl	8003904 <I2C_RequestMemoryRead>
 8003448:	4603      	mov	r3, r0
 800344a:	2b00      	cmp	r3, #0
 800344c:	d001      	beq.n	8003452 <HAL_I2C_Mem_Read+0xde>
 800344e:	2301      	movs	r3, #1
 8003450:	e1bc      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003456:	2b00      	cmp	r3, #0
 8003458:	d113      	bne.n	8003482 <HAL_I2C_Mem_Read+0x10e>
 800345a:	2300      	movs	r3, #0
 800345c:	623b      	str	r3, [r7, #32]
 800345e:	68fb      	ldr	r3, [r7, #12]
 8003460:	681b      	ldr	r3, [r3, #0]
 8003462:	695b      	ldr	r3, [r3, #20]
 8003464:	623b      	str	r3, [r7, #32]
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	699b      	ldr	r3, [r3, #24]
 800346c:	623b      	str	r3, [r7, #32]
 800346e:	6a3b      	ldr	r3, [r7, #32]
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	681a      	ldr	r2, [r3, #0]
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800347e:	601a      	str	r2, [r3, #0]
 8003480:	e190      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 8003482:	68fb      	ldr	r3, [r7, #12]
 8003484:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003486:	2b01      	cmp	r3, #1
 8003488:	d11b      	bne.n	80034c2 <HAL_I2C_Mem_Read+0x14e>
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	681a      	ldr	r2, [r3, #0]
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003498:	601a      	str	r2, [r3, #0]
 800349a:	2300      	movs	r3, #0
 800349c:	61fb      	str	r3, [r7, #28]
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	695b      	ldr	r3, [r3, #20]
 80034a4:	61fb      	str	r3, [r7, #28]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	699b      	ldr	r3, [r3, #24]
 80034ac:	61fb      	str	r3, [r7, #28]
 80034ae:	69fb      	ldr	r3, [r7, #28]
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	681a      	ldr	r2, [r3, #0]
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80034be:	601a      	str	r2, [r3, #0]
 80034c0:	e170      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034c6:	2b02      	cmp	r3, #2
 80034c8:	d11b      	bne.n	8003502 <HAL_I2C_Mem_Read+0x18e>
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	681a      	ldr	r2, [r3, #0]
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034d8:	601a      	str	r2, [r3, #0]
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	681a      	ldr	r2, [r3, #0]
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80034e8:	601a      	str	r2, [r3, #0]
 80034ea:	2300      	movs	r3, #0
 80034ec:	61bb      	str	r3, [r7, #24]
 80034ee:	68fb      	ldr	r3, [r7, #12]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	695b      	ldr	r3, [r3, #20]
 80034f4:	61bb      	str	r3, [r7, #24]
 80034f6:	68fb      	ldr	r3, [r7, #12]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	699b      	ldr	r3, [r3, #24]
 80034fc:	61bb      	str	r3, [r7, #24]
 80034fe:	69bb      	ldr	r3, [r7, #24]
 8003500:	e150      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 8003502:	2300      	movs	r3, #0
 8003504:	617b      	str	r3, [r7, #20]
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	695b      	ldr	r3, [r3, #20]
 800350c:	617b      	str	r3, [r7, #20]
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	699b      	ldr	r3, [r3, #24]
 8003514:	617b      	str	r3, [r7, #20]
 8003516:	697b      	ldr	r3, [r7, #20]
 8003518:	e144      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800351e:	2b03      	cmp	r3, #3
 8003520:	f200 80f1 	bhi.w	8003706 <HAL_I2C_Mem_Read+0x392>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003528:	2b01      	cmp	r3, #1
 800352a:	d123      	bne.n	8003574 <HAL_I2C_Mem_Read+0x200>
 800352c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800352e:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003530:	68f8      	ldr	r0, [r7, #12]
 8003532:	f000 fc79 	bl	8003e28 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003536:	4603      	mov	r3, r0
 8003538:	2b00      	cmp	r3, #0
 800353a:	d001      	beq.n	8003540 <HAL_I2C_Mem_Read+0x1cc>
 800353c:	2301      	movs	r3, #1
 800353e:	e145      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	691a      	ldr	r2, [r3, #16]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800354a:	b2d2      	uxtb	r2, r2
 800354c:	701a      	strb	r2, [r3, #0]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003552:	1c5a      	adds	r2, r3, #1
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	625a      	str	r2, [r3, #36]	@ 0x24
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800355c:	3b01      	subs	r3, #1
 800355e:	b29a      	uxth	r2, r3
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003568:	b29b      	uxth	r3, r3
 800356a:	3b01      	subs	r3, #1
 800356c:	b29a      	uxth	r2, r3
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003572:	e117      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 8003574:	68fb      	ldr	r3, [r7, #12]
 8003576:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003578:	2b02      	cmp	r3, #2
 800357a:	d14e      	bne.n	800361a <HAL_I2C_Mem_Read+0x2a6>
 800357c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800357e:	9300      	str	r3, [sp, #0]
 8003580:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003582:	2200      	movs	r2, #0
 8003584:	4906      	ldr	r1, [pc, #24]	@ (80035a0 <HAL_I2C_Mem_Read+0x22c>)
 8003586:	68f8      	ldr	r0, [r7, #12]
 8003588:	f000 faa4 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 800358c:	4603      	mov	r3, r0
 800358e:	2b00      	cmp	r3, #0
 8003590:	d008      	beq.n	80035a4 <HAL_I2C_Mem_Read+0x230>
 8003592:	2301      	movs	r3, #1
 8003594:	e11a      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 8003596:	bf00      	nop
 8003598:	00100002 	.word	0x00100002
 800359c:	ffff0000 	.word	0xffff0000
 80035a0:	00010004 	.word	0x00010004
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	681a      	ldr	r2, [r3, #0]
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035b2:	601a      	str	r2, [r3, #0]
 80035b4:	68fb      	ldr	r3, [r7, #12]
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	691a      	ldr	r2, [r3, #16]
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035be:	b2d2      	uxtb	r2, r2
 80035c0:	701a      	strb	r2, [r3, #0]
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035c6:	1c5a      	adds	r2, r3, #1
 80035c8:	68fb      	ldr	r3, [r7, #12]
 80035ca:	625a      	str	r2, [r3, #36]	@ 0x24
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035d0:	3b01      	subs	r3, #1
 80035d2:	b29a      	uxth	r2, r3
 80035d4:	68fb      	ldr	r3, [r7, #12]
 80035d6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035dc:	b29b      	uxth	r3, r3
 80035de:	3b01      	subs	r3, #1
 80035e0:	b29a      	uxth	r2, r3
 80035e2:	68fb      	ldr	r3, [r7, #12]
 80035e4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	691a      	ldr	r2, [r3, #16]
 80035ec:	68fb      	ldr	r3, [r7, #12]
 80035ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035f0:	b2d2      	uxtb	r2, r2
 80035f2:	701a      	strb	r2, [r3, #0]
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035f8:	1c5a      	adds	r2, r3, #1
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	625a      	str	r2, [r3, #36]	@ 0x24
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003602:	3b01      	subs	r3, #1
 8003604:	b29a      	uxth	r2, r3
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	851a      	strh	r2, [r3, #40]	@ 0x28
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800360e:	b29b      	uxth	r3, r3
 8003610:	3b01      	subs	r3, #1
 8003612:	b29a      	uxth	r2, r3
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003618:	e0c4      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 800361a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800361c:	9300      	str	r3, [sp, #0]
 800361e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003620:	2200      	movs	r2, #0
 8003622:	496c      	ldr	r1, [pc, #432]	@ (80037d4 <HAL_I2C_Mem_Read+0x460>)
 8003624:	68f8      	ldr	r0, [r7, #12]
 8003626:	f000 fa55 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 800362a:	4603      	mov	r3, r0
 800362c:	2b00      	cmp	r3, #0
 800362e:	d001      	beq.n	8003634 <HAL_I2C_Mem_Read+0x2c0>
 8003630:	2301      	movs	r3, #1
 8003632:	e0cb      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	681a      	ldr	r2, [r3, #0]
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003642:	601a      	str	r2, [r3, #0]
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	691a      	ldr	r2, [r3, #16]
 800364a:	68fb      	ldr	r3, [r7, #12]
 800364c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800364e:	b2d2      	uxtb	r2, r2
 8003650:	701a      	strb	r2, [r3, #0]
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003656:	1c5a      	adds	r2, r3, #1
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	625a      	str	r2, [r3, #36]	@ 0x24
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003660:	3b01      	subs	r3, #1
 8003662:	b29a      	uxth	r2, r3
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800366c:	b29b      	uxth	r3, r3
 800366e:	3b01      	subs	r3, #1
 8003670:	b29a      	uxth	r2, r3
 8003672:	68fb      	ldr	r3, [r7, #12]
 8003674:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003676:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003678:	9300      	str	r3, [sp, #0]
 800367a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800367c:	2200      	movs	r2, #0
 800367e:	4955      	ldr	r1, [pc, #340]	@ (80037d4 <HAL_I2C_Mem_Read+0x460>)
 8003680:	68f8      	ldr	r0, [r7, #12]
 8003682:	f000 fa27 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 8003686:	4603      	mov	r3, r0
 8003688:	2b00      	cmp	r3, #0
 800368a:	d001      	beq.n	8003690 <HAL_I2C_Mem_Read+0x31c>
 800368c:	2301      	movs	r3, #1
 800368e:	e09d      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	681a      	ldr	r2, [r3, #0]
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800369e:	601a      	str	r2, [r3, #0]
 80036a0:	68fb      	ldr	r3, [r7, #12]
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	691a      	ldr	r2, [r3, #16]
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036aa:	b2d2      	uxtb	r2, r2
 80036ac:	701a      	strb	r2, [r3, #0]
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036b2:	1c5a      	adds	r2, r3, #1
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	625a      	str	r2, [r3, #36]	@ 0x24
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036bc:	3b01      	subs	r3, #1
 80036be:	b29a      	uxth	r2, r3
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80036c8:	b29b      	uxth	r3, r3
 80036ca:	3b01      	subs	r3, #1
 80036cc:	b29a      	uxth	r2, r3
 80036ce:	68fb      	ldr	r3, [r7, #12]
 80036d0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	691a      	ldr	r2, [r3, #16]
 80036d8:	68fb      	ldr	r3, [r7, #12]
 80036da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036dc:	b2d2      	uxtb	r2, r2
 80036de:	701a      	strb	r2, [r3, #0]
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036e4:	1c5a      	adds	r2, r3, #1
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	625a      	str	r2, [r3, #36]	@ 0x24
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036ee:	3b01      	subs	r3, #1
 80036f0:	b29a      	uxth	r2, r3
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80036fa:	b29b      	uxth	r3, r3
 80036fc:	3b01      	subs	r3, #1
 80036fe:	b29a      	uxth	r2, r3
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003704:	e04e      	b.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 8003706:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003708:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800370a:	68f8      	ldr	r0, [r7, #12]
 800370c:	f000 fb8c 	bl	8003e28 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003710:	4603      	mov	r3, r0
 8003712:	2b00      	cmp	r3, #0
 8003714:	d001      	beq.n	800371a <HAL_I2C_Mem_Read+0x3a6>
 8003716:	2301      	movs	r3, #1
 8003718:	e058      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	691a      	ldr	r2, [r3, #16]
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003724:	b2d2      	uxtb	r2, r2
 8003726:	701a      	strb	r2, [r3, #0]
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800372c:	1c5a      	adds	r2, r3, #1
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	625a      	str	r2, [r3, #36]	@ 0x24
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003736:	3b01      	subs	r3, #1
 8003738:	b29a      	uxth	r2, r3
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800373e:	68fb      	ldr	r3, [r7, #12]
 8003740:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003742:	b29b      	uxth	r3, r3
 8003744:	3b01      	subs	r3, #1
 8003746:	b29a      	uxth	r2, r3
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	695b      	ldr	r3, [r3, #20]
 8003752:	f003 0304 	and.w	r3, r3, #4
 8003756:	2b04      	cmp	r3, #4
 8003758:	d124      	bne.n	80037a4 <HAL_I2C_Mem_Read+0x430>
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800375e:	2b03      	cmp	r3, #3
 8003760:	d107      	bne.n	8003772 <HAL_I2C_Mem_Read+0x3fe>
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	681a      	ldr	r2, [r3, #0]
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003770:	601a      	str	r2, [r3, #0]
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	691a      	ldr	r2, [r3, #16]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800377c:	b2d2      	uxtb	r2, r2
 800377e:	701a      	strb	r2, [r3, #0]
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003784:	1c5a      	adds	r2, r3, #1
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	625a      	str	r2, [r3, #36]	@ 0x24
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800378e:	3b01      	subs	r3, #1
 8003790:	b29a      	uxth	r2, r3
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800379a:	b29b      	uxth	r3, r3
 800379c:	3b01      	subs	r3, #1
 800379e:	b29a      	uxth	r2, r3
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	f47f aeb6 	bne.w	800351a <HAL_I2C_Mem_Read+0x1a6>
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	2220      	movs	r2, #32
 80037b2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	2200      	movs	r2, #0
 80037ba:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	2200      	movs	r2, #0
 80037c2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037c6:	2300      	movs	r3, #0
 80037c8:	e000      	b.n	80037cc <HAL_I2C_Mem_Read+0x458>
 80037ca:	2302      	movs	r3, #2
 80037cc:	4618      	mov	r0, r3
 80037ce:	3728      	adds	r7, #40	@ 0x28
 80037d0:	46bd      	mov	sp, r7
 80037d2:	bd80      	pop	{r7, pc}
 80037d4:	00010004 	.word	0x00010004

080037d8 <I2C_RequestMemoryWrite>:
 80037d8:	b580      	push	{r7, lr}
 80037da:	b088      	sub	sp, #32
 80037dc:	af02      	add	r7, sp, #8
 80037de:	60f8      	str	r0, [r7, #12]
 80037e0:	4608      	mov	r0, r1
 80037e2:	4611      	mov	r1, r2
 80037e4:	461a      	mov	r2, r3
 80037e6:	4603      	mov	r3, r0
 80037e8:	817b      	strh	r3, [r7, #10]
 80037ea:	460b      	mov	r3, r1
 80037ec:	813b      	strh	r3, [r7, #8]
 80037ee:	4613      	mov	r3, r2
 80037f0:	80fb      	strh	r3, [r7, #6]
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	681a      	ldr	r2, [r3, #0]
 80037f8:	68fb      	ldr	r3, [r7, #12]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003800:	601a      	str	r2, [r3, #0]
 8003802:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003804:	9300      	str	r3, [sp, #0]
 8003806:	6a3b      	ldr	r3, [r7, #32]
 8003808:	2200      	movs	r2, #0
 800380a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800380e:	68f8      	ldr	r0, [r7, #12]
 8003810:	f000 f960 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d00d      	beq.n	8003836 <I2C_RequestMemoryWrite+0x5e>
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003824:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003828:	d103      	bne.n	8003832 <I2C_RequestMemoryWrite+0x5a>
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003830:	641a      	str	r2, [r3, #64]	@ 0x40
 8003832:	2303      	movs	r3, #3
 8003834:	e05f      	b.n	80038f6 <I2C_RequestMemoryWrite+0x11e>
 8003836:	897b      	ldrh	r3, [r7, #10]
 8003838:	b2db      	uxtb	r3, r3
 800383a:	461a      	mov	r2, r3
 800383c:	68fb      	ldr	r3, [r7, #12]
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003844:	611a      	str	r2, [r3, #16]
 8003846:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003848:	6a3a      	ldr	r2, [r7, #32]
 800384a:	492d      	ldr	r1, [pc, #180]	@ (8003900 <I2C_RequestMemoryWrite+0x128>)
 800384c:	68f8      	ldr	r0, [r7, #12]
 800384e:	f000 f9bb 	bl	8003bc8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003852:	4603      	mov	r3, r0
 8003854:	2b00      	cmp	r3, #0
 8003856:	d001      	beq.n	800385c <I2C_RequestMemoryWrite+0x84>
 8003858:	2301      	movs	r3, #1
 800385a:	e04c      	b.n	80038f6 <I2C_RequestMemoryWrite+0x11e>
 800385c:	2300      	movs	r3, #0
 800385e:	617b      	str	r3, [r7, #20]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	695b      	ldr	r3, [r3, #20]
 8003866:	617b      	str	r3, [r7, #20]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	699b      	ldr	r3, [r3, #24]
 800386e:	617b      	str	r3, [r7, #20]
 8003870:	697b      	ldr	r3, [r7, #20]
 8003872:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003874:	6a39      	ldr	r1, [r7, #32]
 8003876:	68f8      	ldr	r0, [r7, #12]
 8003878:	f000 fa46 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 800387c:	4603      	mov	r3, r0
 800387e:	2b00      	cmp	r3, #0
 8003880:	d00d      	beq.n	800389e <I2C_RequestMemoryWrite+0xc6>
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003886:	2b04      	cmp	r3, #4
 8003888:	d107      	bne.n	800389a <I2C_RequestMemoryWrite+0xc2>
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	681a      	ldr	r2, [r3, #0]
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003898:	601a      	str	r2, [r3, #0]
 800389a:	2301      	movs	r3, #1
 800389c:	e02b      	b.n	80038f6 <I2C_RequestMemoryWrite+0x11e>
 800389e:	88fb      	ldrh	r3, [r7, #6]
 80038a0:	2b01      	cmp	r3, #1
 80038a2:	d105      	bne.n	80038b0 <I2C_RequestMemoryWrite+0xd8>
 80038a4:	893b      	ldrh	r3, [r7, #8]
 80038a6:	b2da      	uxtb	r2, r3
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	611a      	str	r2, [r3, #16]
 80038ae:	e021      	b.n	80038f4 <I2C_RequestMemoryWrite+0x11c>
 80038b0:	893b      	ldrh	r3, [r7, #8]
 80038b2:	0a1b      	lsrs	r3, r3, #8
 80038b4:	b29b      	uxth	r3, r3
 80038b6:	b2da      	uxtb	r2, r3
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	611a      	str	r2, [r3, #16]
 80038be:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80038c0:	6a39      	ldr	r1, [r7, #32]
 80038c2:	68f8      	ldr	r0, [r7, #12]
 80038c4:	f000 fa20 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 80038c8:	4603      	mov	r3, r0
 80038ca:	2b00      	cmp	r3, #0
 80038cc:	d00d      	beq.n	80038ea <I2C_RequestMemoryWrite+0x112>
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038d2:	2b04      	cmp	r3, #4
 80038d4:	d107      	bne.n	80038e6 <I2C_RequestMemoryWrite+0x10e>
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	681a      	ldr	r2, [r3, #0]
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038e4:	601a      	str	r2, [r3, #0]
 80038e6:	2301      	movs	r3, #1
 80038e8:	e005      	b.n	80038f6 <I2C_RequestMemoryWrite+0x11e>
 80038ea:	893b      	ldrh	r3, [r7, #8]
 80038ec:	b2da      	uxtb	r2, r3
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	2300      	movs	r3, #0
 80038f6:	4618      	mov	r0, r3
 80038f8:	3718      	adds	r7, #24
 80038fa:	46bd      	mov	sp, r7
 80038fc:	bd80      	pop	{r7, pc}
 80038fe:	bf00      	nop
 8003900:	00010002 	.word	0x00010002

08003904 <I2C_RequestMemoryRead>:
 8003904:	b580      	push	{r7, lr}
 8003906:	b088      	sub	sp, #32
 8003908:	af02      	add	r7, sp, #8
 800390a:	60f8      	str	r0, [r7, #12]
 800390c:	4608      	mov	r0, r1
 800390e:	4611      	mov	r1, r2
 8003910:	461a      	mov	r2, r3
 8003912:	4603      	mov	r3, r0
 8003914:	817b      	strh	r3, [r7, #10]
 8003916:	460b      	mov	r3, r1
 8003918:	813b      	strh	r3, [r7, #8]
 800391a:	4613      	mov	r3, r2
 800391c:	80fb      	strh	r3, [r7, #6]
 800391e:	68fb      	ldr	r3, [r7, #12]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	681a      	ldr	r2, [r3, #0]
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800392c:	601a      	str	r2, [r3, #0]
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	681a      	ldr	r2, [r3, #0]
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800393c:	601a      	str	r2, [r3, #0]
 800393e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003940:	9300      	str	r3, [sp, #0]
 8003942:	6a3b      	ldr	r3, [r7, #32]
 8003944:	2200      	movs	r2, #0
 8003946:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800394a:	68f8      	ldr	r0, [r7, #12]
 800394c:	f000 f8c2 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 8003950:	4603      	mov	r3, r0
 8003952:	2b00      	cmp	r3, #0
 8003954:	d00d      	beq.n	8003972 <I2C_RequestMemoryRead+0x6e>
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003960:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003964:	d103      	bne.n	800396e <I2C_RequestMemoryRead+0x6a>
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800396c:	641a      	str	r2, [r3, #64]	@ 0x40
 800396e:	2303      	movs	r3, #3
 8003970:	e0aa      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003972:	897b      	ldrh	r3, [r7, #10]
 8003974:	b2db      	uxtb	r3, r3
 8003976:	461a      	mov	r2, r3
 8003978:	68fb      	ldr	r3, [r7, #12]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003980:	611a      	str	r2, [r3, #16]
 8003982:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003984:	6a3a      	ldr	r2, [r7, #32]
 8003986:	4952      	ldr	r1, [pc, #328]	@ (8003ad0 <I2C_RequestMemoryRead+0x1cc>)
 8003988:	68f8      	ldr	r0, [r7, #12]
 800398a:	f000 f91d 	bl	8003bc8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800398e:	4603      	mov	r3, r0
 8003990:	2b00      	cmp	r3, #0
 8003992:	d001      	beq.n	8003998 <I2C_RequestMemoryRead+0x94>
 8003994:	2301      	movs	r3, #1
 8003996:	e097      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003998:	2300      	movs	r3, #0
 800399a:	617b      	str	r3, [r7, #20]
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	695b      	ldr	r3, [r3, #20]
 80039a2:	617b      	str	r3, [r7, #20]
 80039a4:	68fb      	ldr	r3, [r7, #12]
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	699b      	ldr	r3, [r3, #24]
 80039aa:	617b      	str	r3, [r7, #20]
 80039ac:	697b      	ldr	r3, [r7, #20]
 80039ae:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80039b0:	6a39      	ldr	r1, [r7, #32]
 80039b2:	68f8      	ldr	r0, [r7, #12]
 80039b4:	f000 f9a8 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 80039b8:	4603      	mov	r3, r0
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d00d      	beq.n	80039da <I2C_RequestMemoryRead+0xd6>
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039c2:	2b04      	cmp	r3, #4
 80039c4:	d107      	bne.n	80039d6 <I2C_RequestMemoryRead+0xd2>
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	681a      	ldr	r2, [r3, #0]
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	2301      	movs	r3, #1
 80039d8:	e076      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 80039da:	88fb      	ldrh	r3, [r7, #6]
 80039dc:	2b01      	cmp	r3, #1
 80039de:	d105      	bne.n	80039ec <I2C_RequestMemoryRead+0xe8>
 80039e0:	893b      	ldrh	r3, [r7, #8]
 80039e2:	b2da      	uxtb	r2, r3
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	611a      	str	r2, [r3, #16]
 80039ea:	e021      	b.n	8003a30 <I2C_RequestMemoryRead+0x12c>
 80039ec:	893b      	ldrh	r3, [r7, #8]
 80039ee:	0a1b      	lsrs	r3, r3, #8
 80039f0:	b29b      	uxth	r3, r3
 80039f2:	b2da      	uxtb	r2, r3
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	611a      	str	r2, [r3, #16]
 80039fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80039fc:	6a39      	ldr	r1, [r7, #32]
 80039fe:	68f8      	ldr	r0, [r7, #12]
 8003a00:	f000 f982 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 8003a04:	4603      	mov	r3, r0
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d00d      	beq.n	8003a26 <I2C_RequestMemoryRead+0x122>
 8003a0a:	68fb      	ldr	r3, [r7, #12]
 8003a0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a0e:	2b04      	cmp	r3, #4
 8003a10:	d107      	bne.n	8003a22 <I2C_RequestMemoryRead+0x11e>
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	681a      	ldr	r2, [r3, #0]
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a20:	601a      	str	r2, [r3, #0]
 8003a22:	2301      	movs	r3, #1
 8003a24:	e050      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003a26:	893b      	ldrh	r3, [r7, #8]
 8003a28:	b2da      	uxtb	r2, r3
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	611a      	str	r2, [r3, #16]
 8003a30:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003a32:	6a39      	ldr	r1, [r7, #32]
 8003a34:	68f8      	ldr	r0, [r7, #12]
 8003a36:	f000 f967 	bl	8003d08 <I2C_WaitOnTXEFlagUntilTimeout>
 8003a3a:	4603      	mov	r3, r0
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d00d      	beq.n	8003a5c <I2C_RequestMemoryRead+0x158>
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a44:	2b04      	cmp	r3, #4
 8003a46:	d107      	bne.n	8003a58 <I2C_RequestMemoryRead+0x154>
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	681a      	ldr	r2, [r3, #0]
 8003a4e:	68fb      	ldr	r3, [r7, #12]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a56:	601a      	str	r2, [r3, #0]
 8003a58:	2301      	movs	r3, #1
 8003a5a:	e035      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	681a      	ldr	r2, [r3, #0]
 8003a62:	68fb      	ldr	r3, [r7, #12]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003a6a:	601a      	str	r2, [r3, #0]
 8003a6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a6e:	9300      	str	r3, [sp, #0]
 8003a70:	6a3b      	ldr	r3, [r7, #32]
 8003a72:	2200      	movs	r2, #0
 8003a74:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003a78:	68f8      	ldr	r0, [r7, #12]
 8003a7a:	f000 f82b 	bl	8003ad4 <I2C_WaitOnFlagUntilTimeout>
 8003a7e:	4603      	mov	r3, r0
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d00d      	beq.n	8003aa0 <I2C_RequestMemoryRead+0x19c>
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003a92:	d103      	bne.n	8003a9c <I2C_RequestMemoryRead+0x198>
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003a9a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a9c:	2303      	movs	r3, #3
 8003a9e:	e013      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003aa0:	897b      	ldrh	r3, [r7, #10]
 8003aa2:	b2db      	uxtb	r3, r3
 8003aa4:	f043 0301 	orr.w	r3, r3, #1
 8003aa8:	b2da      	uxtb	r2, r3
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	611a      	str	r2, [r3, #16]
 8003ab0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ab2:	6a3a      	ldr	r2, [r7, #32]
 8003ab4:	4906      	ldr	r1, [pc, #24]	@ (8003ad0 <I2C_RequestMemoryRead+0x1cc>)
 8003ab6:	68f8      	ldr	r0, [r7, #12]
 8003ab8:	f000 f886 	bl	8003bc8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003abc:	4603      	mov	r3, r0
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d001      	beq.n	8003ac6 <I2C_RequestMemoryRead+0x1c2>
 8003ac2:	2301      	movs	r3, #1
 8003ac4:	e000      	b.n	8003ac8 <I2C_RequestMemoryRead+0x1c4>
 8003ac6:	2300      	movs	r3, #0
 8003ac8:	4618      	mov	r0, r3
 8003aca:	3718      	adds	r7, #24
 8003acc:	46bd      	mov	sp, r7
 8003ace:	bd80      	pop	{r7, pc}
 8003ad0:	00010002 	.word	0x00010002

08003ad4 <I2C_WaitOnFlagUntilTimeout>:
 8003ad4:	b580      	push	{r7, lr}
 8003ad6:	b084      	sub	sp, #16
 8003ad8:	af00      	add	r7, sp, #0
 8003ada:	60f8      	str	r0, [r7, #12]
 8003adc:	60b9      	str	r1, [r7, #8]
 8003ade:	603b      	str	r3, [r7, #0]
 8003ae0:	4613      	mov	r3, r2
 8003ae2:	71fb      	strb	r3, [r7, #7]
 8003ae4:	e048      	b.n	8003b78 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003ae6:	683b      	ldr	r3, [r7, #0]
 8003ae8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003aec:	d044      	beq.n	8003b78 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003aee:	f7fe f9f3 	bl	8001ed8 <HAL_GetTick>
 8003af2:	4602      	mov	r2, r0
 8003af4:	69bb      	ldr	r3, [r7, #24]
 8003af6:	1ad3      	subs	r3, r2, r3
 8003af8:	683a      	ldr	r2, [r7, #0]
 8003afa:	429a      	cmp	r2, r3
 8003afc:	d302      	bcc.n	8003b04 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003afe:	683b      	ldr	r3, [r7, #0]
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	d139      	bne.n	8003b78 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003b04:	68bb      	ldr	r3, [r7, #8]
 8003b06:	0c1b      	lsrs	r3, r3, #16
 8003b08:	b2db      	uxtb	r3, r3
 8003b0a:	2b01      	cmp	r3, #1
 8003b0c:	d10d      	bne.n	8003b2a <I2C_WaitOnFlagUntilTimeout+0x56>
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	695b      	ldr	r3, [r3, #20]
 8003b14:	43da      	mvns	r2, r3
 8003b16:	68bb      	ldr	r3, [r7, #8]
 8003b18:	4013      	ands	r3, r2
 8003b1a:	b29b      	uxth	r3, r3
 8003b1c:	2b00      	cmp	r3, #0
 8003b1e:	bf0c      	ite	eq
 8003b20:	2301      	moveq	r3, #1
 8003b22:	2300      	movne	r3, #0
 8003b24:	b2db      	uxtb	r3, r3
 8003b26:	461a      	mov	r2, r3
 8003b28:	e00c      	b.n	8003b44 <I2C_WaitOnFlagUntilTimeout+0x70>
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	699b      	ldr	r3, [r3, #24]
 8003b30:	43da      	mvns	r2, r3
 8003b32:	68bb      	ldr	r3, [r7, #8]
 8003b34:	4013      	ands	r3, r2
 8003b36:	b29b      	uxth	r3, r3
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	bf0c      	ite	eq
 8003b3c:	2301      	moveq	r3, #1
 8003b3e:	2300      	movne	r3, #0
 8003b40:	b2db      	uxtb	r3, r3
 8003b42:	461a      	mov	r2, r3
 8003b44:	79fb      	ldrb	r3, [r7, #7]
 8003b46:	429a      	cmp	r2, r3
 8003b48:	d116      	bne.n	8003b78 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003b4a:	68fb      	ldr	r3, [r7, #12]
 8003b4c:	2200      	movs	r2, #0
 8003b4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	2220      	movs	r2, #32
 8003b54:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	2200      	movs	r2, #0
 8003b5c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b64:	f043 0220 	orr.w	r2, r3, #32
 8003b68:	68fb      	ldr	r3, [r7, #12]
 8003b6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	2200      	movs	r2, #0
 8003b70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b74:	2301      	movs	r3, #1
 8003b76:	e023      	b.n	8003bc0 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003b78:	68bb      	ldr	r3, [r7, #8]
 8003b7a:	0c1b      	lsrs	r3, r3, #16
 8003b7c:	b2db      	uxtb	r3, r3
 8003b7e:	2b01      	cmp	r3, #1
 8003b80:	d10d      	bne.n	8003b9e <I2C_WaitOnFlagUntilTimeout+0xca>
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	695b      	ldr	r3, [r3, #20]
 8003b88:	43da      	mvns	r2, r3
 8003b8a:	68bb      	ldr	r3, [r7, #8]
 8003b8c:	4013      	ands	r3, r2
 8003b8e:	b29b      	uxth	r3, r3
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	bf0c      	ite	eq
 8003b94:	2301      	moveq	r3, #1
 8003b96:	2300      	movne	r3, #0
 8003b98:	b2db      	uxtb	r3, r3
 8003b9a:	461a      	mov	r2, r3
 8003b9c:	e00c      	b.n	8003bb8 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	699b      	ldr	r3, [r3, #24]
 8003ba4:	43da      	mvns	r2, r3
 8003ba6:	68bb      	ldr	r3, [r7, #8]
 8003ba8:	4013      	ands	r3, r2
 8003baa:	b29b      	uxth	r3, r3
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	bf0c      	ite	eq
 8003bb0:	2301      	moveq	r3, #1
 8003bb2:	2300      	movne	r3, #0
 8003bb4:	b2db      	uxtb	r3, r3
 8003bb6:	461a      	mov	r2, r3
 8003bb8:	79fb      	ldrb	r3, [r7, #7]
 8003bba:	429a      	cmp	r2, r3
 8003bbc:	d093      	beq.n	8003ae6 <I2C_WaitOnFlagUntilTimeout+0x12>
 8003bbe:	2300      	movs	r3, #0
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	3710      	adds	r7, #16
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	bd80      	pop	{r7, pc}

08003bc8 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003bc8:	b580      	push	{r7, lr}
 8003bca:	b084      	sub	sp, #16
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	60f8      	str	r0, [r7, #12]
 8003bd0:	60b9      	str	r1, [r7, #8]
 8003bd2:	607a      	str	r2, [r7, #4]
 8003bd4:	603b      	str	r3, [r7, #0]
 8003bd6:	e071      	b.n	8003cbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	695b      	ldr	r3, [r3, #20]
 8003bde:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003be2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003be6:	d123      	bne.n	8003c30 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003be8:	68fb      	ldr	r3, [r7, #12]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	681a      	ldr	r2, [r3, #0]
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003bf6:	601a      	str	r2, [r3, #0]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003c00:	615a      	str	r2, [r3, #20]
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	2200      	movs	r2, #0
 8003c06:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	2220      	movs	r2, #32
 8003c0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	2200      	movs	r2, #0
 8003c14:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c1c:	f043 0204 	orr.w	r2, r3, #4
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	2200      	movs	r2, #0
 8003c28:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c2c:	2301      	movs	r3, #1
 8003c2e:	e067      	b.n	8003d00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c36:	d041      	beq.n	8003cbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003c38:	f7fe f94e 	bl	8001ed8 <HAL_GetTick>
 8003c3c:	4602      	mov	r2, r0
 8003c3e:	683b      	ldr	r3, [r7, #0]
 8003c40:	1ad3      	subs	r3, r2, r3
 8003c42:	687a      	ldr	r2, [r7, #4]
 8003c44:	429a      	cmp	r2, r3
 8003c46:	d302      	bcc.n	8003c4e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	2b00      	cmp	r3, #0
 8003c4c:	d136      	bne.n	8003cbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003c4e:	68bb      	ldr	r3, [r7, #8]
 8003c50:	0c1b      	lsrs	r3, r3, #16
 8003c52:	b2db      	uxtb	r3, r3
 8003c54:	2b01      	cmp	r3, #1
 8003c56:	d10c      	bne.n	8003c72 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	695b      	ldr	r3, [r3, #20]
 8003c5e:	43da      	mvns	r2, r3
 8003c60:	68bb      	ldr	r3, [r7, #8]
 8003c62:	4013      	ands	r3, r2
 8003c64:	b29b      	uxth	r3, r3
 8003c66:	2b00      	cmp	r3, #0
 8003c68:	bf14      	ite	ne
 8003c6a:	2301      	movne	r3, #1
 8003c6c:	2300      	moveq	r3, #0
 8003c6e:	b2db      	uxtb	r3, r3
 8003c70:	e00b      	b.n	8003c8a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003c72:	68fb      	ldr	r3, [r7, #12]
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	699b      	ldr	r3, [r3, #24]
 8003c78:	43da      	mvns	r2, r3
 8003c7a:	68bb      	ldr	r3, [r7, #8]
 8003c7c:	4013      	ands	r3, r2
 8003c7e:	b29b      	uxth	r3, r3
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	bf14      	ite	ne
 8003c84:	2301      	movne	r3, #1
 8003c86:	2300      	moveq	r3, #0
 8003c88:	b2db      	uxtb	r3, r3
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d016      	beq.n	8003cbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	2200      	movs	r2, #0
 8003c92:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	2220      	movs	r2, #32
 8003c98:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	2200      	movs	r2, #0
 8003ca0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ca8:	f043 0220 	orr.w	r2, r3, #32
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	641a      	str	r2, [r3, #64]	@ 0x40
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003cb8:	2301      	movs	r3, #1
 8003cba:	e021      	b.n	8003d00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003cbc:	68bb      	ldr	r3, [r7, #8]
 8003cbe:	0c1b      	lsrs	r3, r3, #16
 8003cc0:	b2db      	uxtb	r3, r3
 8003cc2:	2b01      	cmp	r3, #1
 8003cc4:	d10c      	bne.n	8003ce0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	695b      	ldr	r3, [r3, #20]
 8003ccc:	43da      	mvns	r2, r3
 8003cce:	68bb      	ldr	r3, [r7, #8]
 8003cd0:	4013      	ands	r3, r2
 8003cd2:	b29b      	uxth	r3, r3
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	bf14      	ite	ne
 8003cd8:	2301      	movne	r3, #1
 8003cda:	2300      	moveq	r3, #0
 8003cdc:	b2db      	uxtb	r3, r3
 8003cde:	e00b      	b.n	8003cf8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	699b      	ldr	r3, [r3, #24]
 8003ce6:	43da      	mvns	r2, r3
 8003ce8:	68bb      	ldr	r3, [r7, #8]
 8003cea:	4013      	ands	r3, r2
 8003cec:	b29b      	uxth	r3, r3
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	bf14      	ite	ne
 8003cf2:	2301      	movne	r3, #1
 8003cf4:	2300      	moveq	r3, #0
 8003cf6:	b2db      	uxtb	r3, r3
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	f47f af6d 	bne.w	8003bd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003cfe:	2300      	movs	r3, #0
 8003d00:	4618      	mov	r0, r3
 8003d02:	3710      	adds	r7, #16
 8003d04:	46bd      	mov	sp, r7
 8003d06:	bd80      	pop	{r7, pc}

08003d08 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	b084      	sub	sp, #16
 8003d0c:	af00      	add	r7, sp, #0
 8003d0e:	60f8      	str	r0, [r7, #12]
 8003d10:	60b9      	str	r1, [r7, #8]
 8003d12:	607a      	str	r2, [r7, #4]
 8003d14:	e034      	b.n	8003d80 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003d16:	68f8      	ldr	r0, [r7, #12]
 8003d18:	f000 f8e3 	bl	8003ee2 <I2C_IsAcknowledgeFailed>
 8003d1c:	4603      	mov	r3, r0
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d001      	beq.n	8003d26 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003d22:	2301      	movs	r3, #1
 8003d24:	e034      	b.n	8003d90 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003d26:	68bb      	ldr	r3, [r7, #8]
 8003d28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d2c:	d028      	beq.n	8003d80 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003d2e:	f7fe f8d3 	bl	8001ed8 <HAL_GetTick>
 8003d32:	4602      	mov	r2, r0
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	1ad3      	subs	r3, r2, r3
 8003d38:	68ba      	ldr	r2, [r7, #8]
 8003d3a:	429a      	cmp	r2, r3
 8003d3c:	d302      	bcc.n	8003d44 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003d3e:	68bb      	ldr	r3, [r7, #8]
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d11d      	bne.n	8003d80 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	695b      	ldr	r3, [r3, #20]
 8003d4a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d4e:	2b80      	cmp	r3, #128	@ 0x80
 8003d50:	d016      	beq.n	8003d80 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	2200      	movs	r2, #0
 8003d56:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d58:	68fb      	ldr	r3, [r7, #12]
 8003d5a:	2220      	movs	r2, #32
 8003d5c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	2200      	movs	r2, #0
 8003d64:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d6c:	f043 0220 	orr.w	r2, r3, #32
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d74:	68fb      	ldr	r3, [r7, #12]
 8003d76:	2200      	movs	r2, #0
 8003d78:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d7c:	2301      	movs	r3, #1
 8003d7e:	e007      	b.n	8003d90 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	695b      	ldr	r3, [r3, #20]
 8003d86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d8a:	2b80      	cmp	r3, #128	@ 0x80
 8003d8c:	d1c3      	bne.n	8003d16 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003d8e:	2300      	movs	r3, #0
 8003d90:	4618      	mov	r0, r3
 8003d92:	3710      	adds	r7, #16
 8003d94:	46bd      	mov	sp, r7
 8003d96:	bd80      	pop	{r7, pc}

08003d98 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003d98:	b580      	push	{r7, lr}
 8003d9a:	b084      	sub	sp, #16
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	60f8      	str	r0, [r7, #12]
 8003da0:	60b9      	str	r1, [r7, #8]
 8003da2:	607a      	str	r2, [r7, #4]
 8003da4:	e034      	b.n	8003e10 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003da6:	68f8      	ldr	r0, [r7, #12]
 8003da8:	f000 f89b 	bl	8003ee2 <I2C_IsAcknowledgeFailed>
 8003dac:	4603      	mov	r3, r0
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d001      	beq.n	8003db6 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003db2:	2301      	movs	r3, #1
 8003db4:	e034      	b.n	8003e20 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003db6:	68bb      	ldr	r3, [r7, #8]
 8003db8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003dbc:	d028      	beq.n	8003e10 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003dbe:	f7fe f88b 	bl	8001ed8 <HAL_GetTick>
 8003dc2:	4602      	mov	r2, r0
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	1ad3      	subs	r3, r2, r3
 8003dc8:	68ba      	ldr	r2, [r7, #8]
 8003dca:	429a      	cmp	r2, r3
 8003dcc:	d302      	bcc.n	8003dd4 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003dce:	68bb      	ldr	r3, [r7, #8]
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	d11d      	bne.n	8003e10 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	695b      	ldr	r3, [r3, #20]
 8003dda:	f003 0304 	and.w	r3, r3, #4
 8003dde:	2b04      	cmp	r3, #4
 8003de0:	d016      	beq.n	8003e10 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	2200      	movs	r2, #0
 8003de6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	2220      	movs	r2, #32
 8003dec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	2200      	movs	r2, #0
 8003df4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dfc:	f043 0220 	orr.w	r2, r3, #32
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	2200      	movs	r2, #0
 8003e08:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e0c:	2301      	movs	r3, #1
 8003e0e:	e007      	b.n	8003e20 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	695b      	ldr	r3, [r3, #20]
 8003e16:	f003 0304 	and.w	r3, r3, #4
 8003e1a:	2b04      	cmp	r3, #4
 8003e1c:	d1c3      	bne.n	8003da6 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003e1e:	2300      	movs	r3, #0
 8003e20:	4618      	mov	r0, r3
 8003e22:	3710      	adds	r7, #16
 8003e24:	46bd      	mov	sp, r7
 8003e26:	bd80      	pop	{r7, pc}

08003e28 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003e28:	b580      	push	{r7, lr}
 8003e2a:	b084      	sub	sp, #16
 8003e2c:	af00      	add	r7, sp, #0
 8003e2e:	60f8      	str	r0, [r7, #12]
 8003e30:	60b9      	str	r1, [r7, #8]
 8003e32:	607a      	str	r2, [r7, #4]
 8003e34:	e049      	b.n	8003eca <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	695b      	ldr	r3, [r3, #20]
 8003e3c:	f003 0310 	and.w	r3, r3, #16
 8003e40:	2b10      	cmp	r3, #16
 8003e42:	d119      	bne.n	8003e78 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	f06f 0210 	mvn.w	r2, #16
 8003e4c:	615a      	str	r2, [r3, #20]
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	2200      	movs	r2, #0
 8003e52:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	2220      	movs	r2, #32
 8003e58:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	2200      	movs	r2, #0
 8003e60:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	2200      	movs	r2, #0
 8003e70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e74:	2301      	movs	r3, #1
 8003e76:	e030      	b.n	8003eda <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003e78:	f7fe f82e 	bl	8001ed8 <HAL_GetTick>
 8003e7c:	4602      	mov	r2, r0
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	1ad3      	subs	r3, r2, r3
 8003e82:	68ba      	ldr	r2, [r7, #8]
 8003e84:	429a      	cmp	r2, r3
 8003e86:	d302      	bcc.n	8003e8e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003e88:	68bb      	ldr	r3, [r7, #8]
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d11d      	bne.n	8003eca <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	695b      	ldr	r3, [r3, #20]
 8003e94:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003e98:	2b40      	cmp	r3, #64	@ 0x40
 8003e9a:	d016      	beq.n	8003eca <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	2220      	movs	r2, #32
 8003ea6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	2200      	movs	r2, #0
 8003eae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003eb2:	68fb      	ldr	r3, [r7, #12]
 8003eb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003eb6:	f043 0220 	orr.w	r2, r3, #32
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	2200      	movs	r2, #0
 8003ec2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	e007      	b.n	8003eda <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	695b      	ldr	r3, [r3, #20]
 8003ed0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ed4:	2b40      	cmp	r3, #64	@ 0x40
 8003ed6:	d1ae      	bne.n	8003e36 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8003ed8:	2300      	movs	r3, #0
 8003eda:	4618      	mov	r0, r3
 8003edc:	3710      	adds	r7, #16
 8003ede:	46bd      	mov	sp, r7
 8003ee0:	bd80      	pop	{r7, pc}

08003ee2 <I2C_IsAcknowledgeFailed>:
 8003ee2:	b480      	push	{r7}
 8003ee4:	b083      	sub	sp, #12
 8003ee6:	af00      	add	r7, sp, #0
 8003ee8:	6078      	str	r0, [r7, #4]
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	695b      	ldr	r3, [r3, #20]
 8003ef0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003ef4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003ef8:	d11b      	bne.n	8003f32 <I2C_IsAcknowledgeFailed+0x50>
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003f02:	615a      	str	r2, [r3, #20]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	2200      	movs	r2, #0
 8003f08:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	2220      	movs	r2, #32
 8003f0e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	2200      	movs	r2, #0
 8003f16:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f1e:	f043 0204 	orr.w	r2, r3, #4
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	641a      	str	r2, [r3, #64]	@ 0x40
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	2200      	movs	r2, #0
 8003f2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f2e:	2301      	movs	r3, #1
 8003f30:	e000      	b.n	8003f34 <I2C_IsAcknowledgeFailed+0x52>
 8003f32:	2300      	movs	r3, #0
 8003f34:	4618      	mov	r0, r3
 8003f36:	370c      	adds	r7, #12
 8003f38:	46bd      	mov	sp, r7
 8003f3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f3e:	4770      	bx	lr

08003f40 <HAL_RCC_OscConfig>:
 8003f40:	b580      	push	{r7, lr}
 8003f42:	b086      	sub	sp, #24
 8003f44:	af00      	add	r7, sp, #0
 8003f46:	6078      	str	r0, [r7, #4]
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d101      	bne.n	8003f52 <HAL_RCC_OscConfig+0x12>
 8003f4e:	2301      	movs	r3, #1
 8003f50:	e267      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	f003 0301 	and.w	r3, r3, #1
 8003f5a:	2b00      	cmp	r3, #0
 8003f5c:	d075      	beq.n	800404a <HAL_RCC_OscConfig+0x10a>
 8003f5e:	4b88      	ldr	r3, [pc, #544]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003f60:	689b      	ldr	r3, [r3, #8]
 8003f62:	f003 030c 	and.w	r3, r3, #12
 8003f66:	2b04      	cmp	r3, #4
 8003f68:	d00c      	beq.n	8003f84 <HAL_RCC_OscConfig+0x44>
 8003f6a:	4b85      	ldr	r3, [pc, #532]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003f6c:	689b      	ldr	r3, [r3, #8]
 8003f6e:	f003 030c 	and.w	r3, r3, #12
 8003f72:	2b08      	cmp	r3, #8
 8003f74:	d112      	bne.n	8003f9c <HAL_RCC_OscConfig+0x5c>
 8003f76:	4b82      	ldr	r3, [pc, #520]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003f7e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003f82:	d10b      	bne.n	8003f9c <HAL_RCC_OscConfig+0x5c>
 8003f84:	4b7e      	ldr	r3, [pc, #504]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f8c:	2b00      	cmp	r3, #0
 8003f8e:	d05b      	beq.n	8004048 <HAL_RCC_OscConfig+0x108>
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	685b      	ldr	r3, [r3, #4]
 8003f94:	2b00      	cmp	r3, #0
 8003f96:	d157      	bne.n	8004048 <HAL_RCC_OscConfig+0x108>
 8003f98:	2301      	movs	r3, #1
 8003f9a:	e242      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	685b      	ldr	r3, [r3, #4]
 8003fa0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003fa4:	d106      	bne.n	8003fb4 <HAL_RCC_OscConfig+0x74>
 8003fa6:	4b76      	ldr	r3, [pc, #472]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	4a75      	ldr	r2, [pc, #468]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003fb0:	6013      	str	r3, [r2, #0]
 8003fb2:	e01d      	b.n	8003ff0 <HAL_RCC_OscConfig+0xb0>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	685b      	ldr	r3, [r3, #4]
 8003fb8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003fbc:	d10c      	bne.n	8003fd8 <HAL_RCC_OscConfig+0x98>
 8003fbe:	4b70      	ldr	r3, [pc, #448]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	4a6f      	ldr	r2, [pc, #444]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fc4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003fc8:	6013      	str	r3, [r2, #0]
 8003fca:	4b6d      	ldr	r3, [pc, #436]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	4a6c      	ldr	r2, [pc, #432]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fd0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003fd4:	6013      	str	r3, [r2, #0]
 8003fd6:	e00b      	b.n	8003ff0 <HAL_RCC_OscConfig+0xb0>
 8003fd8:	4b69      	ldr	r3, [pc, #420]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	4a68      	ldr	r2, [pc, #416]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fde:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003fe2:	6013      	str	r3, [r2, #0]
 8003fe4:	4b66      	ldr	r3, [pc, #408]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	4a65      	ldr	r2, [pc, #404]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8003fea:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003fee:	6013      	str	r3, [r2, #0]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	685b      	ldr	r3, [r3, #4]
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	d013      	beq.n	8004020 <HAL_RCC_OscConfig+0xe0>
 8003ff8:	f7fd ff6e 	bl	8001ed8 <HAL_GetTick>
 8003ffc:	6138      	str	r0, [r7, #16]
 8003ffe:	e008      	b.n	8004012 <HAL_RCC_OscConfig+0xd2>
 8004000:	f7fd ff6a 	bl	8001ed8 <HAL_GetTick>
 8004004:	4602      	mov	r2, r0
 8004006:	693b      	ldr	r3, [r7, #16]
 8004008:	1ad3      	subs	r3, r2, r3
 800400a:	2b64      	cmp	r3, #100	@ 0x64
 800400c:	d901      	bls.n	8004012 <HAL_RCC_OscConfig+0xd2>
 800400e:	2303      	movs	r3, #3
 8004010:	e207      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004012:	4b5b      	ldr	r3, [pc, #364]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800401a:	2b00      	cmp	r3, #0
 800401c:	d0f0      	beq.n	8004000 <HAL_RCC_OscConfig+0xc0>
 800401e:	e014      	b.n	800404a <HAL_RCC_OscConfig+0x10a>
 8004020:	f7fd ff5a 	bl	8001ed8 <HAL_GetTick>
 8004024:	6138      	str	r0, [r7, #16]
 8004026:	e008      	b.n	800403a <HAL_RCC_OscConfig+0xfa>
 8004028:	f7fd ff56 	bl	8001ed8 <HAL_GetTick>
 800402c:	4602      	mov	r2, r0
 800402e:	693b      	ldr	r3, [r7, #16]
 8004030:	1ad3      	subs	r3, r2, r3
 8004032:	2b64      	cmp	r3, #100	@ 0x64
 8004034:	d901      	bls.n	800403a <HAL_RCC_OscConfig+0xfa>
 8004036:	2303      	movs	r3, #3
 8004038:	e1f3      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 800403a:	4b51      	ldr	r3, [pc, #324]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004042:	2b00      	cmp	r3, #0
 8004044:	d1f0      	bne.n	8004028 <HAL_RCC_OscConfig+0xe8>
 8004046:	e000      	b.n	800404a <HAL_RCC_OscConfig+0x10a>
 8004048:	bf00      	nop
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	f003 0302 	and.w	r3, r3, #2
 8004052:	2b00      	cmp	r3, #0
 8004054:	d063      	beq.n	800411e <HAL_RCC_OscConfig+0x1de>
 8004056:	4b4a      	ldr	r3, [pc, #296]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004058:	689b      	ldr	r3, [r3, #8]
 800405a:	f003 030c 	and.w	r3, r3, #12
 800405e:	2b00      	cmp	r3, #0
 8004060:	d00b      	beq.n	800407a <HAL_RCC_OscConfig+0x13a>
 8004062:	4b47      	ldr	r3, [pc, #284]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004064:	689b      	ldr	r3, [r3, #8]
 8004066:	f003 030c 	and.w	r3, r3, #12
 800406a:	2b08      	cmp	r3, #8
 800406c:	d11c      	bne.n	80040a8 <HAL_RCC_OscConfig+0x168>
 800406e:	4b44      	ldr	r3, [pc, #272]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004070:	685b      	ldr	r3, [r3, #4]
 8004072:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004076:	2b00      	cmp	r3, #0
 8004078:	d116      	bne.n	80040a8 <HAL_RCC_OscConfig+0x168>
 800407a:	4b41      	ldr	r3, [pc, #260]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	f003 0302 	and.w	r3, r3, #2
 8004082:	2b00      	cmp	r3, #0
 8004084:	d005      	beq.n	8004092 <HAL_RCC_OscConfig+0x152>
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	68db      	ldr	r3, [r3, #12]
 800408a:	2b01      	cmp	r3, #1
 800408c:	d001      	beq.n	8004092 <HAL_RCC_OscConfig+0x152>
 800408e:	2301      	movs	r3, #1
 8004090:	e1c7      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004092:	4b3b      	ldr	r3, [pc, #236]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004094:	681b      	ldr	r3, [r3, #0]
 8004096:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	691b      	ldr	r3, [r3, #16]
 800409e:	00db      	lsls	r3, r3, #3
 80040a0:	4937      	ldr	r1, [pc, #220]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 80040a2:	4313      	orrs	r3, r2
 80040a4:	600b      	str	r3, [r1, #0]
 80040a6:	e03a      	b.n	800411e <HAL_RCC_OscConfig+0x1de>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	68db      	ldr	r3, [r3, #12]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d020      	beq.n	80040f2 <HAL_RCC_OscConfig+0x1b2>
 80040b0:	4b34      	ldr	r3, [pc, #208]	@ (8004184 <HAL_RCC_OscConfig+0x244>)
 80040b2:	2201      	movs	r2, #1
 80040b4:	601a      	str	r2, [r3, #0]
 80040b6:	f7fd ff0f 	bl	8001ed8 <HAL_GetTick>
 80040ba:	6138      	str	r0, [r7, #16]
 80040bc:	e008      	b.n	80040d0 <HAL_RCC_OscConfig+0x190>
 80040be:	f7fd ff0b 	bl	8001ed8 <HAL_GetTick>
 80040c2:	4602      	mov	r2, r0
 80040c4:	693b      	ldr	r3, [r7, #16]
 80040c6:	1ad3      	subs	r3, r2, r3
 80040c8:	2b02      	cmp	r3, #2
 80040ca:	d901      	bls.n	80040d0 <HAL_RCC_OscConfig+0x190>
 80040cc:	2303      	movs	r3, #3
 80040ce:	e1a8      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 80040d0:	4b2b      	ldr	r3, [pc, #172]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	f003 0302 	and.w	r3, r3, #2
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d0f0      	beq.n	80040be <HAL_RCC_OscConfig+0x17e>
 80040dc:	4b28      	ldr	r3, [pc, #160]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	691b      	ldr	r3, [r3, #16]
 80040e8:	00db      	lsls	r3, r3, #3
 80040ea:	4925      	ldr	r1, [pc, #148]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 80040ec:	4313      	orrs	r3, r2
 80040ee:	600b      	str	r3, [r1, #0]
 80040f0:	e015      	b.n	800411e <HAL_RCC_OscConfig+0x1de>
 80040f2:	4b24      	ldr	r3, [pc, #144]	@ (8004184 <HAL_RCC_OscConfig+0x244>)
 80040f4:	2200      	movs	r2, #0
 80040f6:	601a      	str	r2, [r3, #0]
 80040f8:	f7fd feee 	bl	8001ed8 <HAL_GetTick>
 80040fc:	6138      	str	r0, [r7, #16]
 80040fe:	e008      	b.n	8004112 <HAL_RCC_OscConfig+0x1d2>
 8004100:	f7fd feea 	bl	8001ed8 <HAL_GetTick>
 8004104:	4602      	mov	r2, r0
 8004106:	693b      	ldr	r3, [r7, #16]
 8004108:	1ad3      	subs	r3, r2, r3
 800410a:	2b02      	cmp	r3, #2
 800410c:	d901      	bls.n	8004112 <HAL_RCC_OscConfig+0x1d2>
 800410e:	2303      	movs	r3, #3
 8004110:	e187      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004112:	4b1b      	ldr	r3, [pc, #108]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	f003 0302 	and.w	r3, r3, #2
 800411a:	2b00      	cmp	r3, #0
 800411c:	d1f0      	bne.n	8004100 <HAL_RCC_OscConfig+0x1c0>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	f003 0308 	and.w	r3, r3, #8
 8004126:	2b00      	cmp	r3, #0
 8004128:	d036      	beq.n	8004198 <HAL_RCC_OscConfig+0x258>
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	695b      	ldr	r3, [r3, #20]
 800412e:	2b00      	cmp	r3, #0
 8004130:	d016      	beq.n	8004160 <HAL_RCC_OscConfig+0x220>
 8004132:	4b15      	ldr	r3, [pc, #84]	@ (8004188 <HAL_RCC_OscConfig+0x248>)
 8004134:	2201      	movs	r2, #1
 8004136:	601a      	str	r2, [r3, #0]
 8004138:	f7fd fece 	bl	8001ed8 <HAL_GetTick>
 800413c:	6138      	str	r0, [r7, #16]
 800413e:	e008      	b.n	8004152 <HAL_RCC_OscConfig+0x212>
 8004140:	f7fd feca 	bl	8001ed8 <HAL_GetTick>
 8004144:	4602      	mov	r2, r0
 8004146:	693b      	ldr	r3, [r7, #16]
 8004148:	1ad3      	subs	r3, r2, r3
 800414a:	2b02      	cmp	r3, #2
 800414c:	d901      	bls.n	8004152 <HAL_RCC_OscConfig+0x212>
 800414e:	2303      	movs	r3, #3
 8004150:	e167      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004152:	4b0b      	ldr	r3, [pc, #44]	@ (8004180 <HAL_RCC_OscConfig+0x240>)
 8004154:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004156:	f003 0302 	and.w	r3, r3, #2
 800415a:	2b00      	cmp	r3, #0
 800415c:	d0f0      	beq.n	8004140 <HAL_RCC_OscConfig+0x200>
 800415e:	e01b      	b.n	8004198 <HAL_RCC_OscConfig+0x258>
 8004160:	4b09      	ldr	r3, [pc, #36]	@ (8004188 <HAL_RCC_OscConfig+0x248>)
 8004162:	2200      	movs	r2, #0
 8004164:	601a      	str	r2, [r3, #0]
 8004166:	f7fd feb7 	bl	8001ed8 <HAL_GetTick>
 800416a:	6138      	str	r0, [r7, #16]
 800416c:	e00e      	b.n	800418c <HAL_RCC_OscConfig+0x24c>
 800416e:	f7fd feb3 	bl	8001ed8 <HAL_GetTick>
 8004172:	4602      	mov	r2, r0
 8004174:	693b      	ldr	r3, [r7, #16]
 8004176:	1ad3      	subs	r3, r2, r3
 8004178:	2b02      	cmp	r3, #2
 800417a:	d907      	bls.n	800418c <HAL_RCC_OscConfig+0x24c>
 800417c:	2303      	movs	r3, #3
 800417e:	e150      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004180:	40023800 	.word	0x40023800
 8004184:	42470000 	.word	0x42470000
 8004188:	42470e80 	.word	0x42470e80
 800418c:	4b88      	ldr	r3, [pc, #544]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800418e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004190:	f003 0302 	and.w	r3, r3, #2
 8004194:	2b00      	cmp	r3, #0
 8004196:	d1ea      	bne.n	800416e <HAL_RCC_OscConfig+0x22e>
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	f003 0304 	and.w	r3, r3, #4
 80041a0:	2b00      	cmp	r3, #0
 80041a2:	f000 8097 	beq.w	80042d4 <HAL_RCC_OscConfig+0x394>
 80041a6:	2300      	movs	r3, #0
 80041a8:	75fb      	strb	r3, [r7, #23]
 80041aa:	4b81      	ldr	r3, [pc, #516]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80041ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041ae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041b2:	2b00      	cmp	r3, #0
 80041b4:	d10f      	bne.n	80041d6 <HAL_RCC_OscConfig+0x296>
 80041b6:	2300      	movs	r3, #0
 80041b8:	60bb      	str	r3, [r7, #8]
 80041ba:	4b7d      	ldr	r3, [pc, #500]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80041bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041be:	4a7c      	ldr	r2, [pc, #496]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80041c0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80041c4:	6413      	str	r3, [r2, #64]	@ 0x40
 80041c6:	4b7a      	ldr	r3, [pc, #488]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80041c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041ce:	60bb      	str	r3, [r7, #8]
 80041d0:	68bb      	ldr	r3, [r7, #8]
 80041d2:	2301      	movs	r3, #1
 80041d4:	75fb      	strb	r3, [r7, #23]
 80041d6:	4b77      	ldr	r3, [pc, #476]	@ (80043b4 <HAL_RCC_OscConfig+0x474>)
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d118      	bne.n	8004214 <HAL_RCC_OscConfig+0x2d4>
 80041e2:	4b74      	ldr	r3, [pc, #464]	@ (80043b4 <HAL_RCC_OscConfig+0x474>)
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	4a73      	ldr	r2, [pc, #460]	@ (80043b4 <HAL_RCC_OscConfig+0x474>)
 80041e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80041ec:	6013      	str	r3, [r2, #0]
 80041ee:	f7fd fe73 	bl	8001ed8 <HAL_GetTick>
 80041f2:	6138      	str	r0, [r7, #16]
 80041f4:	e008      	b.n	8004208 <HAL_RCC_OscConfig+0x2c8>
 80041f6:	f7fd fe6f 	bl	8001ed8 <HAL_GetTick>
 80041fa:	4602      	mov	r2, r0
 80041fc:	693b      	ldr	r3, [r7, #16]
 80041fe:	1ad3      	subs	r3, r2, r3
 8004200:	2b02      	cmp	r3, #2
 8004202:	d901      	bls.n	8004208 <HAL_RCC_OscConfig+0x2c8>
 8004204:	2303      	movs	r3, #3
 8004206:	e10c      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004208:	4b6a      	ldr	r3, [pc, #424]	@ (80043b4 <HAL_RCC_OscConfig+0x474>)
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004210:	2b00      	cmp	r3, #0
 8004212:	d0f0      	beq.n	80041f6 <HAL_RCC_OscConfig+0x2b6>
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	689b      	ldr	r3, [r3, #8]
 8004218:	2b01      	cmp	r3, #1
 800421a:	d106      	bne.n	800422a <HAL_RCC_OscConfig+0x2ea>
 800421c:	4b64      	ldr	r3, [pc, #400]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800421e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004220:	4a63      	ldr	r2, [pc, #396]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004222:	f043 0301 	orr.w	r3, r3, #1
 8004226:	6713      	str	r3, [r2, #112]	@ 0x70
 8004228:	e01c      	b.n	8004264 <HAL_RCC_OscConfig+0x324>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	689b      	ldr	r3, [r3, #8]
 800422e:	2b05      	cmp	r3, #5
 8004230:	d10c      	bne.n	800424c <HAL_RCC_OscConfig+0x30c>
 8004232:	4b5f      	ldr	r3, [pc, #380]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004234:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004236:	4a5e      	ldr	r2, [pc, #376]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004238:	f043 0304 	orr.w	r3, r3, #4
 800423c:	6713      	str	r3, [r2, #112]	@ 0x70
 800423e:	4b5c      	ldr	r3, [pc, #368]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004240:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004242:	4a5b      	ldr	r2, [pc, #364]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004244:	f043 0301 	orr.w	r3, r3, #1
 8004248:	6713      	str	r3, [r2, #112]	@ 0x70
 800424a:	e00b      	b.n	8004264 <HAL_RCC_OscConfig+0x324>
 800424c:	4b58      	ldr	r3, [pc, #352]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800424e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004250:	4a57      	ldr	r2, [pc, #348]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004252:	f023 0301 	bic.w	r3, r3, #1
 8004256:	6713      	str	r3, [r2, #112]	@ 0x70
 8004258:	4b55      	ldr	r3, [pc, #340]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800425a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800425c:	4a54      	ldr	r2, [pc, #336]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800425e:	f023 0304 	bic.w	r3, r3, #4
 8004262:	6713      	str	r3, [r2, #112]	@ 0x70
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	689b      	ldr	r3, [r3, #8]
 8004268:	2b00      	cmp	r3, #0
 800426a:	d015      	beq.n	8004298 <HAL_RCC_OscConfig+0x358>
 800426c:	f7fd fe34 	bl	8001ed8 <HAL_GetTick>
 8004270:	6138      	str	r0, [r7, #16]
 8004272:	e00a      	b.n	800428a <HAL_RCC_OscConfig+0x34a>
 8004274:	f7fd fe30 	bl	8001ed8 <HAL_GetTick>
 8004278:	4602      	mov	r2, r0
 800427a:	693b      	ldr	r3, [r7, #16]
 800427c:	1ad3      	subs	r3, r2, r3
 800427e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004282:	4293      	cmp	r3, r2
 8004284:	d901      	bls.n	800428a <HAL_RCC_OscConfig+0x34a>
 8004286:	2303      	movs	r3, #3
 8004288:	e0cb      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 800428a:	4b49      	ldr	r3, [pc, #292]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800428c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800428e:	f003 0302 	and.w	r3, r3, #2
 8004292:	2b00      	cmp	r3, #0
 8004294:	d0ee      	beq.n	8004274 <HAL_RCC_OscConfig+0x334>
 8004296:	e014      	b.n	80042c2 <HAL_RCC_OscConfig+0x382>
 8004298:	f7fd fe1e 	bl	8001ed8 <HAL_GetTick>
 800429c:	6138      	str	r0, [r7, #16]
 800429e:	e00a      	b.n	80042b6 <HAL_RCC_OscConfig+0x376>
 80042a0:	f7fd fe1a 	bl	8001ed8 <HAL_GetTick>
 80042a4:	4602      	mov	r2, r0
 80042a6:	693b      	ldr	r3, [r7, #16]
 80042a8:	1ad3      	subs	r3, r2, r3
 80042aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80042ae:	4293      	cmp	r3, r2
 80042b0:	d901      	bls.n	80042b6 <HAL_RCC_OscConfig+0x376>
 80042b2:	2303      	movs	r3, #3
 80042b4:	e0b5      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 80042b6:	4b3e      	ldr	r3, [pc, #248]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80042b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80042ba:	f003 0302 	and.w	r3, r3, #2
 80042be:	2b00      	cmp	r3, #0
 80042c0:	d1ee      	bne.n	80042a0 <HAL_RCC_OscConfig+0x360>
 80042c2:	7dfb      	ldrb	r3, [r7, #23]
 80042c4:	2b01      	cmp	r3, #1
 80042c6:	d105      	bne.n	80042d4 <HAL_RCC_OscConfig+0x394>
 80042c8:	4b39      	ldr	r3, [pc, #228]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80042ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80042cc:	4a38      	ldr	r2, [pc, #224]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80042ce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80042d2:	6413      	str	r3, [r2, #64]	@ 0x40
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	699b      	ldr	r3, [r3, #24]
 80042d8:	2b00      	cmp	r3, #0
 80042da:	f000 80a1 	beq.w	8004420 <HAL_RCC_OscConfig+0x4e0>
 80042de:	4b34      	ldr	r3, [pc, #208]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 80042e0:	689b      	ldr	r3, [r3, #8]
 80042e2:	f003 030c 	and.w	r3, r3, #12
 80042e6:	2b08      	cmp	r3, #8
 80042e8:	d05c      	beq.n	80043a4 <HAL_RCC_OscConfig+0x464>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	699b      	ldr	r3, [r3, #24]
 80042ee:	2b02      	cmp	r3, #2
 80042f0:	d141      	bne.n	8004376 <HAL_RCC_OscConfig+0x436>
 80042f2:	4b31      	ldr	r3, [pc, #196]	@ (80043b8 <HAL_RCC_OscConfig+0x478>)
 80042f4:	2200      	movs	r2, #0
 80042f6:	601a      	str	r2, [r3, #0]
 80042f8:	f7fd fdee 	bl	8001ed8 <HAL_GetTick>
 80042fc:	6138      	str	r0, [r7, #16]
 80042fe:	e008      	b.n	8004312 <HAL_RCC_OscConfig+0x3d2>
 8004300:	f7fd fdea 	bl	8001ed8 <HAL_GetTick>
 8004304:	4602      	mov	r2, r0
 8004306:	693b      	ldr	r3, [r7, #16]
 8004308:	1ad3      	subs	r3, r2, r3
 800430a:	2b02      	cmp	r3, #2
 800430c:	d901      	bls.n	8004312 <HAL_RCC_OscConfig+0x3d2>
 800430e:	2303      	movs	r3, #3
 8004310:	e087      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004312:	4b27      	ldr	r3, [pc, #156]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800431a:	2b00      	cmp	r3, #0
 800431c:	d1f0      	bne.n	8004300 <HAL_RCC_OscConfig+0x3c0>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	69da      	ldr	r2, [r3, #28]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	6a1b      	ldr	r3, [r3, #32]
 8004326:	431a      	orrs	r2, r3
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800432c:	019b      	lsls	r3, r3, #6
 800432e:	431a      	orrs	r2, r3
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004334:	085b      	lsrs	r3, r3, #1
 8004336:	3b01      	subs	r3, #1
 8004338:	041b      	lsls	r3, r3, #16
 800433a:	431a      	orrs	r2, r3
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004340:	061b      	lsls	r3, r3, #24
 8004342:	491b      	ldr	r1, [pc, #108]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004344:	4313      	orrs	r3, r2
 8004346:	604b      	str	r3, [r1, #4]
 8004348:	4b1b      	ldr	r3, [pc, #108]	@ (80043b8 <HAL_RCC_OscConfig+0x478>)
 800434a:	2201      	movs	r2, #1
 800434c:	601a      	str	r2, [r3, #0]
 800434e:	f7fd fdc3 	bl	8001ed8 <HAL_GetTick>
 8004352:	6138      	str	r0, [r7, #16]
 8004354:	e008      	b.n	8004368 <HAL_RCC_OscConfig+0x428>
 8004356:	f7fd fdbf 	bl	8001ed8 <HAL_GetTick>
 800435a:	4602      	mov	r2, r0
 800435c:	693b      	ldr	r3, [r7, #16]
 800435e:	1ad3      	subs	r3, r2, r3
 8004360:	2b02      	cmp	r3, #2
 8004362:	d901      	bls.n	8004368 <HAL_RCC_OscConfig+0x428>
 8004364:	2303      	movs	r3, #3
 8004366:	e05c      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004368:	4b11      	ldr	r3, [pc, #68]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004370:	2b00      	cmp	r3, #0
 8004372:	d0f0      	beq.n	8004356 <HAL_RCC_OscConfig+0x416>
 8004374:	e054      	b.n	8004420 <HAL_RCC_OscConfig+0x4e0>
 8004376:	4b10      	ldr	r3, [pc, #64]	@ (80043b8 <HAL_RCC_OscConfig+0x478>)
 8004378:	2200      	movs	r2, #0
 800437a:	601a      	str	r2, [r3, #0]
 800437c:	f7fd fdac 	bl	8001ed8 <HAL_GetTick>
 8004380:	6138      	str	r0, [r7, #16]
 8004382:	e008      	b.n	8004396 <HAL_RCC_OscConfig+0x456>
 8004384:	f7fd fda8 	bl	8001ed8 <HAL_GetTick>
 8004388:	4602      	mov	r2, r0
 800438a:	693b      	ldr	r3, [r7, #16]
 800438c:	1ad3      	subs	r3, r2, r3
 800438e:	2b02      	cmp	r3, #2
 8004390:	d901      	bls.n	8004396 <HAL_RCC_OscConfig+0x456>
 8004392:	2303      	movs	r3, #3
 8004394:	e045      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004396:	4b06      	ldr	r3, [pc, #24]	@ (80043b0 <HAL_RCC_OscConfig+0x470>)
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d1f0      	bne.n	8004384 <HAL_RCC_OscConfig+0x444>
 80043a2:	e03d      	b.n	8004420 <HAL_RCC_OscConfig+0x4e0>
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	699b      	ldr	r3, [r3, #24]
 80043a8:	2b01      	cmp	r3, #1
 80043aa:	d107      	bne.n	80043bc <HAL_RCC_OscConfig+0x47c>
 80043ac:	2301      	movs	r3, #1
 80043ae:	e038      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 80043b0:	40023800 	.word	0x40023800
 80043b4:	40007000 	.word	0x40007000
 80043b8:	42470060 	.word	0x42470060
 80043bc:	4b1b      	ldr	r3, [pc, #108]	@ (800442c <HAL_RCC_OscConfig+0x4ec>)
 80043be:	685b      	ldr	r3, [r3, #4]
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	699b      	ldr	r3, [r3, #24]
 80043c6:	2b01      	cmp	r3, #1
 80043c8:	d028      	beq.n	800441c <HAL_RCC_OscConfig+0x4dc>
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	69db      	ldr	r3, [r3, #28]
 80043d4:	429a      	cmp	r2, r3
 80043d6:	d121      	bne.n	800441c <HAL_RCC_OscConfig+0x4dc>
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	6a1b      	ldr	r3, [r3, #32]
 80043e2:	429a      	cmp	r2, r3
 80043e4:	d11a      	bne.n	800441c <HAL_RCC_OscConfig+0x4dc>
 80043e6:	68fa      	ldr	r2, [r7, #12]
 80043e8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80043ec:	4013      	ands	r3, r2
 80043ee:	687a      	ldr	r2, [r7, #4]
 80043f0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80043f2:	0192      	lsls	r2, r2, #6
 80043f4:	4293      	cmp	r3, r2
 80043f6:	d111      	bne.n	800441c <HAL_RCC_OscConfig+0x4dc>
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004402:	085b      	lsrs	r3, r3, #1
 8004404:	3b01      	subs	r3, #1
 8004406:	041b      	lsls	r3, r3, #16
 8004408:	429a      	cmp	r2, r3
 800440a:	d107      	bne.n	800441c <HAL_RCC_OscConfig+0x4dc>
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004416:	061b      	lsls	r3, r3, #24
 8004418:	429a      	cmp	r2, r3
 800441a:	d001      	beq.n	8004420 <HAL_RCC_OscConfig+0x4e0>
 800441c:	2301      	movs	r3, #1
 800441e:	e000      	b.n	8004422 <HAL_RCC_OscConfig+0x4e2>
 8004420:	2300      	movs	r3, #0
 8004422:	4618      	mov	r0, r3
 8004424:	3718      	adds	r7, #24
 8004426:	46bd      	mov	sp, r7
 8004428:	bd80      	pop	{r7, pc}
 800442a:	bf00      	nop
 800442c:	40023800 	.word	0x40023800

08004430 <HAL_RCC_ClockConfig>:
 8004430:	b580      	push	{r7, lr}
 8004432:	b084      	sub	sp, #16
 8004434:	af00      	add	r7, sp, #0
 8004436:	6078      	str	r0, [r7, #4]
 8004438:	6039      	str	r1, [r7, #0]
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	2b00      	cmp	r3, #0
 800443e:	d101      	bne.n	8004444 <HAL_RCC_ClockConfig+0x14>
 8004440:	2301      	movs	r3, #1
 8004442:	e0cc      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 8004444:	4b68      	ldr	r3, [pc, #416]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f003 0307 	and.w	r3, r3, #7
 800444c:	683a      	ldr	r2, [r7, #0]
 800444e:	429a      	cmp	r2, r3
 8004450:	d90c      	bls.n	800446c <HAL_RCC_ClockConfig+0x3c>
 8004452:	4b65      	ldr	r3, [pc, #404]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 8004454:	683a      	ldr	r2, [r7, #0]
 8004456:	b2d2      	uxtb	r2, r2
 8004458:	701a      	strb	r2, [r3, #0]
 800445a:	4b63      	ldr	r3, [pc, #396]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	f003 0307 	and.w	r3, r3, #7
 8004462:	683a      	ldr	r2, [r7, #0]
 8004464:	429a      	cmp	r2, r3
 8004466:	d001      	beq.n	800446c <HAL_RCC_ClockConfig+0x3c>
 8004468:	2301      	movs	r3, #1
 800446a:	e0b8      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	f003 0302 	and.w	r3, r3, #2
 8004474:	2b00      	cmp	r3, #0
 8004476:	d020      	beq.n	80044ba <HAL_RCC_ClockConfig+0x8a>
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	f003 0304 	and.w	r3, r3, #4
 8004480:	2b00      	cmp	r3, #0
 8004482:	d005      	beq.n	8004490 <HAL_RCC_ClockConfig+0x60>
 8004484:	4b59      	ldr	r3, [pc, #356]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004486:	689b      	ldr	r3, [r3, #8]
 8004488:	4a58      	ldr	r2, [pc, #352]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 800448a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800448e:	6093      	str	r3, [r2, #8]
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	f003 0308 	and.w	r3, r3, #8
 8004498:	2b00      	cmp	r3, #0
 800449a:	d005      	beq.n	80044a8 <HAL_RCC_ClockConfig+0x78>
 800449c:	4b53      	ldr	r3, [pc, #332]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 800449e:	689b      	ldr	r3, [r3, #8]
 80044a0:	4a52      	ldr	r2, [pc, #328]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80044a2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80044a6:	6093      	str	r3, [r2, #8]
 80044a8:	4b50      	ldr	r3, [pc, #320]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80044aa:	689b      	ldr	r3, [r3, #8]
 80044ac:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	689b      	ldr	r3, [r3, #8]
 80044b4:	494d      	ldr	r1, [pc, #308]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80044b6:	4313      	orrs	r3, r2
 80044b8:	608b      	str	r3, [r1, #8]
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	f003 0301 	and.w	r3, r3, #1
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d044      	beq.n	8004550 <HAL_RCC_ClockConfig+0x120>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	685b      	ldr	r3, [r3, #4]
 80044ca:	2b01      	cmp	r3, #1
 80044cc:	d107      	bne.n	80044de <HAL_RCC_ClockConfig+0xae>
 80044ce:	4b47      	ldr	r3, [pc, #284]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d119      	bne.n	800450e <HAL_RCC_ClockConfig+0xde>
 80044da:	2301      	movs	r3, #1
 80044dc:	e07f      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	685b      	ldr	r3, [r3, #4]
 80044e2:	2b02      	cmp	r3, #2
 80044e4:	d003      	beq.n	80044ee <HAL_RCC_ClockConfig+0xbe>
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	685b      	ldr	r3, [r3, #4]
 80044ea:	2b03      	cmp	r3, #3
 80044ec:	d107      	bne.n	80044fe <HAL_RCC_ClockConfig+0xce>
 80044ee:	4b3f      	ldr	r3, [pc, #252]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d109      	bne.n	800450e <HAL_RCC_ClockConfig+0xde>
 80044fa:	2301      	movs	r3, #1
 80044fc:	e06f      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 80044fe:	4b3b      	ldr	r3, [pc, #236]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	f003 0302 	and.w	r3, r3, #2
 8004506:	2b00      	cmp	r3, #0
 8004508:	d101      	bne.n	800450e <HAL_RCC_ClockConfig+0xde>
 800450a:	2301      	movs	r3, #1
 800450c:	e067      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 800450e:	4b37      	ldr	r3, [pc, #220]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004510:	689b      	ldr	r3, [r3, #8]
 8004512:	f023 0203 	bic.w	r2, r3, #3
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	685b      	ldr	r3, [r3, #4]
 800451a:	4934      	ldr	r1, [pc, #208]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 800451c:	4313      	orrs	r3, r2
 800451e:	608b      	str	r3, [r1, #8]
 8004520:	f7fd fcda 	bl	8001ed8 <HAL_GetTick>
 8004524:	60f8      	str	r0, [r7, #12]
 8004526:	e00a      	b.n	800453e <HAL_RCC_ClockConfig+0x10e>
 8004528:	f7fd fcd6 	bl	8001ed8 <HAL_GetTick>
 800452c:	4602      	mov	r2, r0
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	1ad3      	subs	r3, r2, r3
 8004532:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004536:	4293      	cmp	r3, r2
 8004538:	d901      	bls.n	800453e <HAL_RCC_ClockConfig+0x10e>
 800453a:	2303      	movs	r3, #3
 800453c:	e04f      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 800453e:	4b2b      	ldr	r3, [pc, #172]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004540:	689b      	ldr	r3, [r3, #8]
 8004542:	f003 020c 	and.w	r2, r3, #12
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	685b      	ldr	r3, [r3, #4]
 800454a:	009b      	lsls	r3, r3, #2
 800454c:	429a      	cmp	r2, r3
 800454e:	d1eb      	bne.n	8004528 <HAL_RCC_ClockConfig+0xf8>
 8004550:	4b25      	ldr	r3, [pc, #148]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	f003 0307 	and.w	r3, r3, #7
 8004558:	683a      	ldr	r2, [r7, #0]
 800455a:	429a      	cmp	r2, r3
 800455c:	d20c      	bcs.n	8004578 <HAL_RCC_ClockConfig+0x148>
 800455e:	4b22      	ldr	r3, [pc, #136]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 8004560:	683a      	ldr	r2, [r7, #0]
 8004562:	b2d2      	uxtb	r2, r2
 8004564:	701a      	strb	r2, [r3, #0]
 8004566:	4b20      	ldr	r3, [pc, #128]	@ (80045e8 <HAL_RCC_ClockConfig+0x1b8>)
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	f003 0307 	and.w	r3, r3, #7
 800456e:	683a      	ldr	r2, [r7, #0]
 8004570:	429a      	cmp	r2, r3
 8004572:	d001      	beq.n	8004578 <HAL_RCC_ClockConfig+0x148>
 8004574:	2301      	movs	r3, #1
 8004576:	e032      	b.n	80045de <HAL_RCC_ClockConfig+0x1ae>
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	f003 0304 	and.w	r3, r3, #4
 8004580:	2b00      	cmp	r3, #0
 8004582:	d008      	beq.n	8004596 <HAL_RCC_ClockConfig+0x166>
 8004584:	4b19      	ldr	r3, [pc, #100]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004586:	689b      	ldr	r3, [r3, #8]
 8004588:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	68db      	ldr	r3, [r3, #12]
 8004590:	4916      	ldr	r1, [pc, #88]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 8004592:	4313      	orrs	r3, r2
 8004594:	608b      	str	r3, [r1, #8]
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	f003 0308 	and.w	r3, r3, #8
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d009      	beq.n	80045b6 <HAL_RCC_ClockConfig+0x186>
 80045a2:	4b12      	ldr	r3, [pc, #72]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80045a4:	689b      	ldr	r3, [r3, #8]
 80045a6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	691b      	ldr	r3, [r3, #16]
 80045ae:	00db      	lsls	r3, r3, #3
 80045b0:	490e      	ldr	r1, [pc, #56]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80045b2:	4313      	orrs	r3, r2
 80045b4:	608b      	str	r3, [r1, #8]
 80045b6:	f000 f821 	bl	80045fc <HAL_RCC_GetSysClockFreq>
 80045ba:	4602      	mov	r2, r0
 80045bc:	4b0b      	ldr	r3, [pc, #44]	@ (80045ec <HAL_RCC_ClockConfig+0x1bc>)
 80045be:	689b      	ldr	r3, [r3, #8]
 80045c0:	091b      	lsrs	r3, r3, #4
 80045c2:	f003 030f 	and.w	r3, r3, #15
 80045c6:	490a      	ldr	r1, [pc, #40]	@ (80045f0 <HAL_RCC_ClockConfig+0x1c0>)
 80045c8:	5ccb      	ldrb	r3, [r1, r3]
 80045ca:	fa22 f303 	lsr.w	r3, r2, r3
 80045ce:	4a09      	ldr	r2, [pc, #36]	@ (80045f4 <HAL_RCC_ClockConfig+0x1c4>)
 80045d0:	6013      	str	r3, [r2, #0]
 80045d2:	4b09      	ldr	r3, [pc, #36]	@ (80045f8 <HAL_RCC_ClockConfig+0x1c8>)
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	4618      	mov	r0, r3
 80045d8:	f7fd fc3a 	bl	8001e50 <HAL_InitTick>
 80045dc:	2300      	movs	r3, #0
 80045de:	4618      	mov	r0, r3
 80045e0:	3710      	adds	r7, #16
 80045e2:	46bd      	mov	sp, r7
 80045e4:	bd80      	pop	{r7, pc}
 80045e6:	bf00      	nop
 80045e8:	40023c00 	.word	0x40023c00
 80045ec:	40023800 	.word	0x40023800
 80045f0:	080079f0 	.word	0x080079f0
 80045f4:	20000024 	.word	0x20000024
 80045f8:	20000028 	.word	0x20000028

080045fc <HAL_RCC_GetSysClockFreq>:
 80045fc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004600:	b090      	sub	sp, #64	@ 0x40
 8004602:	af00      	add	r7, sp, #0
 8004604:	2300      	movs	r3, #0
 8004606:	637b      	str	r3, [r7, #52]	@ 0x34
 8004608:	2300      	movs	r3, #0
 800460a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800460c:	2300      	movs	r3, #0
 800460e:	633b      	str	r3, [r7, #48]	@ 0x30
 8004610:	2300      	movs	r3, #0
 8004612:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004614:	4b59      	ldr	r3, [pc, #356]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 8004616:	689b      	ldr	r3, [r3, #8]
 8004618:	f003 030c 	and.w	r3, r3, #12
 800461c:	2b08      	cmp	r3, #8
 800461e:	d00d      	beq.n	800463c <HAL_RCC_GetSysClockFreq+0x40>
 8004620:	2b08      	cmp	r3, #8
 8004622:	f200 80a1 	bhi.w	8004768 <HAL_RCC_GetSysClockFreq+0x16c>
 8004626:	2b00      	cmp	r3, #0
 8004628:	d002      	beq.n	8004630 <HAL_RCC_GetSysClockFreq+0x34>
 800462a:	2b04      	cmp	r3, #4
 800462c:	d003      	beq.n	8004636 <HAL_RCC_GetSysClockFreq+0x3a>
 800462e:	e09b      	b.n	8004768 <HAL_RCC_GetSysClockFreq+0x16c>
 8004630:	4b53      	ldr	r3, [pc, #332]	@ (8004780 <HAL_RCC_GetSysClockFreq+0x184>)
 8004632:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004634:	e09b      	b.n	800476e <HAL_RCC_GetSysClockFreq+0x172>
 8004636:	4b53      	ldr	r3, [pc, #332]	@ (8004784 <HAL_RCC_GetSysClockFreq+0x188>)
 8004638:	63bb      	str	r3, [r7, #56]	@ 0x38
 800463a:	e098      	b.n	800476e <HAL_RCC_GetSysClockFreq+0x172>
 800463c:	4b4f      	ldr	r3, [pc, #316]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 800463e:	685b      	ldr	r3, [r3, #4]
 8004640:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004644:	637b      	str	r3, [r7, #52]	@ 0x34
 8004646:	4b4d      	ldr	r3, [pc, #308]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 8004648:	685b      	ldr	r3, [r3, #4]
 800464a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800464e:	2b00      	cmp	r3, #0
 8004650:	d028      	beq.n	80046a4 <HAL_RCC_GetSysClockFreq+0xa8>
 8004652:	4b4a      	ldr	r3, [pc, #296]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 8004654:	685b      	ldr	r3, [r3, #4]
 8004656:	099b      	lsrs	r3, r3, #6
 8004658:	2200      	movs	r2, #0
 800465a:	623b      	str	r3, [r7, #32]
 800465c:	627a      	str	r2, [r7, #36]	@ 0x24
 800465e:	6a3b      	ldr	r3, [r7, #32]
 8004660:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004664:	2100      	movs	r1, #0
 8004666:	4b47      	ldr	r3, [pc, #284]	@ (8004784 <HAL_RCC_GetSysClockFreq+0x188>)
 8004668:	fb03 f201 	mul.w	r2, r3, r1
 800466c:	2300      	movs	r3, #0
 800466e:	fb00 f303 	mul.w	r3, r0, r3
 8004672:	4413      	add	r3, r2
 8004674:	4a43      	ldr	r2, [pc, #268]	@ (8004784 <HAL_RCC_GetSysClockFreq+0x188>)
 8004676:	fba0 1202 	umull	r1, r2, r0, r2
 800467a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800467c:	460a      	mov	r2, r1
 800467e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8004680:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004682:	4413      	add	r3, r2
 8004684:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004686:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004688:	2200      	movs	r2, #0
 800468a:	61bb      	str	r3, [r7, #24]
 800468c:	61fa      	str	r2, [r7, #28]
 800468e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004692:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8004696:	f7fb fdfb 	bl	8000290 <__aeabi_uldivmod>
 800469a:	4602      	mov	r2, r0
 800469c:	460b      	mov	r3, r1
 800469e:	4613      	mov	r3, r2
 80046a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80046a2:	e053      	b.n	800474c <HAL_RCC_GetSysClockFreq+0x150>
 80046a4:	4b35      	ldr	r3, [pc, #212]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 80046a6:	685b      	ldr	r3, [r3, #4]
 80046a8:	099b      	lsrs	r3, r3, #6
 80046aa:	2200      	movs	r2, #0
 80046ac:	613b      	str	r3, [r7, #16]
 80046ae:	617a      	str	r2, [r7, #20]
 80046b0:	693b      	ldr	r3, [r7, #16]
 80046b2:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80046b6:	f04f 0b00 	mov.w	fp, #0
 80046ba:	4652      	mov	r2, sl
 80046bc:	465b      	mov	r3, fp
 80046be:	f04f 0000 	mov.w	r0, #0
 80046c2:	f04f 0100 	mov.w	r1, #0
 80046c6:	0159      	lsls	r1, r3, #5
 80046c8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80046cc:	0150      	lsls	r0, r2, #5
 80046ce:	4602      	mov	r2, r0
 80046d0:	460b      	mov	r3, r1
 80046d2:	ebb2 080a 	subs.w	r8, r2, sl
 80046d6:	eb63 090b 	sbc.w	r9, r3, fp
 80046da:	f04f 0200 	mov.w	r2, #0
 80046de:	f04f 0300 	mov.w	r3, #0
 80046e2:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80046e6:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80046ea:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80046ee:	ebb2 0408 	subs.w	r4, r2, r8
 80046f2:	eb63 0509 	sbc.w	r5, r3, r9
 80046f6:	f04f 0200 	mov.w	r2, #0
 80046fa:	f04f 0300 	mov.w	r3, #0
 80046fe:	00eb      	lsls	r3, r5, #3
 8004700:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004704:	00e2      	lsls	r2, r4, #3
 8004706:	4614      	mov	r4, r2
 8004708:	461d      	mov	r5, r3
 800470a:	eb14 030a 	adds.w	r3, r4, sl
 800470e:	603b      	str	r3, [r7, #0]
 8004710:	eb45 030b 	adc.w	r3, r5, fp
 8004714:	607b      	str	r3, [r7, #4]
 8004716:	f04f 0200 	mov.w	r2, #0
 800471a:	f04f 0300 	mov.w	r3, #0
 800471e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004722:	4629      	mov	r1, r5
 8004724:	028b      	lsls	r3, r1, #10
 8004726:	4621      	mov	r1, r4
 8004728:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800472c:	4621      	mov	r1, r4
 800472e:	028a      	lsls	r2, r1, #10
 8004730:	4610      	mov	r0, r2
 8004732:	4619      	mov	r1, r3
 8004734:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004736:	2200      	movs	r2, #0
 8004738:	60bb      	str	r3, [r7, #8]
 800473a:	60fa      	str	r2, [r7, #12]
 800473c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004740:	f7fb fda6 	bl	8000290 <__aeabi_uldivmod>
 8004744:	4602      	mov	r2, r0
 8004746:	460b      	mov	r3, r1
 8004748:	4613      	mov	r3, r2
 800474a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800474c:	4b0b      	ldr	r3, [pc, #44]	@ (800477c <HAL_RCC_GetSysClockFreq+0x180>)
 800474e:	685b      	ldr	r3, [r3, #4]
 8004750:	0c1b      	lsrs	r3, r3, #16
 8004752:	f003 0303 	and.w	r3, r3, #3
 8004756:	3301      	adds	r3, #1
 8004758:	005b      	lsls	r3, r3, #1
 800475a:	633b      	str	r3, [r7, #48]	@ 0x30
 800475c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800475e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004760:	fbb2 f3f3 	udiv	r3, r2, r3
 8004764:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004766:	e002      	b.n	800476e <HAL_RCC_GetSysClockFreq+0x172>
 8004768:	4b05      	ldr	r3, [pc, #20]	@ (8004780 <HAL_RCC_GetSysClockFreq+0x184>)
 800476a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800476c:	bf00      	nop
 800476e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004770:	4618      	mov	r0, r3
 8004772:	3740      	adds	r7, #64	@ 0x40
 8004774:	46bd      	mov	sp, r7
 8004776:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800477a:	bf00      	nop
 800477c:	40023800 	.word	0x40023800
 8004780:	00f42400 	.word	0x00f42400
 8004784:	017d7840 	.word	0x017d7840

08004788 <HAL_RCC_GetHCLKFreq>:
 8004788:	b480      	push	{r7}
 800478a:	af00      	add	r7, sp, #0
 800478c:	4b03      	ldr	r3, [pc, #12]	@ (800479c <HAL_RCC_GetHCLKFreq+0x14>)
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	4618      	mov	r0, r3
 8004792:	46bd      	mov	sp, r7
 8004794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004798:	4770      	bx	lr
 800479a:	bf00      	nop
 800479c:	20000024 	.word	0x20000024

080047a0 <HAL_RCC_GetPCLK1Freq>:
 80047a0:	b580      	push	{r7, lr}
 80047a2:	af00      	add	r7, sp, #0
 80047a4:	f7ff fff0 	bl	8004788 <HAL_RCC_GetHCLKFreq>
 80047a8:	4602      	mov	r2, r0
 80047aa:	4b05      	ldr	r3, [pc, #20]	@ (80047c0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80047ac:	689b      	ldr	r3, [r3, #8]
 80047ae:	0a9b      	lsrs	r3, r3, #10
 80047b0:	f003 0307 	and.w	r3, r3, #7
 80047b4:	4903      	ldr	r1, [pc, #12]	@ (80047c4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80047b6:	5ccb      	ldrb	r3, [r1, r3]
 80047b8:	fa22 f303 	lsr.w	r3, r2, r3
 80047bc:	4618      	mov	r0, r3
 80047be:	bd80      	pop	{r7, pc}
 80047c0:	40023800 	.word	0x40023800
 80047c4:	08007a00 	.word	0x08007a00

080047c8 <HAL_RCC_GetPCLK2Freq>:
 80047c8:	b580      	push	{r7, lr}
 80047ca:	af00      	add	r7, sp, #0
 80047cc:	f7ff ffdc 	bl	8004788 <HAL_RCC_GetHCLKFreq>
 80047d0:	4602      	mov	r2, r0
 80047d2:	4b05      	ldr	r3, [pc, #20]	@ (80047e8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80047d4:	689b      	ldr	r3, [r3, #8]
 80047d6:	0b5b      	lsrs	r3, r3, #13
 80047d8:	f003 0307 	and.w	r3, r3, #7
 80047dc:	4903      	ldr	r1, [pc, #12]	@ (80047ec <HAL_RCC_GetPCLK2Freq+0x24>)
 80047de:	5ccb      	ldrb	r3, [r1, r3]
 80047e0:	fa22 f303 	lsr.w	r3, r2, r3
 80047e4:	4618      	mov	r0, r3
 80047e6:	bd80      	pop	{r7, pc}
 80047e8:	40023800 	.word	0x40023800
 80047ec:	08007a00 	.word	0x08007a00

080047f0 <HAL_TIM_PWM_Init>:
 80047f0:	b580      	push	{r7, lr}
 80047f2:	b082      	sub	sp, #8
 80047f4:	af00      	add	r7, sp, #0
 80047f6:	6078      	str	r0, [r7, #4]
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	d101      	bne.n	8004802 <HAL_TIM_PWM_Init+0x12>
 80047fe:	2301      	movs	r3, #1
 8004800:	e041      	b.n	8004886 <HAL_TIM_PWM_Init+0x96>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004808:	b2db      	uxtb	r3, r3
 800480a:	2b00      	cmp	r3, #0
 800480c:	d106      	bne.n	800481c <HAL_TIM_PWM_Init+0x2c>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	2200      	movs	r2, #0
 8004812:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004816:	6878      	ldr	r0, [r7, #4]
 8004818:	f7fd f86e 	bl	80018f8 <HAL_TIM_PWM_MspInit>
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	2202      	movs	r2, #2
 8004820:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681a      	ldr	r2, [r3, #0]
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	3304      	adds	r3, #4
 800482c:	4619      	mov	r1, r3
 800482e:	4610      	mov	r0, r2
 8004830:	f000 f9a0 	bl	8004b74 <TIM_Base_SetConfig>
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	2201      	movs	r2, #1
 8004838:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	2201      	movs	r2, #1
 8004840:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	2201      	movs	r2, #1
 8004848:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	2201      	movs	r2, #1
 8004850:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	2201      	movs	r2, #1
 8004858:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	2201      	movs	r2, #1
 8004860:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	2201      	movs	r2, #1
 8004868:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	2201      	movs	r2, #1
 8004870:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	2201      	movs	r2, #1
 8004878:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	2201      	movs	r2, #1
 8004880:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004884:	2300      	movs	r3, #0
 8004886:	4618      	mov	r0, r3
 8004888:	3708      	adds	r7, #8
 800488a:	46bd      	mov	sp, r7
 800488c:	bd80      	pop	{r7, pc}
	...

08004890 <HAL_TIM_PWM_Start>:
 8004890:	b580      	push	{r7, lr}
 8004892:	b084      	sub	sp, #16
 8004894:	af00      	add	r7, sp, #0
 8004896:	6078      	str	r0, [r7, #4]
 8004898:	6039      	str	r1, [r7, #0]
 800489a:	683b      	ldr	r3, [r7, #0]
 800489c:	2b00      	cmp	r3, #0
 800489e:	d109      	bne.n	80048b4 <HAL_TIM_PWM_Start+0x24>
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80048a6:	b2db      	uxtb	r3, r3
 80048a8:	2b01      	cmp	r3, #1
 80048aa:	bf14      	ite	ne
 80048ac:	2301      	movne	r3, #1
 80048ae:	2300      	moveq	r3, #0
 80048b0:	b2db      	uxtb	r3, r3
 80048b2:	e022      	b.n	80048fa <HAL_TIM_PWM_Start+0x6a>
 80048b4:	683b      	ldr	r3, [r7, #0]
 80048b6:	2b04      	cmp	r3, #4
 80048b8:	d109      	bne.n	80048ce <HAL_TIM_PWM_Start+0x3e>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80048c0:	b2db      	uxtb	r3, r3
 80048c2:	2b01      	cmp	r3, #1
 80048c4:	bf14      	ite	ne
 80048c6:	2301      	movne	r3, #1
 80048c8:	2300      	moveq	r3, #0
 80048ca:	b2db      	uxtb	r3, r3
 80048cc:	e015      	b.n	80048fa <HAL_TIM_PWM_Start+0x6a>
 80048ce:	683b      	ldr	r3, [r7, #0]
 80048d0:	2b08      	cmp	r3, #8
 80048d2:	d109      	bne.n	80048e8 <HAL_TIM_PWM_Start+0x58>
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80048da:	b2db      	uxtb	r3, r3
 80048dc:	2b01      	cmp	r3, #1
 80048de:	bf14      	ite	ne
 80048e0:	2301      	movne	r3, #1
 80048e2:	2300      	moveq	r3, #0
 80048e4:	b2db      	uxtb	r3, r3
 80048e6:	e008      	b.n	80048fa <HAL_TIM_PWM_Start+0x6a>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80048ee:	b2db      	uxtb	r3, r3
 80048f0:	2b01      	cmp	r3, #1
 80048f2:	bf14      	ite	ne
 80048f4:	2301      	movne	r3, #1
 80048f6:	2300      	moveq	r3, #0
 80048f8:	b2db      	uxtb	r3, r3
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d001      	beq.n	8004902 <HAL_TIM_PWM_Start+0x72>
 80048fe:	2301      	movs	r3, #1
 8004900:	e068      	b.n	80049d4 <HAL_TIM_PWM_Start+0x144>
 8004902:	683b      	ldr	r3, [r7, #0]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d104      	bne.n	8004912 <HAL_TIM_PWM_Start+0x82>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2202      	movs	r2, #2
 800490c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004910:	e013      	b.n	800493a <HAL_TIM_PWM_Start+0xaa>
 8004912:	683b      	ldr	r3, [r7, #0]
 8004914:	2b04      	cmp	r3, #4
 8004916:	d104      	bne.n	8004922 <HAL_TIM_PWM_Start+0x92>
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	2202      	movs	r2, #2
 800491c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004920:	e00b      	b.n	800493a <HAL_TIM_PWM_Start+0xaa>
 8004922:	683b      	ldr	r3, [r7, #0]
 8004924:	2b08      	cmp	r3, #8
 8004926:	d104      	bne.n	8004932 <HAL_TIM_PWM_Start+0xa2>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	2202      	movs	r2, #2
 800492c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004930:	e003      	b.n	800493a <HAL_TIM_PWM_Start+0xaa>
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	2202      	movs	r2, #2
 8004936:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	2201      	movs	r2, #1
 8004940:	6839      	ldr	r1, [r7, #0]
 8004942:	4618      	mov	r0, r3
 8004944:	f000 fb2e 	bl	8004fa4 <TIM_CCxChannelCmd>
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	4a23      	ldr	r2, [pc, #140]	@ (80049dc <HAL_TIM_PWM_Start+0x14c>)
 800494e:	4293      	cmp	r3, r2
 8004950:	d107      	bne.n	8004962 <HAL_TIM_PWM_Start+0xd2>
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004960:	645a      	str	r2, [r3, #68]	@ 0x44
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	4a1d      	ldr	r2, [pc, #116]	@ (80049dc <HAL_TIM_PWM_Start+0x14c>)
 8004968:	4293      	cmp	r3, r2
 800496a:	d018      	beq.n	800499e <HAL_TIM_PWM_Start+0x10e>
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004974:	d013      	beq.n	800499e <HAL_TIM_PWM_Start+0x10e>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	4a19      	ldr	r2, [pc, #100]	@ (80049e0 <HAL_TIM_PWM_Start+0x150>)
 800497c:	4293      	cmp	r3, r2
 800497e:	d00e      	beq.n	800499e <HAL_TIM_PWM_Start+0x10e>
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	4a17      	ldr	r2, [pc, #92]	@ (80049e4 <HAL_TIM_PWM_Start+0x154>)
 8004986:	4293      	cmp	r3, r2
 8004988:	d009      	beq.n	800499e <HAL_TIM_PWM_Start+0x10e>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	4a16      	ldr	r2, [pc, #88]	@ (80049e8 <HAL_TIM_PWM_Start+0x158>)
 8004990:	4293      	cmp	r3, r2
 8004992:	d004      	beq.n	800499e <HAL_TIM_PWM_Start+0x10e>
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	4a14      	ldr	r2, [pc, #80]	@ (80049ec <HAL_TIM_PWM_Start+0x15c>)
 800499a:	4293      	cmp	r3, r2
 800499c:	d111      	bne.n	80049c2 <HAL_TIM_PWM_Start+0x132>
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	689b      	ldr	r3, [r3, #8]
 80049a4:	f003 0307 	and.w	r3, r3, #7
 80049a8:	60fb      	str	r3, [r7, #12]
 80049aa:	68fb      	ldr	r3, [r7, #12]
 80049ac:	2b06      	cmp	r3, #6
 80049ae:	d010      	beq.n	80049d2 <HAL_TIM_PWM_Start+0x142>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	681a      	ldr	r2, [r3, #0]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f042 0201 	orr.w	r2, r2, #1
 80049be:	601a      	str	r2, [r3, #0]
 80049c0:	e007      	b.n	80049d2 <HAL_TIM_PWM_Start+0x142>
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	681a      	ldr	r2, [r3, #0]
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f042 0201 	orr.w	r2, r2, #1
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	2300      	movs	r3, #0
 80049d4:	4618      	mov	r0, r3
 80049d6:	3710      	adds	r7, #16
 80049d8:	46bd      	mov	sp, r7
 80049da:	bd80      	pop	{r7, pc}
 80049dc:	40010000 	.word	0x40010000
 80049e0:	40000400 	.word	0x40000400
 80049e4:	40000800 	.word	0x40000800
 80049e8:	40000c00 	.word	0x40000c00
 80049ec:	40014000 	.word	0x40014000

080049f0 <HAL_TIM_PWM_ConfigChannel>:
 80049f0:	b580      	push	{r7, lr}
 80049f2:	b086      	sub	sp, #24
 80049f4:	af00      	add	r7, sp, #0
 80049f6:	60f8      	str	r0, [r7, #12]
 80049f8:	60b9      	str	r1, [r7, #8]
 80049fa:	607a      	str	r2, [r7, #4]
 80049fc:	2300      	movs	r3, #0
 80049fe:	75fb      	strb	r3, [r7, #23]
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004a06:	2b01      	cmp	r3, #1
 8004a08:	d101      	bne.n	8004a0e <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004a0a:	2302      	movs	r3, #2
 8004a0c:	e0ae      	b.n	8004b6c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	2201      	movs	r2, #1
 8004a12:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	2b0c      	cmp	r3, #12
 8004a1a:	f200 809f 	bhi.w	8004b5c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004a1e:	a201      	add	r2, pc, #4	@ (adr r2, 8004a24 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004a20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a24:	08004a59 	.word	0x08004a59
 8004a28:	08004b5d 	.word	0x08004b5d
 8004a2c:	08004b5d 	.word	0x08004b5d
 8004a30:	08004b5d 	.word	0x08004b5d
 8004a34:	08004a99 	.word	0x08004a99
 8004a38:	08004b5d 	.word	0x08004b5d
 8004a3c:	08004b5d 	.word	0x08004b5d
 8004a40:	08004b5d 	.word	0x08004b5d
 8004a44:	08004adb 	.word	0x08004adb
 8004a48:	08004b5d 	.word	0x08004b5d
 8004a4c:	08004b5d 	.word	0x08004b5d
 8004a50:	08004b5d 	.word	0x08004b5d
 8004a54:	08004b1b 	.word	0x08004b1b
 8004a58:	68fb      	ldr	r3, [r7, #12]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	68b9      	ldr	r1, [r7, #8]
 8004a5e:	4618      	mov	r0, r3
 8004a60:	f000 f914 	bl	8004c8c <TIM_OC1_SetConfig>
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	699a      	ldr	r2, [r3, #24]
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	f042 0208 	orr.w	r2, r2, #8
 8004a72:	619a      	str	r2, [r3, #24]
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	699a      	ldr	r2, [r3, #24]
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	f022 0204 	bic.w	r2, r2, #4
 8004a82:	619a      	str	r2, [r3, #24]
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	6999      	ldr	r1, [r3, #24]
 8004a8a:	68bb      	ldr	r3, [r7, #8]
 8004a8c:	691a      	ldr	r2, [r3, #16]
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	681b      	ldr	r3, [r3, #0]
 8004a92:	430a      	orrs	r2, r1
 8004a94:	619a      	str	r2, [r3, #24]
 8004a96:	e064      	b.n	8004b62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a98:	68fb      	ldr	r3, [r7, #12]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	68b9      	ldr	r1, [r7, #8]
 8004a9e:	4618      	mov	r0, r3
 8004aa0:	f000 f95a 	bl	8004d58 <TIM_OC2_SetConfig>
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	699a      	ldr	r2, [r3, #24]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004ab2:	619a      	str	r2, [r3, #24]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	699a      	ldr	r2, [r3, #24]
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004ac2:	619a      	str	r2, [r3, #24]
 8004ac4:	68fb      	ldr	r3, [r7, #12]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	6999      	ldr	r1, [r3, #24]
 8004aca:	68bb      	ldr	r3, [r7, #8]
 8004acc:	691b      	ldr	r3, [r3, #16]
 8004ace:	021a      	lsls	r2, r3, #8
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	430a      	orrs	r2, r1
 8004ad6:	619a      	str	r2, [r3, #24]
 8004ad8:	e043      	b.n	8004b62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	68b9      	ldr	r1, [r7, #8]
 8004ae0:	4618      	mov	r0, r3
 8004ae2:	f000 f9a5 	bl	8004e30 <TIM_OC3_SetConfig>
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	69da      	ldr	r2, [r3, #28]
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	f042 0208 	orr.w	r2, r2, #8
 8004af4:	61da      	str	r2, [r3, #28]
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	69da      	ldr	r2, [r3, #28]
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	f022 0204 	bic.w	r2, r2, #4
 8004b04:	61da      	str	r2, [r3, #28]
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	69d9      	ldr	r1, [r3, #28]
 8004b0c:	68bb      	ldr	r3, [r7, #8]
 8004b0e:	691a      	ldr	r2, [r3, #16]
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	430a      	orrs	r2, r1
 8004b16:	61da      	str	r2, [r3, #28]
 8004b18:	e023      	b.n	8004b62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	68b9      	ldr	r1, [r7, #8]
 8004b20:	4618      	mov	r0, r3
 8004b22:	f000 f9ef 	bl	8004f04 <TIM_OC4_SetConfig>
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	69da      	ldr	r2, [r3, #28]
 8004b2c:	68fb      	ldr	r3, [r7, #12]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004b34:	61da      	str	r2, [r3, #28]
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	69da      	ldr	r2, [r3, #28]
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004b44:	61da      	str	r2, [r3, #28]
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	69d9      	ldr	r1, [r3, #28]
 8004b4c:	68bb      	ldr	r3, [r7, #8]
 8004b4e:	691b      	ldr	r3, [r3, #16]
 8004b50:	021a      	lsls	r2, r3, #8
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	430a      	orrs	r2, r1
 8004b58:	61da      	str	r2, [r3, #28]
 8004b5a:	e002      	b.n	8004b62 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b5c:	2301      	movs	r3, #1
 8004b5e:	75fb      	strb	r3, [r7, #23]
 8004b60:	bf00      	nop
 8004b62:	68fb      	ldr	r3, [r7, #12]
 8004b64:	2200      	movs	r2, #0
 8004b66:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b6a:	7dfb      	ldrb	r3, [r7, #23]
 8004b6c:	4618      	mov	r0, r3
 8004b6e:	3718      	adds	r7, #24
 8004b70:	46bd      	mov	sp, r7
 8004b72:	bd80      	pop	{r7, pc}

08004b74 <TIM_Base_SetConfig>:
 8004b74:	b480      	push	{r7}
 8004b76:	b085      	sub	sp, #20
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	6078      	str	r0, [r7, #4]
 8004b7c:	6039      	str	r1, [r7, #0]
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	60fb      	str	r3, [r7, #12]
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	4a3a      	ldr	r2, [pc, #232]	@ (8004c70 <TIM_Base_SetConfig+0xfc>)
 8004b88:	4293      	cmp	r3, r2
 8004b8a:	d00f      	beq.n	8004bac <TIM_Base_SetConfig+0x38>
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004b92:	d00b      	beq.n	8004bac <TIM_Base_SetConfig+0x38>
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	4a37      	ldr	r2, [pc, #220]	@ (8004c74 <TIM_Base_SetConfig+0x100>)
 8004b98:	4293      	cmp	r3, r2
 8004b9a:	d007      	beq.n	8004bac <TIM_Base_SetConfig+0x38>
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	4a36      	ldr	r2, [pc, #216]	@ (8004c78 <TIM_Base_SetConfig+0x104>)
 8004ba0:	4293      	cmp	r3, r2
 8004ba2:	d003      	beq.n	8004bac <TIM_Base_SetConfig+0x38>
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	4a35      	ldr	r2, [pc, #212]	@ (8004c7c <TIM_Base_SetConfig+0x108>)
 8004ba8:	4293      	cmp	r3, r2
 8004baa:	d108      	bne.n	8004bbe <TIM_Base_SetConfig+0x4a>
 8004bac:	68fb      	ldr	r3, [r7, #12]
 8004bae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004bb2:	60fb      	str	r3, [r7, #12]
 8004bb4:	683b      	ldr	r3, [r7, #0]
 8004bb6:	685b      	ldr	r3, [r3, #4]
 8004bb8:	68fa      	ldr	r2, [r7, #12]
 8004bba:	4313      	orrs	r3, r2
 8004bbc:	60fb      	str	r3, [r7, #12]
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	4a2b      	ldr	r2, [pc, #172]	@ (8004c70 <TIM_Base_SetConfig+0xfc>)
 8004bc2:	4293      	cmp	r3, r2
 8004bc4:	d01b      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004bcc:	d017      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	4a28      	ldr	r2, [pc, #160]	@ (8004c74 <TIM_Base_SetConfig+0x100>)
 8004bd2:	4293      	cmp	r3, r2
 8004bd4:	d013      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	4a27      	ldr	r2, [pc, #156]	@ (8004c78 <TIM_Base_SetConfig+0x104>)
 8004bda:	4293      	cmp	r3, r2
 8004bdc:	d00f      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	4a26      	ldr	r2, [pc, #152]	@ (8004c7c <TIM_Base_SetConfig+0x108>)
 8004be2:	4293      	cmp	r3, r2
 8004be4:	d00b      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	4a25      	ldr	r2, [pc, #148]	@ (8004c80 <TIM_Base_SetConfig+0x10c>)
 8004bea:	4293      	cmp	r3, r2
 8004bec:	d007      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	4a24      	ldr	r2, [pc, #144]	@ (8004c84 <TIM_Base_SetConfig+0x110>)
 8004bf2:	4293      	cmp	r3, r2
 8004bf4:	d003      	beq.n	8004bfe <TIM_Base_SetConfig+0x8a>
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	4a23      	ldr	r2, [pc, #140]	@ (8004c88 <TIM_Base_SetConfig+0x114>)
 8004bfa:	4293      	cmp	r3, r2
 8004bfc:	d108      	bne.n	8004c10 <TIM_Base_SetConfig+0x9c>
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004c04:	60fb      	str	r3, [r7, #12]
 8004c06:	683b      	ldr	r3, [r7, #0]
 8004c08:	68db      	ldr	r3, [r3, #12]
 8004c0a:	68fa      	ldr	r2, [r7, #12]
 8004c0c:	4313      	orrs	r3, r2
 8004c0e:	60fb      	str	r3, [r7, #12]
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004c16:	683b      	ldr	r3, [r7, #0]
 8004c18:	695b      	ldr	r3, [r3, #20]
 8004c1a:	4313      	orrs	r3, r2
 8004c1c:	60fb      	str	r3, [r7, #12]
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	68fa      	ldr	r2, [r7, #12]
 8004c22:	601a      	str	r2, [r3, #0]
 8004c24:	683b      	ldr	r3, [r7, #0]
 8004c26:	689a      	ldr	r2, [r3, #8]
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004c2c:	683b      	ldr	r3, [r7, #0]
 8004c2e:	681a      	ldr	r2, [r3, #0]
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	629a      	str	r2, [r3, #40]	@ 0x28
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	4a0e      	ldr	r2, [pc, #56]	@ (8004c70 <TIM_Base_SetConfig+0xfc>)
 8004c38:	4293      	cmp	r3, r2
 8004c3a:	d103      	bne.n	8004c44 <TIM_Base_SetConfig+0xd0>
 8004c3c:	683b      	ldr	r3, [r7, #0]
 8004c3e:	691a      	ldr	r2, [r3, #16]
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	631a      	str	r2, [r3, #48]	@ 0x30
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	2201      	movs	r2, #1
 8004c48:	615a      	str	r2, [r3, #20]
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	691b      	ldr	r3, [r3, #16]
 8004c4e:	f003 0301 	and.w	r3, r3, #1
 8004c52:	2b01      	cmp	r3, #1
 8004c54:	d105      	bne.n	8004c62 <TIM_Base_SetConfig+0xee>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	691b      	ldr	r3, [r3, #16]
 8004c5a:	f023 0201 	bic.w	r2, r3, #1
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	611a      	str	r2, [r3, #16]
 8004c62:	bf00      	nop
 8004c64:	3714      	adds	r7, #20
 8004c66:	46bd      	mov	sp, r7
 8004c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c6c:	4770      	bx	lr
 8004c6e:	bf00      	nop
 8004c70:	40010000 	.word	0x40010000
 8004c74:	40000400 	.word	0x40000400
 8004c78:	40000800 	.word	0x40000800
 8004c7c:	40000c00 	.word	0x40000c00
 8004c80:	40014000 	.word	0x40014000
 8004c84:	40014400 	.word	0x40014400
 8004c88:	40014800 	.word	0x40014800

08004c8c <TIM_OC1_SetConfig>:
 8004c8c:	b480      	push	{r7}
 8004c8e:	b087      	sub	sp, #28
 8004c90:	af00      	add	r7, sp, #0
 8004c92:	6078      	str	r0, [r7, #4]
 8004c94:	6039      	str	r1, [r7, #0]
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	6a1b      	ldr	r3, [r3, #32]
 8004c9a:	617b      	str	r3, [r7, #20]
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	6a1b      	ldr	r3, [r3, #32]
 8004ca0:	f023 0201 	bic.w	r2, r3, #1
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	621a      	str	r2, [r3, #32]
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	685b      	ldr	r3, [r3, #4]
 8004cac:	613b      	str	r3, [r7, #16]
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	699b      	ldr	r3, [r3, #24]
 8004cb2:	60fb      	str	r3, [r7, #12]
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004cba:	60fb      	str	r3, [r7, #12]
 8004cbc:	68fb      	ldr	r3, [r7, #12]
 8004cbe:	f023 0303 	bic.w	r3, r3, #3
 8004cc2:	60fb      	str	r3, [r7, #12]
 8004cc4:	683b      	ldr	r3, [r7, #0]
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	68fa      	ldr	r2, [r7, #12]
 8004cca:	4313      	orrs	r3, r2
 8004ccc:	60fb      	str	r3, [r7, #12]
 8004cce:	697b      	ldr	r3, [r7, #20]
 8004cd0:	f023 0302 	bic.w	r3, r3, #2
 8004cd4:	617b      	str	r3, [r7, #20]
 8004cd6:	683b      	ldr	r3, [r7, #0]
 8004cd8:	689b      	ldr	r3, [r3, #8]
 8004cda:	697a      	ldr	r2, [r7, #20]
 8004cdc:	4313      	orrs	r3, r2
 8004cde:	617b      	str	r3, [r7, #20]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	4a1c      	ldr	r2, [pc, #112]	@ (8004d54 <TIM_OC1_SetConfig+0xc8>)
 8004ce4:	4293      	cmp	r3, r2
 8004ce6:	d10c      	bne.n	8004d02 <TIM_OC1_SetConfig+0x76>
 8004ce8:	697b      	ldr	r3, [r7, #20]
 8004cea:	f023 0308 	bic.w	r3, r3, #8
 8004cee:	617b      	str	r3, [r7, #20]
 8004cf0:	683b      	ldr	r3, [r7, #0]
 8004cf2:	68db      	ldr	r3, [r3, #12]
 8004cf4:	697a      	ldr	r2, [r7, #20]
 8004cf6:	4313      	orrs	r3, r2
 8004cf8:	617b      	str	r3, [r7, #20]
 8004cfa:	697b      	ldr	r3, [r7, #20]
 8004cfc:	f023 0304 	bic.w	r3, r3, #4
 8004d00:	617b      	str	r3, [r7, #20]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	4a13      	ldr	r2, [pc, #76]	@ (8004d54 <TIM_OC1_SetConfig+0xc8>)
 8004d06:	4293      	cmp	r3, r2
 8004d08:	d111      	bne.n	8004d2e <TIM_OC1_SetConfig+0xa2>
 8004d0a:	693b      	ldr	r3, [r7, #16]
 8004d0c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004d10:	613b      	str	r3, [r7, #16]
 8004d12:	693b      	ldr	r3, [r7, #16]
 8004d14:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004d18:	613b      	str	r3, [r7, #16]
 8004d1a:	683b      	ldr	r3, [r7, #0]
 8004d1c:	695b      	ldr	r3, [r3, #20]
 8004d1e:	693a      	ldr	r2, [r7, #16]
 8004d20:	4313      	orrs	r3, r2
 8004d22:	613b      	str	r3, [r7, #16]
 8004d24:	683b      	ldr	r3, [r7, #0]
 8004d26:	699b      	ldr	r3, [r3, #24]
 8004d28:	693a      	ldr	r2, [r7, #16]
 8004d2a:	4313      	orrs	r3, r2
 8004d2c:	613b      	str	r3, [r7, #16]
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	693a      	ldr	r2, [r7, #16]
 8004d32:	605a      	str	r2, [r3, #4]
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	68fa      	ldr	r2, [r7, #12]
 8004d38:	619a      	str	r2, [r3, #24]
 8004d3a:	683b      	ldr	r3, [r7, #0]
 8004d3c:	685a      	ldr	r2, [r3, #4]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	697a      	ldr	r2, [r7, #20]
 8004d46:	621a      	str	r2, [r3, #32]
 8004d48:	bf00      	nop
 8004d4a:	371c      	adds	r7, #28
 8004d4c:	46bd      	mov	sp, r7
 8004d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d52:	4770      	bx	lr
 8004d54:	40010000 	.word	0x40010000

08004d58 <TIM_OC2_SetConfig>:
 8004d58:	b480      	push	{r7}
 8004d5a:	b087      	sub	sp, #28
 8004d5c:	af00      	add	r7, sp, #0
 8004d5e:	6078      	str	r0, [r7, #4]
 8004d60:	6039      	str	r1, [r7, #0]
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	6a1b      	ldr	r3, [r3, #32]
 8004d66:	617b      	str	r3, [r7, #20]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	6a1b      	ldr	r3, [r3, #32]
 8004d6c:	f023 0210 	bic.w	r2, r3, #16
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	621a      	str	r2, [r3, #32]
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	685b      	ldr	r3, [r3, #4]
 8004d78:	613b      	str	r3, [r7, #16]
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	699b      	ldr	r3, [r3, #24]
 8004d7e:	60fb      	str	r3, [r7, #12]
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004d86:	60fb      	str	r3, [r7, #12]
 8004d88:	68fb      	ldr	r3, [r7, #12]
 8004d8a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d8e:	60fb      	str	r3, [r7, #12]
 8004d90:	683b      	ldr	r3, [r7, #0]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	021b      	lsls	r3, r3, #8
 8004d96:	68fa      	ldr	r2, [r7, #12]
 8004d98:	4313      	orrs	r3, r2
 8004d9a:	60fb      	str	r3, [r7, #12]
 8004d9c:	697b      	ldr	r3, [r7, #20]
 8004d9e:	f023 0320 	bic.w	r3, r3, #32
 8004da2:	617b      	str	r3, [r7, #20]
 8004da4:	683b      	ldr	r3, [r7, #0]
 8004da6:	689b      	ldr	r3, [r3, #8]
 8004da8:	011b      	lsls	r3, r3, #4
 8004daa:	697a      	ldr	r2, [r7, #20]
 8004dac:	4313      	orrs	r3, r2
 8004dae:	617b      	str	r3, [r7, #20]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	4a1e      	ldr	r2, [pc, #120]	@ (8004e2c <TIM_OC2_SetConfig+0xd4>)
 8004db4:	4293      	cmp	r3, r2
 8004db6:	d10d      	bne.n	8004dd4 <TIM_OC2_SetConfig+0x7c>
 8004db8:	697b      	ldr	r3, [r7, #20]
 8004dba:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004dbe:	617b      	str	r3, [r7, #20]
 8004dc0:	683b      	ldr	r3, [r7, #0]
 8004dc2:	68db      	ldr	r3, [r3, #12]
 8004dc4:	011b      	lsls	r3, r3, #4
 8004dc6:	697a      	ldr	r2, [r7, #20]
 8004dc8:	4313      	orrs	r3, r2
 8004dca:	617b      	str	r3, [r7, #20]
 8004dcc:	697b      	ldr	r3, [r7, #20]
 8004dce:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004dd2:	617b      	str	r3, [r7, #20]
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	4a15      	ldr	r2, [pc, #84]	@ (8004e2c <TIM_OC2_SetConfig+0xd4>)
 8004dd8:	4293      	cmp	r3, r2
 8004dda:	d113      	bne.n	8004e04 <TIM_OC2_SetConfig+0xac>
 8004ddc:	693b      	ldr	r3, [r7, #16]
 8004dde:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004de2:	613b      	str	r3, [r7, #16]
 8004de4:	693b      	ldr	r3, [r7, #16]
 8004de6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004dea:	613b      	str	r3, [r7, #16]
 8004dec:	683b      	ldr	r3, [r7, #0]
 8004dee:	695b      	ldr	r3, [r3, #20]
 8004df0:	009b      	lsls	r3, r3, #2
 8004df2:	693a      	ldr	r2, [r7, #16]
 8004df4:	4313      	orrs	r3, r2
 8004df6:	613b      	str	r3, [r7, #16]
 8004df8:	683b      	ldr	r3, [r7, #0]
 8004dfa:	699b      	ldr	r3, [r3, #24]
 8004dfc:	009b      	lsls	r3, r3, #2
 8004dfe:	693a      	ldr	r2, [r7, #16]
 8004e00:	4313      	orrs	r3, r2
 8004e02:	613b      	str	r3, [r7, #16]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	693a      	ldr	r2, [r7, #16]
 8004e08:	605a      	str	r2, [r3, #4]
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	68fa      	ldr	r2, [r7, #12]
 8004e0e:	619a      	str	r2, [r3, #24]
 8004e10:	683b      	ldr	r3, [r7, #0]
 8004e12:	685a      	ldr	r2, [r3, #4]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	639a      	str	r2, [r3, #56]	@ 0x38
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	697a      	ldr	r2, [r7, #20]
 8004e1c:	621a      	str	r2, [r3, #32]
 8004e1e:	bf00      	nop
 8004e20:	371c      	adds	r7, #28
 8004e22:	46bd      	mov	sp, r7
 8004e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e28:	4770      	bx	lr
 8004e2a:	bf00      	nop
 8004e2c:	40010000 	.word	0x40010000

08004e30 <TIM_OC3_SetConfig>:
 8004e30:	b480      	push	{r7}
 8004e32:	b087      	sub	sp, #28
 8004e34:	af00      	add	r7, sp, #0
 8004e36:	6078      	str	r0, [r7, #4]
 8004e38:	6039      	str	r1, [r7, #0]
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	6a1b      	ldr	r3, [r3, #32]
 8004e3e:	617b      	str	r3, [r7, #20]
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	6a1b      	ldr	r3, [r3, #32]
 8004e44:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	621a      	str	r2, [r3, #32]
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	685b      	ldr	r3, [r3, #4]
 8004e50:	613b      	str	r3, [r7, #16]
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	69db      	ldr	r3, [r3, #28]
 8004e56:	60fb      	str	r3, [r7, #12]
 8004e58:	68fb      	ldr	r3, [r7, #12]
 8004e5a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e5e:	60fb      	str	r3, [r7, #12]
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	f023 0303 	bic.w	r3, r3, #3
 8004e66:	60fb      	str	r3, [r7, #12]
 8004e68:	683b      	ldr	r3, [r7, #0]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	68fa      	ldr	r2, [r7, #12]
 8004e6e:	4313      	orrs	r3, r2
 8004e70:	60fb      	str	r3, [r7, #12]
 8004e72:	697b      	ldr	r3, [r7, #20]
 8004e74:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004e78:	617b      	str	r3, [r7, #20]
 8004e7a:	683b      	ldr	r3, [r7, #0]
 8004e7c:	689b      	ldr	r3, [r3, #8]
 8004e7e:	021b      	lsls	r3, r3, #8
 8004e80:	697a      	ldr	r2, [r7, #20]
 8004e82:	4313      	orrs	r3, r2
 8004e84:	617b      	str	r3, [r7, #20]
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	4a1d      	ldr	r2, [pc, #116]	@ (8004f00 <TIM_OC3_SetConfig+0xd0>)
 8004e8a:	4293      	cmp	r3, r2
 8004e8c:	d10d      	bne.n	8004eaa <TIM_OC3_SetConfig+0x7a>
 8004e8e:	697b      	ldr	r3, [r7, #20]
 8004e90:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004e94:	617b      	str	r3, [r7, #20]
 8004e96:	683b      	ldr	r3, [r7, #0]
 8004e98:	68db      	ldr	r3, [r3, #12]
 8004e9a:	021b      	lsls	r3, r3, #8
 8004e9c:	697a      	ldr	r2, [r7, #20]
 8004e9e:	4313      	orrs	r3, r2
 8004ea0:	617b      	str	r3, [r7, #20]
 8004ea2:	697b      	ldr	r3, [r7, #20]
 8004ea4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004ea8:	617b      	str	r3, [r7, #20]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	4a14      	ldr	r2, [pc, #80]	@ (8004f00 <TIM_OC3_SetConfig+0xd0>)
 8004eae:	4293      	cmp	r3, r2
 8004eb0:	d113      	bne.n	8004eda <TIM_OC3_SetConfig+0xaa>
 8004eb2:	693b      	ldr	r3, [r7, #16]
 8004eb4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004eb8:	613b      	str	r3, [r7, #16]
 8004eba:	693b      	ldr	r3, [r7, #16]
 8004ebc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004ec0:	613b      	str	r3, [r7, #16]
 8004ec2:	683b      	ldr	r3, [r7, #0]
 8004ec4:	695b      	ldr	r3, [r3, #20]
 8004ec6:	011b      	lsls	r3, r3, #4
 8004ec8:	693a      	ldr	r2, [r7, #16]
 8004eca:	4313      	orrs	r3, r2
 8004ecc:	613b      	str	r3, [r7, #16]
 8004ece:	683b      	ldr	r3, [r7, #0]
 8004ed0:	699b      	ldr	r3, [r3, #24]
 8004ed2:	011b      	lsls	r3, r3, #4
 8004ed4:	693a      	ldr	r2, [r7, #16]
 8004ed6:	4313      	orrs	r3, r2
 8004ed8:	613b      	str	r3, [r7, #16]
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	693a      	ldr	r2, [r7, #16]
 8004ede:	605a      	str	r2, [r3, #4]
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	68fa      	ldr	r2, [r7, #12]
 8004ee4:	61da      	str	r2, [r3, #28]
 8004ee6:	683b      	ldr	r3, [r7, #0]
 8004ee8:	685a      	ldr	r2, [r3, #4]
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	697a      	ldr	r2, [r7, #20]
 8004ef2:	621a      	str	r2, [r3, #32]
 8004ef4:	bf00      	nop
 8004ef6:	371c      	adds	r7, #28
 8004ef8:	46bd      	mov	sp, r7
 8004efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004efe:	4770      	bx	lr
 8004f00:	40010000 	.word	0x40010000

08004f04 <TIM_OC4_SetConfig>:
 8004f04:	b480      	push	{r7}
 8004f06:	b087      	sub	sp, #28
 8004f08:	af00      	add	r7, sp, #0
 8004f0a:	6078      	str	r0, [r7, #4]
 8004f0c:	6039      	str	r1, [r7, #0]
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	6a1b      	ldr	r3, [r3, #32]
 8004f12:	613b      	str	r3, [r7, #16]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	6a1b      	ldr	r3, [r3, #32]
 8004f18:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	621a      	str	r2, [r3, #32]
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	685b      	ldr	r3, [r3, #4]
 8004f24:	617b      	str	r3, [r7, #20]
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	69db      	ldr	r3, [r3, #28]
 8004f2a:	60fb      	str	r3, [r7, #12]
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004f3a:	60fb      	str	r3, [r7, #12]
 8004f3c:	683b      	ldr	r3, [r7, #0]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	021b      	lsls	r3, r3, #8
 8004f42:	68fa      	ldr	r2, [r7, #12]
 8004f44:	4313      	orrs	r3, r2
 8004f46:	60fb      	str	r3, [r7, #12]
 8004f48:	693b      	ldr	r3, [r7, #16]
 8004f4a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004f4e:	613b      	str	r3, [r7, #16]
 8004f50:	683b      	ldr	r3, [r7, #0]
 8004f52:	689b      	ldr	r3, [r3, #8]
 8004f54:	031b      	lsls	r3, r3, #12
 8004f56:	693a      	ldr	r2, [r7, #16]
 8004f58:	4313      	orrs	r3, r2
 8004f5a:	613b      	str	r3, [r7, #16]
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	4a10      	ldr	r2, [pc, #64]	@ (8004fa0 <TIM_OC4_SetConfig+0x9c>)
 8004f60:	4293      	cmp	r3, r2
 8004f62:	d109      	bne.n	8004f78 <TIM_OC4_SetConfig+0x74>
 8004f64:	697b      	ldr	r3, [r7, #20]
 8004f66:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004f6a:	617b      	str	r3, [r7, #20]
 8004f6c:	683b      	ldr	r3, [r7, #0]
 8004f6e:	695b      	ldr	r3, [r3, #20]
 8004f70:	019b      	lsls	r3, r3, #6
 8004f72:	697a      	ldr	r2, [r7, #20]
 8004f74:	4313      	orrs	r3, r2
 8004f76:	617b      	str	r3, [r7, #20]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	697a      	ldr	r2, [r7, #20]
 8004f7c:	605a      	str	r2, [r3, #4]
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	68fa      	ldr	r2, [r7, #12]
 8004f82:	61da      	str	r2, [r3, #28]
 8004f84:	683b      	ldr	r3, [r7, #0]
 8004f86:	685a      	ldr	r2, [r3, #4]
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	693a      	ldr	r2, [r7, #16]
 8004f90:	621a      	str	r2, [r3, #32]
 8004f92:	bf00      	nop
 8004f94:	371c      	adds	r7, #28
 8004f96:	46bd      	mov	sp, r7
 8004f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f9c:	4770      	bx	lr
 8004f9e:	bf00      	nop
 8004fa0:	40010000 	.word	0x40010000

08004fa4 <TIM_CCxChannelCmd>:
 8004fa4:	b480      	push	{r7}
 8004fa6:	b087      	sub	sp, #28
 8004fa8:	af00      	add	r7, sp, #0
 8004faa:	60f8      	str	r0, [r7, #12]
 8004fac:	60b9      	str	r1, [r7, #8]
 8004fae:	607a      	str	r2, [r7, #4]
 8004fb0:	68bb      	ldr	r3, [r7, #8]
 8004fb2:	f003 031f 	and.w	r3, r3, #31
 8004fb6:	2201      	movs	r2, #1
 8004fb8:	fa02 f303 	lsl.w	r3, r2, r3
 8004fbc:	617b      	str	r3, [r7, #20]
 8004fbe:	68fb      	ldr	r3, [r7, #12]
 8004fc0:	6a1a      	ldr	r2, [r3, #32]
 8004fc2:	697b      	ldr	r3, [r7, #20]
 8004fc4:	43db      	mvns	r3, r3
 8004fc6:	401a      	ands	r2, r3
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	621a      	str	r2, [r3, #32]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	6a1a      	ldr	r2, [r3, #32]
 8004fd0:	68bb      	ldr	r3, [r7, #8]
 8004fd2:	f003 031f 	and.w	r3, r3, #31
 8004fd6:	6879      	ldr	r1, [r7, #4]
 8004fd8:	fa01 f303 	lsl.w	r3, r1, r3
 8004fdc:	431a      	orrs	r2, r3
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	621a      	str	r2, [r3, #32]
 8004fe2:	bf00      	nop
 8004fe4:	371c      	adds	r7, #28
 8004fe6:	46bd      	mov	sp, r7
 8004fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fec:	4770      	bx	lr
	...

08004ff0 <HAL_TIMEx_MasterConfigSynchronization>:
 8004ff0:	b480      	push	{r7}
 8004ff2:	b085      	sub	sp, #20
 8004ff4:	af00      	add	r7, sp, #0
 8004ff6:	6078      	str	r0, [r7, #4]
 8004ff8:	6039      	str	r1, [r7, #0]
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005000:	2b01      	cmp	r3, #1
 8005002:	d101      	bne.n	8005008 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005004:	2302      	movs	r3, #2
 8005006:	e050      	b.n	80050aa <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	2201      	movs	r2, #1
 800500c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	2202      	movs	r2, #2
 8005014:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	685b      	ldr	r3, [r3, #4]
 800501e:	60fb      	str	r3, [r7, #12]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	689b      	ldr	r3, [r3, #8]
 8005026:	60bb      	str	r3, [r7, #8]
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800502e:	60fb      	str	r3, [r7, #12]
 8005030:	683b      	ldr	r3, [r7, #0]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	68fa      	ldr	r2, [r7, #12]
 8005036:	4313      	orrs	r3, r2
 8005038:	60fb      	str	r3, [r7, #12]
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	68fa      	ldr	r2, [r7, #12]
 8005040:	605a      	str	r2, [r3, #4]
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	4a1c      	ldr	r2, [pc, #112]	@ (80050b8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8005048:	4293      	cmp	r3, r2
 800504a:	d018      	beq.n	800507e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005054:	d013      	beq.n	800507e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	4a18      	ldr	r2, [pc, #96]	@ (80050bc <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800505c:	4293      	cmp	r3, r2
 800505e:	d00e      	beq.n	800507e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	4a16      	ldr	r2, [pc, #88]	@ (80050c0 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8005066:	4293      	cmp	r3, r2
 8005068:	d009      	beq.n	800507e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	4a15      	ldr	r2, [pc, #84]	@ (80050c4 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8005070:	4293      	cmp	r3, r2
 8005072:	d004      	beq.n	800507e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	4a13      	ldr	r2, [pc, #76]	@ (80050c8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800507a:	4293      	cmp	r3, r2
 800507c:	d10c      	bne.n	8005098 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800507e:	68bb      	ldr	r3, [r7, #8]
 8005080:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005084:	60bb      	str	r3, [r7, #8]
 8005086:	683b      	ldr	r3, [r7, #0]
 8005088:	685b      	ldr	r3, [r3, #4]
 800508a:	68ba      	ldr	r2, [r7, #8]
 800508c:	4313      	orrs	r3, r2
 800508e:	60bb      	str	r3, [r7, #8]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	68ba      	ldr	r2, [r7, #8]
 8005096:	609a      	str	r2, [r3, #8]
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	2201      	movs	r2, #1
 800509c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	2200      	movs	r2, #0
 80050a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050a8:	2300      	movs	r3, #0
 80050aa:	4618      	mov	r0, r3
 80050ac:	3714      	adds	r7, #20
 80050ae:	46bd      	mov	sp, r7
 80050b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050b4:	4770      	bx	lr
 80050b6:	bf00      	nop
 80050b8:	40010000 	.word	0x40010000
 80050bc:	40000400 	.word	0x40000400
 80050c0:	40000800 	.word	0x40000800
 80050c4:	40000c00 	.word	0x40000c00
 80050c8:	40014000 	.word	0x40014000

080050cc <HAL_UART_Init>:
 80050cc:	b580      	push	{r7, lr}
 80050ce:	b082      	sub	sp, #8
 80050d0:	af00      	add	r7, sp, #0
 80050d2:	6078      	str	r0, [r7, #4]
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d101      	bne.n	80050de <HAL_UART_Init+0x12>
 80050da:	2301      	movs	r3, #1
 80050dc:	e042      	b.n	8005164 <HAL_UART_Init+0x98>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050e4:	b2db      	uxtb	r3, r3
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d106      	bne.n	80050f8 <HAL_UART_Init+0x2c>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	2200      	movs	r2, #0
 80050ee:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80050f2:	6878      	ldr	r0, [r7, #4]
 80050f4:	f7fc fc7c 	bl	80019f0 <HAL_UART_MspInit>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	2224      	movs	r2, #36	@ 0x24
 80050fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	68da      	ldr	r2, [r3, #12]
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800510e:	60da      	str	r2, [r3, #12]
 8005110:	6878      	ldr	r0, [r7, #4]
 8005112:	f000 ff4f 	bl	8005fb4 <UART_SetConfig>
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	691a      	ldr	r2, [r3, #16]
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005124:	611a      	str	r2, [r3, #16]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	695a      	ldr	r2, [r3, #20]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005134:	615a      	str	r2, [r3, #20]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	68da      	ldr	r2, [r3, #12]
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005144:	60da      	str	r2, [r3, #12]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	2200      	movs	r2, #0
 800514a:	645a      	str	r2, [r3, #68]	@ 0x44
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	2220      	movs	r2, #32
 8005150:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	2220      	movs	r2, #32
 8005158:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2200      	movs	r2, #0
 8005160:	635a      	str	r2, [r3, #52]	@ 0x34
 8005162:	2300      	movs	r3, #0
 8005164:	4618      	mov	r0, r3
 8005166:	3708      	adds	r7, #8
 8005168:	46bd      	mov	sp, r7
 800516a:	bd80      	pop	{r7, pc}

0800516c <HAL_UART_Transmit>:
 800516c:	b580      	push	{r7, lr}
 800516e:	b08a      	sub	sp, #40	@ 0x28
 8005170:	af02      	add	r7, sp, #8
 8005172:	60f8      	str	r0, [r7, #12]
 8005174:	60b9      	str	r1, [r7, #8]
 8005176:	603b      	str	r3, [r7, #0]
 8005178:	4613      	mov	r3, r2
 800517a:	80fb      	strh	r3, [r7, #6]
 800517c:	2300      	movs	r3, #0
 800517e:	617b      	str	r3, [r7, #20]
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005186:	b2db      	uxtb	r3, r3
 8005188:	2b20      	cmp	r3, #32
 800518a:	d175      	bne.n	8005278 <HAL_UART_Transmit+0x10c>
 800518c:	68bb      	ldr	r3, [r7, #8]
 800518e:	2b00      	cmp	r3, #0
 8005190:	d002      	beq.n	8005198 <HAL_UART_Transmit+0x2c>
 8005192:	88fb      	ldrh	r3, [r7, #6]
 8005194:	2b00      	cmp	r3, #0
 8005196:	d101      	bne.n	800519c <HAL_UART_Transmit+0x30>
 8005198:	2301      	movs	r3, #1
 800519a:	e06e      	b.n	800527a <HAL_UART_Transmit+0x10e>
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	2200      	movs	r2, #0
 80051a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	2221      	movs	r2, #33	@ 0x21
 80051a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051aa:	f7fc fe95 	bl	8001ed8 <HAL_GetTick>
 80051ae:	6178      	str	r0, [r7, #20]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	88fa      	ldrh	r2, [r7, #6]
 80051b4:	849a      	strh	r2, [r3, #36]	@ 0x24
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	88fa      	ldrh	r2, [r7, #6]
 80051ba:	84da      	strh	r2, [r3, #38]	@ 0x26
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	689b      	ldr	r3, [r3, #8]
 80051c0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80051c4:	d108      	bne.n	80051d8 <HAL_UART_Transmit+0x6c>
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	691b      	ldr	r3, [r3, #16]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d104      	bne.n	80051d8 <HAL_UART_Transmit+0x6c>
 80051ce:	2300      	movs	r3, #0
 80051d0:	61fb      	str	r3, [r7, #28]
 80051d2:	68bb      	ldr	r3, [r7, #8]
 80051d4:	61bb      	str	r3, [r7, #24]
 80051d6:	e003      	b.n	80051e0 <HAL_UART_Transmit+0x74>
 80051d8:	68bb      	ldr	r3, [r7, #8]
 80051da:	61fb      	str	r3, [r7, #28]
 80051dc:	2300      	movs	r3, #0
 80051de:	61bb      	str	r3, [r7, #24]
 80051e0:	e02e      	b.n	8005240 <HAL_UART_Transmit+0xd4>
 80051e2:	683b      	ldr	r3, [r7, #0]
 80051e4:	9300      	str	r3, [sp, #0]
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	2200      	movs	r2, #0
 80051ea:	2180      	movs	r1, #128	@ 0x80
 80051ec:	68f8      	ldr	r0, [r7, #12]
 80051ee:	f000 fc27 	bl	8005a40 <UART_WaitOnFlagUntilTimeout>
 80051f2:	4603      	mov	r3, r0
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	d005      	beq.n	8005204 <HAL_UART_Transmit+0x98>
 80051f8:	68fb      	ldr	r3, [r7, #12]
 80051fa:	2220      	movs	r2, #32
 80051fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005200:	2303      	movs	r3, #3
 8005202:	e03a      	b.n	800527a <HAL_UART_Transmit+0x10e>
 8005204:	69fb      	ldr	r3, [r7, #28]
 8005206:	2b00      	cmp	r3, #0
 8005208:	d10b      	bne.n	8005222 <HAL_UART_Transmit+0xb6>
 800520a:	69bb      	ldr	r3, [r7, #24]
 800520c:	881b      	ldrh	r3, [r3, #0]
 800520e:	461a      	mov	r2, r3
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005218:	605a      	str	r2, [r3, #4]
 800521a:	69bb      	ldr	r3, [r7, #24]
 800521c:	3302      	adds	r3, #2
 800521e:	61bb      	str	r3, [r7, #24]
 8005220:	e007      	b.n	8005232 <HAL_UART_Transmit+0xc6>
 8005222:	69fb      	ldr	r3, [r7, #28]
 8005224:	781a      	ldrb	r2, [r3, #0]
 8005226:	68fb      	ldr	r3, [r7, #12]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	605a      	str	r2, [r3, #4]
 800522c:	69fb      	ldr	r3, [r7, #28]
 800522e:	3301      	adds	r3, #1
 8005230:	61fb      	str	r3, [r7, #28]
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005236:	b29b      	uxth	r3, r3
 8005238:	3b01      	subs	r3, #1
 800523a:	b29a      	uxth	r2, r3
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005244:	b29b      	uxth	r3, r3
 8005246:	2b00      	cmp	r3, #0
 8005248:	d1cb      	bne.n	80051e2 <HAL_UART_Transmit+0x76>
 800524a:	683b      	ldr	r3, [r7, #0]
 800524c:	9300      	str	r3, [sp, #0]
 800524e:	697b      	ldr	r3, [r7, #20]
 8005250:	2200      	movs	r2, #0
 8005252:	2140      	movs	r1, #64	@ 0x40
 8005254:	68f8      	ldr	r0, [r7, #12]
 8005256:	f000 fbf3 	bl	8005a40 <UART_WaitOnFlagUntilTimeout>
 800525a:	4603      	mov	r3, r0
 800525c:	2b00      	cmp	r3, #0
 800525e:	d005      	beq.n	800526c <HAL_UART_Transmit+0x100>
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	2220      	movs	r2, #32
 8005264:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005268:	2303      	movs	r3, #3
 800526a:	e006      	b.n	800527a <HAL_UART_Transmit+0x10e>
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	2220      	movs	r2, #32
 8005270:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005274:	2300      	movs	r3, #0
 8005276:	e000      	b.n	800527a <HAL_UART_Transmit+0x10e>
 8005278:	2302      	movs	r3, #2
 800527a:	4618      	mov	r0, r3
 800527c:	3720      	adds	r7, #32
 800527e:	46bd      	mov	sp, r7
 8005280:	bd80      	pop	{r7, pc}

08005282 <HAL_UART_Receive_DMA>:
 8005282:	b580      	push	{r7, lr}
 8005284:	b084      	sub	sp, #16
 8005286:	af00      	add	r7, sp, #0
 8005288:	60f8      	str	r0, [r7, #12]
 800528a:	60b9      	str	r1, [r7, #8]
 800528c:	4613      	mov	r3, r2
 800528e:	80fb      	strh	r3, [r7, #6]
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005296:	b2db      	uxtb	r3, r3
 8005298:	2b20      	cmp	r3, #32
 800529a:	d112      	bne.n	80052c2 <HAL_UART_Receive_DMA+0x40>
 800529c:	68bb      	ldr	r3, [r7, #8]
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d002      	beq.n	80052a8 <HAL_UART_Receive_DMA+0x26>
 80052a2:	88fb      	ldrh	r3, [r7, #6]
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	d101      	bne.n	80052ac <HAL_UART_Receive_DMA+0x2a>
 80052a8:	2301      	movs	r3, #1
 80052aa:	e00b      	b.n	80052c4 <HAL_UART_Receive_DMA+0x42>
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	2200      	movs	r2, #0
 80052b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80052b2:	88fb      	ldrh	r3, [r7, #6]
 80052b4:	461a      	mov	r2, r3
 80052b6:	68b9      	ldr	r1, [r7, #8]
 80052b8:	68f8      	ldr	r0, [r7, #12]
 80052ba:	f000 fc1b 	bl	8005af4 <UART_Start_Receive_DMA>
 80052be:	4603      	mov	r3, r0
 80052c0:	e000      	b.n	80052c4 <HAL_UART_Receive_DMA+0x42>
 80052c2:	2302      	movs	r3, #2
 80052c4:	4618      	mov	r0, r3
 80052c6:	3710      	adds	r7, #16
 80052c8:	46bd      	mov	sp, r7
 80052ca:	bd80      	pop	{r7, pc}

080052cc <HAL_UART_IRQHandler>:
 80052cc:	b580      	push	{r7, lr}
 80052ce:	b0ba      	sub	sp, #232	@ 0xe8
 80052d0:	af00      	add	r7, sp, #0
 80052d2:	6078      	str	r0, [r7, #4]
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	68db      	ldr	r3, [r3, #12]
 80052e4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	695b      	ldr	r3, [r3, #20]
 80052ee:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80052f2:	2300      	movs	r3, #0
 80052f4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80052f8:	2300      	movs	r3, #0
 80052fa:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80052fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005302:	f003 030f 	and.w	r3, r3, #15
 8005306:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800530a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800530e:	2b00      	cmp	r3, #0
 8005310:	d10f      	bne.n	8005332 <HAL_UART_IRQHandler+0x66>
 8005312:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005316:	f003 0320 	and.w	r3, r3, #32
 800531a:	2b00      	cmp	r3, #0
 800531c:	d009      	beq.n	8005332 <HAL_UART_IRQHandler+0x66>
 800531e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005322:	f003 0320 	and.w	r3, r3, #32
 8005326:	2b00      	cmp	r3, #0
 8005328:	d003      	beq.n	8005332 <HAL_UART_IRQHandler+0x66>
 800532a:	6878      	ldr	r0, [r7, #4]
 800532c:	f000 fd83 	bl	8005e36 <UART_Receive_IT>
 8005330:	e25b      	b.n	80057ea <HAL_UART_IRQHandler+0x51e>
 8005332:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005336:	2b00      	cmp	r3, #0
 8005338:	f000 80de 	beq.w	80054f8 <HAL_UART_IRQHandler+0x22c>
 800533c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005340:	f003 0301 	and.w	r3, r3, #1
 8005344:	2b00      	cmp	r3, #0
 8005346:	d106      	bne.n	8005356 <HAL_UART_IRQHandler+0x8a>
 8005348:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800534c:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005350:	2b00      	cmp	r3, #0
 8005352:	f000 80d1 	beq.w	80054f8 <HAL_UART_IRQHandler+0x22c>
 8005356:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800535a:	f003 0301 	and.w	r3, r3, #1
 800535e:	2b00      	cmp	r3, #0
 8005360:	d00b      	beq.n	800537a <HAL_UART_IRQHandler+0xae>
 8005362:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005366:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800536a:	2b00      	cmp	r3, #0
 800536c:	d005      	beq.n	800537a <HAL_UART_IRQHandler+0xae>
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005372:	f043 0201 	orr.w	r2, r3, #1
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	645a      	str	r2, [r3, #68]	@ 0x44
 800537a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800537e:	f003 0304 	and.w	r3, r3, #4
 8005382:	2b00      	cmp	r3, #0
 8005384:	d00b      	beq.n	800539e <HAL_UART_IRQHandler+0xd2>
 8005386:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800538a:	f003 0301 	and.w	r3, r3, #1
 800538e:	2b00      	cmp	r3, #0
 8005390:	d005      	beq.n	800539e <HAL_UART_IRQHandler+0xd2>
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005396:	f043 0202 	orr.w	r2, r3, #2
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	645a      	str	r2, [r3, #68]	@ 0x44
 800539e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053a2:	f003 0302 	and.w	r3, r3, #2
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	d00b      	beq.n	80053c2 <HAL_UART_IRQHandler+0xf6>
 80053aa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80053ae:	f003 0301 	and.w	r3, r3, #1
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d005      	beq.n	80053c2 <HAL_UART_IRQHandler+0xf6>
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053ba:	f043 0204 	orr.w	r2, r3, #4
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	645a      	str	r2, [r3, #68]	@ 0x44
 80053c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053c6:	f003 0308 	and.w	r3, r3, #8
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	d011      	beq.n	80053f2 <HAL_UART_IRQHandler+0x126>
 80053ce:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053d2:	f003 0320 	and.w	r3, r3, #32
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d105      	bne.n	80053e6 <HAL_UART_IRQHandler+0x11a>
 80053da:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80053de:	f003 0301 	and.w	r3, r3, #1
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d005      	beq.n	80053f2 <HAL_UART_IRQHandler+0x126>
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053ea:	f043 0208 	orr.w	r2, r3, #8
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	f000 81f2 	beq.w	80057e0 <HAL_UART_IRQHandler+0x514>
 80053fc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005400:	f003 0320 	and.w	r3, r3, #32
 8005404:	2b00      	cmp	r3, #0
 8005406:	d008      	beq.n	800541a <HAL_UART_IRQHandler+0x14e>
 8005408:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800540c:	f003 0320 	and.w	r3, r3, #32
 8005410:	2b00      	cmp	r3, #0
 8005412:	d002      	beq.n	800541a <HAL_UART_IRQHandler+0x14e>
 8005414:	6878      	ldr	r0, [r7, #4]
 8005416:	f000 fd0e 	bl	8005e36 <UART_Receive_IT>
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	681b      	ldr	r3, [r3, #0]
 800541e:	695b      	ldr	r3, [r3, #20]
 8005420:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005424:	2b40      	cmp	r3, #64	@ 0x40
 8005426:	bf0c      	ite	eq
 8005428:	2301      	moveq	r3, #1
 800542a:	2300      	movne	r3, #0
 800542c:	b2db      	uxtb	r3, r3
 800542e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005436:	f003 0308 	and.w	r3, r3, #8
 800543a:	2b00      	cmp	r3, #0
 800543c:	d103      	bne.n	8005446 <HAL_UART_IRQHandler+0x17a>
 800543e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005442:	2b00      	cmp	r3, #0
 8005444:	d04f      	beq.n	80054e6 <HAL_UART_IRQHandler+0x21a>
 8005446:	6878      	ldr	r0, [r7, #4]
 8005448:	f000 fc16 	bl	8005c78 <UART_EndRxTransfer>
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	695b      	ldr	r3, [r3, #20]
 8005452:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005456:	2b40      	cmp	r3, #64	@ 0x40
 8005458:	d141      	bne.n	80054de <HAL_UART_IRQHandler+0x212>
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	3314      	adds	r3, #20
 8005460:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005464:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005468:	e853 3f00 	ldrex	r3, [r3]
 800546c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005470:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005474:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005478:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	3314      	adds	r3, #20
 8005482:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005486:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800548a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800548e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005492:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005496:	e841 2300 	strex	r3, r2, [r1]
 800549a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800549e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80054a2:	2b00      	cmp	r3, #0
 80054a4:	d1d9      	bne.n	800545a <HAL_UART_IRQHandler+0x18e>
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80054aa:	2b00      	cmp	r3, #0
 80054ac:	d013      	beq.n	80054d6 <HAL_UART_IRQHandler+0x20a>
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80054b2:	4a7e      	ldr	r2, [pc, #504]	@ (80056ac <HAL_UART_IRQHandler+0x3e0>)
 80054b4:	651a      	str	r2, [r3, #80]	@ 0x50
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80054ba:	4618      	mov	r0, r3
 80054bc:	f7fc ffc4 	bl	8002448 <HAL_DMA_Abort_IT>
 80054c0:	4603      	mov	r3, r0
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d016      	beq.n	80054f4 <HAL_UART_IRQHandler+0x228>
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80054ca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80054cc:	687a      	ldr	r2, [r7, #4]
 80054ce:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80054d0:	4610      	mov	r0, r2
 80054d2:	4798      	blx	r3
 80054d4:	e00e      	b.n	80054f4 <HAL_UART_IRQHandler+0x228>
 80054d6:	6878      	ldr	r0, [r7, #4]
 80054d8:	f000 f99e 	bl	8005818 <HAL_UART_ErrorCallback>
 80054dc:	e00a      	b.n	80054f4 <HAL_UART_IRQHandler+0x228>
 80054de:	6878      	ldr	r0, [r7, #4]
 80054e0:	f000 f99a 	bl	8005818 <HAL_UART_ErrorCallback>
 80054e4:	e006      	b.n	80054f4 <HAL_UART_IRQHandler+0x228>
 80054e6:	6878      	ldr	r0, [r7, #4]
 80054e8:	f000 f996 	bl	8005818 <HAL_UART_ErrorCallback>
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	2200      	movs	r2, #0
 80054f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80054f2:	e175      	b.n	80057e0 <HAL_UART_IRQHandler+0x514>
 80054f4:	bf00      	nop
 80054f6:	e173      	b.n	80057e0 <HAL_UART_IRQHandler+0x514>
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80054fc:	2b01      	cmp	r3, #1
 80054fe:	f040 814f 	bne.w	80057a0 <HAL_UART_IRQHandler+0x4d4>
 8005502:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005506:	f003 0310 	and.w	r3, r3, #16
 800550a:	2b00      	cmp	r3, #0
 800550c:	f000 8148 	beq.w	80057a0 <HAL_UART_IRQHandler+0x4d4>
 8005510:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005514:	f003 0310 	and.w	r3, r3, #16
 8005518:	2b00      	cmp	r3, #0
 800551a:	f000 8141 	beq.w	80057a0 <HAL_UART_IRQHandler+0x4d4>
 800551e:	2300      	movs	r3, #0
 8005520:	60bb      	str	r3, [r7, #8]
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	60bb      	str	r3, [r7, #8]
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	685b      	ldr	r3, [r3, #4]
 8005530:	60bb      	str	r3, [r7, #8]
 8005532:	68bb      	ldr	r3, [r7, #8]
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	695b      	ldr	r3, [r3, #20]
 800553a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800553e:	2b40      	cmp	r3, #64	@ 0x40
 8005540:	f040 80b6 	bne.w	80056b0 <HAL_UART_IRQHandler+0x3e4>
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	685b      	ldr	r3, [r3, #4]
 800554c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005550:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8005554:	2b00      	cmp	r3, #0
 8005556:	f000 8145 	beq.w	80057e4 <HAL_UART_IRQHandler+0x518>
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800555e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005562:	429a      	cmp	r2, r3
 8005564:	f080 813e 	bcs.w	80057e4 <HAL_UART_IRQHandler+0x518>
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800556e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005574:	69db      	ldr	r3, [r3, #28]
 8005576:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800557a:	f000 8088 	beq.w	800568e <HAL_UART_IRQHandler+0x3c2>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	330c      	adds	r3, #12
 8005584:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005588:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800558c:	e853 3f00 	ldrex	r3, [r3]
 8005590:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005594:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005598:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800559c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	330c      	adds	r3, #12
 80055a6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80055aa:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80055ae:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80055b2:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80055b6:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80055ba:	e841 2300 	strex	r3, r2, [r1]
 80055be:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80055c2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80055c6:	2b00      	cmp	r3, #0
 80055c8:	d1d9      	bne.n	800557e <HAL_UART_IRQHandler+0x2b2>
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	3314      	adds	r3, #20
 80055d0:	677b      	str	r3, [r7, #116]	@ 0x74
 80055d2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80055d4:	e853 3f00 	ldrex	r3, [r3]
 80055d8:	673b      	str	r3, [r7, #112]	@ 0x70
 80055da:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80055dc:	f023 0301 	bic.w	r3, r3, #1
 80055e0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	3314      	adds	r3, #20
 80055ea:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80055ee:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80055f2:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80055f4:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80055f6:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80055fa:	e841 2300 	strex	r3, r2, [r1]
 80055fe:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005600:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005602:	2b00      	cmp	r3, #0
 8005604:	d1e1      	bne.n	80055ca <HAL_UART_IRQHandler+0x2fe>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	3314      	adds	r3, #20
 800560c:	663b      	str	r3, [r7, #96]	@ 0x60
 800560e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8005610:	e853 3f00 	ldrex	r3, [r3]
 8005614:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005616:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005618:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800561c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	3314      	adds	r3, #20
 8005626:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800562a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800562c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800562e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8005630:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8005632:	e841 2300 	strex	r3, r2, [r1]
 8005636:	667b      	str	r3, [r7, #100]	@ 0x64
 8005638:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800563a:	2b00      	cmp	r3, #0
 800563c:	d1e3      	bne.n	8005606 <HAL_UART_IRQHandler+0x33a>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	2220      	movs	r2, #32
 8005642:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	2200      	movs	r2, #0
 800564a:	631a      	str	r2, [r3, #48]	@ 0x30
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	330c      	adds	r3, #12
 8005652:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005654:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005656:	e853 3f00 	ldrex	r3, [r3]
 800565a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800565c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800565e:	f023 0310 	bic.w	r3, r3, #16
 8005662:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	330c      	adds	r3, #12
 800566c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005670:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005672:	657b      	str	r3, [r7, #84]	@ 0x54
 8005674:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005676:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005678:	e841 2300 	strex	r3, r2, [r1]
 800567c:	653b      	str	r3, [r7, #80]	@ 0x50
 800567e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005680:	2b00      	cmp	r3, #0
 8005682:	d1e3      	bne.n	800564c <HAL_UART_IRQHandler+0x380>
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005688:	4618      	mov	r0, r3
 800568a:	f7fc fe6d 	bl	8002368 <HAL_DMA_Abort>
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	2202      	movs	r2, #2
 8005692:	635a      	str	r2, [r3, #52]	@ 0x34
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800569c:	b29b      	uxth	r3, r3
 800569e:	1ad3      	subs	r3, r2, r3
 80056a0:	b29b      	uxth	r3, r3
 80056a2:	4619      	mov	r1, r3
 80056a4:	6878      	ldr	r0, [r7, #4]
 80056a6:	f000 f8c1 	bl	800582c <HAL_UARTEx_RxEventCallback>
 80056aa:	e09b      	b.n	80057e4 <HAL_UART_IRQHandler+0x518>
 80056ac:	08005d3f 	.word	0x08005d3f
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80056b8:	b29b      	uxth	r3, r3
 80056ba:	1ad3      	subs	r3, r2, r3
 80056bc:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80056c4:	b29b      	uxth	r3, r3
 80056c6:	2b00      	cmp	r3, #0
 80056c8:	f000 808e 	beq.w	80057e8 <HAL_UART_IRQHandler+0x51c>
 80056cc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80056d0:	2b00      	cmp	r3, #0
 80056d2:	f000 8089 	beq.w	80057e8 <HAL_UART_IRQHandler+0x51c>
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	330c      	adds	r3, #12
 80056dc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80056de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80056e0:	e853 3f00 	ldrex	r3, [r3]
 80056e4:	637b      	str	r3, [r7, #52]	@ 0x34
 80056e6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80056e8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80056ec:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	330c      	adds	r3, #12
 80056f6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80056fa:	647a      	str	r2, [r7, #68]	@ 0x44
 80056fc:	643b      	str	r3, [r7, #64]	@ 0x40
 80056fe:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8005700:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005702:	e841 2300 	strex	r3, r2, [r1]
 8005706:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005708:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800570a:	2b00      	cmp	r3, #0
 800570c:	d1e3      	bne.n	80056d6 <HAL_UART_IRQHandler+0x40a>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	3314      	adds	r3, #20
 8005714:	627b      	str	r3, [r7, #36]	@ 0x24
 8005716:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005718:	e853 3f00 	ldrex	r3, [r3]
 800571c:	623b      	str	r3, [r7, #32]
 800571e:	6a3b      	ldr	r3, [r7, #32]
 8005720:	f023 0301 	bic.w	r3, r3, #1
 8005724:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	3314      	adds	r3, #20
 800572e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8005732:	633a      	str	r2, [r7, #48]	@ 0x30
 8005734:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005736:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005738:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800573a:	e841 2300 	strex	r3, r2, [r1]
 800573e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005740:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005742:	2b00      	cmp	r3, #0
 8005744:	d1e3      	bne.n	800570e <HAL_UART_IRQHandler+0x442>
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	2220      	movs	r2, #32
 800574a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	2200      	movs	r2, #0
 8005752:	631a      	str	r2, [r3, #48]	@ 0x30
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	330c      	adds	r3, #12
 800575a:	613b      	str	r3, [r7, #16]
 800575c:	693b      	ldr	r3, [r7, #16]
 800575e:	e853 3f00 	ldrex	r3, [r3]
 8005762:	60fb      	str	r3, [r7, #12]
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	f023 0310 	bic.w	r3, r3, #16
 800576a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	330c      	adds	r3, #12
 8005774:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005778:	61fa      	str	r2, [r7, #28]
 800577a:	61bb      	str	r3, [r7, #24]
 800577c:	69b9      	ldr	r1, [r7, #24]
 800577e:	69fa      	ldr	r2, [r7, #28]
 8005780:	e841 2300 	strex	r3, r2, [r1]
 8005784:	617b      	str	r3, [r7, #20]
 8005786:	697b      	ldr	r3, [r7, #20]
 8005788:	2b00      	cmp	r3, #0
 800578a:	d1e3      	bne.n	8005754 <HAL_UART_IRQHandler+0x488>
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	2202      	movs	r2, #2
 8005790:	635a      	str	r2, [r3, #52]	@ 0x34
 8005792:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005796:	4619      	mov	r1, r3
 8005798:	6878      	ldr	r0, [r7, #4]
 800579a:	f000 f847 	bl	800582c <HAL_UARTEx_RxEventCallback>
 800579e:	e023      	b.n	80057e8 <HAL_UART_IRQHandler+0x51c>
 80057a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80057a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80057a8:	2b00      	cmp	r3, #0
 80057aa:	d009      	beq.n	80057c0 <HAL_UART_IRQHandler+0x4f4>
 80057ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80057b0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	d003      	beq.n	80057c0 <HAL_UART_IRQHandler+0x4f4>
 80057b8:	6878      	ldr	r0, [r7, #4]
 80057ba:	f000 fad4 	bl	8005d66 <UART_Transmit_IT>
 80057be:	e014      	b.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057c0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80057c4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d00e      	beq.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057cc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80057d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80057d4:	2b00      	cmp	r3, #0
 80057d6:	d008      	beq.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057d8:	6878      	ldr	r0, [r7, #4]
 80057da:	f000 fb14 	bl	8005e06 <UART_EndTransmit_IT>
 80057de:	e004      	b.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057e0:	bf00      	nop
 80057e2:	e002      	b.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057e4:	bf00      	nop
 80057e6:	e000      	b.n	80057ea <HAL_UART_IRQHandler+0x51e>
 80057e8:	bf00      	nop
 80057ea:	37e8      	adds	r7, #232	@ 0xe8
 80057ec:	46bd      	mov	sp, r7
 80057ee:	bd80      	pop	{r7, pc}

080057f0 <HAL_UART_TxCpltCallback>:
 80057f0:	b480      	push	{r7}
 80057f2:	b083      	sub	sp, #12
 80057f4:	af00      	add	r7, sp, #0
 80057f6:	6078      	str	r0, [r7, #4]
 80057f8:	bf00      	nop
 80057fa:	370c      	adds	r7, #12
 80057fc:	46bd      	mov	sp, r7
 80057fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005802:	4770      	bx	lr

08005804 <HAL_UART_RxHalfCpltCallback>:
 8005804:	b480      	push	{r7}
 8005806:	b083      	sub	sp, #12
 8005808:	af00      	add	r7, sp, #0
 800580a:	6078      	str	r0, [r7, #4]
 800580c:	bf00      	nop
 800580e:	370c      	adds	r7, #12
 8005810:	46bd      	mov	sp, r7
 8005812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005816:	4770      	bx	lr

08005818 <HAL_UART_ErrorCallback>:
 8005818:	b480      	push	{r7}
 800581a:	b083      	sub	sp, #12
 800581c:	af00      	add	r7, sp, #0
 800581e:	6078      	str	r0, [r7, #4]
 8005820:	bf00      	nop
 8005822:	370c      	adds	r7, #12
 8005824:	46bd      	mov	sp, r7
 8005826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800582a:	4770      	bx	lr

0800582c <HAL_UARTEx_RxEventCallback>:
 800582c:	b480      	push	{r7}
 800582e:	b083      	sub	sp, #12
 8005830:	af00      	add	r7, sp, #0
 8005832:	6078      	str	r0, [r7, #4]
 8005834:	460b      	mov	r3, r1
 8005836:	807b      	strh	r3, [r7, #2]
 8005838:	bf00      	nop
 800583a:	370c      	adds	r7, #12
 800583c:	46bd      	mov	sp, r7
 800583e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005842:	4770      	bx	lr

08005844 <UART_DMAReceiveCplt>:
 8005844:	b580      	push	{r7, lr}
 8005846:	b09c      	sub	sp, #112	@ 0x70
 8005848:	af00      	add	r7, sp, #0
 800584a:	6078      	str	r0, [r7, #4]
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005850:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800585c:	2b00      	cmp	r3, #0
 800585e:	d172      	bne.n	8005946 <UART_DMAReceiveCplt+0x102>
 8005860:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005862:	2200      	movs	r2, #0
 8005864:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005866:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005868:	681b      	ldr	r3, [r3, #0]
 800586a:	330c      	adds	r3, #12
 800586c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800586e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005870:	e853 3f00 	ldrex	r3, [r3]
 8005874:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005876:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005878:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800587c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800587e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	330c      	adds	r3, #12
 8005884:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8005886:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005888:	657b      	str	r3, [r7, #84]	@ 0x54
 800588a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800588c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800588e:	e841 2300 	strex	r3, r2, [r1]
 8005892:	653b      	str	r3, [r7, #80]	@ 0x50
 8005894:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005896:	2b00      	cmp	r3, #0
 8005898:	d1e5      	bne.n	8005866 <UART_DMAReceiveCplt+0x22>
 800589a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	3314      	adds	r3, #20
 80058a0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80058a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80058a4:	e853 3f00 	ldrex	r3, [r3]
 80058a8:	637b      	str	r3, [r7, #52]	@ 0x34
 80058aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80058ac:	f023 0301 	bic.w	r3, r3, #1
 80058b0:	667b      	str	r3, [r7, #100]	@ 0x64
 80058b2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	3314      	adds	r3, #20
 80058b8:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80058ba:	647a      	str	r2, [r7, #68]	@ 0x44
 80058bc:	643b      	str	r3, [r7, #64]	@ 0x40
 80058be:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80058c0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80058c2:	e841 2300 	strex	r3, r2, [r1]
 80058c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80058c8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d1e5      	bne.n	800589a <UART_DMAReceiveCplt+0x56>
 80058ce:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058d0:	681b      	ldr	r3, [r3, #0]
 80058d2:	3314      	adds	r3, #20
 80058d4:	627b      	str	r3, [r7, #36]	@ 0x24
 80058d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80058d8:	e853 3f00 	ldrex	r3, [r3]
 80058dc:	623b      	str	r3, [r7, #32]
 80058de:	6a3b      	ldr	r3, [r7, #32]
 80058e0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80058e4:	663b      	str	r3, [r7, #96]	@ 0x60
 80058e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	3314      	adds	r3, #20
 80058ec:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80058ee:	633a      	str	r2, [r7, #48]	@ 0x30
 80058f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80058f2:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80058f4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80058f6:	e841 2300 	strex	r3, r2, [r1]
 80058fa:	62bb      	str	r3, [r7, #40]	@ 0x28
 80058fc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d1e5      	bne.n	80058ce <UART_DMAReceiveCplt+0x8a>
 8005902:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005904:	2220      	movs	r2, #32
 8005906:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800590a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800590c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800590e:	2b01      	cmp	r3, #1
 8005910:	d119      	bne.n	8005946 <UART_DMAReceiveCplt+0x102>
 8005912:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	330c      	adds	r3, #12
 8005918:	613b      	str	r3, [r7, #16]
 800591a:	693b      	ldr	r3, [r7, #16]
 800591c:	e853 3f00 	ldrex	r3, [r3]
 8005920:	60fb      	str	r3, [r7, #12]
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	f023 0310 	bic.w	r3, r3, #16
 8005928:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800592a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	330c      	adds	r3, #12
 8005930:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8005932:	61fa      	str	r2, [r7, #28]
 8005934:	61bb      	str	r3, [r7, #24]
 8005936:	69b9      	ldr	r1, [r7, #24]
 8005938:	69fa      	ldr	r2, [r7, #28]
 800593a:	e841 2300 	strex	r3, r2, [r1]
 800593e:	617b      	str	r3, [r7, #20]
 8005940:	697b      	ldr	r3, [r7, #20]
 8005942:	2b00      	cmp	r3, #0
 8005944:	d1e5      	bne.n	8005912 <UART_DMAReceiveCplt+0xce>
 8005946:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005948:	2200      	movs	r2, #0
 800594a:	635a      	str	r2, [r3, #52]	@ 0x34
 800594c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800594e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005950:	2b01      	cmp	r3, #1
 8005952:	d106      	bne.n	8005962 <UART_DMAReceiveCplt+0x11e>
 8005954:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005956:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005958:	4619      	mov	r1, r3
 800595a:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 800595c:	f7ff ff66 	bl	800582c <HAL_UARTEx_RxEventCallback>
 8005960:	e002      	b.n	8005968 <UART_DMAReceiveCplt+0x124>
 8005962:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8005964:	f7fb fe7c 	bl	8001660 <HAL_UART_RxCpltCallback>
 8005968:	bf00      	nop
 800596a:	3770      	adds	r7, #112	@ 0x70
 800596c:	46bd      	mov	sp, r7
 800596e:	bd80      	pop	{r7, pc}

08005970 <UART_DMARxHalfCplt>:
 8005970:	b580      	push	{r7, lr}
 8005972:	b084      	sub	sp, #16
 8005974:	af00      	add	r7, sp, #0
 8005976:	6078      	str	r0, [r7, #4]
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800597c:	60fb      	str	r3, [r7, #12]
 800597e:	68fb      	ldr	r3, [r7, #12]
 8005980:	2201      	movs	r2, #1
 8005982:	635a      	str	r2, [r3, #52]	@ 0x34
 8005984:	68fb      	ldr	r3, [r7, #12]
 8005986:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005988:	2b01      	cmp	r3, #1
 800598a:	d108      	bne.n	800599e <UART_DMARxHalfCplt+0x2e>
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005990:	085b      	lsrs	r3, r3, #1
 8005992:	b29b      	uxth	r3, r3
 8005994:	4619      	mov	r1, r3
 8005996:	68f8      	ldr	r0, [r7, #12]
 8005998:	f7ff ff48 	bl	800582c <HAL_UARTEx_RxEventCallback>
 800599c:	e002      	b.n	80059a4 <UART_DMARxHalfCplt+0x34>
 800599e:	68f8      	ldr	r0, [r7, #12]
 80059a0:	f7ff ff30 	bl	8005804 <HAL_UART_RxHalfCpltCallback>
 80059a4:	bf00      	nop
 80059a6:	3710      	adds	r7, #16
 80059a8:	46bd      	mov	sp, r7
 80059aa:	bd80      	pop	{r7, pc}

080059ac <UART_DMAError>:
 80059ac:	b580      	push	{r7, lr}
 80059ae:	b084      	sub	sp, #16
 80059b0:	af00      	add	r7, sp, #0
 80059b2:	6078      	str	r0, [r7, #4]
 80059b4:	2300      	movs	r3, #0
 80059b6:	60fb      	str	r3, [r7, #12]
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80059bc:	60bb      	str	r3, [r7, #8]
 80059be:	68bb      	ldr	r3, [r7, #8]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	695b      	ldr	r3, [r3, #20]
 80059c4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80059c8:	2b80      	cmp	r3, #128	@ 0x80
 80059ca:	bf0c      	ite	eq
 80059cc:	2301      	moveq	r3, #1
 80059ce:	2300      	movne	r3, #0
 80059d0:	b2db      	uxtb	r3, r3
 80059d2:	60fb      	str	r3, [r7, #12]
 80059d4:	68bb      	ldr	r3, [r7, #8]
 80059d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80059da:	b2db      	uxtb	r3, r3
 80059dc:	2b21      	cmp	r3, #33	@ 0x21
 80059de:	d108      	bne.n	80059f2 <UART_DMAError+0x46>
 80059e0:	68fb      	ldr	r3, [r7, #12]
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	d005      	beq.n	80059f2 <UART_DMAError+0x46>
 80059e6:	68bb      	ldr	r3, [r7, #8]
 80059e8:	2200      	movs	r2, #0
 80059ea:	84da      	strh	r2, [r3, #38]	@ 0x26
 80059ec:	68b8      	ldr	r0, [r7, #8]
 80059ee:	f000 f91b 	bl	8005c28 <UART_EndTxTransfer>
 80059f2:	68bb      	ldr	r3, [r7, #8]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	695b      	ldr	r3, [r3, #20]
 80059f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80059fc:	2b40      	cmp	r3, #64	@ 0x40
 80059fe:	bf0c      	ite	eq
 8005a00:	2301      	moveq	r3, #1
 8005a02:	2300      	movne	r3, #0
 8005a04:	b2db      	uxtb	r3, r3
 8005a06:	60fb      	str	r3, [r7, #12]
 8005a08:	68bb      	ldr	r3, [r7, #8]
 8005a0a:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005a0e:	b2db      	uxtb	r3, r3
 8005a10:	2b22      	cmp	r3, #34	@ 0x22
 8005a12:	d108      	bne.n	8005a26 <UART_DMAError+0x7a>
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	2b00      	cmp	r3, #0
 8005a18:	d005      	beq.n	8005a26 <UART_DMAError+0x7a>
 8005a1a:	68bb      	ldr	r3, [r7, #8]
 8005a1c:	2200      	movs	r2, #0
 8005a1e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005a20:	68b8      	ldr	r0, [r7, #8]
 8005a22:	f000 f929 	bl	8005c78 <UART_EndRxTransfer>
 8005a26:	68bb      	ldr	r3, [r7, #8]
 8005a28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a2a:	f043 0210 	orr.w	r2, r3, #16
 8005a2e:	68bb      	ldr	r3, [r7, #8]
 8005a30:	645a      	str	r2, [r3, #68]	@ 0x44
 8005a32:	68b8      	ldr	r0, [r7, #8]
 8005a34:	f7ff fef0 	bl	8005818 <HAL_UART_ErrorCallback>
 8005a38:	bf00      	nop
 8005a3a:	3710      	adds	r7, #16
 8005a3c:	46bd      	mov	sp, r7
 8005a3e:	bd80      	pop	{r7, pc}

08005a40 <UART_WaitOnFlagUntilTimeout>:
 8005a40:	b580      	push	{r7, lr}
 8005a42:	b086      	sub	sp, #24
 8005a44:	af00      	add	r7, sp, #0
 8005a46:	60f8      	str	r0, [r7, #12]
 8005a48:	60b9      	str	r1, [r7, #8]
 8005a4a:	603b      	str	r3, [r7, #0]
 8005a4c:	4613      	mov	r3, r2
 8005a4e:	71fb      	strb	r3, [r7, #7]
 8005a50:	e03b      	b.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a52:	6a3b      	ldr	r3, [r7, #32]
 8005a54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a58:	d037      	beq.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a5a:	f7fc fa3d 	bl	8001ed8 <HAL_GetTick>
 8005a5e:	4602      	mov	r2, r0
 8005a60:	683b      	ldr	r3, [r7, #0]
 8005a62:	1ad3      	subs	r3, r2, r3
 8005a64:	6a3a      	ldr	r2, [r7, #32]
 8005a66:	429a      	cmp	r2, r3
 8005a68:	d302      	bcc.n	8005a70 <UART_WaitOnFlagUntilTimeout+0x30>
 8005a6a:	6a3b      	ldr	r3, [r7, #32]
 8005a6c:	2b00      	cmp	r3, #0
 8005a6e:	d101      	bne.n	8005a74 <UART_WaitOnFlagUntilTimeout+0x34>
 8005a70:	2303      	movs	r3, #3
 8005a72:	e03a      	b.n	8005aea <UART_WaitOnFlagUntilTimeout+0xaa>
 8005a74:	68fb      	ldr	r3, [r7, #12]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	68db      	ldr	r3, [r3, #12]
 8005a7a:	f003 0304 	and.w	r3, r3, #4
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d023      	beq.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a82:	68bb      	ldr	r3, [r7, #8]
 8005a84:	2b80      	cmp	r3, #128	@ 0x80
 8005a86:	d020      	beq.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a88:	68bb      	ldr	r3, [r7, #8]
 8005a8a:	2b40      	cmp	r3, #64	@ 0x40
 8005a8c:	d01d      	beq.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a8e:	68fb      	ldr	r3, [r7, #12]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	f003 0308 	and.w	r3, r3, #8
 8005a98:	2b08      	cmp	r3, #8
 8005a9a:	d116      	bne.n	8005aca <UART_WaitOnFlagUntilTimeout+0x8a>
 8005a9c:	2300      	movs	r3, #0
 8005a9e:	617b      	str	r3, [r7, #20]
 8005aa0:	68fb      	ldr	r3, [r7, #12]
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	617b      	str	r3, [r7, #20]
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	685b      	ldr	r3, [r3, #4]
 8005aae:	617b      	str	r3, [r7, #20]
 8005ab0:	697b      	ldr	r3, [r7, #20]
 8005ab2:	68f8      	ldr	r0, [r7, #12]
 8005ab4:	f000 f8e0 	bl	8005c78 <UART_EndRxTransfer>
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	2208      	movs	r2, #8
 8005abc:	645a      	str	r2, [r3, #68]	@ 0x44
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	2200      	movs	r2, #0
 8005ac2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ac6:	2301      	movs	r3, #1
 8005ac8:	e00f      	b.n	8005aea <UART_WaitOnFlagUntilTimeout+0xaa>
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	681a      	ldr	r2, [r3, #0]
 8005ad0:	68bb      	ldr	r3, [r7, #8]
 8005ad2:	4013      	ands	r3, r2
 8005ad4:	68ba      	ldr	r2, [r7, #8]
 8005ad6:	429a      	cmp	r2, r3
 8005ad8:	bf0c      	ite	eq
 8005ada:	2301      	moveq	r3, #1
 8005adc:	2300      	movne	r3, #0
 8005ade:	b2db      	uxtb	r3, r3
 8005ae0:	461a      	mov	r2, r3
 8005ae2:	79fb      	ldrb	r3, [r7, #7]
 8005ae4:	429a      	cmp	r2, r3
 8005ae6:	d0b4      	beq.n	8005a52 <UART_WaitOnFlagUntilTimeout+0x12>
 8005ae8:	2300      	movs	r3, #0
 8005aea:	4618      	mov	r0, r3
 8005aec:	3718      	adds	r7, #24
 8005aee:	46bd      	mov	sp, r7
 8005af0:	bd80      	pop	{r7, pc}
	...

08005af4 <UART_Start_Receive_DMA>:
 8005af4:	b580      	push	{r7, lr}
 8005af6:	b098      	sub	sp, #96	@ 0x60
 8005af8:	af00      	add	r7, sp, #0
 8005afa:	60f8      	str	r0, [r7, #12]
 8005afc:	60b9      	str	r1, [r7, #8]
 8005afe:	4613      	mov	r3, r2
 8005b00:	80fb      	strh	r3, [r7, #6]
 8005b02:	68ba      	ldr	r2, [r7, #8]
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	629a      	str	r2, [r3, #40]	@ 0x28
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	88fa      	ldrh	r2, [r7, #6]
 8005b0c:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	2200      	movs	r2, #0
 8005b12:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	2222      	movs	r2, #34	@ 0x22
 8005b18:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b20:	4a3e      	ldr	r2, [pc, #248]	@ (8005c1c <UART_Start_Receive_DMA+0x128>)
 8005b22:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b28:	4a3d      	ldr	r2, [pc, #244]	@ (8005c20 <UART_Start_Receive_DMA+0x12c>)
 8005b2a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b2c:	68fb      	ldr	r3, [r7, #12]
 8005b2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b30:	4a3c      	ldr	r2, [pc, #240]	@ (8005c24 <UART_Start_Receive_DMA+0x130>)
 8005b32:	64da      	str	r2, [r3, #76]	@ 0x4c
 8005b34:	68fb      	ldr	r3, [r7, #12]
 8005b36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b38:	2200      	movs	r2, #0
 8005b3a:	651a      	str	r2, [r3, #80]	@ 0x50
 8005b3c:	f107 0308 	add.w	r3, r7, #8
 8005b40:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005b42:	68fb      	ldr	r3, [r7, #12]
 8005b44:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	3304      	adds	r3, #4
 8005b4c:	4619      	mov	r1, r3
 8005b4e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005b50:	681a      	ldr	r2, [r3, #0]
 8005b52:	88fb      	ldrh	r3, [r7, #6]
 8005b54:	f7fc fbb0 	bl	80022b8 <HAL_DMA_Start_IT>
 8005b58:	2300      	movs	r3, #0
 8005b5a:	613b      	str	r3, [r7, #16]
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	613b      	str	r3, [r7, #16]
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	685b      	ldr	r3, [r3, #4]
 8005b6a:	613b      	str	r3, [r7, #16]
 8005b6c:	693b      	ldr	r3, [r7, #16]
 8005b6e:	68fb      	ldr	r3, [r7, #12]
 8005b70:	691b      	ldr	r3, [r3, #16]
 8005b72:	2b00      	cmp	r3, #0
 8005b74:	d019      	beq.n	8005baa <UART_Start_Receive_DMA+0xb6>
 8005b76:	68fb      	ldr	r3, [r7, #12]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	330c      	adds	r3, #12
 8005b7c:	643b      	str	r3, [r7, #64]	@ 0x40
 8005b7e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005b80:	e853 3f00 	ldrex	r3, [r3]
 8005b84:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005b86:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005b88:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005b8c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005b8e:	68fb      	ldr	r3, [r7, #12]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	330c      	adds	r3, #12
 8005b94:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005b96:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005b98:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005b9a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8005b9c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005b9e:	e841 2300 	strex	r3, r2, [r1]
 8005ba2:	647b      	str	r3, [r7, #68]	@ 0x44
 8005ba4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d1e5      	bne.n	8005b76 <UART_Start_Receive_DMA+0x82>
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	3314      	adds	r3, #20
 8005bb0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005bb2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005bb4:	e853 3f00 	ldrex	r3, [r3]
 8005bb8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005bba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005bbc:	f043 0301 	orr.w	r3, r3, #1
 8005bc0:	657b      	str	r3, [r7, #84]	@ 0x54
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	681b      	ldr	r3, [r3, #0]
 8005bc6:	3314      	adds	r3, #20
 8005bc8:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8005bca:	63ba      	str	r2, [r7, #56]	@ 0x38
 8005bcc:	637b      	str	r3, [r7, #52]	@ 0x34
 8005bce:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8005bd0:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005bd2:	e841 2300 	strex	r3, r2, [r1]
 8005bd6:	633b      	str	r3, [r7, #48]	@ 0x30
 8005bd8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	d1e5      	bne.n	8005baa <UART_Start_Receive_DMA+0xb6>
 8005bde:	68fb      	ldr	r3, [r7, #12]
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	3314      	adds	r3, #20
 8005be4:	61bb      	str	r3, [r7, #24]
 8005be6:	69bb      	ldr	r3, [r7, #24]
 8005be8:	e853 3f00 	ldrex	r3, [r3]
 8005bec:	617b      	str	r3, [r7, #20]
 8005bee:	697b      	ldr	r3, [r7, #20]
 8005bf0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005bf4:	653b      	str	r3, [r7, #80]	@ 0x50
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	3314      	adds	r3, #20
 8005bfc:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8005bfe:	627a      	str	r2, [r7, #36]	@ 0x24
 8005c00:	623b      	str	r3, [r7, #32]
 8005c02:	6a39      	ldr	r1, [r7, #32]
 8005c04:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005c06:	e841 2300 	strex	r3, r2, [r1]
 8005c0a:	61fb      	str	r3, [r7, #28]
 8005c0c:	69fb      	ldr	r3, [r7, #28]
 8005c0e:	2b00      	cmp	r3, #0
 8005c10:	d1e5      	bne.n	8005bde <UART_Start_Receive_DMA+0xea>
 8005c12:	2300      	movs	r3, #0
 8005c14:	4618      	mov	r0, r3
 8005c16:	3760      	adds	r7, #96	@ 0x60
 8005c18:	46bd      	mov	sp, r7
 8005c1a:	bd80      	pop	{r7, pc}
 8005c1c:	08005845 	.word	0x08005845
 8005c20:	08005971 	.word	0x08005971
 8005c24:	080059ad 	.word	0x080059ad

08005c28 <UART_EndTxTransfer>:
 8005c28:	b480      	push	{r7}
 8005c2a:	b089      	sub	sp, #36	@ 0x24
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	330c      	adds	r3, #12
 8005c36:	60fb      	str	r3, [r7, #12]
 8005c38:	68fb      	ldr	r3, [r7, #12]
 8005c3a:	e853 3f00 	ldrex	r3, [r3]
 8005c3e:	60bb      	str	r3, [r7, #8]
 8005c40:	68bb      	ldr	r3, [r7, #8]
 8005c42:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8005c46:	61fb      	str	r3, [r7, #28]
 8005c48:	687b      	ldr	r3, [r7, #4]
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	330c      	adds	r3, #12
 8005c4e:	69fa      	ldr	r2, [r7, #28]
 8005c50:	61ba      	str	r2, [r7, #24]
 8005c52:	617b      	str	r3, [r7, #20]
 8005c54:	6979      	ldr	r1, [r7, #20]
 8005c56:	69ba      	ldr	r2, [r7, #24]
 8005c58:	e841 2300 	strex	r3, r2, [r1]
 8005c5c:	613b      	str	r3, [r7, #16]
 8005c5e:	693b      	ldr	r3, [r7, #16]
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	d1e5      	bne.n	8005c30 <UART_EndTxTransfer+0x8>
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	2220      	movs	r2, #32
 8005c68:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005c6c:	bf00      	nop
 8005c6e:	3724      	adds	r7, #36	@ 0x24
 8005c70:	46bd      	mov	sp, r7
 8005c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c76:	4770      	bx	lr

08005c78 <UART_EndRxTransfer>:
 8005c78:	b480      	push	{r7}
 8005c7a:	b095      	sub	sp, #84	@ 0x54
 8005c7c:	af00      	add	r7, sp, #0
 8005c7e:	6078      	str	r0, [r7, #4]
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	681b      	ldr	r3, [r3, #0]
 8005c84:	330c      	adds	r3, #12
 8005c86:	637b      	str	r3, [r7, #52]	@ 0x34
 8005c88:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005c8a:	e853 3f00 	ldrex	r3, [r3]
 8005c8e:	633b      	str	r3, [r7, #48]	@ 0x30
 8005c90:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005c92:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005c96:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	330c      	adds	r3, #12
 8005c9e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005ca0:	643a      	str	r2, [r7, #64]	@ 0x40
 8005ca2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005ca4:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005ca6:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005ca8:	e841 2300 	strex	r3, r2, [r1]
 8005cac:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005cae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005cb0:	2b00      	cmp	r3, #0
 8005cb2:	d1e5      	bne.n	8005c80 <UART_EndRxTransfer+0x8>
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	3314      	adds	r3, #20
 8005cba:	623b      	str	r3, [r7, #32]
 8005cbc:	6a3b      	ldr	r3, [r7, #32]
 8005cbe:	e853 3f00 	ldrex	r3, [r3]
 8005cc2:	61fb      	str	r3, [r7, #28]
 8005cc4:	69fb      	ldr	r3, [r7, #28]
 8005cc6:	f023 0301 	bic.w	r3, r3, #1
 8005cca:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	3314      	adds	r3, #20
 8005cd2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005cd4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005cd6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cd8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005cda:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005cdc:	e841 2300 	strex	r3, r2, [r1]
 8005ce0:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ce2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d1e5      	bne.n	8005cb4 <UART_EndRxTransfer+0x3c>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005cec:	2b01      	cmp	r3, #1
 8005cee:	d119      	bne.n	8005d24 <UART_EndRxTransfer+0xac>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	330c      	adds	r3, #12
 8005cf6:	60fb      	str	r3, [r7, #12]
 8005cf8:	68fb      	ldr	r3, [r7, #12]
 8005cfa:	e853 3f00 	ldrex	r3, [r3]
 8005cfe:	60bb      	str	r3, [r7, #8]
 8005d00:	68bb      	ldr	r3, [r7, #8]
 8005d02:	f023 0310 	bic.w	r3, r3, #16
 8005d06:	647b      	str	r3, [r7, #68]	@ 0x44
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	330c      	adds	r3, #12
 8005d0e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005d10:	61ba      	str	r2, [r7, #24]
 8005d12:	617b      	str	r3, [r7, #20]
 8005d14:	6979      	ldr	r1, [r7, #20]
 8005d16:	69ba      	ldr	r2, [r7, #24]
 8005d18:	e841 2300 	strex	r3, r2, [r1]
 8005d1c:	613b      	str	r3, [r7, #16]
 8005d1e:	693b      	ldr	r3, [r7, #16]
 8005d20:	2b00      	cmp	r3, #0
 8005d22:	d1e5      	bne.n	8005cf0 <UART_EndRxTransfer+0x78>
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	2220      	movs	r2, #32
 8005d28:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	2200      	movs	r2, #0
 8005d30:	631a      	str	r2, [r3, #48]	@ 0x30
 8005d32:	bf00      	nop
 8005d34:	3754      	adds	r7, #84	@ 0x54
 8005d36:	46bd      	mov	sp, r7
 8005d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d3c:	4770      	bx	lr

08005d3e <UART_DMAAbortOnError>:
 8005d3e:	b580      	push	{r7, lr}
 8005d40:	b084      	sub	sp, #16
 8005d42:	af00      	add	r7, sp, #0
 8005d44:	6078      	str	r0, [r7, #4]
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005d4a:	60fb      	str	r3, [r7, #12]
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	2200      	movs	r2, #0
 8005d50:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	2200      	movs	r2, #0
 8005d56:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005d58:	68f8      	ldr	r0, [r7, #12]
 8005d5a:	f7ff fd5d 	bl	8005818 <HAL_UART_ErrorCallback>
 8005d5e:	bf00      	nop
 8005d60:	3710      	adds	r7, #16
 8005d62:	46bd      	mov	sp, r7
 8005d64:	bd80      	pop	{r7, pc}

08005d66 <UART_Transmit_IT>:
 8005d66:	b480      	push	{r7}
 8005d68:	b085      	sub	sp, #20
 8005d6a:	af00      	add	r7, sp, #0
 8005d6c:	6078      	str	r0, [r7, #4]
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005d74:	b2db      	uxtb	r3, r3
 8005d76:	2b21      	cmp	r3, #33	@ 0x21
 8005d78:	d13e      	bne.n	8005df8 <UART_Transmit_IT+0x92>
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	689b      	ldr	r3, [r3, #8]
 8005d7e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005d82:	d114      	bne.n	8005dae <UART_Transmit_IT+0x48>
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	691b      	ldr	r3, [r3, #16]
 8005d88:	2b00      	cmp	r3, #0
 8005d8a:	d110      	bne.n	8005dae <UART_Transmit_IT+0x48>
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	6a1b      	ldr	r3, [r3, #32]
 8005d90:	60fb      	str	r3, [r7, #12]
 8005d92:	68fb      	ldr	r3, [r7, #12]
 8005d94:	881b      	ldrh	r3, [r3, #0]
 8005d96:	461a      	mov	r2, r3
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005da0:	605a      	str	r2, [r3, #4]
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	6a1b      	ldr	r3, [r3, #32]
 8005da6:	1c9a      	adds	r2, r3, #2
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	621a      	str	r2, [r3, #32]
 8005dac:	e008      	b.n	8005dc0 <UART_Transmit_IT+0x5a>
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	6a1b      	ldr	r3, [r3, #32]
 8005db2:	1c59      	adds	r1, r3, #1
 8005db4:	687a      	ldr	r2, [r7, #4]
 8005db6:	6211      	str	r1, [r2, #32]
 8005db8:	781a      	ldrb	r2, [r3, #0]
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	605a      	str	r2, [r3, #4]
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005dc4:	b29b      	uxth	r3, r3
 8005dc6:	3b01      	subs	r3, #1
 8005dc8:	b29b      	uxth	r3, r3
 8005dca:	687a      	ldr	r2, [r7, #4]
 8005dcc:	4619      	mov	r1, r3
 8005dce:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005dd0:	2b00      	cmp	r3, #0
 8005dd2:	d10f      	bne.n	8005df4 <UART_Transmit_IT+0x8e>
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	68da      	ldr	r2, [r3, #12]
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005de2:	60da      	str	r2, [r3, #12]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	68da      	ldr	r2, [r3, #12]
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005df2:	60da      	str	r2, [r3, #12]
 8005df4:	2300      	movs	r3, #0
 8005df6:	e000      	b.n	8005dfa <UART_Transmit_IT+0x94>
 8005df8:	2302      	movs	r3, #2
 8005dfa:	4618      	mov	r0, r3
 8005dfc:	3714      	adds	r7, #20
 8005dfe:	46bd      	mov	sp, r7
 8005e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e04:	4770      	bx	lr

08005e06 <UART_EndTransmit_IT>:
 8005e06:	b580      	push	{r7, lr}
 8005e08:	b082      	sub	sp, #8
 8005e0a:	af00      	add	r7, sp, #0
 8005e0c:	6078      	str	r0, [r7, #4]
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	68da      	ldr	r2, [r3, #12]
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e1c:	60da      	str	r2, [r3, #12]
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	2220      	movs	r2, #32
 8005e22:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005e26:	6878      	ldr	r0, [r7, #4]
 8005e28:	f7ff fce2 	bl	80057f0 <HAL_UART_TxCpltCallback>
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	4618      	mov	r0, r3
 8005e30:	3708      	adds	r7, #8
 8005e32:	46bd      	mov	sp, r7
 8005e34:	bd80      	pop	{r7, pc}

08005e36 <UART_Receive_IT>:
 8005e36:	b580      	push	{r7, lr}
 8005e38:	b08c      	sub	sp, #48	@ 0x30
 8005e3a:	af00      	add	r7, sp, #0
 8005e3c:	6078      	str	r0, [r7, #4]
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005e44:	b2db      	uxtb	r3, r3
 8005e46:	2b22      	cmp	r3, #34	@ 0x22
 8005e48:	f040 80ae 	bne.w	8005fa8 <UART_Receive_IT+0x172>
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	689b      	ldr	r3, [r3, #8]
 8005e50:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005e54:	d117      	bne.n	8005e86 <UART_Receive_IT+0x50>
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	691b      	ldr	r3, [r3, #16]
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	d113      	bne.n	8005e86 <UART_Receive_IT+0x50>
 8005e5e:	2300      	movs	r3, #0
 8005e60:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e66:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	681b      	ldr	r3, [r3, #0]
 8005e6c:	685b      	ldr	r3, [r3, #4]
 8005e6e:	b29b      	uxth	r3, r3
 8005e70:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005e74:	b29a      	uxth	r2, r3
 8005e76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005e78:	801a      	strh	r2, [r3, #0]
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e7e:	1c9a      	adds	r2, r3, #2
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	629a      	str	r2, [r3, #40]	@ 0x28
 8005e84:	e026      	b.n	8005ed4 <UART_Receive_IT+0x9e>
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005e8c:	2300      	movs	r3, #0
 8005e8e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	689b      	ldr	r3, [r3, #8]
 8005e94:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005e98:	d007      	beq.n	8005eaa <UART_Receive_IT+0x74>
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	689b      	ldr	r3, [r3, #8]
 8005e9e:	2b00      	cmp	r3, #0
 8005ea0:	d10a      	bne.n	8005eb8 <UART_Receive_IT+0x82>
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	691b      	ldr	r3, [r3, #16]
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d106      	bne.n	8005eb8 <UART_Receive_IT+0x82>
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	681b      	ldr	r3, [r3, #0]
 8005eae:	685b      	ldr	r3, [r3, #4]
 8005eb0:	b2da      	uxtb	r2, r3
 8005eb2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005eb4:	701a      	strb	r2, [r3, #0]
 8005eb6:	e008      	b.n	8005eca <UART_Receive_IT+0x94>
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	685b      	ldr	r3, [r3, #4]
 8005ebe:	b2db      	uxtb	r3, r3
 8005ec0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005ec4:	b2da      	uxtb	r2, r3
 8005ec6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ec8:	701a      	strb	r2, [r3, #0]
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ece:	1c5a      	adds	r2, r3, #1
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	629a      	str	r2, [r3, #40]	@ 0x28
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005ed8:	b29b      	uxth	r3, r3
 8005eda:	3b01      	subs	r3, #1
 8005edc:	b29b      	uxth	r3, r3
 8005ede:	687a      	ldr	r2, [r7, #4]
 8005ee0:	4619      	mov	r1, r3
 8005ee2:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005ee4:	2b00      	cmp	r3, #0
 8005ee6:	d15d      	bne.n	8005fa4 <UART_Receive_IT+0x16e>
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	68da      	ldr	r2, [r3, #12]
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	f022 0220 	bic.w	r2, r2, #32
 8005ef6:	60da      	str	r2, [r3, #12]
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	68da      	ldr	r2, [r3, #12]
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005f06:	60da      	str	r2, [r3, #12]
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	695a      	ldr	r2, [r3, #20]
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	f022 0201 	bic.w	r2, r2, #1
 8005f16:	615a      	str	r2, [r3, #20]
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	2220      	movs	r2, #32
 8005f1c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	2200      	movs	r2, #0
 8005f24:	635a      	str	r2, [r3, #52]	@ 0x34
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f2a:	2b01      	cmp	r3, #1
 8005f2c:	d135      	bne.n	8005f9a <UART_Receive_IT+0x164>
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	2200      	movs	r2, #0
 8005f32:	631a      	str	r2, [r3, #48]	@ 0x30
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	330c      	adds	r3, #12
 8005f3a:	617b      	str	r3, [r7, #20]
 8005f3c:	697b      	ldr	r3, [r7, #20]
 8005f3e:	e853 3f00 	ldrex	r3, [r3]
 8005f42:	613b      	str	r3, [r7, #16]
 8005f44:	693b      	ldr	r3, [r7, #16]
 8005f46:	f023 0310 	bic.w	r3, r3, #16
 8005f4a:	627b      	str	r3, [r7, #36]	@ 0x24
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	330c      	adds	r3, #12
 8005f52:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005f54:	623a      	str	r2, [r7, #32]
 8005f56:	61fb      	str	r3, [r7, #28]
 8005f58:	69f9      	ldr	r1, [r7, #28]
 8005f5a:	6a3a      	ldr	r2, [r7, #32]
 8005f5c:	e841 2300 	strex	r3, r2, [r1]
 8005f60:	61bb      	str	r3, [r7, #24]
 8005f62:	69bb      	ldr	r3, [r7, #24]
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d1e5      	bne.n	8005f34 <UART_Receive_IT+0xfe>
 8005f68:	687b      	ldr	r3, [r7, #4]
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	f003 0310 	and.w	r3, r3, #16
 8005f72:	2b10      	cmp	r3, #16
 8005f74:	d10a      	bne.n	8005f8c <UART_Receive_IT+0x156>
 8005f76:	2300      	movs	r3, #0
 8005f78:	60fb      	str	r3, [r7, #12]
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	60fb      	str	r3, [r7, #12]
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	685b      	ldr	r3, [r3, #4]
 8005f88:	60fb      	str	r3, [r7, #12]
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005f90:	4619      	mov	r1, r3
 8005f92:	6878      	ldr	r0, [r7, #4]
 8005f94:	f7ff fc4a 	bl	800582c <HAL_UARTEx_RxEventCallback>
 8005f98:	e002      	b.n	8005fa0 <UART_Receive_IT+0x16a>
 8005f9a:	6878      	ldr	r0, [r7, #4]
 8005f9c:	f7fb fb60 	bl	8001660 <HAL_UART_RxCpltCallback>
 8005fa0:	2300      	movs	r3, #0
 8005fa2:	e002      	b.n	8005faa <UART_Receive_IT+0x174>
 8005fa4:	2300      	movs	r3, #0
 8005fa6:	e000      	b.n	8005faa <UART_Receive_IT+0x174>
 8005fa8:	2302      	movs	r3, #2
 8005faa:	4618      	mov	r0, r3
 8005fac:	3730      	adds	r7, #48	@ 0x30
 8005fae:	46bd      	mov	sp, r7
 8005fb0:	bd80      	pop	{r7, pc}
	...

08005fb4 <UART_SetConfig>:
 8005fb4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005fb8:	b0c0      	sub	sp, #256	@ 0x100
 8005fba:	af00      	add	r7, sp, #0
 8005fbc:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005fc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	691b      	ldr	r3, [r3, #16]
 8005fc8:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005fcc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fd0:	68d9      	ldr	r1, [r3, #12]
 8005fd2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fd6:	681a      	ldr	r2, [r3, #0]
 8005fd8:	ea40 0301 	orr.w	r3, r0, r1
 8005fdc:	6113      	str	r3, [r2, #16]
 8005fde:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fe2:	689a      	ldr	r2, [r3, #8]
 8005fe4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fe8:	691b      	ldr	r3, [r3, #16]
 8005fea:	431a      	orrs	r2, r3
 8005fec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ff0:	695b      	ldr	r3, [r3, #20]
 8005ff2:	431a      	orrs	r2, r3
 8005ff4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ff8:	69db      	ldr	r3, [r3, #28]
 8005ffa:	4313      	orrs	r3, r2
 8005ffc:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8006000:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	68db      	ldr	r3, [r3, #12]
 8006008:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 800600c:	f021 010c 	bic.w	r1, r1, #12
 8006010:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006014:	681a      	ldr	r2, [r3, #0]
 8006016:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800601a:	430b      	orrs	r3, r1
 800601c:	60d3      	str	r3, [r2, #12]
 800601e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	695b      	ldr	r3, [r3, #20]
 8006026:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800602a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800602e:	6999      	ldr	r1, [r3, #24]
 8006030:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006034:	681a      	ldr	r2, [r3, #0]
 8006036:	ea40 0301 	orr.w	r3, r0, r1
 800603a:	6153      	str	r3, [r2, #20]
 800603c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006040:	681a      	ldr	r2, [r3, #0]
 8006042:	4b8f      	ldr	r3, [pc, #572]	@ (8006280 <UART_SetConfig+0x2cc>)
 8006044:	429a      	cmp	r2, r3
 8006046:	d005      	beq.n	8006054 <UART_SetConfig+0xa0>
 8006048:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800604c:	681a      	ldr	r2, [r3, #0]
 800604e:	4b8d      	ldr	r3, [pc, #564]	@ (8006284 <UART_SetConfig+0x2d0>)
 8006050:	429a      	cmp	r2, r3
 8006052:	d104      	bne.n	800605e <UART_SetConfig+0xaa>
 8006054:	f7fe fbb8 	bl	80047c8 <HAL_RCC_GetPCLK2Freq>
 8006058:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800605c:	e003      	b.n	8006066 <UART_SetConfig+0xb2>
 800605e:	f7fe fb9f 	bl	80047a0 <HAL_RCC_GetPCLK1Freq>
 8006062:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006066:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800606a:	69db      	ldr	r3, [r3, #28]
 800606c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006070:	f040 810c 	bne.w	800628c <UART_SetConfig+0x2d8>
 8006074:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006078:	2200      	movs	r2, #0
 800607a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800607e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8006082:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8006086:	4622      	mov	r2, r4
 8006088:	462b      	mov	r3, r5
 800608a:	1891      	adds	r1, r2, r2
 800608c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800608e:	415b      	adcs	r3, r3
 8006090:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006092:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8006096:	4621      	mov	r1, r4
 8006098:	eb12 0801 	adds.w	r8, r2, r1
 800609c:	4629      	mov	r1, r5
 800609e:	eb43 0901 	adc.w	r9, r3, r1
 80060a2:	f04f 0200 	mov.w	r2, #0
 80060a6:	f04f 0300 	mov.w	r3, #0
 80060aa:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80060ae:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80060b2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80060b6:	4690      	mov	r8, r2
 80060b8:	4699      	mov	r9, r3
 80060ba:	4623      	mov	r3, r4
 80060bc:	eb18 0303 	adds.w	r3, r8, r3
 80060c0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80060c4:	462b      	mov	r3, r5
 80060c6:	eb49 0303 	adc.w	r3, r9, r3
 80060ca:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80060ce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80060d2:	685b      	ldr	r3, [r3, #4]
 80060d4:	2200      	movs	r2, #0
 80060d6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80060da:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80060de:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80060e2:	460b      	mov	r3, r1
 80060e4:	18db      	adds	r3, r3, r3
 80060e6:	653b      	str	r3, [r7, #80]	@ 0x50
 80060e8:	4613      	mov	r3, r2
 80060ea:	eb42 0303 	adc.w	r3, r2, r3
 80060ee:	657b      	str	r3, [r7, #84]	@ 0x54
 80060f0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80060f4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80060f8:	f7fa f8ca 	bl	8000290 <__aeabi_uldivmod>
 80060fc:	4602      	mov	r2, r0
 80060fe:	460b      	mov	r3, r1
 8006100:	4b61      	ldr	r3, [pc, #388]	@ (8006288 <UART_SetConfig+0x2d4>)
 8006102:	fba3 2302 	umull	r2, r3, r3, r2
 8006106:	095b      	lsrs	r3, r3, #5
 8006108:	011c      	lsls	r4, r3, #4
 800610a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800610e:	2200      	movs	r2, #0
 8006110:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006114:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8006118:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 800611c:	4642      	mov	r2, r8
 800611e:	464b      	mov	r3, r9
 8006120:	1891      	adds	r1, r2, r2
 8006122:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006124:	415b      	adcs	r3, r3
 8006126:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006128:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800612c:	4641      	mov	r1, r8
 800612e:	eb12 0a01 	adds.w	sl, r2, r1
 8006132:	4649      	mov	r1, r9
 8006134:	eb43 0b01 	adc.w	fp, r3, r1
 8006138:	f04f 0200 	mov.w	r2, #0
 800613c:	f04f 0300 	mov.w	r3, #0
 8006140:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006144:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006148:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800614c:	4692      	mov	sl, r2
 800614e:	469b      	mov	fp, r3
 8006150:	4643      	mov	r3, r8
 8006152:	eb1a 0303 	adds.w	r3, sl, r3
 8006156:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800615a:	464b      	mov	r3, r9
 800615c:	eb4b 0303 	adc.w	r3, fp, r3
 8006160:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006164:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006168:	685b      	ldr	r3, [r3, #4]
 800616a:	2200      	movs	r2, #0
 800616c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006170:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006174:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8006178:	460b      	mov	r3, r1
 800617a:	18db      	adds	r3, r3, r3
 800617c:	643b      	str	r3, [r7, #64]	@ 0x40
 800617e:	4613      	mov	r3, r2
 8006180:	eb42 0303 	adc.w	r3, r2, r3
 8006184:	647b      	str	r3, [r7, #68]	@ 0x44
 8006186:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800618a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800618e:	f7fa f87f 	bl	8000290 <__aeabi_uldivmod>
 8006192:	4602      	mov	r2, r0
 8006194:	460b      	mov	r3, r1
 8006196:	4611      	mov	r1, r2
 8006198:	4b3b      	ldr	r3, [pc, #236]	@ (8006288 <UART_SetConfig+0x2d4>)
 800619a:	fba3 2301 	umull	r2, r3, r3, r1
 800619e:	095b      	lsrs	r3, r3, #5
 80061a0:	2264      	movs	r2, #100	@ 0x64
 80061a2:	fb02 f303 	mul.w	r3, r2, r3
 80061a6:	1acb      	subs	r3, r1, r3
 80061a8:	00db      	lsls	r3, r3, #3
 80061aa:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80061ae:	4b36      	ldr	r3, [pc, #216]	@ (8006288 <UART_SetConfig+0x2d4>)
 80061b0:	fba3 2302 	umull	r2, r3, r3, r2
 80061b4:	095b      	lsrs	r3, r3, #5
 80061b6:	005b      	lsls	r3, r3, #1
 80061b8:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80061bc:	441c      	add	r4, r3
 80061be:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80061c2:	2200      	movs	r2, #0
 80061c4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80061c8:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80061cc:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80061d0:	4642      	mov	r2, r8
 80061d2:	464b      	mov	r3, r9
 80061d4:	1891      	adds	r1, r2, r2
 80061d6:	63b9      	str	r1, [r7, #56]	@ 0x38
 80061d8:	415b      	adcs	r3, r3
 80061da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80061dc:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80061e0:	4641      	mov	r1, r8
 80061e2:	1851      	adds	r1, r2, r1
 80061e4:	6339      	str	r1, [r7, #48]	@ 0x30
 80061e6:	4649      	mov	r1, r9
 80061e8:	414b      	adcs	r3, r1
 80061ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80061ec:	f04f 0200 	mov.w	r2, #0
 80061f0:	f04f 0300 	mov.w	r3, #0
 80061f4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80061f8:	4659      	mov	r1, fp
 80061fa:	00cb      	lsls	r3, r1, #3
 80061fc:	4651      	mov	r1, sl
 80061fe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006202:	4651      	mov	r1, sl
 8006204:	00ca      	lsls	r2, r1, #3
 8006206:	4610      	mov	r0, r2
 8006208:	4619      	mov	r1, r3
 800620a:	4603      	mov	r3, r0
 800620c:	4642      	mov	r2, r8
 800620e:	189b      	adds	r3, r3, r2
 8006210:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006214:	464b      	mov	r3, r9
 8006216:	460a      	mov	r2, r1
 8006218:	eb42 0303 	adc.w	r3, r2, r3
 800621c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006220:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006224:	685b      	ldr	r3, [r3, #4]
 8006226:	2200      	movs	r2, #0
 8006228:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800622c:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006230:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006234:	460b      	mov	r3, r1
 8006236:	18db      	adds	r3, r3, r3
 8006238:	62bb      	str	r3, [r7, #40]	@ 0x28
 800623a:	4613      	mov	r3, r2
 800623c:	eb42 0303 	adc.w	r3, r2, r3
 8006240:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006242:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006246:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800624a:	f7fa f821 	bl	8000290 <__aeabi_uldivmod>
 800624e:	4602      	mov	r2, r0
 8006250:	460b      	mov	r3, r1
 8006252:	4b0d      	ldr	r3, [pc, #52]	@ (8006288 <UART_SetConfig+0x2d4>)
 8006254:	fba3 1302 	umull	r1, r3, r3, r2
 8006258:	095b      	lsrs	r3, r3, #5
 800625a:	2164      	movs	r1, #100	@ 0x64
 800625c:	fb01 f303 	mul.w	r3, r1, r3
 8006260:	1ad3      	subs	r3, r2, r3
 8006262:	00db      	lsls	r3, r3, #3
 8006264:	3332      	adds	r3, #50	@ 0x32
 8006266:	4a08      	ldr	r2, [pc, #32]	@ (8006288 <UART_SetConfig+0x2d4>)
 8006268:	fba2 2303 	umull	r2, r3, r2, r3
 800626c:	095b      	lsrs	r3, r3, #5
 800626e:	f003 0207 	and.w	r2, r3, #7
 8006272:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	4422      	add	r2, r4
 800627a:	609a      	str	r2, [r3, #8]
 800627c:	e106      	b.n	800648c <UART_SetConfig+0x4d8>
 800627e:	bf00      	nop
 8006280:	40011000 	.word	0x40011000
 8006284:	40011400 	.word	0x40011400
 8006288:	51eb851f 	.word	0x51eb851f
 800628c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006290:	2200      	movs	r2, #0
 8006292:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006296:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800629a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800629e:	4642      	mov	r2, r8
 80062a0:	464b      	mov	r3, r9
 80062a2:	1891      	adds	r1, r2, r2
 80062a4:	6239      	str	r1, [r7, #32]
 80062a6:	415b      	adcs	r3, r3
 80062a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80062aa:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80062ae:	4641      	mov	r1, r8
 80062b0:	1854      	adds	r4, r2, r1
 80062b2:	4649      	mov	r1, r9
 80062b4:	eb43 0501 	adc.w	r5, r3, r1
 80062b8:	f04f 0200 	mov.w	r2, #0
 80062bc:	f04f 0300 	mov.w	r3, #0
 80062c0:	00eb      	lsls	r3, r5, #3
 80062c2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80062c6:	00e2      	lsls	r2, r4, #3
 80062c8:	4614      	mov	r4, r2
 80062ca:	461d      	mov	r5, r3
 80062cc:	4643      	mov	r3, r8
 80062ce:	18e3      	adds	r3, r4, r3
 80062d0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80062d4:	464b      	mov	r3, r9
 80062d6:	eb45 0303 	adc.w	r3, r5, r3
 80062da:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80062de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80062e2:	685b      	ldr	r3, [r3, #4]
 80062e4:	2200      	movs	r2, #0
 80062e6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80062ea:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80062ee:	f04f 0200 	mov.w	r2, #0
 80062f2:	f04f 0300 	mov.w	r3, #0
 80062f6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80062fa:	4629      	mov	r1, r5
 80062fc:	008b      	lsls	r3, r1, #2
 80062fe:	4621      	mov	r1, r4
 8006300:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006304:	4621      	mov	r1, r4
 8006306:	008a      	lsls	r2, r1, #2
 8006308:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800630c:	f7f9 ffc0 	bl	8000290 <__aeabi_uldivmod>
 8006310:	4602      	mov	r2, r0
 8006312:	460b      	mov	r3, r1
 8006314:	4b60      	ldr	r3, [pc, #384]	@ (8006498 <UART_SetConfig+0x4e4>)
 8006316:	fba3 2302 	umull	r2, r3, r3, r2
 800631a:	095b      	lsrs	r3, r3, #5
 800631c:	011c      	lsls	r4, r3, #4
 800631e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006322:	2200      	movs	r2, #0
 8006324:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006328:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 800632c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006330:	4642      	mov	r2, r8
 8006332:	464b      	mov	r3, r9
 8006334:	1891      	adds	r1, r2, r2
 8006336:	61b9      	str	r1, [r7, #24]
 8006338:	415b      	adcs	r3, r3
 800633a:	61fb      	str	r3, [r7, #28]
 800633c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006340:	4641      	mov	r1, r8
 8006342:	1851      	adds	r1, r2, r1
 8006344:	6139      	str	r1, [r7, #16]
 8006346:	4649      	mov	r1, r9
 8006348:	414b      	adcs	r3, r1
 800634a:	617b      	str	r3, [r7, #20]
 800634c:	f04f 0200 	mov.w	r2, #0
 8006350:	f04f 0300 	mov.w	r3, #0
 8006354:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006358:	4659      	mov	r1, fp
 800635a:	00cb      	lsls	r3, r1, #3
 800635c:	4651      	mov	r1, sl
 800635e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006362:	4651      	mov	r1, sl
 8006364:	00ca      	lsls	r2, r1, #3
 8006366:	4610      	mov	r0, r2
 8006368:	4619      	mov	r1, r3
 800636a:	4603      	mov	r3, r0
 800636c:	4642      	mov	r2, r8
 800636e:	189b      	adds	r3, r3, r2
 8006370:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006374:	464b      	mov	r3, r9
 8006376:	460a      	mov	r2, r1
 8006378:	eb42 0303 	adc.w	r3, r2, r3
 800637c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006380:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006384:	685b      	ldr	r3, [r3, #4]
 8006386:	2200      	movs	r2, #0
 8006388:	67bb      	str	r3, [r7, #120]	@ 0x78
 800638a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800638c:	f04f 0200 	mov.w	r2, #0
 8006390:	f04f 0300 	mov.w	r3, #0
 8006394:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8006398:	4649      	mov	r1, r9
 800639a:	008b      	lsls	r3, r1, #2
 800639c:	4641      	mov	r1, r8
 800639e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80063a2:	4641      	mov	r1, r8
 80063a4:	008a      	lsls	r2, r1, #2
 80063a6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80063aa:	f7f9 ff71 	bl	8000290 <__aeabi_uldivmod>
 80063ae:	4602      	mov	r2, r0
 80063b0:	460b      	mov	r3, r1
 80063b2:	4611      	mov	r1, r2
 80063b4:	4b38      	ldr	r3, [pc, #224]	@ (8006498 <UART_SetConfig+0x4e4>)
 80063b6:	fba3 2301 	umull	r2, r3, r3, r1
 80063ba:	095b      	lsrs	r3, r3, #5
 80063bc:	2264      	movs	r2, #100	@ 0x64
 80063be:	fb02 f303 	mul.w	r3, r2, r3
 80063c2:	1acb      	subs	r3, r1, r3
 80063c4:	011b      	lsls	r3, r3, #4
 80063c6:	3332      	adds	r3, #50	@ 0x32
 80063c8:	4a33      	ldr	r2, [pc, #204]	@ (8006498 <UART_SetConfig+0x4e4>)
 80063ca:	fba2 2303 	umull	r2, r3, r2, r3
 80063ce:	095b      	lsrs	r3, r3, #5
 80063d0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80063d4:	441c      	add	r4, r3
 80063d6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80063da:	2200      	movs	r2, #0
 80063dc:	673b      	str	r3, [r7, #112]	@ 0x70
 80063de:	677a      	str	r2, [r7, #116]	@ 0x74
 80063e0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80063e4:	4642      	mov	r2, r8
 80063e6:	464b      	mov	r3, r9
 80063e8:	1891      	adds	r1, r2, r2
 80063ea:	60b9      	str	r1, [r7, #8]
 80063ec:	415b      	adcs	r3, r3
 80063ee:	60fb      	str	r3, [r7, #12]
 80063f0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80063f4:	4641      	mov	r1, r8
 80063f6:	1851      	adds	r1, r2, r1
 80063f8:	6039      	str	r1, [r7, #0]
 80063fa:	4649      	mov	r1, r9
 80063fc:	414b      	adcs	r3, r1
 80063fe:	607b      	str	r3, [r7, #4]
 8006400:	f04f 0200 	mov.w	r2, #0
 8006404:	f04f 0300 	mov.w	r3, #0
 8006408:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800640c:	4659      	mov	r1, fp
 800640e:	00cb      	lsls	r3, r1, #3
 8006410:	4651      	mov	r1, sl
 8006412:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006416:	4651      	mov	r1, sl
 8006418:	00ca      	lsls	r2, r1, #3
 800641a:	4610      	mov	r0, r2
 800641c:	4619      	mov	r1, r3
 800641e:	4603      	mov	r3, r0
 8006420:	4642      	mov	r2, r8
 8006422:	189b      	adds	r3, r3, r2
 8006424:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006426:	464b      	mov	r3, r9
 8006428:	460a      	mov	r2, r1
 800642a:	eb42 0303 	adc.w	r3, r2, r3
 800642e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006430:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006434:	685b      	ldr	r3, [r3, #4]
 8006436:	2200      	movs	r2, #0
 8006438:	663b      	str	r3, [r7, #96]	@ 0x60
 800643a:	667a      	str	r2, [r7, #100]	@ 0x64
 800643c:	f04f 0200 	mov.w	r2, #0
 8006440:	f04f 0300 	mov.w	r3, #0
 8006444:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8006448:	4649      	mov	r1, r9
 800644a:	008b      	lsls	r3, r1, #2
 800644c:	4641      	mov	r1, r8
 800644e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006452:	4641      	mov	r1, r8
 8006454:	008a      	lsls	r2, r1, #2
 8006456:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800645a:	f7f9 ff19 	bl	8000290 <__aeabi_uldivmod>
 800645e:	4602      	mov	r2, r0
 8006460:	460b      	mov	r3, r1
 8006462:	4b0d      	ldr	r3, [pc, #52]	@ (8006498 <UART_SetConfig+0x4e4>)
 8006464:	fba3 1302 	umull	r1, r3, r3, r2
 8006468:	095b      	lsrs	r3, r3, #5
 800646a:	2164      	movs	r1, #100	@ 0x64
 800646c:	fb01 f303 	mul.w	r3, r1, r3
 8006470:	1ad3      	subs	r3, r2, r3
 8006472:	011b      	lsls	r3, r3, #4
 8006474:	3332      	adds	r3, #50	@ 0x32
 8006476:	4a08      	ldr	r2, [pc, #32]	@ (8006498 <UART_SetConfig+0x4e4>)
 8006478:	fba2 2303 	umull	r2, r3, r2, r3
 800647c:	095b      	lsrs	r3, r3, #5
 800647e:	f003 020f 	and.w	r2, r3, #15
 8006482:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006486:	681b      	ldr	r3, [r3, #0]
 8006488:	4422      	add	r2, r4
 800648a:	609a      	str	r2, [r3, #8]
 800648c:	bf00      	nop
 800648e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8006492:	46bd      	mov	sp, r7
 8006494:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006498:	51eb851f 	.word	0x51eb851f

0800649c <_strtol_l.isra.0>:
 800649c:	2b24      	cmp	r3, #36	@ 0x24
 800649e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80064a2:	4686      	mov	lr, r0
 80064a4:	4690      	mov	r8, r2
 80064a6:	d801      	bhi.n	80064ac <_strtol_l.isra.0+0x10>
 80064a8:	2b01      	cmp	r3, #1
 80064aa:	d106      	bne.n	80064ba <_strtol_l.isra.0+0x1e>
 80064ac:	f000 fa72 	bl	8006994 <__errno>
 80064b0:	2316      	movs	r3, #22
 80064b2:	6003      	str	r3, [r0, #0]
 80064b4:	2000      	movs	r0, #0
 80064b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064ba:	4834      	ldr	r0, [pc, #208]	@ (800658c <_strtol_l.isra.0+0xf0>)
 80064bc:	460d      	mov	r5, r1
 80064be:	462a      	mov	r2, r5
 80064c0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80064c4:	5d06      	ldrb	r6, [r0, r4]
 80064c6:	f016 0608 	ands.w	r6, r6, #8
 80064ca:	d1f8      	bne.n	80064be <_strtol_l.isra.0+0x22>
 80064cc:	2c2d      	cmp	r4, #45	@ 0x2d
 80064ce:	d110      	bne.n	80064f2 <_strtol_l.isra.0+0x56>
 80064d0:	782c      	ldrb	r4, [r5, #0]
 80064d2:	2601      	movs	r6, #1
 80064d4:	1c95      	adds	r5, r2, #2
 80064d6:	f033 0210 	bics.w	r2, r3, #16
 80064da:	d115      	bne.n	8006508 <_strtol_l.isra.0+0x6c>
 80064dc:	2c30      	cmp	r4, #48	@ 0x30
 80064de:	d10d      	bne.n	80064fc <_strtol_l.isra.0+0x60>
 80064e0:	782a      	ldrb	r2, [r5, #0]
 80064e2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80064e6:	2a58      	cmp	r2, #88	@ 0x58
 80064e8:	d108      	bne.n	80064fc <_strtol_l.isra.0+0x60>
 80064ea:	786c      	ldrb	r4, [r5, #1]
 80064ec:	3502      	adds	r5, #2
 80064ee:	2310      	movs	r3, #16
 80064f0:	e00a      	b.n	8006508 <_strtol_l.isra.0+0x6c>
 80064f2:	2c2b      	cmp	r4, #43	@ 0x2b
 80064f4:	bf04      	itt	eq
 80064f6:	782c      	ldrbeq	r4, [r5, #0]
 80064f8:	1c95      	addeq	r5, r2, #2
 80064fa:	e7ec      	b.n	80064d6 <_strtol_l.isra.0+0x3a>
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d1f6      	bne.n	80064ee <_strtol_l.isra.0+0x52>
 8006500:	2c30      	cmp	r4, #48	@ 0x30
 8006502:	bf14      	ite	ne
 8006504:	230a      	movne	r3, #10
 8006506:	2308      	moveq	r3, #8
 8006508:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800650c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006510:	2200      	movs	r2, #0
 8006512:	fbbc f9f3 	udiv	r9, ip, r3
 8006516:	4610      	mov	r0, r2
 8006518:	fb03 ca19 	mls	sl, r3, r9, ip
 800651c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8006520:	2f09      	cmp	r7, #9
 8006522:	d80f      	bhi.n	8006544 <_strtol_l.isra.0+0xa8>
 8006524:	463c      	mov	r4, r7
 8006526:	42a3      	cmp	r3, r4
 8006528:	dd1b      	ble.n	8006562 <_strtol_l.isra.0+0xc6>
 800652a:	1c57      	adds	r7, r2, #1
 800652c:	d007      	beq.n	800653e <_strtol_l.isra.0+0xa2>
 800652e:	4581      	cmp	r9, r0
 8006530:	d314      	bcc.n	800655c <_strtol_l.isra.0+0xc0>
 8006532:	d101      	bne.n	8006538 <_strtol_l.isra.0+0x9c>
 8006534:	45a2      	cmp	sl, r4
 8006536:	db11      	blt.n	800655c <_strtol_l.isra.0+0xc0>
 8006538:	fb00 4003 	mla	r0, r0, r3, r4
 800653c:	2201      	movs	r2, #1
 800653e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8006542:	e7eb      	b.n	800651c <_strtol_l.isra.0+0x80>
 8006544:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8006548:	2f19      	cmp	r7, #25
 800654a:	d801      	bhi.n	8006550 <_strtol_l.isra.0+0xb4>
 800654c:	3c37      	subs	r4, #55	@ 0x37
 800654e:	e7ea      	b.n	8006526 <_strtol_l.isra.0+0x8a>
 8006550:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8006554:	2f19      	cmp	r7, #25
 8006556:	d804      	bhi.n	8006562 <_strtol_l.isra.0+0xc6>
 8006558:	3c57      	subs	r4, #87	@ 0x57
 800655a:	e7e4      	b.n	8006526 <_strtol_l.isra.0+0x8a>
 800655c:	f04f 32ff 	mov.w	r2, #4294967295
 8006560:	e7ed      	b.n	800653e <_strtol_l.isra.0+0xa2>
 8006562:	1c53      	adds	r3, r2, #1
 8006564:	d108      	bne.n	8006578 <_strtol_l.isra.0+0xdc>
 8006566:	2322      	movs	r3, #34	@ 0x22
 8006568:	f8ce 3000 	str.w	r3, [lr]
 800656c:	4660      	mov	r0, ip
 800656e:	f1b8 0f00 	cmp.w	r8, #0
 8006572:	d0a0      	beq.n	80064b6 <_strtol_l.isra.0+0x1a>
 8006574:	1e69      	subs	r1, r5, #1
 8006576:	e006      	b.n	8006586 <_strtol_l.isra.0+0xea>
 8006578:	b106      	cbz	r6, 800657c <_strtol_l.isra.0+0xe0>
 800657a:	4240      	negs	r0, r0
 800657c:	f1b8 0f00 	cmp.w	r8, #0
 8006580:	d099      	beq.n	80064b6 <_strtol_l.isra.0+0x1a>
 8006582:	2a00      	cmp	r2, #0
 8006584:	d1f6      	bne.n	8006574 <_strtol_l.isra.0+0xd8>
 8006586:	f8c8 1000 	str.w	r1, [r8]
 800658a:	e794      	b.n	80064b6 <_strtol_l.isra.0+0x1a>
 800658c:	08007a11 	.word	0x08007a11

08006590 <strtol>:
 8006590:	4613      	mov	r3, r2
 8006592:	460a      	mov	r2, r1
 8006594:	4601      	mov	r1, r0
 8006596:	4802      	ldr	r0, [pc, #8]	@ (80065a0 <strtol+0x10>)
 8006598:	6800      	ldr	r0, [r0, #0]
 800659a:	f7ff bf7f 	b.w	800649c <_strtol_l.isra.0>
 800659e:	bf00      	nop
 80065a0:	2000003c 	.word	0x2000003c

080065a4 <std>:
 80065a4:	2300      	movs	r3, #0
 80065a6:	b510      	push	{r4, lr}
 80065a8:	4604      	mov	r4, r0
 80065aa:	e9c0 3300 	strd	r3, r3, [r0]
 80065ae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80065b2:	6083      	str	r3, [r0, #8]
 80065b4:	8181      	strh	r1, [r0, #12]
 80065b6:	6643      	str	r3, [r0, #100]	@ 0x64
 80065b8:	81c2      	strh	r2, [r0, #14]
 80065ba:	6183      	str	r3, [r0, #24]
 80065bc:	4619      	mov	r1, r3
 80065be:	2208      	movs	r2, #8
 80065c0:	305c      	adds	r0, #92	@ 0x5c
 80065c2:	f000 f93c 	bl	800683e <memset>
 80065c6:	4b0d      	ldr	r3, [pc, #52]	@ (80065fc <std+0x58>)
 80065c8:	6263      	str	r3, [r4, #36]	@ 0x24
 80065ca:	4b0d      	ldr	r3, [pc, #52]	@ (8006600 <std+0x5c>)
 80065cc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80065ce:	4b0d      	ldr	r3, [pc, #52]	@ (8006604 <std+0x60>)
 80065d0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80065d2:	4b0d      	ldr	r3, [pc, #52]	@ (8006608 <std+0x64>)
 80065d4:	6323      	str	r3, [r4, #48]	@ 0x30
 80065d6:	4b0d      	ldr	r3, [pc, #52]	@ (800660c <std+0x68>)
 80065d8:	6224      	str	r4, [r4, #32]
 80065da:	429c      	cmp	r4, r3
 80065dc:	d006      	beq.n	80065ec <std+0x48>
 80065de:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80065e2:	4294      	cmp	r4, r2
 80065e4:	d002      	beq.n	80065ec <std+0x48>
 80065e6:	33d0      	adds	r3, #208	@ 0xd0
 80065e8:	429c      	cmp	r4, r3
 80065ea:	d105      	bne.n	80065f8 <std+0x54>
 80065ec:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80065f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80065f4:	f000 b9f8 	b.w	80069e8 <__retarget_lock_init_recursive>
 80065f8:	bd10      	pop	{r4, pc}
 80065fa:	bf00      	nop
 80065fc:	080067b9 	.word	0x080067b9
 8006600:	080067db 	.word	0x080067db
 8006604:	08006813 	.word	0x08006813
 8006608:	08006837 	.word	0x08006837
 800660c:	20013be0 	.word	0x20013be0

08006610 <stdio_exit_handler>:
 8006610:	4a02      	ldr	r2, [pc, #8]	@ (800661c <stdio_exit_handler+0xc>)
 8006612:	4903      	ldr	r1, [pc, #12]	@ (8006620 <stdio_exit_handler+0x10>)
 8006614:	4803      	ldr	r0, [pc, #12]	@ (8006624 <stdio_exit_handler+0x14>)
 8006616:	f000 b869 	b.w	80066ec <_fwalk_sglue>
 800661a:	bf00      	nop
 800661c:	20000030 	.word	0x20000030
 8006620:	08007581 	.word	0x08007581
 8006624:	20000040 	.word	0x20000040

08006628 <cleanup_stdio>:
 8006628:	6841      	ldr	r1, [r0, #4]
 800662a:	4b0c      	ldr	r3, [pc, #48]	@ (800665c <cleanup_stdio+0x34>)
 800662c:	4299      	cmp	r1, r3
 800662e:	b510      	push	{r4, lr}
 8006630:	4604      	mov	r4, r0
 8006632:	d001      	beq.n	8006638 <cleanup_stdio+0x10>
 8006634:	f000 ffa4 	bl	8007580 <_fflush_r>
 8006638:	68a1      	ldr	r1, [r4, #8]
 800663a:	4b09      	ldr	r3, [pc, #36]	@ (8006660 <cleanup_stdio+0x38>)
 800663c:	4299      	cmp	r1, r3
 800663e:	d002      	beq.n	8006646 <cleanup_stdio+0x1e>
 8006640:	4620      	mov	r0, r4
 8006642:	f000 ff9d 	bl	8007580 <_fflush_r>
 8006646:	68e1      	ldr	r1, [r4, #12]
 8006648:	4b06      	ldr	r3, [pc, #24]	@ (8006664 <cleanup_stdio+0x3c>)
 800664a:	4299      	cmp	r1, r3
 800664c:	d004      	beq.n	8006658 <cleanup_stdio+0x30>
 800664e:	4620      	mov	r0, r4
 8006650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006654:	f000 bf94 	b.w	8007580 <_fflush_r>
 8006658:	bd10      	pop	{r4, pc}
 800665a:	bf00      	nop
 800665c:	20013be0 	.word	0x20013be0
 8006660:	20013c48 	.word	0x20013c48
 8006664:	20013cb0 	.word	0x20013cb0

08006668 <global_stdio_init.part.0>:
 8006668:	b510      	push	{r4, lr}
 800666a:	4b0b      	ldr	r3, [pc, #44]	@ (8006698 <global_stdio_init.part.0+0x30>)
 800666c:	4c0b      	ldr	r4, [pc, #44]	@ (800669c <global_stdio_init.part.0+0x34>)
 800666e:	4a0c      	ldr	r2, [pc, #48]	@ (80066a0 <global_stdio_init.part.0+0x38>)
 8006670:	601a      	str	r2, [r3, #0]
 8006672:	4620      	mov	r0, r4
 8006674:	2200      	movs	r2, #0
 8006676:	2104      	movs	r1, #4
 8006678:	f7ff ff94 	bl	80065a4 <std>
 800667c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8006680:	2201      	movs	r2, #1
 8006682:	2109      	movs	r1, #9
 8006684:	f7ff ff8e 	bl	80065a4 <std>
 8006688:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800668c:	2202      	movs	r2, #2
 800668e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006692:	2112      	movs	r1, #18
 8006694:	f7ff bf86 	b.w	80065a4 <std>
 8006698:	20013d18 	.word	0x20013d18
 800669c:	20013be0 	.word	0x20013be0
 80066a0:	08006611 	.word	0x08006611

080066a4 <__sfp_lock_acquire>:
 80066a4:	4801      	ldr	r0, [pc, #4]	@ (80066ac <__sfp_lock_acquire+0x8>)
 80066a6:	f000 b9a0 	b.w	80069ea <__retarget_lock_acquire_recursive>
 80066aa:	bf00      	nop
 80066ac:	20013d21 	.word	0x20013d21

080066b0 <__sfp_lock_release>:
 80066b0:	4801      	ldr	r0, [pc, #4]	@ (80066b8 <__sfp_lock_release+0x8>)
 80066b2:	f000 b99b 	b.w	80069ec <__retarget_lock_release_recursive>
 80066b6:	bf00      	nop
 80066b8:	20013d21 	.word	0x20013d21

080066bc <__sinit>:
 80066bc:	b510      	push	{r4, lr}
 80066be:	4604      	mov	r4, r0
 80066c0:	f7ff fff0 	bl	80066a4 <__sfp_lock_acquire>
 80066c4:	6a23      	ldr	r3, [r4, #32]
 80066c6:	b11b      	cbz	r3, 80066d0 <__sinit+0x14>
 80066c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80066cc:	f7ff bff0 	b.w	80066b0 <__sfp_lock_release>
 80066d0:	4b04      	ldr	r3, [pc, #16]	@ (80066e4 <__sinit+0x28>)
 80066d2:	6223      	str	r3, [r4, #32]
 80066d4:	4b04      	ldr	r3, [pc, #16]	@ (80066e8 <__sinit+0x2c>)
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	2b00      	cmp	r3, #0
 80066da:	d1f5      	bne.n	80066c8 <__sinit+0xc>
 80066dc:	f7ff ffc4 	bl	8006668 <global_stdio_init.part.0>
 80066e0:	e7f2      	b.n	80066c8 <__sinit+0xc>
 80066e2:	bf00      	nop
 80066e4:	08006629 	.word	0x08006629
 80066e8:	20013d18 	.word	0x20013d18

080066ec <_fwalk_sglue>:
 80066ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80066f0:	4607      	mov	r7, r0
 80066f2:	4688      	mov	r8, r1
 80066f4:	4614      	mov	r4, r2
 80066f6:	2600      	movs	r6, #0
 80066f8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80066fc:	f1b9 0901 	subs.w	r9, r9, #1
 8006700:	d505      	bpl.n	800670e <_fwalk_sglue+0x22>
 8006702:	6824      	ldr	r4, [r4, #0]
 8006704:	2c00      	cmp	r4, #0
 8006706:	d1f7      	bne.n	80066f8 <_fwalk_sglue+0xc>
 8006708:	4630      	mov	r0, r6
 800670a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800670e:	89ab      	ldrh	r3, [r5, #12]
 8006710:	2b01      	cmp	r3, #1
 8006712:	d907      	bls.n	8006724 <_fwalk_sglue+0x38>
 8006714:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006718:	3301      	adds	r3, #1
 800671a:	d003      	beq.n	8006724 <_fwalk_sglue+0x38>
 800671c:	4629      	mov	r1, r5
 800671e:	4638      	mov	r0, r7
 8006720:	47c0      	blx	r8
 8006722:	4306      	orrs	r6, r0
 8006724:	3568      	adds	r5, #104	@ 0x68
 8006726:	e7e9      	b.n	80066fc <_fwalk_sglue+0x10>

08006728 <iprintf>:
 8006728:	b40f      	push	{r0, r1, r2, r3}
 800672a:	b507      	push	{r0, r1, r2, lr}
 800672c:	4906      	ldr	r1, [pc, #24]	@ (8006748 <iprintf+0x20>)
 800672e:	ab04      	add	r3, sp, #16
 8006730:	6808      	ldr	r0, [r1, #0]
 8006732:	f853 2b04 	ldr.w	r2, [r3], #4
 8006736:	6881      	ldr	r1, [r0, #8]
 8006738:	9301      	str	r3, [sp, #4]
 800673a:	f000 fbf9 	bl	8006f30 <_vfiprintf_r>
 800673e:	b003      	add	sp, #12
 8006740:	f85d eb04 	ldr.w	lr, [sp], #4
 8006744:	b004      	add	sp, #16
 8006746:	4770      	bx	lr
 8006748:	2000003c 	.word	0x2000003c

0800674c <sniprintf>:
 800674c:	b40c      	push	{r2, r3}
 800674e:	b530      	push	{r4, r5, lr}
 8006750:	4b18      	ldr	r3, [pc, #96]	@ (80067b4 <sniprintf+0x68>)
 8006752:	1e0c      	subs	r4, r1, #0
 8006754:	681d      	ldr	r5, [r3, #0]
 8006756:	b09d      	sub	sp, #116	@ 0x74
 8006758:	da08      	bge.n	800676c <sniprintf+0x20>
 800675a:	238b      	movs	r3, #139	@ 0x8b
 800675c:	602b      	str	r3, [r5, #0]
 800675e:	f04f 30ff 	mov.w	r0, #4294967295
 8006762:	b01d      	add	sp, #116	@ 0x74
 8006764:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006768:	b002      	add	sp, #8
 800676a:	4770      	bx	lr
 800676c:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8006770:	f8ad 3014 	strh.w	r3, [sp, #20]
 8006774:	f04f 0300 	mov.w	r3, #0
 8006778:	931b      	str	r3, [sp, #108]	@ 0x6c
 800677a:	bf14      	ite	ne
 800677c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8006780:	4623      	moveq	r3, r4
 8006782:	9304      	str	r3, [sp, #16]
 8006784:	9307      	str	r3, [sp, #28]
 8006786:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800678a:	9002      	str	r0, [sp, #8]
 800678c:	9006      	str	r0, [sp, #24]
 800678e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8006792:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8006794:	ab21      	add	r3, sp, #132	@ 0x84
 8006796:	a902      	add	r1, sp, #8
 8006798:	4628      	mov	r0, r5
 800679a:	9301      	str	r3, [sp, #4]
 800679c:	f000 faa2 	bl	8006ce4 <_svfiprintf_r>
 80067a0:	1c43      	adds	r3, r0, #1
 80067a2:	bfbc      	itt	lt
 80067a4:	238b      	movlt	r3, #139	@ 0x8b
 80067a6:	602b      	strlt	r3, [r5, #0]
 80067a8:	2c00      	cmp	r4, #0
 80067aa:	d0da      	beq.n	8006762 <sniprintf+0x16>
 80067ac:	9b02      	ldr	r3, [sp, #8]
 80067ae:	2200      	movs	r2, #0
 80067b0:	701a      	strb	r2, [r3, #0]
 80067b2:	e7d6      	b.n	8006762 <sniprintf+0x16>
 80067b4:	2000003c 	.word	0x2000003c

080067b8 <__sread>:
 80067b8:	b510      	push	{r4, lr}
 80067ba:	460c      	mov	r4, r1
 80067bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067c0:	f000 f8c4 	bl	800694c <_read_r>
 80067c4:	2800      	cmp	r0, #0
 80067c6:	bfab      	itete	ge
 80067c8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80067ca:	89a3      	ldrhlt	r3, [r4, #12]
 80067cc:	181b      	addge	r3, r3, r0
 80067ce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80067d2:	bfac      	ite	ge
 80067d4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80067d6:	81a3      	strhlt	r3, [r4, #12]
 80067d8:	bd10      	pop	{r4, pc}

080067da <__swrite>:
 80067da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067de:	461f      	mov	r7, r3
 80067e0:	898b      	ldrh	r3, [r1, #12]
 80067e2:	05db      	lsls	r3, r3, #23
 80067e4:	4605      	mov	r5, r0
 80067e6:	460c      	mov	r4, r1
 80067e8:	4616      	mov	r6, r2
 80067ea:	d505      	bpl.n	80067f8 <__swrite+0x1e>
 80067ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067f0:	2302      	movs	r3, #2
 80067f2:	2200      	movs	r2, #0
 80067f4:	f000 f898 	bl	8006928 <_lseek_r>
 80067f8:	89a3      	ldrh	r3, [r4, #12]
 80067fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80067fe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006802:	81a3      	strh	r3, [r4, #12]
 8006804:	4632      	mov	r2, r6
 8006806:	463b      	mov	r3, r7
 8006808:	4628      	mov	r0, r5
 800680a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800680e:	f000 b8af 	b.w	8006970 <_write_r>

08006812 <__sseek>:
 8006812:	b510      	push	{r4, lr}
 8006814:	460c      	mov	r4, r1
 8006816:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800681a:	f000 f885 	bl	8006928 <_lseek_r>
 800681e:	1c43      	adds	r3, r0, #1
 8006820:	89a3      	ldrh	r3, [r4, #12]
 8006822:	bf15      	itete	ne
 8006824:	6560      	strne	r0, [r4, #84]	@ 0x54
 8006826:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800682a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800682e:	81a3      	strheq	r3, [r4, #12]
 8006830:	bf18      	it	ne
 8006832:	81a3      	strhne	r3, [r4, #12]
 8006834:	bd10      	pop	{r4, pc}

08006836 <__sclose>:
 8006836:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800683a:	f000 b865 	b.w	8006908 <_close_r>

0800683e <memset>:
 800683e:	4402      	add	r2, r0
 8006840:	4603      	mov	r3, r0
 8006842:	4293      	cmp	r3, r2
 8006844:	d100      	bne.n	8006848 <memset+0xa>
 8006846:	4770      	bx	lr
 8006848:	f803 1b01 	strb.w	r1, [r3], #1
 800684c:	e7f9      	b.n	8006842 <memset+0x4>
	...

08006850 <strtok>:
 8006850:	4b16      	ldr	r3, [pc, #88]	@ (80068ac <strtok+0x5c>)
 8006852:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006856:	681f      	ldr	r7, [r3, #0]
 8006858:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 800685a:	4605      	mov	r5, r0
 800685c:	460e      	mov	r6, r1
 800685e:	b9ec      	cbnz	r4, 800689c <strtok+0x4c>
 8006860:	2050      	movs	r0, #80	@ 0x50
 8006862:	f000 f92d 	bl	8006ac0 <malloc>
 8006866:	4602      	mov	r2, r0
 8006868:	6478      	str	r0, [r7, #68]	@ 0x44
 800686a:	b920      	cbnz	r0, 8006876 <strtok+0x26>
 800686c:	4b10      	ldr	r3, [pc, #64]	@ (80068b0 <strtok+0x60>)
 800686e:	4811      	ldr	r0, [pc, #68]	@ (80068b4 <strtok+0x64>)
 8006870:	215b      	movs	r1, #91	@ 0x5b
 8006872:	f000 f8bd 	bl	80069f0 <__assert_func>
 8006876:	e9c0 4400 	strd	r4, r4, [r0]
 800687a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800687e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8006882:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 8006886:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 800688a:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 800688e:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 8006892:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 8006896:	6184      	str	r4, [r0, #24]
 8006898:	7704      	strb	r4, [r0, #28]
 800689a:	6244      	str	r4, [r0, #36]	@ 0x24
 800689c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800689e:	4631      	mov	r1, r6
 80068a0:	4628      	mov	r0, r5
 80068a2:	2301      	movs	r3, #1
 80068a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80068a8:	f000 b806 	b.w	80068b8 <__strtok_r>
 80068ac:	2000003c 	.word	0x2000003c
 80068b0:	08007b11 	.word	0x08007b11
 80068b4:	08007b28 	.word	0x08007b28

080068b8 <__strtok_r>:
 80068b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068ba:	4604      	mov	r4, r0
 80068bc:	b908      	cbnz	r0, 80068c2 <__strtok_r+0xa>
 80068be:	6814      	ldr	r4, [r2, #0]
 80068c0:	b144      	cbz	r4, 80068d4 <__strtok_r+0x1c>
 80068c2:	4620      	mov	r0, r4
 80068c4:	f814 5b01 	ldrb.w	r5, [r4], #1
 80068c8:	460f      	mov	r7, r1
 80068ca:	f817 6b01 	ldrb.w	r6, [r7], #1
 80068ce:	b91e      	cbnz	r6, 80068d8 <__strtok_r+0x20>
 80068d0:	b965      	cbnz	r5, 80068ec <__strtok_r+0x34>
 80068d2:	6015      	str	r5, [r2, #0]
 80068d4:	2000      	movs	r0, #0
 80068d6:	e005      	b.n	80068e4 <__strtok_r+0x2c>
 80068d8:	42b5      	cmp	r5, r6
 80068da:	d1f6      	bne.n	80068ca <__strtok_r+0x12>
 80068dc:	2b00      	cmp	r3, #0
 80068de:	d1f0      	bne.n	80068c2 <__strtok_r+0xa>
 80068e0:	6014      	str	r4, [r2, #0]
 80068e2:	7003      	strb	r3, [r0, #0]
 80068e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80068e6:	461c      	mov	r4, r3
 80068e8:	e00c      	b.n	8006904 <__strtok_r+0x4c>
 80068ea:	b91d      	cbnz	r5, 80068f4 <__strtok_r+0x3c>
 80068ec:	4627      	mov	r7, r4
 80068ee:	f814 3b01 	ldrb.w	r3, [r4], #1
 80068f2:	460e      	mov	r6, r1
 80068f4:	f816 5b01 	ldrb.w	r5, [r6], #1
 80068f8:	42ab      	cmp	r3, r5
 80068fa:	d1f6      	bne.n	80068ea <__strtok_r+0x32>
 80068fc:	2b00      	cmp	r3, #0
 80068fe:	d0f2      	beq.n	80068e6 <__strtok_r+0x2e>
 8006900:	2300      	movs	r3, #0
 8006902:	703b      	strb	r3, [r7, #0]
 8006904:	6014      	str	r4, [r2, #0]
 8006906:	e7ed      	b.n	80068e4 <__strtok_r+0x2c>

08006908 <_close_r>:
 8006908:	b538      	push	{r3, r4, r5, lr}
 800690a:	4d06      	ldr	r5, [pc, #24]	@ (8006924 <_close_r+0x1c>)
 800690c:	2300      	movs	r3, #0
 800690e:	4604      	mov	r4, r0
 8006910:	4608      	mov	r0, r1
 8006912:	602b      	str	r3, [r5, #0]
 8006914:	f7fb f9d4 	bl	8001cc0 <_close>
 8006918:	1c43      	adds	r3, r0, #1
 800691a:	d102      	bne.n	8006922 <_close_r+0x1a>
 800691c:	682b      	ldr	r3, [r5, #0]
 800691e:	b103      	cbz	r3, 8006922 <_close_r+0x1a>
 8006920:	6023      	str	r3, [r4, #0]
 8006922:	bd38      	pop	{r3, r4, r5, pc}
 8006924:	20013d1c 	.word	0x20013d1c

08006928 <_lseek_r>:
 8006928:	b538      	push	{r3, r4, r5, lr}
 800692a:	4d07      	ldr	r5, [pc, #28]	@ (8006948 <_lseek_r+0x20>)
 800692c:	4604      	mov	r4, r0
 800692e:	4608      	mov	r0, r1
 8006930:	4611      	mov	r1, r2
 8006932:	2200      	movs	r2, #0
 8006934:	602a      	str	r2, [r5, #0]
 8006936:	461a      	mov	r2, r3
 8006938:	f7fb f9e9 	bl	8001d0e <_lseek>
 800693c:	1c43      	adds	r3, r0, #1
 800693e:	d102      	bne.n	8006946 <_lseek_r+0x1e>
 8006940:	682b      	ldr	r3, [r5, #0]
 8006942:	b103      	cbz	r3, 8006946 <_lseek_r+0x1e>
 8006944:	6023      	str	r3, [r4, #0]
 8006946:	bd38      	pop	{r3, r4, r5, pc}
 8006948:	20013d1c 	.word	0x20013d1c

0800694c <_read_r>:
 800694c:	b538      	push	{r3, r4, r5, lr}
 800694e:	4d07      	ldr	r5, [pc, #28]	@ (800696c <_read_r+0x20>)
 8006950:	4604      	mov	r4, r0
 8006952:	4608      	mov	r0, r1
 8006954:	4611      	mov	r1, r2
 8006956:	2200      	movs	r2, #0
 8006958:	602a      	str	r2, [r5, #0]
 800695a:	461a      	mov	r2, r3
 800695c:	f7fb f977 	bl	8001c4e <_read>
 8006960:	1c43      	adds	r3, r0, #1
 8006962:	d102      	bne.n	800696a <_read_r+0x1e>
 8006964:	682b      	ldr	r3, [r5, #0]
 8006966:	b103      	cbz	r3, 800696a <_read_r+0x1e>
 8006968:	6023      	str	r3, [r4, #0]
 800696a:	bd38      	pop	{r3, r4, r5, pc}
 800696c:	20013d1c 	.word	0x20013d1c

08006970 <_write_r>:
 8006970:	b538      	push	{r3, r4, r5, lr}
 8006972:	4d07      	ldr	r5, [pc, #28]	@ (8006990 <_write_r+0x20>)
 8006974:	4604      	mov	r4, r0
 8006976:	4608      	mov	r0, r1
 8006978:	4611      	mov	r1, r2
 800697a:	2200      	movs	r2, #0
 800697c:	602a      	str	r2, [r5, #0]
 800697e:	461a      	mov	r2, r3
 8006980:	f7fb f982 	bl	8001c88 <_write>
 8006984:	1c43      	adds	r3, r0, #1
 8006986:	d102      	bne.n	800698e <_write_r+0x1e>
 8006988:	682b      	ldr	r3, [r5, #0]
 800698a:	b103      	cbz	r3, 800698e <_write_r+0x1e>
 800698c:	6023      	str	r3, [r4, #0]
 800698e:	bd38      	pop	{r3, r4, r5, pc}
 8006990:	20013d1c 	.word	0x20013d1c

08006994 <__errno>:
 8006994:	4b01      	ldr	r3, [pc, #4]	@ (800699c <__errno+0x8>)
 8006996:	6818      	ldr	r0, [r3, #0]
 8006998:	4770      	bx	lr
 800699a:	bf00      	nop
 800699c:	2000003c 	.word	0x2000003c

080069a0 <__libc_init_array>:
 80069a0:	b570      	push	{r4, r5, r6, lr}
 80069a2:	4d0d      	ldr	r5, [pc, #52]	@ (80069d8 <__libc_init_array+0x38>)
 80069a4:	4c0d      	ldr	r4, [pc, #52]	@ (80069dc <__libc_init_array+0x3c>)
 80069a6:	1b64      	subs	r4, r4, r5
 80069a8:	10a4      	asrs	r4, r4, #2
 80069aa:	2600      	movs	r6, #0
 80069ac:	42a6      	cmp	r6, r4
 80069ae:	d109      	bne.n	80069c4 <__libc_init_array+0x24>
 80069b0:	4d0b      	ldr	r5, [pc, #44]	@ (80069e0 <__libc_init_array+0x40>)
 80069b2:	4c0c      	ldr	r4, [pc, #48]	@ (80069e4 <__libc_init_array+0x44>)
 80069b4:	f000 fff0 	bl	8007998 <_init>
 80069b8:	1b64      	subs	r4, r4, r5
 80069ba:	10a4      	asrs	r4, r4, #2
 80069bc:	2600      	movs	r6, #0
 80069be:	42a6      	cmp	r6, r4
 80069c0:	d105      	bne.n	80069ce <__libc_init_array+0x2e>
 80069c2:	bd70      	pop	{r4, r5, r6, pc}
 80069c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80069c8:	4798      	blx	r3
 80069ca:	3601      	adds	r6, #1
 80069cc:	e7ee      	b.n	80069ac <__libc_init_array+0xc>
 80069ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80069d2:	4798      	blx	r3
 80069d4:	3601      	adds	r6, #1
 80069d6:	e7f2      	b.n	80069be <__libc_init_array+0x1e>
 80069d8:	08007bfc 	.word	0x08007bfc
 80069dc:	08007bfc 	.word	0x08007bfc
 80069e0:	08007bfc 	.word	0x08007bfc
 80069e4:	08007c00 	.word	0x08007c00

080069e8 <__retarget_lock_init_recursive>:
 80069e8:	4770      	bx	lr

080069ea <__retarget_lock_acquire_recursive>:
 80069ea:	4770      	bx	lr

080069ec <__retarget_lock_release_recursive>:
 80069ec:	4770      	bx	lr
	...

080069f0 <__assert_func>:
 80069f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80069f2:	4614      	mov	r4, r2
 80069f4:	461a      	mov	r2, r3
 80069f6:	4b09      	ldr	r3, [pc, #36]	@ (8006a1c <__assert_func+0x2c>)
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	4605      	mov	r5, r0
 80069fc:	68d8      	ldr	r0, [r3, #12]
 80069fe:	b14c      	cbz	r4, 8006a14 <__assert_func+0x24>
 8006a00:	4b07      	ldr	r3, [pc, #28]	@ (8006a20 <__assert_func+0x30>)
 8006a02:	9100      	str	r1, [sp, #0]
 8006a04:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006a08:	4906      	ldr	r1, [pc, #24]	@ (8006a24 <__assert_func+0x34>)
 8006a0a:	462b      	mov	r3, r5
 8006a0c:	f000 fde0 	bl	80075d0 <fiprintf>
 8006a10:	f000 febc 	bl	800778c <abort>
 8006a14:	4b04      	ldr	r3, [pc, #16]	@ (8006a28 <__assert_func+0x38>)
 8006a16:	461c      	mov	r4, r3
 8006a18:	e7f3      	b.n	8006a02 <__assert_func+0x12>
 8006a1a:	bf00      	nop
 8006a1c:	2000003c 	.word	0x2000003c
 8006a20:	08007b82 	.word	0x08007b82
 8006a24:	08007b8f 	.word	0x08007b8f
 8006a28:	08007bbd 	.word	0x08007bbd

08006a2c <_free_r>:
 8006a2c:	b538      	push	{r3, r4, r5, lr}
 8006a2e:	4605      	mov	r5, r0
 8006a30:	2900      	cmp	r1, #0
 8006a32:	d041      	beq.n	8006ab8 <_free_r+0x8c>
 8006a34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006a38:	1f0c      	subs	r4, r1, #4
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	bfb8      	it	lt
 8006a3e:	18e4      	addlt	r4, r4, r3
 8006a40:	f000 f8e8 	bl	8006c14 <__malloc_lock>
 8006a44:	4a1d      	ldr	r2, [pc, #116]	@ (8006abc <_free_r+0x90>)
 8006a46:	6813      	ldr	r3, [r2, #0]
 8006a48:	b933      	cbnz	r3, 8006a58 <_free_r+0x2c>
 8006a4a:	6063      	str	r3, [r4, #4]
 8006a4c:	6014      	str	r4, [r2, #0]
 8006a4e:	4628      	mov	r0, r5
 8006a50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006a54:	f000 b8e4 	b.w	8006c20 <__malloc_unlock>
 8006a58:	42a3      	cmp	r3, r4
 8006a5a:	d908      	bls.n	8006a6e <_free_r+0x42>
 8006a5c:	6820      	ldr	r0, [r4, #0]
 8006a5e:	1821      	adds	r1, r4, r0
 8006a60:	428b      	cmp	r3, r1
 8006a62:	bf01      	itttt	eq
 8006a64:	6819      	ldreq	r1, [r3, #0]
 8006a66:	685b      	ldreq	r3, [r3, #4]
 8006a68:	1809      	addeq	r1, r1, r0
 8006a6a:	6021      	streq	r1, [r4, #0]
 8006a6c:	e7ed      	b.n	8006a4a <_free_r+0x1e>
 8006a6e:	461a      	mov	r2, r3
 8006a70:	685b      	ldr	r3, [r3, #4]
 8006a72:	b10b      	cbz	r3, 8006a78 <_free_r+0x4c>
 8006a74:	42a3      	cmp	r3, r4
 8006a76:	d9fa      	bls.n	8006a6e <_free_r+0x42>
 8006a78:	6811      	ldr	r1, [r2, #0]
 8006a7a:	1850      	adds	r0, r2, r1
 8006a7c:	42a0      	cmp	r0, r4
 8006a7e:	d10b      	bne.n	8006a98 <_free_r+0x6c>
 8006a80:	6820      	ldr	r0, [r4, #0]
 8006a82:	4401      	add	r1, r0
 8006a84:	1850      	adds	r0, r2, r1
 8006a86:	4283      	cmp	r3, r0
 8006a88:	6011      	str	r1, [r2, #0]
 8006a8a:	d1e0      	bne.n	8006a4e <_free_r+0x22>
 8006a8c:	6818      	ldr	r0, [r3, #0]
 8006a8e:	685b      	ldr	r3, [r3, #4]
 8006a90:	6053      	str	r3, [r2, #4]
 8006a92:	4408      	add	r0, r1
 8006a94:	6010      	str	r0, [r2, #0]
 8006a96:	e7da      	b.n	8006a4e <_free_r+0x22>
 8006a98:	d902      	bls.n	8006aa0 <_free_r+0x74>
 8006a9a:	230c      	movs	r3, #12
 8006a9c:	602b      	str	r3, [r5, #0]
 8006a9e:	e7d6      	b.n	8006a4e <_free_r+0x22>
 8006aa0:	6820      	ldr	r0, [r4, #0]
 8006aa2:	1821      	adds	r1, r4, r0
 8006aa4:	428b      	cmp	r3, r1
 8006aa6:	bf04      	itt	eq
 8006aa8:	6819      	ldreq	r1, [r3, #0]
 8006aaa:	685b      	ldreq	r3, [r3, #4]
 8006aac:	6063      	str	r3, [r4, #4]
 8006aae:	bf04      	itt	eq
 8006ab0:	1809      	addeq	r1, r1, r0
 8006ab2:	6021      	streq	r1, [r4, #0]
 8006ab4:	6054      	str	r4, [r2, #4]
 8006ab6:	e7ca      	b.n	8006a4e <_free_r+0x22>
 8006ab8:	bd38      	pop	{r3, r4, r5, pc}
 8006aba:	bf00      	nop
 8006abc:	20013d28 	.word	0x20013d28

08006ac0 <malloc>:
 8006ac0:	4b02      	ldr	r3, [pc, #8]	@ (8006acc <malloc+0xc>)
 8006ac2:	4601      	mov	r1, r0
 8006ac4:	6818      	ldr	r0, [r3, #0]
 8006ac6:	f000 b825 	b.w	8006b14 <_malloc_r>
 8006aca:	bf00      	nop
 8006acc:	2000003c 	.word	0x2000003c

08006ad0 <sbrk_aligned>:
 8006ad0:	b570      	push	{r4, r5, r6, lr}
 8006ad2:	4e0f      	ldr	r6, [pc, #60]	@ (8006b10 <sbrk_aligned+0x40>)
 8006ad4:	460c      	mov	r4, r1
 8006ad6:	6831      	ldr	r1, [r6, #0]
 8006ad8:	4605      	mov	r5, r0
 8006ada:	b911      	cbnz	r1, 8006ae2 <sbrk_aligned+0x12>
 8006adc:	f000 fe38 	bl	8007750 <_sbrk_r>
 8006ae0:	6030      	str	r0, [r6, #0]
 8006ae2:	4621      	mov	r1, r4
 8006ae4:	4628      	mov	r0, r5
 8006ae6:	f000 fe33 	bl	8007750 <_sbrk_r>
 8006aea:	1c43      	adds	r3, r0, #1
 8006aec:	d103      	bne.n	8006af6 <sbrk_aligned+0x26>
 8006aee:	f04f 34ff 	mov.w	r4, #4294967295
 8006af2:	4620      	mov	r0, r4
 8006af4:	bd70      	pop	{r4, r5, r6, pc}
 8006af6:	1cc4      	adds	r4, r0, #3
 8006af8:	f024 0403 	bic.w	r4, r4, #3
 8006afc:	42a0      	cmp	r0, r4
 8006afe:	d0f8      	beq.n	8006af2 <sbrk_aligned+0x22>
 8006b00:	1a21      	subs	r1, r4, r0
 8006b02:	4628      	mov	r0, r5
 8006b04:	f000 fe24 	bl	8007750 <_sbrk_r>
 8006b08:	3001      	adds	r0, #1
 8006b0a:	d1f2      	bne.n	8006af2 <sbrk_aligned+0x22>
 8006b0c:	e7ef      	b.n	8006aee <sbrk_aligned+0x1e>
 8006b0e:	bf00      	nop
 8006b10:	20013d24 	.word	0x20013d24

08006b14 <_malloc_r>:
 8006b14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b18:	1ccd      	adds	r5, r1, #3
 8006b1a:	f025 0503 	bic.w	r5, r5, #3
 8006b1e:	3508      	adds	r5, #8
 8006b20:	2d0c      	cmp	r5, #12
 8006b22:	bf38      	it	cc
 8006b24:	250c      	movcc	r5, #12
 8006b26:	2d00      	cmp	r5, #0
 8006b28:	4606      	mov	r6, r0
 8006b2a:	db01      	blt.n	8006b30 <_malloc_r+0x1c>
 8006b2c:	42a9      	cmp	r1, r5
 8006b2e:	d904      	bls.n	8006b3a <_malloc_r+0x26>
 8006b30:	230c      	movs	r3, #12
 8006b32:	6033      	str	r3, [r6, #0]
 8006b34:	2000      	movs	r0, #0
 8006b36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006b3a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006c10 <_malloc_r+0xfc>
 8006b3e:	f000 f869 	bl	8006c14 <__malloc_lock>
 8006b42:	f8d8 3000 	ldr.w	r3, [r8]
 8006b46:	461c      	mov	r4, r3
 8006b48:	bb44      	cbnz	r4, 8006b9c <_malloc_r+0x88>
 8006b4a:	4629      	mov	r1, r5
 8006b4c:	4630      	mov	r0, r6
 8006b4e:	f7ff ffbf 	bl	8006ad0 <sbrk_aligned>
 8006b52:	1c43      	adds	r3, r0, #1
 8006b54:	4604      	mov	r4, r0
 8006b56:	d158      	bne.n	8006c0a <_malloc_r+0xf6>
 8006b58:	f8d8 4000 	ldr.w	r4, [r8]
 8006b5c:	4627      	mov	r7, r4
 8006b5e:	2f00      	cmp	r7, #0
 8006b60:	d143      	bne.n	8006bea <_malloc_r+0xd6>
 8006b62:	2c00      	cmp	r4, #0
 8006b64:	d04b      	beq.n	8006bfe <_malloc_r+0xea>
 8006b66:	6823      	ldr	r3, [r4, #0]
 8006b68:	4639      	mov	r1, r7
 8006b6a:	4630      	mov	r0, r6
 8006b6c:	eb04 0903 	add.w	r9, r4, r3
 8006b70:	f000 fdee 	bl	8007750 <_sbrk_r>
 8006b74:	4581      	cmp	r9, r0
 8006b76:	d142      	bne.n	8006bfe <_malloc_r+0xea>
 8006b78:	6821      	ldr	r1, [r4, #0]
 8006b7a:	1a6d      	subs	r5, r5, r1
 8006b7c:	4629      	mov	r1, r5
 8006b7e:	4630      	mov	r0, r6
 8006b80:	f7ff ffa6 	bl	8006ad0 <sbrk_aligned>
 8006b84:	3001      	adds	r0, #1
 8006b86:	d03a      	beq.n	8006bfe <_malloc_r+0xea>
 8006b88:	6823      	ldr	r3, [r4, #0]
 8006b8a:	442b      	add	r3, r5
 8006b8c:	6023      	str	r3, [r4, #0]
 8006b8e:	f8d8 3000 	ldr.w	r3, [r8]
 8006b92:	685a      	ldr	r2, [r3, #4]
 8006b94:	bb62      	cbnz	r2, 8006bf0 <_malloc_r+0xdc>
 8006b96:	f8c8 7000 	str.w	r7, [r8]
 8006b9a:	e00f      	b.n	8006bbc <_malloc_r+0xa8>
 8006b9c:	6822      	ldr	r2, [r4, #0]
 8006b9e:	1b52      	subs	r2, r2, r5
 8006ba0:	d420      	bmi.n	8006be4 <_malloc_r+0xd0>
 8006ba2:	2a0b      	cmp	r2, #11
 8006ba4:	d917      	bls.n	8006bd6 <_malloc_r+0xc2>
 8006ba6:	1961      	adds	r1, r4, r5
 8006ba8:	42a3      	cmp	r3, r4
 8006baa:	6025      	str	r5, [r4, #0]
 8006bac:	bf18      	it	ne
 8006bae:	6059      	strne	r1, [r3, #4]
 8006bb0:	6863      	ldr	r3, [r4, #4]
 8006bb2:	bf08      	it	eq
 8006bb4:	f8c8 1000 	streq.w	r1, [r8]
 8006bb8:	5162      	str	r2, [r4, r5]
 8006bba:	604b      	str	r3, [r1, #4]
 8006bbc:	4630      	mov	r0, r6
 8006bbe:	f000 f82f 	bl	8006c20 <__malloc_unlock>
 8006bc2:	f104 000b 	add.w	r0, r4, #11
 8006bc6:	1d23      	adds	r3, r4, #4
 8006bc8:	f020 0007 	bic.w	r0, r0, #7
 8006bcc:	1ac2      	subs	r2, r0, r3
 8006bce:	bf1c      	itt	ne
 8006bd0:	1a1b      	subne	r3, r3, r0
 8006bd2:	50a3      	strne	r3, [r4, r2]
 8006bd4:	e7af      	b.n	8006b36 <_malloc_r+0x22>
 8006bd6:	6862      	ldr	r2, [r4, #4]
 8006bd8:	42a3      	cmp	r3, r4
 8006bda:	bf0c      	ite	eq
 8006bdc:	f8c8 2000 	streq.w	r2, [r8]
 8006be0:	605a      	strne	r2, [r3, #4]
 8006be2:	e7eb      	b.n	8006bbc <_malloc_r+0xa8>
 8006be4:	4623      	mov	r3, r4
 8006be6:	6864      	ldr	r4, [r4, #4]
 8006be8:	e7ae      	b.n	8006b48 <_malloc_r+0x34>
 8006bea:	463c      	mov	r4, r7
 8006bec:	687f      	ldr	r7, [r7, #4]
 8006bee:	e7b6      	b.n	8006b5e <_malloc_r+0x4a>
 8006bf0:	461a      	mov	r2, r3
 8006bf2:	685b      	ldr	r3, [r3, #4]
 8006bf4:	42a3      	cmp	r3, r4
 8006bf6:	d1fb      	bne.n	8006bf0 <_malloc_r+0xdc>
 8006bf8:	2300      	movs	r3, #0
 8006bfa:	6053      	str	r3, [r2, #4]
 8006bfc:	e7de      	b.n	8006bbc <_malloc_r+0xa8>
 8006bfe:	230c      	movs	r3, #12
 8006c00:	6033      	str	r3, [r6, #0]
 8006c02:	4630      	mov	r0, r6
 8006c04:	f000 f80c 	bl	8006c20 <__malloc_unlock>
 8006c08:	e794      	b.n	8006b34 <_malloc_r+0x20>
 8006c0a:	6005      	str	r5, [r0, #0]
 8006c0c:	e7d6      	b.n	8006bbc <_malloc_r+0xa8>
 8006c0e:	bf00      	nop
 8006c10:	20013d28 	.word	0x20013d28

08006c14 <__malloc_lock>:
 8006c14:	4801      	ldr	r0, [pc, #4]	@ (8006c1c <__malloc_lock+0x8>)
 8006c16:	f7ff bee8 	b.w	80069ea <__retarget_lock_acquire_recursive>
 8006c1a:	bf00      	nop
 8006c1c:	20013d20 	.word	0x20013d20

08006c20 <__malloc_unlock>:
 8006c20:	4801      	ldr	r0, [pc, #4]	@ (8006c28 <__malloc_unlock+0x8>)
 8006c22:	f7ff bee3 	b.w	80069ec <__retarget_lock_release_recursive>
 8006c26:	bf00      	nop
 8006c28:	20013d20 	.word	0x20013d20

08006c2c <__ssputs_r>:
 8006c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006c30:	688e      	ldr	r6, [r1, #8]
 8006c32:	461f      	mov	r7, r3
 8006c34:	42be      	cmp	r6, r7
 8006c36:	680b      	ldr	r3, [r1, #0]
 8006c38:	4682      	mov	sl, r0
 8006c3a:	460c      	mov	r4, r1
 8006c3c:	4690      	mov	r8, r2
 8006c3e:	d82d      	bhi.n	8006c9c <__ssputs_r+0x70>
 8006c40:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006c44:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006c48:	d026      	beq.n	8006c98 <__ssputs_r+0x6c>
 8006c4a:	6965      	ldr	r5, [r4, #20]
 8006c4c:	6909      	ldr	r1, [r1, #16]
 8006c4e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006c52:	eba3 0901 	sub.w	r9, r3, r1
 8006c56:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006c5a:	1c7b      	adds	r3, r7, #1
 8006c5c:	444b      	add	r3, r9
 8006c5e:	106d      	asrs	r5, r5, #1
 8006c60:	429d      	cmp	r5, r3
 8006c62:	bf38      	it	cc
 8006c64:	461d      	movcc	r5, r3
 8006c66:	0553      	lsls	r3, r2, #21
 8006c68:	d527      	bpl.n	8006cba <__ssputs_r+0x8e>
 8006c6a:	4629      	mov	r1, r5
 8006c6c:	f7ff ff52 	bl	8006b14 <_malloc_r>
 8006c70:	4606      	mov	r6, r0
 8006c72:	b360      	cbz	r0, 8006cce <__ssputs_r+0xa2>
 8006c74:	6921      	ldr	r1, [r4, #16]
 8006c76:	464a      	mov	r2, r9
 8006c78:	f000 fd7a 	bl	8007770 <memcpy>
 8006c7c:	89a3      	ldrh	r3, [r4, #12]
 8006c7e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006c82:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006c86:	81a3      	strh	r3, [r4, #12]
 8006c88:	6126      	str	r6, [r4, #16]
 8006c8a:	6165      	str	r5, [r4, #20]
 8006c8c:	444e      	add	r6, r9
 8006c8e:	eba5 0509 	sub.w	r5, r5, r9
 8006c92:	6026      	str	r6, [r4, #0]
 8006c94:	60a5      	str	r5, [r4, #8]
 8006c96:	463e      	mov	r6, r7
 8006c98:	42be      	cmp	r6, r7
 8006c9a:	d900      	bls.n	8006c9e <__ssputs_r+0x72>
 8006c9c:	463e      	mov	r6, r7
 8006c9e:	6820      	ldr	r0, [r4, #0]
 8006ca0:	4632      	mov	r2, r6
 8006ca2:	4641      	mov	r1, r8
 8006ca4:	f000 fd3a 	bl	800771c <memmove>
 8006ca8:	68a3      	ldr	r3, [r4, #8]
 8006caa:	1b9b      	subs	r3, r3, r6
 8006cac:	60a3      	str	r3, [r4, #8]
 8006cae:	6823      	ldr	r3, [r4, #0]
 8006cb0:	4433      	add	r3, r6
 8006cb2:	6023      	str	r3, [r4, #0]
 8006cb4:	2000      	movs	r0, #0
 8006cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006cba:	462a      	mov	r2, r5
 8006cbc:	f000 fd6d 	bl	800779a <_realloc_r>
 8006cc0:	4606      	mov	r6, r0
 8006cc2:	2800      	cmp	r0, #0
 8006cc4:	d1e0      	bne.n	8006c88 <__ssputs_r+0x5c>
 8006cc6:	6921      	ldr	r1, [r4, #16]
 8006cc8:	4650      	mov	r0, sl
 8006cca:	f7ff feaf 	bl	8006a2c <_free_r>
 8006cce:	230c      	movs	r3, #12
 8006cd0:	f8ca 3000 	str.w	r3, [sl]
 8006cd4:	89a3      	ldrh	r3, [r4, #12]
 8006cd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006cda:	81a3      	strh	r3, [r4, #12]
 8006cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8006ce0:	e7e9      	b.n	8006cb6 <__ssputs_r+0x8a>
	...

08006ce4 <_svfiprintf_r>:
 8006ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ce8:	4698      	mov	r8, r3
 8006cea:	898b      	ldrh	r3, [r1, #12]
 8006cec:	061b      	lsls	r3, r3, #24
 8006cee:	b09d      	sub	sp, #116	@ 0x74
 8006cf0:	4607      	mov	r7, r0
 8006cf2:	460d      	mov	r5, r1
 8006cf4:	4614      	mov	r4, r2
 8006cf6:	d510      	bpl.n	8006d1a <_svfiprintf_r+0x36>
 8006cf8:	690b      	ldr	r3, [r1, #16]
 8006cfa:	b973      	cbnz	r3, 8006d1a <_svfiprintf_r+0x36>
 8006cfc:	2140      	movs	r1, #64	@ 0x40
 8006cfe:	f7ff ff09 	bl	8006b14 <_malloc_r>
 8006d02:	6028      	str	r0, [r5, #0]
 8006d04:	6128      	str	r0, [r5, #16]
 8006d06:	b930      	cbnz	r0, 8006d16 <_svfiprintf_r+0x32>
 8006d08:	230c      	movs	r3, #12
 8006d0a:	603b      	str	r3, [r7, #0]
 8006d0c:	f04f 30ff 	mov.w	r0, #4294967295
 8006d10:	b01d      	add	sp, #116	@ 0x74
 8006d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d16:	2340      	movs	r3, #64	@ 0x40
 8006d18:	616b      	str	r3, [r5, #20]
 8006d1a:	2300      	movs	r3, #0
 8006d1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006d1e:	2320      	movs	r3, #32
 8006d20:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006d24:	f8cd 800c 	str.w	r8, [sp, #12]
 8006d28:	2330      	movs	r3, #48	@ 0x30
 8006d2a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8006ec8 <_svfiprintf_r+0x1e4>
 8006d2e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006d32:	f04f 0901 	mov.w	r9, #1
 8006d36:	4623      	mov	r3, r4
 8006d38:	469a      	mov	sl, r3
 8006d3a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006d3e:	b10a      	cbz	r2, 8006d44 <_svfiprintf_r+0x60>
 8006d40:	2a25      	cmp	r2, #37	@ 0x25
 8006d42:	d1f9      	bne.n	8006d38 <_svfiprintf_r+0x54>
 8006d44:	ebba 0b04 	subs.w	fp, sl, r4
 8006d48:	d00b      	beq.n	8006d62 <_svfiprintf_r+0x7e>
 8006d4a:	465b      	mov	r3, fp
 8006d4c:	4622      	mov	r2, r4
 8006d4e:	4629      	mov	r1, r5
 8006d50:	4638      	mov	r0, r7
 8006d52:	f7ff ff6b 	bl	8006c2c <__ssputs_r>
 8006d56:	3001      	adds	r0, #1
 8006d58:	f000 80a7 	beq.w	8006eaa <_svfiprintf_r+0x1c6>
 8006d5c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006d5e:	445a      	add	r2, fp
 8006d60:	9209      	str	r2, [sp, #36]	@ 0x24
 8006d62:	f89a 3000 	ldrb.w	r3, [sl]
 8006d66:	2b00      	cmp	r3, #0
 8006d68:	f000 809f 	beq.w	8006eaa <_svfiprintf_r+0x1c6>
 8006d6c:	2300      	movs	r3, #0
 8006d6e:	f04f 32ff 	mov.w	r2, #4294967295
 8006d72:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006d76:	f10a 0a01 	add.w	sl, sl, #1
 8006d7a:	9304      	str	r3, [sp, #16]
 8006d7c:	9307      	str	r3, [sp, #28]
 8006d7e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006d82:	931a      	str	r3, [sp, #104]	@ 0x68
 8006d84:	4654      	mov	r4, sl
 8006d86:	2205      	movs	r2, #5
 8006d88:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006d8c:	484e      	ldr	r0, [pc, #312]	@ (8006ec8 <_svfiprintf_r+0x1e4>)
 8006d8e:	f7f9 fa2f 	bl	80001f0 <memchr>
 8006d92:	9a04      	ldr	r2, [sp, #16]
 8006d94:	b9d8      	cbnz	r0, 8006dce <_svfiprintf_r+0xea>
 8006d96:	06d0      	lsls	r0, r2, #27
 8006d98:	bf44      	itt	mi
 8006d9a:	2320      	movmi	r3, #32
 8006d9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006da0:	0711      	lsls	r1, r2, #28
 8006da2:	bf44      	itt	mi
 8006da4:	232b      	movmi	r3, #43	@ 0x2b
 8006da6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006daa:	f89a 3000 	ldrb.w	r3, [sl]
 8006dae:	2b2a      	cmp	r3, #42	@ 0x2a
 8006db0:	d015      	beq.n	8006dde <_svfiprintf_r+0xfa>
 8006db2:	9a07      	ldr	r2, [sp, #28]
 8006db4:	4654      	mov	r4, sl
 8006db6:	2000      	movs	r0, #0
 8006db8:	f04f 0c0a 	mov.w	ip, #10
 8006dbc:	4621      	mov	r1, r4
 8006dbe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006dc2:	3b30      	subs	r3, #48	@ 0x30
 8006dc4:	2b09      	cmp	r3, #9
 8006dc6:	d94b      	bls.n	8006e60 <_svfiprintf_r+0x17c>
 8006dc8:	b1b0      	cbz	r0, 8006df8 <_svfiprintf_r+0x114>
 8006dca:	9207      	str	r2, [sp, #28]
 8006dcc:	e014      	b.n	8006df8 <_svfiprintf_r+0x114>
 8006dce:	eba0 0308 	sub.w	r3, r0, r8
 8006dd2:	fa09 f303 	lsl.w	r3, r9, r3
 8006dd6:	4313      	orrs	r3, r2
 8006dd8:	9304      	str	r3, [sp, #16]
 8006dda:	46a2      	mov	sl, r4
 8006ddc:	e7d2      	b.n	8006d84 <_svfiprintf_r+0xa0>
 8006dde:	9b03      	ldr	r3, [sp, #12]
 8006de0:	1d19      	adds	r1, r3, #4
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	9103      	str	r1, [sp, #12]
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	bfbb      	ittet	lt
 8006dea:	425b      	neglt	r3, r3
 8006dec:	f042 0202 	orrlt.w	r2, r2, #2
 8006df0:	9307      	strge	r3, [sp, #28]
 8006df2:	9307      	strlt	r3, [sp, #28]
 8006df4:	bfb8      	it	lt
 8006df6:	9204      	strlt	r2, [sp, #16]
 8006df8:	7823      	ldrb	r3, [r4, #0]
 8006dfa:	2b2e      	cmp	r3, #46	@ 0x2e
 8006dfc:	d10a      	bne.n	8006e14 <_svfiprintf_r+0x130>
 8006dfe:	7863      	ldrb	r3, [r4, #1]
 8006e00:	2b2a      	cmp	r3, #42	@ 0x2a
 8006e02:	d132      	bne.n	8006e6a <_svfiprintf_r+0x186>
 8006e04:	9b03      	ldr	r3, [sp, #12]
 8006e06:	1d1a      	adds	r2, r3, #4
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	9203      	str	r2, [sp, #12]
 8006e0c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006e10:	3402      	adds	r4, #2
 8006e12:	9305      	str	r3, [sp, #20]
 8006e14:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8006ed8 <_svfiprintf_r+0x1f4>
 8006e18:	7821      	ldrb	r1, [r4, #0]
 8006e1a:	2203      	movs	r2, #3
 8006e1c:	4650      	mov	r0, sl
 8006e1e:	f7f9 f9e7 	bl	80001f0 <memchr>
 8006e22:	b138      	cbz	r0, 8006e34 <_svfiprintf_r+0x150>
 8006e24:	9b04      	ldr	r3, [sp, #16]
 8006e26:	eba0 000a 	sub.w	r0, r0, sl
 8006e2a:	2240      	movs	r2, #64	@ 0x40
 8006e2c:	4082      	lsls	r2, r0
 8006e2e:	4313      	orrs	r3, r2
 8006e30:	3401      	adds	r4, #1
 8006e32:	9304      	str	r3, [sp, #16]
 8006e34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006e38:	4824      	ldr	r0, [pc, #144]	@ (8006ecc <_svfiprintf_r+0x1e8>)
 8006e3a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006e3e:	2206      	movs	r2, #6
 8006e40:	f7f9 f9d6 	bl	80001f0 <memchr>
 8006e44:	2800      	cmp	r0, #0
 8006e46:	d036      	beq.n	8006eb6 <_svfiprintf_r+0x1d2>
 8006e48:	4b21      	ldr	r3, [pc, #132]	@ (8006ed0 <_svfiprintf_r+0x1ec>)
 8006e4a:	bb1b      	cbnz	r3, 8006e94 <_svfiprintf_r+0x1b0>
 8006e4c:	9b03      	ldr	r3, [sp, #12]
 8006e4e:	3307      	adds	r3, #7
 8006e50:	f023 0307 	bic.w	r3, r3, #7
 8006e54:	3308      	adds	r3, #8
 8006e56:	9303      	str	r3, [sp, #12]
 8006e58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e5a:	4433      	add	r3, r6
 8006e5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e5e:	e76a      	b.n	8006d36 <_svfiprintf_r+0x52>
 8006e60:	fb0c 3202 	mla	r2, ip, r2, r3
 8006e64:	460c      	mov	r4, r1
 8006e66:	2001      	movs	r0, #1
 8006e68:	e7a8      	b.n	8006dbc <_svfiprintf_r+0xd8>
 8006e6a:	2300      	movs	r3, #0
 8006e6c:	3401      	adds	r4, #1
 8006e6e:	9305      	str	r3, [sp, #20]
 8006e70:	4619      	mov	r1, r3
 8006e72:	f04f 0c0a 	mov.w	ip, #10
 8006e76:	4620      	mov	r0, r4
 8006e78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006e7c:	3a30      	subs	r2, #48	@ 0x30
 8006e7e:	2a09      	cmp	r2, #9
 8006e80:	d903      	bls.n	8006e8a <_svfiprintf_r+0x1a6>
 8006e82:	2b00      	cmp	r3, #0
 8006e84:	d0c6      	beq.n	8006e14 <_svfiprintf_r+0x130>
 8006e86:	9105      	str	r1, [sp, #20]
 8006e88:	e7c4      	b.n	8006e14 <_svfiprintf_r+0x130>
 8006e8a:	fb0c 2101 	mla	r1, ip, r1, r2
 8006e8e:	4604      	mov	r4, r0
 8006e90:	2301      	movs	r3, #1
 8006e92:	e7f0      	b.n	8006e76 <_svfiprintf_r+0x192>
 8006e94:	ab03      	add	r3, sp, #12
 8006e96:	9300      	str	r3, [sp, #0]
 8006e98:	462a      	mov	r2, r5
 8006e9a:	4b0e      	ldr	r3, [pc, #56]	@ (8006ed4 <_svfiprintf_r+0x1f0>)
 8006e9c:	a904      	add	r1, sp, #16
 8006e9e:	4638      	mov	r0, r7
 8006ea0:	f3af 8000 	nop.w
 8006ea4:	1c42      	adds	r2, r0, #1
 8006ea6:	4606      	mov	r6, r0
 8006ea8:	d1d6      	bne.n	8006e58 <_svfiprintf_r+0x174>
 8006eaa:	89ab      	ldrh	r3, [r5, #12]
 8006eac:	065b      	lsls	r3, r3, #25
 8006eae:	f53f af2d 	bmi.w	8006d0c <_svfiprintf_r+0x28>
 8006eb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006eb4:	e72c      	b.n	8006d10 <_svfiprintf_r+0x2c>
 8006eb6:	ab03      	add	r3, sp, #12
 8006eb8:	9300      	str	r3, [sp, #0]
 8006eba:	462a      	mov	r2, r5
 8006ebc:	4b05      	ldr	r3, [pc, #20]	@ (8006ed4 <_svfiprintf_r+0x1f0>)
 8006ebe:	a904      	add	r1, sp, #16
 8006ec0:	4638      	mov	r0, r7
 8006ec2:	f000 f9bb 	bl	800723c <_printf_i>
 8006ec6:	e7ed      	b.n	8006ea4 <_svfiprintf_r+0x1c0>
 8006ec8:	08007bbe 	.word	0x08007bbe
 8006ecc:	08007bc8 	.word	0x08007bc8
 8006ed0:	00000000 	.word	0x00000000
 8006ed4:	08006c2d 	.word	0x08006c2d
 8006ed8:	08007bc4 	.word	0x08007bc4

08006edc <__sfputc_r>:
 8006edc:	6893      	ldr	r3, [r2, #8]
 8006ede:	3b01      	subs	r3, #1
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	b410      	push	{r4}
 8006ee4:	6093      	str	r3, [r2, #8]
 8006ee6:	da08      	bge.n	8006efa <__sfputc_r+0x1e>
 8006ee8:	6994      	ldr	r4, [r2, #24]
 8006eea:	42a3      	cmp	r3, r4
 8006eec:	db01      	blt.n	8006ef2 <__sfputc_r+0x16>
 8006eee:	290a      	cmp	r1, #10
 8006ef0:	d103      	bne.n	8006efa <__sfputc_r+0x1e>
 8006ef2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006ef6:	f000 bb7d 	b.w	80075f4 <__swbuf_r>
 8006efa:	6813      	ldr	r3, [r2, #0]
 8006efc:	1c58      	adds	r0, r3, #1
 8006efe:	6010      	str	r0, [r2, #0]
 8006f00:	7019      	strb	r1, [r3, #0]
 8006f02:	4608      	mov	r0, r1
 8006f04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006f08:	4770      	bx	lr

08006f0a <__sfputs_r>:
 8006f0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f0c:	4606      	mov	r6, r0
 8006f0e:	460f      	mov	r7, r1
 8006f10:	4614      	mov	r4, r2
 8006f12:	18d5      	adds	r5, r2, r3
 8006f14:	42ac      	cmp	r4, r5
 8006f16:	d101      	bne.n	8006f1c <__sfputs_r+0x12>
 8006f18:	2000      	movs	r0, #0
 8006f1a:	e007      	b.n	8006f2c <__sfputs_r+0x22>
 8006f1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006f20:	463a      	mov	r2, r7
 8006f22:	4630      	mov	r0, r6
 8006f24:	f7ff ffda 	bl	8006edc <__sfputc_r>
 8006f28:	1c43      	adds	r3, r0, #1
 8006f2a:	d1f3      	bne.n	8006f14 <__sfputs_r+0xa>
 8006f2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006f30 <_vfiprintf_r>:
 8006f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f34:	460d      	mov	r5, r1
 8006f36:	b09d      	sub	sp, #116	@ 0x74
 8006f38:	4614      	mov	r4, r2
 8006f3a:	4698      	mov	r8, r3
 8006f3c:	4606      	mov	r6, r0
 8006f3e:	b118      	cbz	r0, 8006f48 <_vfiprintf_r+0x18>
 8006f40:	6a03      	ldr	r3, [r0, #32]
 8006f42:	b90b      	cbnz	r3, 8006f48 <_vfiprintf_r+0x18>
 8006f44:	f7ff fbba 	bl	80066bc <__sinit>
 8006f48:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006f4a:	07d9      	lsls	r1, r3, #31
 8006f4c:	d405      	bmi.n	8006f5a <_vfiprintf_r+0x2a>
 8006f4e:	89ab      	ldrh	r3, [r5, #12]
 8006f50:	059a      	lsls	r2, r3, #22
 8006f52:	d402      	bmi.n	8006f5a <_vfiprintf_r+0x2a>
 8006f54:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006f56:	f7ff fd48 	bl	80069ea <__retarget_lock_acquire_recursive>
 8006f5a:	89ab      	ldrh	r3, [r5, #12]
 8006f5c:	071b      	lsls	r3, r3, #28
 8006f5e:	d501      	bpl.n	8006f64 <_vfiprintf_r+0x34>
 8006f60:	692b      	ldr	r3, [r5, #16]
 8006f62:	b99b      	cbnz	r3, 8006f8c <_vfiprintf_r+0x5c>
 8006f64:	4629      	mov	r1, r5
 8006f66:	4630      	mov	r0, r6
 8006f68:	f000 fb82 	bl	8007670 <__swsetup_r>
 8006f6c:	b170      	cbz	r0, 8006f8c <_vfiprintf_r+0x5c>
 8006f6e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006f70:	07dc      	lsls	r4, r3, #31
 8006f72:	d504      	bpl.n	8006f7e <_vfiprintf_r+0x4e>
 8006f74:	f04f 30ff 	mov.w	r0, #4294967295
 8006f78:	b01d      	add	sp, #116	@ 0x74
 8006f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f7e:	89ab      	ldrh	r3, [r5, #12]
 8006f80:	0598      	lsls	r0, r3, #22
 8006f82:	d4f7      	bmi.n	8006f74 <_vfiprintf_r+0x44>
 8006f84:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006f86:	f7ff fd31 	bl	80069ec <__retarget_lock_release_recursive>
 8006f8a:	e7f3      	b.n	8006f74 <_vfiprintf_r+0x44>
 8006f8c:	2300      	movs	r3, #0
 8006f8e:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f90:	2320      	movs	r3, #32
 8006f92:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006f96:	f8cd 800c 	str.w	r8, [sp, #12]
 8006f9a:	2330      	movs	r3, #48	@ 0x30
 8006f9c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800714c <_vfiprintf_r+0x21c>
 8006fa0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006fa4:	f04f 0901 	mov.w	r9, #1
 8006fa8:	4623      	mov	r3, r4
 8006faa:	469a      	mov	sl, r3
 8006fac:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006fb0:	b10a      	cbz	r2, 8006fb6 <_vfiprintf_r+0x86>
 8006fb2:	2a25      	cmp	r2, #37	@ 0x25
 8006fb4:	d1f9      	bne.n	8006faa <_vfiprintf_r+0x7a>
 8006fb6:	ebba 0b04 	subs.w	fp, sl, r4
 8006fba:	d00b      	beq.n	8006fd4 <_vfiprintf_r+0xa4>
 8006fbc:	465b      	mov	r3, fp
 8006fbe:	4622      	mov	r2, r4
 8006fc0:	4629      	mov	r1, r5
 8006fc2:	4630      	mov	r0, r6
 8006fc4:	f7ff ffa1 	bl	8006f0a <__sfputs_r>
 8006fc8:	3001      	adds	r0, #1
 8006fca:	f000 80a7 	beq.w	800711c <_vfiprintf_r+0x1ec>
 8006fce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006fd0:	445a      	add	r2, fp
 8006fd2:	9209      	str	r2, [sp, #36]	@ 0x24
 8006fd4:	f89a 3000 	ldrb.w	r3, [sl]
 8006fd8:	2b00      	cmp	r3, #0
 8006fda:	f000 809f 	beq.w	800711c <_vfiprintf_r+0x1ec>
 8006fde:	2300      	movs	r3, #0
 8006fe0:	f04f 32ff 	mov.w	r2, #4294967295
 8006fe4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006fe8:	f10a 0a01 	add.w	sl, sl, #1
 8006fec:	9304      	str	r3, [sp, #16]
 8006fee:	9307      	str	r3, [sp, #28]
 8006ff0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006ff4:	931a      	str	r3, [sp, #104]	@ 0x68
 8006ff6:	4654      	mov	r4, sl
 8006ff8:	2205      	movs	r2, #5
 8006ffa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006ffe:	4853      	ldr	r0, [pc, #332]	@ (800714c <_vfiprintf_r+0x21c>)
 8007000:	f7f9 f8f6 	bl	80001f0 <memchr>
 8007004:	9a04      	ldr	r2, [sp, #16]
 8007006:	b9d8      	cbnz	r0, 8007040 <_vfiprintf_r+0x110>
 8007008:	06d1      	lsls	r1, r2, #27
 800700a:	bf44      	itt	mi
 800700c:	2320      	movmi	r3, #32
 800700e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007012:	0713      	lsls	r3, r2, #28
 8007014:	bf44      	itt	mi
 8007016:	232b      	movmi	r3, #43	@ 0x2b
 8007018:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800701c:	f89a 3000 	ldrb.w	r3, [sl]
 8007020:	2b2a      	cmp	r3, #42	@ 0x2a
 8007022:	d015      	beq.n	8007050 <_vfiprintf_r+0x120>
 8007024:	9a07      	ldr	r2, [sp, #28]
 8007026:	4654      	mov	r4, sl
 8007028:	2000      	movs	r0, #0
 800702a:	f04f 0c0a 	mov.w	ip, #10
 800702e:	4621      	mov	r1, r4
 8007030:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007034:	3b30      	subs	r3, #48	@ 0x30
 8007036:	2b09      	cmp	r3, #9
 8007038:	d94b      	bls.n	80070d2 <_vfiprintf_r+0x1a2>
 800703a:	b1b0      	cbz	r0, 800706a <_vfiprintf_r+0x13a>
 800703c:	9207      	str	r2, [sp, #28]
 800703e:	e014      	b.n	800706a <_vfiprintf_r+0x13a>
 8007040:	eba0 0308 	sub.w	r3, r0, r8
 8007044:	fa09 f303 	lsl.w	r3, r9, r3
 8007048:	4313      	orrs	r3, r2
 800704a:	9304      	str	r3, [sp, #16]
 800704c:	46a2      	mov	sl, r4
 800704e:	e7d2      	b.n	8006ff6 <_vfiprintf_r+0xc6>
 8007050:	9b03      	ldr	r3, [sp, #12]
 8007052:	1d19      	adds	r1, r3, #4
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	9103      	str	r1, [sp, #12]
 8007058:	2b00      	cmp	r3, #0
 800705a:	bfbb      	ittet	lt
 800705c:	425b      	neglt	r3, r3
 800705e:	f042 0202 	orrlt.w	r2, r2, #2
 8007062:	9307      	strge	r3, [sp, #28]
 8007064:	9307      	strlt	r3, [sp, #28]
 8007066:	bfb8      	it	lt
 8007068:	9204      	strlt	r2, [sp, #16]
 800706a:	7823      	ldrb	r3, [r4, #0]
 800706c:	2b2e      	cmp	r3, #46	@ 0x2e
 800706e:	d10a      	bne.n	8007086 <_vfiprintf_r+0x156>
 8007070:	7863      	ldrb	r3, [r4, #1]
 8007072:	2b2a      	cmp	r3, #42	@ 0x2a
 8007074:	d132      	bne.n	80070dc <_vfiprintf_r+0x1ac>
 8007076:	9b03      	ldr	r3, [sp, #12]
 8007078:	1d1a      	adds	r2, r3, #4
 800707a:	681b      	ldr	r3, [r3, #0]
 800707c:	9203      	str	r2, [sp, #12]
 800707e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007082:	3402      	adds	r4, #2
 8007084:	9305      	str	r3, [sp, #20]
 8007086:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800715c <_vfiprintf_r+0x22c>
 800708a:	7821      	ldrb	r1, [r4, #0]
 800708c:	2203      	movs	r2, #3
 800708e:	4650      	mov	r0, sl
 8007090:	f7f9 f8ae 	bl	80001f0 <memchr>
 8007094:	b138      	cbz	r0, 80070a6 <_vfiprintf_r+0x176>
 8007096:	9b04      	ldr	r3, [sp, #16]
 8007098:	eba0 000a 	sub.w	r0, r0, sl
 800709c:	2240      	movs	r2, #64	@ 0x40
 800709e:	4082      	lsls	r2, r0
 80070a0:	4313      	orrs	r3, r2
 80070a2:	3401      	adds	r4, #1
 80070a4:	9304      	str	r3, [sp, #16]
 80070a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80070aa:	4829      	ldr	r0, [pc, #164]	@ (8007150 <_vfiprintf_r+0x220>)
 80070ac:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80070b0:	2206      	movs	r2, #6
 80070b2:	f7f9 f89d 	bl	80001f0 <memchr>
 80070b6:	2800      	cmp	r0, #0
 80070b8:	d03f      	beq.n	800713a <_vfiprintf_r+0x20a>
 80070ba:	4b26      	ldr	r3, [pc, #152]	@ (8007154 <_vfiprintf_r+0x224>)
 80070bc:	bb1b      	cbnz	r3, 8007106 <_vfiprintf_r+0x1d6>
 80070be:	9b03      	ldr	r3, [sp, #12]
 80070c0:	3307      	adds	r3, #7
 80070c2:	f023 0307 	bic.w	r3, r3, #7
 80070c6:	3308      	adds	r3, #8
 80070c8:	9303      	str	r3, [sp, #12]
 80070ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80070cc:	443b      	add	r3, r7
 80070ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80070d0:	e76a      	b.n	8006fa8 <_vfiprintf_r+0x78>
 80070d2:	fb0c 3202 	mla	r2, ip, r2, r3
 80070d6:	460c      	mov	r4, r1
 80070d8:	2001      	movs	r0, #1
 80070da:	e7a8      	b.n	800702e <_vfiprintf_r+0xfe>
 80070dc:	2300      	movs	r3, #0
 80070de:	3401      	adds	r4, #1
 80070e0:	9305      	str	r3, [sp, #20]
 80070e2:	4619      	mov	r1, r3
 80070e4:	f04f 0c0a 	mov.w	ip, #10
 80070e8:	4620      	mov	r0, r4
 80070ea:	f810 2b01 	ldrb.w	r2, [r0], #1
 80070ee:	3a30      	subs	r2, #48	@ 0x30
 80070f0:	2a09      	cmp	r2, #9
 80070f2:	d903      	bls.n	80070fc <_vfiprintf_r+0x1cc>
 80070f4:	2b00      	cmp	r3, #0
 80070f6:	d0c6      	beq.n	8007086 <_vfiprintf_r+0x156>
 80070f8:	9105      	str	r1, [sp, #20]
 80070fa:	e7c4      	b.n	8007086 <_vfiprintf_r+0x156>
 80070fc:	fb0c 2101 	mla	r1, ip, r1, r2
 8007100:	4604      	mov	r4, r0
 8007102:	2301      	movs	r3, #1
 8007104:	e7f0      	b.n	80070e8 <_vfiprintf_r+0x1b8>
 8007106:	ab03      	add	r3, sp, #12
 8007108:	9300      	str	r3, [sp, #0]
 800710a:	462a      	mov	r2, r5
 800710c:	4b12      	ldr	r3, [pc, #72]	@ (8007158 <_vfiprintf_r+0x228>)
 800710e:	a904      	add	r1, sp, #16
 8007110:	4630      	mov	r0, r6
 8007112:	f3af 8000 	nop.w
 8007116:	4607      	mov	r7, r0
 8007118:	1c78      	adds	r0, r7, #1
 800711a:	d1d6      	bne.n	80070ca <_vfiprintf_r+0x19a>
 800711c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800711e:	07d9      	lsls	r1, r3, #31
 8007120:	d405      	bmi.n	800712e <_vfiprintf_r+0x1fe>
 8007122:	89ab      	ldrh	r3, [r5, #12]
 8007124:	059a      	lsls	r2, r3, #22
 8007126:	d402      	bmi.n	800712e <_vfiprintf_r+0x1fe>
 8007128:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800712a:	f7ff fc5f 	bl	80069ec <__retarget_lock_release_recursive>
 800712e:	89ab      	ldrh	r3, [r5, #12]
 8007130:	065b      	lsls	r3, r3, #25
 8007132:	f53f af1f 	bmi.w	8006f74 <_vfiprintf_r+0x44>
 8007136:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007138:	e71e      	b.n	8006f78 <_vfiprintf_r+0x48>
 800713a:	ab03      	add	r3, sp, #12
 800713c:	9300      	str	r3, [sp, #0]
 800713e:	462a      	mov	r2, r5
 8007140:	4b05      	ldr	r3, [pc, #20]	@ (8007158 <_vfiprintf_r+0x228>)
 8007142:	a904      	add	r1, sp, #16
 8007144:	4630      	mov	r0, r6
 8007146:	f000 f879 	bl	800723c <_printf_i>
 800714a:	e7e4      	b.n	8007116 <_vfiprintf_r+0x1e6>
 800714c:	08007bbe 	.word	0x08007bbe
 8007150:	08007bc8 	.word	0x08007bc8
 8007154:	00000000 	.word	0x00000000
 8007158:	08006f0b 	.word	0x08006f0b
 800715c:	08007bc4 	.word	0x08007bc4

08007160 <_printf_common>:
 8007160:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007164:	4616      	mov	r6, r2
 8007166:	4698      	mov	r8, r3
 8007168:	688a      	ldr	r2, [r1, #8]
 800716a:	690b      	ldr	r3, [r1, #16]
 800716c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007170:	4293      	cmp	r3, r2
 8007172:	bfb8      	it	lt
 8007174:	4613      	movlt	r3, r2
 8007176:	6033      	str	r3, [r6, #0]
 8007178:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800717c:	4607      	mov	r7, r0
 800717e:	460c      	mov	r4, r1
 8007180:	b10a      	cbz	r2, 8007186 <_printf_common+0x26>
 8007182:	3301      	adds	r3, #1
 8007184:	6033      	str	r3, [r6, #0]
 8007186:	6823      	ldr	r3, [r4, #0]
 8007188:	0699      	lsls	r1, r3, #26
 800718a:	bf42      	ittt	mi
 800718c:	6833      	ldrmi	r3, [r6, #0]
 800718e:	3302      	addmi	r3, #2
 8007190:	6033      	strmi	r3, [r6, #0]
 8007192:	6825      	ldr	r5, [r4, #0]
 8007194:	f015 0506 	ands.w	r5, r5, #6
 8007198:	d106      	bne.n	80071a8 <_printf_common+0x48>
 800719a:	f104 0a19 	add.w	sl, r4, #25
 800719e:	68e3      	ldr	r3, [r4, #12]
 80071a0:	6832      	ldr	r2, [r6, #0]
 80071a2:	1a9b      	subs	r3, r3, r2
 80071a4:	42ab      	cmp	r3, r5
 80071a6:	dc26      	bgt.n	80071f6 <_printf_common+0x96>
 80071a8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80071ac:	6822      	ldr	r2, [r4, #0]
 80071ae:	3b00      	subs	r3, #0
 80071b0:	bf18      	it	ne
 80071b2:	2301      	movne	r3, #1
 80071b4:	0692      	lsls	r2, r2, #26
 80071b6:	d42b      	bmi.n	8007210 <_printf_common+0xb0>
 80071b8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80071bc:	4641      	mov	r1, r8
 80071be:	4638      	mov	r0, r7
 80071c0:	47c8      	blx	r9
 80071c2:	3001      	adds	r0, #1
 80071c4:	d01e      	beq.n	8007204 <_printf_common+0xa4>
 80071c6:	6823      	ldr	r3, [r4, #0]
 80071c8:	6922      	ldr	r2, [r4, #16]
 80071ca:	f003 0306 	and.w	r3, r3, #6
 80071ce:	2b04      	cmp	r3, #4
 80071d0:	bf02      	ittt	eq
 80071d2:	68e5      	ldreq	r5, [r4, #12]
 80071d4:	6833      	ldreq	r3, [r6, #0]
 80071d6:	1aed      	subeq	r5, r5, r3
 80071d8:	68a3      	ldr	r3, [r4, #8]
 80071da:	bf0c      	ite	eq
 80071dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80071e0:	2500      	movne	r5, #0
 80071e2:	4293      	cmp	r3, r2
 80071e4:	bfc4      	itt	gt
 80071e6:	1a9b      	subgt	r3, r3, r2
 80071e8:	18ed      	addgt	r5, r5, r3
 80071ea:	2600      	movs	r6, #0
 80071ec:	341a      	adds	r4, #26
 80071ee:	42b5      	cmp	r5, r6
 80071f0:	d11a      	bne.n	8007228 <_printf_common+0xc8>
 80071f2:	2000      	movs	r0, #0
 80071f4:	e008      	b.n	8007208 <_printf_common+0xa8>
 80071f6:	2301      	movs	r3, #1
 80071f8:	4652      	mov	r2, sl
 80071fa:	4641      	mov	r1, r8
 80071fc:	4638      	mov	r0, r7
 80071fe:	47c8      	blx	r9
 8007200:	3001      	adds	r0, #1
 8007202:	d103      	bne.n	800720c <_printf_common+0xac>
 8007204:	f04f 30ff 	mov.w	r0, #4294967295
 8007208:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800720c:	3501      	adds	r5, #1
 800720e:	e7c6      	b.n	800719e <_printf_common+0x3e>
 8007210:	18e1      	adds	r1, r4, r3
 8007212:	1c5a      	adds	r2, r3, #1
 8007214:	2030      	movs	r0, #48	@ 0x30
 8007216:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800721a:	4422      	add	r2, r4
 800721c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007220:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007224:	3302      	adds	r3, #2
 8007226:	e7c7      	b.n	80071b8 <_printf_common+0x58>
 8007228:	2301      	movs	r3, #1
 800722a:	4622      	mov	r2, r4
 800722c:	4641      	mov	r1, r8
 800722e:	4638      	mov	r0, r7
 8007230:	47c8      	blx	r9
 8007232:	3001      	adds	r0, #1
 8007234:	d0e6      	beq.n	8007204 <_printf_common+0xa4>
 8007236:	3601      	adds	r6, #1
 8007238:	e7d9      	b.n	80071ee <_printf_common+0x8e>
	...

0800723c <_printf_i>:
 800723c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007240:	7e0f      	ldrb	r7, [r1, #24]
 8007242:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007244:	2f78      	cmp	r7, #120	@ 0x78
 8007246:	4691      	mov	r9, r2
 8007248:	4680      	mov	r8, r0
 800724a:	460c      	mov	r4, r1
 800724c:	469a      	mov	sl, r3
 800724e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8007252:	d807      	bhi.n	8007264 <_printf_i+0x28>
 8007254:	2f62      	cmp	r7, #98	@ 0x62
 8007256:	d80a      	bhi.n	800726e <_printf_i+0x32>
 8007258:	2f00      	cmp	r7, #0
 800725a:	f000 80d1 	beq.w	8007400 <_printf_i+0x1c4>
 800725e:	2f58      	cmp	r7, #88	@ 0x58
 8007260:	f000 80b8 	beq.w	80073d4 <_printf_i+0x198>
 8007264:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007268:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800726c:	e03a      	b.n	80072e4 <_printf_i+0xa8>
 800726e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007272:	2b15      	cmp	r3, #21
 8007274:	d8f6      	bhi.n	8007264 <_printf_i+0x28>
 8007276:	a101      	add	r1, pc, #4	@ (adr r1, 800727c <_printf_i+0x40>)
 8007278:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800727c:	080072d5 	.word	0x080072d5
 8007280:	080072e9 	.word	0x080072e9
 8007284:	08007265 	.word	0x08007265
 8007288:	08007265 	.word	0x08007265
 800728c:	08007265 	.word	0x08007265
 8007290:	08007265 	.word	0x08007265
 8007294:	080072e9 	.word	0x080072e9
 8007298:	08007265 	.word	0x08007265
 800729c:	08007265 	.word	0x08007265
 80072a0:	08007265 	.word	0x08007265
 80072a4:	08007265 	.word	0x08007265
 80072a8:	080073e7 	.word	0x080073e7
 80072ac:	08007313 	.word	0x08007313
 80072b0:	080073a1 	.word	0x080073a1
 80072b4:	08007265 	.word	0x08007265
 80072b8:	08007265 	.word	0x08007265
 80072bc:	08007409 	.word	0x08007409
 80072c0:	08007265 	.word	0x08007265
 80072c4:	08007313 	.word	0x08007313
 80072c8:	08007265 	.word	0x08007265
 80072cc:	08007265 	.word	0x08007265
 80072d0:	080073a9 	.word	0x080073a9
 80072d4:	6833      	ldr	r3, [r6, #0]
 80072d6:	1d1a      	adds	r2, r3, #4
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	6032      	str	r2, [r6, #0]
 80072dc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80072e0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80072e4:	2301      	movs	r3, #1
 80072e6:	e09c      	b.n	8007422 <_printf_i+0x1e6>
 80072e8:	6833      	ldr	r3, [r6, #0]
 80072ea:	6820      	ldr	r0, [r4, #0]
 80072ec:	1d19      	adds	r1, r3, #4
 80072ee:	6031      	str	r1, [r6, #0]
 80072f0:	0606      	lsls	r6, r0, #24
 80072f2:	d501      	bpl.n	80072f8 <_printf_i+0xbc>
 80072f4:	681d      	ldr	r5, [r3, #0]
 80072f6:	e003      	b.n	8007300 <_printf_i+0xc4>
 80072f8:	0645      	lsls	r5, r0, #25
 80072fa:	d5fb      	bpl.n	80072f4 <_printf_i+0xb8>
 80072fc:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007300:	2d00      	cmp	r5, #0
 8007302:	da03      	bge.n	800730c <_printf_i+0xd0>
 8007304:	232d      	movs	r3, #45	@ 0x2d
 8007306:	426d      	negs	r5, r5
 8007308:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800730c:	4858      	ldr	r0, [pc, #352]	@ (8007470 <_printf_i+0x234>)
 800730e:	230a      	movs	r3, #10
 8007310:	e011      	b.n	8007336 <_printf_i+0xfa>
 8007312:	6821      	ldr	r1, [r4, #0]
 8007314:	6833      	ldr	r3, [r6, #0]
 8007316:	0608      	lsls	r0, r1, #24
 8007318:	f853 5b04 	ldr.w	r5, [r3], #4
 800731c:	d402      	bmi.n	8007324 <_printf_i+0xe8>
 800731e:	0649      	lsls	r1, r1, #25
 8007320:	bf48      	it	mi
 8007322:	b2ad      	uxthmi	r5, r5
 8007324:	2f6f      	cmp	r7, #111	@ 0x6f
 8007326:	4852      	ldr	r0, [pc, #328]	@ (8007470 <_printf_i+0x234>)
 8007328:	6033      	str	r3, [r6, #0]
 800732a:	bf14      	ite	ne
 800732c:	230a      	movne	r3, #10
 800732e:	2308      	moveq	r3, #8
 8007330:	2100      	movs	r1, #0
 8007332:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007336:	6866      	ldr	r6, [r4, #4]
 8007338:	60a6      	str	r6, [r4, #8]
 800733a:	2e00      	cmp	r6, #0
 800733c:	db05      	blt.n	800734a <_printf_i+0x10e>
 800733e:	6821      	ldr	r1, [r4, #0]
 8007340:	432e      	orrs	r6, r5
 8007342:	f021 0104 	bic.w	r1, r1, #4
 8007346:	6021      	str	r1, [r4, #0]
 8007348:	d04b      	beq.n	80073e2 <_printf_i+0x1a6>
 800734a:	4616      	mov	r6, r2
 800734c:	fbb5 f1f3 	udiv	r1, r5, r3
 8007350:	fb03 5711 	mls	r7, r3, r1, r5
 8007354:	5dc7      	ldrb	r7, [r0, r7]
 8007356:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800735a:	462f      	mov	r7, r5
 800735c:	42bb      	cmp	r3, r7
 800735e:	460d      	mov	r5, r1
 8007360:	d9f4      	bls.n	800734c <_printf_i+0x110>
 8007362:	2b08      	cmp	r3, #8
 8007364:	d10b      	bne.n	800737e <_printf_i+0x142>
 8007366:	6823      	ldr	r3, [r4, #0]
 8007368:	07df      	lsls	r7, r3, #31
 800736a:	d508      	bpl.n	800737e <_printf_i+0x142>
 800736c:	6923      	ldr	r3, [r4, #16]
 800736e:	6861      	ldr	r1, [r4, #4]
 8007370:	4299      	cmp	r1, r3
 8007372:	bfde      	ittt	le
 8007374:	2330      	movle	r3, #48	@ 0x30
 8007376:	f806 3c01 	strble.w	r3, [r6, #-1]
 800737a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800737e:	1b92      	subs	r2, r2, r6
 8007380:	6122      	str	r2, [r4, #16]
 8007382:	f8cd a000 	str.w	sl, [sp]
 8007386:	464b      	mov	r3, r9
 8007388:	aa03      	add	r2, sp, #12
 800738a:	4621      	mov	r1, r4
 800738c:	4640      	mov	r0, r8
 800738e:	f7ff fee7 	bl	8007160 <_printf_common>
 8007392:	3001      	adds	r0, #1
 8007394:	d14a      	bne.n	800742c <_printf_i+0x1f0>
 8007396:	f04f 30ff 	mov.w	r0, #4294967295
 800739a:	b004      	add	sp, #16
 800739c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80073a0:	6823      	ldr	r3, [r4, #0]
 80073a2:	f043 0320 	orr.w	r3, r3, #32
 80073a6:	6023      	str	r3, [r4, #0]
 80073a8:	4832      	ldr	r0, [pc, #200]	@ (8007474 <_printf_i+0x238>)
 80073aa:	2778      	movs	r7, #120	@ 0x78
 80073ac:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80073b0:	6823      	ldr	r3, [r4, #0]
 80073b2:	6831      	ldr	r1, [r6, #0]
 80073b4:	061f      	lsls	r7, r3, #24
 80073b6:	f851 5b04 	ldr.w	r5, [r1], #4
 80073ba:	d402      	bmi.n	80073c2 <_printf_i+0x186>
 80073bc:	065f      	lsls	r7, r3, #25
 80073be:	bf48      	it	mi
 80073c0:	b2ad      	uxthmi	r5, r5
 80073c2:	6031      	str	r1, [r6, #0]
 80073c4:	07d9      	lsls	r1, r3, #31
 80073c6:	bf44      	itt	mi
 80073c8:	f043 0320 	orrmi.w	r3, r3, #32
 80073cc:	6023      	strmi	r3, [r4, #0]
 80073ce:	b11d      	cbz	r5, 80073d8 <_printf_i+0x19c>
 80073d0:	2310      	movs	r3, #16
 80073d2:	e7ad      	b.n	8007330 <_printf_i+0xf4>
 80073d4:	4826      	ldr	r0, [pc, #152]	@ (8007470 <_printf_i+0x234>)
 80073d6:	e7e9      	b.n	80073ac <_printf_i+0x170>
 80073d8:	6823      	ldr	r3, [r4, #0]
 80073da:	f023 0320 	bic.w	r3, r3, #32
 80073de:	6023      	str	r3, [r4, #0]
 80073e0:	e7f6      	b.n	80073d0 <_printf_i+0x194>
 80073e2:	4616      	mov	r6, r2
 80073e4:	e7bd      	b.n	8007362 <_printf_i+0x126>
 80073e6:	6833      	ldr	r3, [r6, #0]
 80073e8:	6825      	ldr	r5, [r4, #0]
 80073ea:	6961      	ldr	r1, [r4, #20]
 80073ec:	1d18      	adds	r0, r3, #4
 80073ee:	6030      	str	r0, [r6, #0]
 80073f0:	062e      	lsls	r6, r5, #24
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	d501      	bpl.n	80073fa <_printf_i+0x1be>
 80073f6:	6019      	str	r1, [r3, #0]
 80073f8:	e002      	b.n	8007400 <_printf_i+0x1c4>
 80073fa:	0668      	lsls	r0, r5, #25
 80073fc:	d5fb      	bpl.n	80073f6 <_printf_i+0x1ba>
 80073fe:	8019      	strh	r1, [r3, #0]
 8007400:	2300      	movs	r3, #0
 8007402:	6123      	str	r3, [r4, #16]
 8007404:	4616      	mov	r6, r2
 8007406:	e7bc      	b.n	8007382 <_printf_i+0x146>
 8007408:	6833      	ldr	r3, [r6, #0]
 800740a:	1d1a      	adds	r2, r3, #4
 800740c:	6032      	str	r2, [r6, #0]
 800740e:	681e      	ldr	r6, [r3, #0]
 8007410:	6862      	ldr	r2, [r4, #4]
 8007412:	2100      	movs	r1, #0
 8007414:	4630      	mov	r0, r6
 8007416:	f7f8 feeb 	bl	80001f0 <memchr>
 800741a:	b108      	cbz	r0, 8007420 <_printf_i+0x1e4>
 800741c:	1b80      	subs	r0, r0, r6
 800741e:	6060      	str	r0, [r4, #4]
 8007420:	6863      	ldr	r3, [r4, #4]
 8007422:	6123      	str	r3, [r4, #16]
 8007424:	2300      	movs	r3, #0
 8007426:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800742a:	e7aa      	b.n	8007382 <_printf_i+0x146>
 800742c:	6923      	ldr	r3, [r4, #16]
 800742e:	4632      	mov	r2, r6
 8007430:	4649      	mov	r1, r9
 8007432:	4640      	mov	r0, r8
 8007434:	47d0      	blx	sl
 8007436:	3001      	adds	r0, #1
 8007438:	d0ad      	beq.n	8007396 <_printf_i+0x15a>
 800743a:	6823      	ldr	r3, [r4, #0]
 800743c:	079b      	lsls	r3, r3, #30
 800743e:	d413      	bmi.n	8007468 <_printf_i+0x22c>
 8007440:	68e0      	ldr	r0, [r4, #12]
 8007442:	9b03      	ldr	r3, [sp, #12]
 8007444:	4298      	cmp	r0, r3
 8007446:	bfb8      	it	lt
 8007448:	4618      	movlt	r0, r3
 800744a:	e7a6      	b.n	800739a <_printf_i+0x15e>
 800744c:	2301      	movs	r3, #1
 800744e:	4632      	mov	r2, r6
 8007450:	4649      	mov	r1, r9
 8007452:	4640      	mov	r0, r8
 8007454:	47d0      	blx	sl
 8007456:	3001      	adds	r0, #1
 8007458:	d09d      	beq.n	8007396 <_printf_i+0x15a>
 800745a:	3501      	adds	r5, #1
 800745c:	68e3      	ldr	r3, [r4, #12]
 800745e:	9903      	ldr	r1, [sp, #12]
 8007460:	1a5b      	subs	r3, r3, r1
 8007462:	42ab      	cmp	r3, r5
 8007464:	dcf2      	bgt.n	800744c <_printf_i+0x210>
 8007466:	e7eb      	b.n	8007440 <_printf_i+0x204>
 8007468:	2500      	movs	r5, #0
 800746a:	f104 0619 	add.w	r6, r4, #25
 800746e:	e7f5      	b.n	800745c <_printf_i+0x220>
 8007470:	08007bcf 	.word	0x08007bcf
 8007474:	08007be0 	.word	0x08007be0

08007478 <__sflush_r>:
 8007478:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800747c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007480:	0716      	lsls	r6, r2, #28
 8007482:	4605      	mov	r5, r0
 8007484:	460c      	mov	r4, r1
 8007486:	d454      	bmi.n	8007532 <__sflush_r+0xba>
 8007488:	684b      	ldr	r3, [r1, #4]
 800748a:	2b00      	cmp	r3, #0
 800748c:	dc02      	bgt.n	8007494 <__sflush_r+0x1c>
 800748e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8007490:	2b00      	cmp	r3, #0
 8007492:	dd48      	ble.n	8007526 <__sflush_r+0xae>
 8007494:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007496:	2e00      	cmp	r6, #0
 8007498:	d045      	beq.n	8007526 <__sflush_r+0xae>
 800749a:	2300      	movs	r3, #0
 800749c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80074a0:	682f      	ldr	r7, [r5, #0]
 80074a2:	6a21      	ldr	r1, [r4, #32]
 80074a4:	602b      	str	r3, [r5, #0]
 80074a6:	d030      	beq.n	800750a <__sflush_r+0x92>
 80074a8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80074aa:	89a3      	ldrh	r3, [r4, #12]
 80074ac:	0759      	lsls	r1, r3, #29
 80074ae:	d505      	bpl.n	80074bc <__sflush_r+0x44>
 80074b0:	6863      	ldr	r3, [r4, #4]
 80074b2:	1ad2      	subs	r2, r2, r3
 80074b4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80074b6:	b10b      	cbz	r3, 80074bc <__sflush_r+0x44>
 80074b8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80074ba:	1ad2      	subs	r2, r2, r3
 80074bc:	2300      	movs	r3, #0
 80074be:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80074c0:	6a21      	ldr	r1, [r4, #32]
 80074c2:	4628      	mov	r0, r5
 80074c4:	47b0      	blx	r6
 80074c6:	1c43      	adds	r3, r0, #1
 80074c8:	89a3      	ldrh	r3, [r4, #12]
 80074ca:	d106      	bne.n	80074da <__sflush_r+0x62>
 80074cc:	6829      	ldr	r1, [r5, #0]
 80074ce:	291d      	cmp	r1, #29
 80074d0:	d82b      	bhi.n	800752a <__sflush_r+0xb2>
 80074d2:	4a2a      	ldr	r2, [pc, #168]	@ (800757c <__sflush_r+0x104>)
 80074d4:	40ca      	lsrs	r2, r1
 80074d6:	07d6      	lsls	r6, r2, #31
 80074d8:	d527      	bpl.n	800752a <__sflush_r+0xb2>
 80074da:	2200      	movs	r2, #0
 80074dc:	6062      	str	r2, [r4, #4]
 80074de:	04d9      	lsls	r1, r3, #19
 80074e0:	6922      	ldr	r2, [r4, #16]
 80074e2:	6022      	str	r2, [r4, #0]
 80074e4:	d504      	bpl.n	80074f0 <__sflush_r+0x78>
 80074e6:	1c42      	adds	r2, r0, #1
 80074e8:	d101      	bne.n	80074ee <__sflush_r+0x76>
 80074ea:	682b      	ldr	r3, [r5, #0]
 80074ec:	b903      	cbnz	r3, 80074f0 <__sflush_r+0x78>
 80074ee:	6560      	str	r0, [r4, #84]	@ 0x54
 80074f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80074f2:	602f      	str	r7, [r5, #0]
 80074f4:	b1b9      	cbz	r1, 8007526 <__sflush_r+0xae>
 80074f6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80074fa:	4299      	cmp	r1, r3
 80074fc:	d002      	beq.n	8007504 <__sflush_r+0x8c>
 80074fe:	4628      	mov	r0, r5
 8007500:	f7ff fa94 	bl	8006a2c <_free_r>
 8007504:	2300      	movs	r3, #0
 8007506:	6363      	str	r3, [r4, #52]	@ 0x34
 8007508:	e00d      	b.n	8007526 <__sflush_r+0xae>
 800750a:	2301      	movs	r3, #1
 800750c:	4628      	mov	r0, r5
 800750e:	47b0      	blx	r6
 8007510:	4602      	mov	r2, r0
 8007512:	1c50      	adds	r0, r2, #1
 8007514:	d1c9      	bne.n	80074aa <__sflush_r+0x32>
 8007516:	682b      	ldr	r3, [r5, #0]
 8007518:	2b00      	cmp	r3, #0
 800751a:	d0c6      	beq.n	80074aa <__sflush_r+0x32>
 800751c:	2b1d      	cmp	r3, #29
 800751e:	d001      	beq.n	8007524 <__sflush_r+0xac>
 8007520:	2b16      	cmp	r3, #22
 8007522:	d11e      	bne.n	8007562 <__sflush_r+0xea>
 8007524:	602f      	str	r7, [r5, #0]
 8007526:	2000      	movs	r0, #0
 8007528:	e022      	b.n	8007570 <__sflush_r+0xf8>
 800752a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800752e:	b21b      	sxth	r3, r3
 8007530:	e01b      	b.n	800756a <__sflush_r+0xf2>
 8007532:	690f      	ldr	r7, [r1, #16]
 8007534:	2f00      	cmp	r7, #0
 8007536:	d0f6      	beq.n	8007526 <__sflush_r+0xae>
 8007538:	0793      	lsls	r3, r2, #30
 800753a:	680e      	ldr	r6, [r1, #0]
 800753c:	bf08      	it	eq
 800753e:	694b      	ldreq	r3, [r1, #20]
 8007540:	600f      	str	r7, [r1, #0]
 8007542:	bf18      	it	ne
 8007544:	2300      	movne	r3, #0
 8007546:	eba6 0807 	sub.w	r8, r6, r7
 800754a:	608b      	str	r3, [r1, #8]
 800754c:	f1b8 0f00 	cmp.w	r8, #0
 8007550:	dde9      	ble.n	8007526 <__sflush_r+0xae>
 8007552:	6a21      	ldr	r1, [r4, #32]
 8007554:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8007556:	4643      	mov	r3, r8
 8007558:	463a      	mov	r2, r7
 800755a:	4628      	mov	r0, r5
 800755c:	47b0      	blx	r6
 800755e:	2800      	cmp	r0, #0
 8007560:	dc08      	bgt.n	8007574 <__sflush_r+0xfc>
 8007562:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007566:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800756a:	81a3      	strh	r3, [r4, #12]
 800756c:	f04f 30ff 	mov.w	r0, #4294967295
 8007570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007574:	4407      	add	r7, r0
 8007576:	eba8 0800 	sub.w	r8, r8, r0
 800757a:	e7e7      	b.n	800754c <__sflush_r+0xd4>
 800757c:	20400001 	.word	0x20400001

08007580 <_fflush_r>:
 8007580:	b538      	push	{r3, r4, r5, lr}
 8007582:	690b      	ldr	r3, [r1, #16]
 8007584:	4605      	mov	r5, r0
 8007586:	460c      	mov	r4, r1
 8007588:	b913      	cbnz	r3, 8007590 <_fflush_r+0x10>
 800758a:	2500      	movs	r5, #0
 800758c:	4628      	mov	r0, r5
 800758e:	bd38      	pop	{r3, r4, r5, pc}
 8007590:	b118      	cbz	r0, 800759a <_fflush_r+0x1a>
 8007592:	6a03      	ldr	r3, [r0, #32]
 8007594:	b90b      	cbnz	r3, 800759a <_fflush_r+0x1a>
 8007596:	f7ff f891 	bl	80066bc <__sinit>
 800759a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800759e:	2b00      	cmp	r3, #0
 80075a0:	d0f3      	beq.n	800758a <_fflush_r+0xa>
 80075a2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80075a4:	07d0      	lsls	r0, r2, #31
 80075a6:	d404      	bmi.n	80075b2 <_fflush_r+0x32>
 80075a8:	0599      	lsls	r1, r3, #22
 80075aa:	d402      	bmi.n	80075b2 <_fflush_r+0x32>
 80075ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80075ae:	f7ff fa1c 	bl	80069ea <__retarget_lock_acquire_recursive>
 80075b2:	4628      	mov	r0, r5
 80075b4:	4621      	mov	r1, r4
 80075b6:	f7ff ff5f 	bl	8007478 <__sflush_r>
 80075ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80075bc:	07da      	lsls	r2, r3, #31
 80075be:	4605      	mov	r5, r0
 80075c0:	d4e4      	bmi.n	800758c <_fflush_r+0xc>
 80075c2:	89a3      	ldrh	r3, [r4, #12]
 80075c4:	059b      	lsls	r3, r3, #22
 80075c6:	d4e1      	bmi.n	800758c <_fflush_r+0xc>
 80075c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80075ca:	f7ff fa0f 	bl	80069ec <__retarget_lock_release_recursive>
 80075ce:	e7dd      	b.n	800758c <_fflush_r+0xc>

080075d0 <fiprintf>:
 80075d0:	b40e      	push	{r1, r2, r3}
 80075d2:	b503      	push	{r0, r1, lr}
 80075d4:	4601      	mov	r1, r0
 80075d6:	ab03      	add	r3, sp, #12
 80075d8:	4805      	ldr	r0, [pc, #20]	@ (80075f0 <fiprintf+0x20>)
 80075da:	f853 2b04 	ldr.w	r2, [r3], #4
 80075de:	6800      	ldr	r0, [r0, #0]
 80075e0:	9301      	str	r3, [sp, #4]
 80075e2:	f7ff fca5 	bl	8006f30 <_vfiprintf_r>
 80075e6:	b002      	add	sp, #8
 80075e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80075ec:	b003      	add	sp, #12
 80075ee:	4770      	bx	lr
 80075f0:	2000003c 	.word	0x2000003c

080075f4 <__swbuf_r>:
 80075f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075f6:	460e      	mov	r6, r1
 80075f8:	4614      	mov	r4, r2
 80075fa:	4605      	mov	r5, r0
 80075fc:	b118      	cbz	r0, 8007606 <__swbuf_r+0x12>
 80075fe:	6a03      	ldr	r3, [r0, #32]
 8007600:	b90b      	cbnz	r3, 8007606 <__swbuf_r+0x12>
 8007602:	f7ff f85b 	bl	80066bc <__sinit>
 8007606:	69a3      	ldr	r3, [r4, #24]
 8007608:	60a3      	str	r3, [r4, #8]
 800760a:	89a3      	ldrh	r3, [r4, #12]
 800760c:	071a      	lsls	r2, r3, #28
 800760e:	d501      	bpl.n	8007614 <__swbuf_r+0x20>
 8007610:	6923      	ldr	r3, [r4, #16]
 8007612:	b943      	cbnz	r3, 8007626 <__swbuf_r+0x32>
 8007614:	4621      	mov	r1, r4
 8007616:	4628      	mov	r0, r5
 8007618:	f000 f82a 	bl	8007670 <__swsetup_r>
 800761c:	b118      	cbz	r0, 8007626 <__swbuf_r+0x32>
 800761e:	f04f 37ff 	mov.w	r7, #4294967295
 8007622:	4638      	mov	r0, r7
 8007624:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007626:	6823      	ldr	r3, [r4, #0]
 8007628:	6922      	ldr	r2, [r4, #16]
 800762a:	1a98      	subs	r0, r3, r2
 800762c:	6963      	ldr	r3, [r4, #20]
 800762e:	b2f6      	uxtb	r6, r6
 8007630:	4283      	cmp	r3, r0
 8007632:	4637      	mov	r7, r6
 8007634:	dc05      	bgt.n	8007642 <__swbuf_r+0x4e>
 8007636:	4621      	mov	r1, r4
 8007638:	4628      	mov	r0, r5
 800763a:	f7ff ffa1 	bl	8007580 <_fflush_r>
 800763e:	2800      	cmp	r0, #0
 8007640:	d1ed      	bne.n	800761e <__swbuf_r+0x2a>
 8007642:	68a3      	ldr	r3, [r4, #8]
 8007644:	3b01      	subs	r3, #1
 8007646:	60a3      	str	r3, [r4, #8]
 8007648:	6823      	ldr	r3, [r4, #0]
 800764a:	1c5a      	adds	r2, r3, #1
 800764c:	6022      	str	r2, [r4, #0]
 800764e:	701e      	strb	r6, [r3, #0]
 8007650:	6962      	ldr	r2, [r4, #20]
 8007652:	1c43      	adds	r3, r0, #1
 8007654:	429a      	cmp	r2, r3
 8007656:	d004      	beq.n	8007662 <__swbuf_r+0x6e>
 8007658:	89a3      	ldrh	r3, [r4, #12]
 800765a:	07db      	lsls	r3, r3, #31
 800765c:	d5e1      	bpl.n	8007622 <__swbuf_r+0x2e>
 800765e:	2e0a      	cmp	r6, #10
 8007660:	d1df      	bne.n	8007622 <__swbuf_r+0x2e>
 8007662:	4621      	mov	r1, r4
 8007664:	4628      	mov	r0, r5
 8007666:	f7ff ff8b 	bl	8007580 <_fflush_r>
 800766a:	2800      	cmp	r0, #0
 800766c:	d0d9      	beq.n	8007622 <__swbuf_r+0x2e>
 800766e:	e7d6      	b.n	800761e <__swbuf_r+0x2a>

08007670 <__swsetup_r>:
 8007670:	b538      	push	{r3, r4, r5, lr}
 8007672:	4b29      	ldr	r3, [pc, #164]	@ (8007718 <__swsetup_r+0xa8>)
 8007674:	4605      	mov	r5, r0
 8007676:	6818      	ldr	r0, [r3, #0]
 8007678:	460c      	mov	r4, r1
 800767a:	b118      	cbz	r0, 8007684 <__swsetup_r+0x14>
 800767c:	6a03      	ldr	r3, [r0, #32]
 800767e:	b90b      	cbnz	r3, 8007684 <__swsetup_r+0x14>
 8007680:	f7ff f81c 	bl	80066bc <__sinit>
 8007684:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007688:	0719      	lsls	r1, r3, #28
 800768a:	d422      	bmi.n	80076d2 <__swsetup_r+0x62>
 800768c:	06da      	lsls	r2, r3, #27
 800768e:	d407      	bmi.n	80076a0 <__swsetup_r+0x30>
 8007690:	2209      	movs	r2, #9
 8007692:	602a      	str	r2, [r5, #0]
 8007694:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007698:	81a3      	strh	r3, [r4, #12]
 800769a:	f04f 30ff 	mov.w	r0, #4294967295
 800769e:	e033      	b.n	8007708 <__swsetup_r+0x98>
 80076a0:	0758      	lsls	r0, r3, #29
 80076a2:	d512      	bpl.n	80076ca <__swsetup_r+0x5a>
 80076a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80076a6:	b141      	cbz	r1, 80076ba <__swsetup_r+0x4a>
 80076a8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80076ac:	4299      	cmp	r1, r3
 80076ae:	d002      	beq.n	80076b6 <__swsetup_r+0x46>
 80076b0:	4628      	mov	r0, r5
 80076b2:	f7ff f9bb 	bl	8006a2c <_free_r>
 80076b6:	2300      	movs	r3, #0
 80076b8:	6363      	str	r3, [r4, #52]	@ 0x34
 80076ba:	89a3      	ldrh	r3, [r4, #12]
 80076bc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80076c0:	81a3      	strh	r3, [r4, #12]
 80076c2:	2300      	movs	r3, #0
 80076c4:	6063      	str	r3, [r4, #4]
 80076c6:	6923      	ldr	r3, [r4, #16]
 80076c8:	6023      	str	r3, [r4, #0]
 80076ca:	89a3      	ldrh	r3, [r4, #12]
 80076cc:	f043 0308 	orr.w	r3, r3, #8
 80076d0:	81a3      	strh	r3, [r4, #12]
 80076d2:	6923      	ldr	r3, [r4, #16]
 80076d4:	b94b      	cbnz	r3, 80076ea <__swsetup_r+0x7a>
 80076d6:	89a3      	ldrh	r3, [r4, #12]
 80076d8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80076dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80076e0:	d003      	beq.n	80076ea <__swsetup_r+0x7a>
 80076e2:	4621      	mov	r1, r4
 80076e4:	4628      	mov	r0, r5
 80076e6:	f000 f8ac 	bl	8007842 <__smakebuf_r>
 80076ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80076ee:	f013 0201 	ands.w	r2, r3, #1
 80076f2:	d00a      	beq.n	800770a <__swsetup_r+0x9a>
 80076f4:	2200      	movs	r2, #0
 80076f6:	60a2      	str	r2, [r4, #8]
 80076f8:	6962      	ldr	r2, [r4, #20]
 80076fa:	4252      	negs	r2, r2
 80076fc:	61a2      	str	r2, [r4, #24]
 80076fe:	6922      	ldr	r2, [r4, #16]
 8007700:	b942      	cbnz	r2, 8007714 <__swsetup_r+0xa4>
 8007702:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8007706:	d1c5      	bne.n	8007694 <__swsetup_r+0x24>
 8007708:	bd38      	pop	{r3, r4, r5, pc}
 800770a:	0799      	lsls	r1, r3, #30
 800770c:	bf58      	it	pl
 800770e:	6962      	ldrpl	r2, [r4, #20]
 8007710:	60a2      	str	r2, [r4, #8]
 8007712:	e7f4      	b.n	80076fe <__swsetup_r+0x8e>
 8007714:	2000      	movs	r0, #0
 8007716:	e7f7      	b.n	8007708 <__swsetup_r+0x98>
 8007718:	2000003c 	.word	0x2000003c

0800771c <memmove>:
 800771c:	4288      	cmp	r0, r1
 800771e:	b510      	push	{r4, lr}
 8007720:	eb01 0402 	add.w	r4, r1, r2
 8007724:	d902      	bls.n	800772c <memmove+0x10>
 8007726:	4284      	cmp	r4, r0
 8007728:	4623      	mov	r3, r4
 800772a:	d807      	bhi.n	800773c <memmove+0x20>
 800772c:	1e43      	subs	r3, r0, #1
 800772e:	42a1      	cmp	r1, r4
 8007730:	d008      	beq.n	8007744 <memmove+0x28>
 8007732:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007736:	f803 2f01 	strb.w	r2, [r3, #1]!
 800773a:	e7f8      	b.n	800772e <memmove+0x12>
 800773c:	4402      	add	r2, r0
 800773e:	4601      	mov	r1, r0
 8007740:	428a      	cmp	r2, r1
 8007742:	d100      	bne.n	8007746 <memmove+0x2a>
 8007744:	bd10      	pop	{r4, pc}
 8007746:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800774a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800774e:	e7f7      	b.n	8007740 <memmove+0x24>

08007750 <_sbrk_r>:
 8007750:	b538      	push	{r3, r4, r5, lr}
 8007752:	4d06      	ldr	r5, [pc, #24]	@ (800776c <_sbrk_r+0x1c>)
 8007754:	2300      	movs	r3, #0
 8007756:	4604      	mov	r4, r0
 8007758:	4608      	mov	r0, r1
 800775a:	602b      	str	r3, [r5, #0]
 800775c:	f7fa fae4 	bl	8001d28 <_sbrk>
 8007760:	1c43      	adds	r3, r0, #1
 8007762:	d102      	bne.n	800776a <_sbrk_r+0x1a>
 8007764:	682b      	ldr	r3, [r5, #0]
 8007766:	b103      	cbz	r3, 800776a <_sbrk_r+0x1a>
 8007768:	6023      	str	r3, [r4, #0]
 800776a:	bd38      	pop	{r3, r4, r5, pc}
 800776c:	20013d1c 	.word	0x20013d1c

08007770 <memcpy>:
 8007770:	440a      	add	r2, r1
 8007772:	4291      	cmp	r1, r2
 8007774:	f100 33ff 	add.w	r3, r0, #4294967295
 8007778:	d100      	bne.n	800777c <memcpy+0xc>
 800777a:	4770      	bx	lr
 800777c:	b510      	push	{r4, lr}
 800777e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007782:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007786:	4291      	cmp	r1, r2
 8007788:	d1f9      	bne.n	800777e <memcpy+0xe>
 800778a:	bd10      	pop	{r4, pc}

0800778c <abort>:
 800778c:	b508      	push	{r3, lr}
 800778e:	2006      	movs	r0, #6
 8007790:	f000 f8bc 	bl	800790c <raise>
 8007794:	2001      	movs	r0, #1
 8007796:	f7fa fa4f 	bl	8001c38 <_exit>

0800779a <_realloc_r>:
 800779a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800779e:	4607      	mov	r7, r0
 80077a0:	4614      	mov	r4, r2
 80077a2:	460d      	mov	r5, r1
 80077a4:	b921      	cbnz	r1, 80077b0 <_realloc_r+0x16>
 80077a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80077aa:	4611      	mov	r1, r2
 80077ac:	f7ff b9b2 	b.w	8006b14 <_malloc_r>
 80077b0:	b92a      	cbnz	r2, 80077be <_realloc_r+0x24>
 80077b2:	f7ff f93b 	bl	8006a2c <_free_r>
 80077b6:	4625      	mov	r5, r4
 80077b8:	4628      	mov	r0, r5
 80077ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077be:	f000 f8e3 	bl	8007988 <_malloc_usable_size_r>
 80077c2:	4284      	cmp	r4, r0
 80077c4:	4606      	mov	r6, r0
 80077c6:	d802      	bhi.n	80077ce <_realloc_r+0x34>
 80077c8:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80077cc:	d8f4      	bhi.n	80077b8 <_realloc_r+0x1e>
 80077ce:	4621      	mov	r1, r4
 80077d0:	4638      	mov	r0, r7
 80077d2:	f7ff f99f 	bl	8006b14 <_malloc_r>
 80077d6:	4680      	mov	r8, r0
 80077d8:	b908      	cbnz	r0, 80077de <_realloc_r+0x44>
 80077da:	4645      	mov	r5, r8
 80077dc:	e7ec      	b.n	80077b8 <_realloc_r+0x1e>
 80077de:	42b4      	cmp	r4, r6
 80077e0:	4622      	mov	r2, r4
 80077e2:	4629      	mov	r1, r5
 80077e4:	bf28      	it	cs
 80077e6:	4632      	movcs	r2, r6
 80077e8:	f7ff ffc2 	bl	8007770 <memcpy>
 80077ec:	4629      	mov	r1, r5
 80077ee:	4638      	mov	r0, r7
 80077f0:	f7ff f91c 	bl	8006a2c <_free_r>
 80077f4:	e7f1      	b.n	80077da <_realloc_r+0x40>

080077f6 <__swhatbuf_r>:
 80077f6:	b570      	push	{r4, r5, r6, lr}
 80077f8:	460c      	mov	r4, r1
 80077fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80077fe:	2900      	cmp	r1, #0
 8007800:	b096      	sub	sp, #88	@ 0x58
 8007802:	4615      	mov	r5, r2
 8007804:	461e      	mov	r6, r3
 8007806:	da0d      	bge.n	8007824 <__swhatbuf_r+0x2e>
 8007808:	89a3      	ldrh	r3, [r4, #12]
 800780a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800780e:	f04f 0100 	mov.w	r1, #0
 8007812:	bf14      	ite	ne
 8007814:	2340      	movne	r3, #64	@ 0x40
 8007816:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800781a:	2000      	movs	r0, #0
 800781c:	6031      	str	r1, [r6, #0]
 800781e:	602b      	str	r3, [r5, #0]
 8007820:	b016      	add	sp, #88	@ 0x58
 8007822:	bd70      	pop	{r4, r5, r6, pc}
 8007824:	466a      	mov	r2, sp
 8007826:	f000 f879 	bl	800791c <_fstat_r>
 800782a:	2800      	cmp	r0, #0
 800782c:	dbec      	blt.n	8007808 <__swhatbuf_r+0x12>
 800782e:	9901      	ldr	r1, [sp, #4]
 8007830:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8007834:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8007838:	4259      	negs	r1, r3
 800783a:	4159      	adcs	r1, r3
 800783c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8007840:	e7eb      	b.n	800781a <__swhatbuf_r+0x24>

08007842 <__smakebuf_r>:
 8007842:	898b      	ldrh	r3, [r1, #12]
 8007844:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007846:	079d      	lsls	r5, r3, #30
 8007848:	4606      	mov	r6, r0
 800784a:	460c      	mov	r4, r1
 800784c:	d507      	bpl.n	800785e <__smakebuf_r+0x1c>
 800784e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8007852:	6023      	str	r3, [r4, #0]
 8007854:	6123      	str	r3, [r4, #16]
 8007856:	2301      	movs	r3, #1
 8007858:	6163      	str	r3, [r4, #20]
 800785a:	b003      	add	sp, #12
 800785c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800785e:	ab01      	add	r3, sp, #4
 8007860:	466a      	mov	r2, sp
 8007862:	f7ff ffc8 	bl	80077f6 <__swhatbuf_r>
 8007866:	9f00      	ldr	r7, [sp, #0]
 8007868:	4605      	mov	r5, r0
 800786a:	4639      	mov	r1, r7
 800786c:	4630      	mov	r0, r6
 800786e:	f7ff f951 	bl	8006b14 <_malloc_r>
 8007872:	b948      	cbnz	r0, 8007888 <__smakebuf_r+0x46>
 8007874:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007878:	059a      	lsls	r2, r3, #22
 800787a:	d4ee      	bmi.n	800785a <__smakebuf_r+0x18>
 800787c:	f023 0303 	bic.w	r3, r3, #3
 8007880:	f043 0302 	orr.w	r3, r3, #2
 8007884:	81a3      	strh	r3, [r4, #12]
 8007886:	e7e2      	b.n	800784e <__smakebuf_r+0xc>
 8007888:	89a3      	ldrh	r3, [r4, #12]
 800788a:	6020      	str	r0, [r4, #0]
 800788c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007890:	81a3      	strh	r3, [r4, #12]
 8007892:	9b01      	ldr	r3, [sp, #4]
 8007894:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007898:	b15b      	cbz	r3, 80078b2 <__smakebuf_r+0x70>
 800789a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800789e:	4630      	mov	r0, r6
 80078a0:	f000 f84e 	bl	8007940 <_isatty_r>
 80078a4:	b128      	cbz	r0, 80078b2 <__smakebuf_r+0x70>
 80078a6:	89a3      	ldrh	r3, [r4, #12]
 80078a8:	f023 0303 	bic.w	r3, r3, #3
 80078ac:	f043 0301 	orr.w	r3, r3, #1
 80078b0:	81a3      	strh	r3, [r4, #12]
 80078b2:	89a3      	ldrh	r3, [r4, #12]
 80078b4:	431d      	orrs	r5, r3
 80078b6:	81a5      	strh	r5, [r4, #12]
 80078b8:	e7cf      	b.n	800785a <__smakebuf_r+0x18>

080078ba <_raise_r>:
 80078ba:	291f      	cmp	r1, #31
 80078bc:	b538      	push	{r3, r4, r5, lr}
 80078be:	4605      	mov	r5, r0
 80078c0:	460c      	mov	r4, r1
 80078c2:	d904      	bls.n	80078ce <_raise_r+0x14>
 80078c4:	2316      	movs	r3, #22
 80078c6:	6003      	str	r3, [r0, #0]
 80078c8:	f04f 30ff 	mov.w	r0, #4294967295
 80078cc:	bd38      	pop	{r3, r4, r5, pc}
 80078ce:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80078d0:	b112      	cbz	r2, 80078d8 <_raise_r+0x1e>
 80078d2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80078d6:	b94b      	cbnz	r3, 80078ec <_raise_r+0x32>
 80078d8:	4628      	mov	r0, r5
 80078da:	f000 f853 	bl	8007984 <_getpid_r>
 80078de:	4622      	mov	r2, r4
 80078e0:	4601      	mov	r1, r0
 80078e2:	4628      	mov	r0, r5
 80078e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80078e8:	f000 b83a 	b.w	8007960 <_kill_r>
 80078ec:	2b01      	cmp	r3, #1
 80078ee:	d00a      	beq.n	8007906 <_raise_r+0x4c>
 80078f0:	1c59      	adds	r1, r3, #1
 80078f2:	d103      	bne.n	80078fc <_raise_r+0x42>
 80078f4:	2316      	movs	r3, #22
 80078f6:	6003      	str	r3, [r0, #0]
 80078f8:	2001      	movs	r0, #1
 80078fa:	e7e7      	b.n	80078cc <_raise_r+0x12>
 80078fc:	2100      	movs	r1, #0
 80078fe:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007902:	4620      	mov	r0, r4
 8007904:	4798      	blx	r3
 8007906:	2000      	movs	r0, #0
 8007908:	e7e0      	b.n	80078cc <_raise_r+0x12>
	...

0800790c <raise>:
 800790c:	4b02      	ldr	r3, [pc, #8]	@ (8007918 <raise+0xc>)
 800790e:	4601      	mov	r1, r0
 8007910:	6818      	ldr	r0, [r3, #0]
 8007912:	f7ff bfd2 	b.w	80078ba <_raise_r>
 8007916:	bf00      	nop
 8007918:	2000003c 	.word	0x2000003c

0800791c <_fstat_r>:
 800791c:	b538      	push	{r3, r4, r5, lr}
 800791e:	4d07      	ldr	r5, [pc, #28]	@ (800793c <_fstat_r+0x20>)
 8007920:	2300      	movs	r3, #0
 8007922:	4604      	mov	r4, r0
 8007924:	4608      	mov	r0, r1
 8007926:	4611      	mov	r1, r2
 8007928:	602b      	str	r3, [r5, #0]
 800792a:	f7fa f9d5 	bl	8001cd8 <_fstat>
 800792e:	1c43      	adds	r3, r0, #1
 8007930:	d102      	bne.n	8007938 <_fstat_r+0x1c>
 8007932:	682b      	ldr	r3, [r5, #0]
 8007934:	b103      	cbz	r3, 8007938 <_fstat_r+0x1c>
 8007936:	6023      	str	r3, [r4, #0]
 8007938:	bd38      	pop	{r3, r4, r5, pc}
 800793a:	bf00      	nop
 800793c:	20013d1c 	.word	0x20013d1c

08007940 <_isatty_r>:
 8007940:	b538      	push	{r3, r4, r5, lr}
 8007942:	4d06      	ldr	r5, [pc, #24]	@ (800795c <_isatty_r+0x1c>)
 8007944:	2300      	movs	r3, #0
 8007946:	4604      	mov	r4, r0
 8007948:	4608      	mov	r0, r1
 800794a:	602b      	str	r3, [r5, #0]
 800794c:	f7fa f9d4 	bl	8001cf8 <_isatty>
 8007950:	1c43      	adds	r3, r0, #1
 8007952:	d102      	bne.n	800795a <_isatty_r+0x1a>
 8007954:	682b      	ldr	r3, [r5, #0]
 8007956:	b103      	cbz	r3, 800795a <_isatty_r+0x1a>
 8007958:	6023      	str	r3, [r4, #0]
 800795a:	bd38      	pop	{r3, r4, r5, pc}
 800795c:	20013d1c 	.word	0x20013d1c

08007960 <_kill_r>:
 8007960:	b538      	push	{r3, r4, r5, lr}
 8007962:	4d07      	ldr	r5, [pc, #28]	@ (8007980 <_kill_r+0x20>)
 8007964:	2300      	movs	r3, #0
 8007966:	4604      	mov	r4, r0
 8007968:	4608      	mov	r0, r1
 800796a:	4611      	mov	r1, r2
 800796c:	602b      	str	r3, [r5, #0]
 800796e:	f7fa f953 	bl	8001c18 <_kill>
 8007972:	1c43      	adds	r3, r0, #1
 8007974:	d102      	bne.n	800797c <_kill_r+0x1c>
 8007976:	682b      	ldr	r3, [r5, #0]
 8007978:	b103      	cbz	r3, 800797c <_kill_r+0x1c>
 800797a:	6023      	str	r3, [r4, #0]
 800797c:	bd38      	pop	{r3, r4, r5, pc}
 800797e:	bf00      	nop
 8007980:	20013d1c 	.word	0x20013d1c

08007984 <_getpid_r>:
 8007984:	f7fa b940 	b.w	8001c08 <_getpid>

08007988 <_malloc_usable_size_r>:
 8007988:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800798c:	1f18      	subs	r0, r3, #4
 800798e:	2b00      	cmp	r3, #0
 8007990:	bfbc      	itt	lt
 8007992:	580b      	ldrlt	r3, [r1, r0]
 8007994:	18c0      	addlt	r0, r0, r3
 8007996:	4770      	bx	lr

08007998 <_init>:
 8007998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800799a:	bf00      	nop
 800799c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800799e:	bc08      	pop	{r3}
 80079a0:	469e      	mov	lr, r3
 80079a2:	4770      	bx	lr

080079a4 <_fini>:
 80079a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079a6:	bf00      	nop
 80079a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80079aa:	bc08      	pop	{r3}
 80079ac:	469e      	mov	lr, r3
 80079ae:	4770      	bx	lr
