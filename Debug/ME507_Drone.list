
ME507_Drone.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007674  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000023c  08007814  08007814  00008814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007a50  08007a50  0000908c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007a50  08007a50  00008a50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007a58  08007a58  0000908c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007a58  08007a58  00008a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08007a5c  08007a5c  00008a5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000008c  20000000  08007a60  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00013c90  2000008c  08007aec  0000908c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20013d1c  08007aec  00009d1c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000908c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00011cb5  00000000  00000000  000090bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000027c4  00000000  00000000  0001ad71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001058  00000000  00000000  0001d538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000cdf  00000000  00000000  0001e590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018b01  00000000  00000000  0001f26f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000142fc  00000000  00000000  00037d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093ded  00000000  00000000  0004c06c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000dfe59  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005124  00000000  00000000  000dfe9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  000e4fc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000008c 	.word	0x2000008c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080077fc 	.word	0x080077fc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000090 	.word	0x20000090
 80001dc:	080077fc 	.word	0x080077fc

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b988 	b.w	80005b8 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	468e      	mov	lr, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	4688      	mov	r8, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4617      	mov	r7, r2
 80002d4:	d962      	bls.n	800039c <__udivmoddi4+0xdc>
 80002d6:	fab2 f682 	clz	r6, r2
 80002da:	b14e      	cbz	r6, 80002f0 <__udivmoddi4+0x30>
 80002dc:	f1c6 0320 	rsb	r3, r6, #32
 80002e0:	fa01 f806 	lsl.w	r8, r1, r6
 80002e4:	fa20 f303 	lsr.w	r3, r0, r3
 80002e8:	40b7      	lsls	r7, r6
 80002ea:	ea43 0808 	orr.w	r8, r3, r8
 80002ee:	40b4      	lsls	r4, r6
 80002f0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002f4:	fa1f fc87 	uxth.w	ip, r7
 80002f8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002fc:	0c23      	lsrs	r3, r4, #16
 80002fe:	fb0e 8811 	mls	r8, lr, r1, r8
 8000302:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000306:	fb01 f20c 	mul.w	r2, r1, ip
 800030a:	429a      	cmp	r2, r3
 800030c:	d909      	bls.n	8000322 <__udivmoddi4+0x62>
 800030e:	18fb      	adds	r3, r7, r3
 8000310:	f101 30ff 	add.w	r0, r1, #4294967295
 8000314:	f080 80ea 	bcs.w	80004ec <__udivmoddi4+0x22c>
 8000318:	429a      	cmp	r2, r3
 800031a:	f240 80e7 	bls.w	80004ec <__udivmoddi4+0x22c>
 800031e:	3902      	subs	r1, #2
 8000320:	443b      	add	r3, r7
 8000322:	1a9a      	subs	r2, r3, r2
 8000324:	b2a3      	uxth	r3, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000332:	fb00 fc0c 	mul.w	ip, r0, ip
 8000336:	459c      	cmp	ip, r3
 8000338:	d909      	bls.n	800034e <__udivmoddi4+0x8e>
 800033a:	18fb      	adds	r3, r7, r3
 800033c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000340:	f080 80d6 	bcs.w	80004f0 <__udivmoddi4+0x230>
 8000344:	459c      	cmp	ip, r3
 8000346:	f240 80d3 	bls.w	80004f0 <__udivmoddi4+0x230>
 800034a:	443b      	add	r3, r7
 800034c:	3802      	subs	r0, #2
 800034e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000352:	eba3 030c 	sub.w	r3, r3, ip
 8000356:	2100      	movs	r1, #0
 8000358:	b11d      	cbz	r5, 8000362 <__udivmoddi4+0xa2>
 800035a:	40f3      	lsrs	r3, r6
 800035c:	2200      	movs	r2, #0
 800035e:	e9c5 3200 	strd	r3, r2, [r5]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d905      	bls.n	8000376 <__udivmoddi4+0xb6>
 800036a:	b10d      	cbz	r5, 8000370 <__udivmoddi4+0xb0>
 800036c:	e9c5 0100 	strd	r0, r1, [r5]
 8000370:	2100      	movs	r1, #0
 8000372:	4608      	mov	r0, r1
 8000374:	e7f5      	b.n	8000362 <__udivmoddi4+0xa2>
 8000376:	fab3 f183 	clz	r1, r3
 800037a:	2900      	cmp	r1, #0
 800037c:	d146      	bne.n	800040c <__udivmoddi4+0x14c>
 800037e:	4573      	cmp	r3, lr
 8000380:	d302      	bcc.n	8000388 <__udivmoddi4+0xc8>
 8000382:	4282      	cmp	r2, r0
 8000384:	f200 8105 	bhi.w	8000592 <__udivmoddi4+0x2d2>
 8000388:	1a84      	subs	r4, r0, r2
 800038a:	eb6e 0203 	sbc.w	r2, lr, r3
 800038e:	2001      	movs	r0, #1
 8000390:	4690      	mov	r8, r2
 8000392:	2d00      	cmp	r5, #0
 8000394:	d0e5      	beq.n	8000362 <__udivmoddi4+0xa2>
 8000396:	e9c5 4800 	strd	r4, r8, [r5]
 800039a:	e7e2      	b.n	8000362 <__udivmoddi4+0xa2>
 800039c:	2a00      	cmp	r2, #0
 800039e:	f000 8090 	beq.w	80004c2 <__udivmoddi4+0x202>
 80003a2:	fab2 f682 	clz	r6, r2
 80003a6:	2e00      	cmp	r6, #0
 80003a8:	f040 80a4 	bne.w	80004f4 <__udivmoddi4+0x234>
 80003ac:	1a8a      	subs	r2, r1, r2
 80003ae:	0c03      	lsrs	r3, r0, #16
 80003b0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003b4:	b280      	uxth	r0, r0
 80003b6:	b2bc      	uxth	r4, r7
 80003b8:	2101      	movs	r1, #1
 80003ba:	fbb2 fcfe 	udiv	ip, r2, lr
 80003be:	fb0e 221c 	mls	r2, lr, ip, r2
 80003c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003c6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ca:	429a      	cmp	r2, r3
 80003cc:	d907      	bls.n	80003de <__udivmoddi4+0x11e>
 80003ce:	18fb      	adds	r3, r7, r3
 80003d0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003d4:	d202      	bcs.n	80003dc <__udivmoddi4+0x11c>
 80003d6:	429a      	cmp	r2, r3
 80003d8:	f200 80e0 	bhi.w	800059c <__udivmoddi4+0x2dc>
 80003dc:	46c4      	mov	ip, r8
 80003de:	1a9b      	subs	r3, r3, r2
 80003e0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003e4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003e8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003ec:	fb02 f404 	mul.w	r4, r2, r4
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x144>
 80003f4:	18fb      	adds	r3, r7, r3
 80003f6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x142>
 80003fc:	429c      	cmp	r4, r3
 80003fe:	f200 80ca 	bhi.w	8000596 <__udivmoddi4+0x2d6>
 8000402:	4602      	mov	r2, r0
 8000404:	1b1b      	subs	r3, r3, r4
 8000406:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800040a:	e7a5      	b.n	8000358 <__udivmoddi4+0x98>
 800040c:	f1c1 0620 	rsb	r6, r1, #32
 8000410:	408b      	lsls	r3, r1
 8000412:	fa22 f706 	lsr.w	r7, r2, r6
 8000416:	431f      	orrs	r7, r3
 8000418:	fa0e f401 	lsl.w	r4, lr, r1
 800041c:	fa20 f306 	lsr.w	r3, r0, r6
 8000420:	fa2e fe06 	lsr.w	lr, lr, r6
 8000424:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000428:	4323      	orrs	r3, r4
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	fa1f fc87 	uxth.w	ip, r7
 8000432:	fbbe f0f9 	udiv	r0, lr, r9
 8000436:	0c1c      	lsrs	r4, r3, #16
 8000438:	fb09 ee10 	mls	lr, r9, r0, lr
 800043c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000440:	fb00 fe0c 	mul.w	lr, r0, ip
 8000444:	45a6      	cmp	lr, r4
 8000446:	fa02 f201 	lsl.w	r2, r2, r1
 800044a:	d909      	bls.n	8000460 <__udivmoddi4+0x1a0>
 800044c:	193c      	adds	r4, r7, r4
 800044e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000452:	f080 809c 	bcs.w	800058e <__udivmoddi4+0x2ce>
 8000456:	45a6      	cmp	lr, r4
 8000458:	f240 8099 	bls.w	800058e <__udivmoddi4+0x2ce>
 800045c:	3802      	subs	r0, #2
 800045e:	443c      	add	r4, r7
 8000460:	eba4 040e 	sub.w	r4, r4, lr
 8000464:	fa1f fe83 	uxth.w	lr, r3
 8000468:	fbb4 f3f9 	udiv	r3, r4, r9
 800046c:	fb09 4413 	mls	r4, r9, r3, r4
 8000470:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000474:	fb03 fc0c 	mul.w	ip, r3, ip
 8000478:	45a4      	cmp	ip, r4
 800047a:	d908      	bls.n	800048e <__udivmoddi4+0x1ce>
 800047c:	193c      	adds	r4, r7, r4
 800047e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000482:	f080 8082 	bcs.w	800058a <__udivmoddi4+0x2ca>
 8000486:	45a4      	cmp	ip, r4
 8000488:	d97f      	bls.n	800058a <__udivmoddi4+0x2ca>
 800048a:	3b02      	subs	r3, #2
 800048c:	443c      	add	r4, r7
 800048e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000492:	eba4 040c 	sub.w	r4, r4, ip
 8000496:	fba0 ec02 	umull	lr, ip, r0, r2
 800049a:	4564      	cmp	r4, ip
 800049c:	4673      	mov	r3, lr
 800049e:	46e1      	mov	r9, ip
 80004a0:	d362      	bcc.n	8000568 <__udivmoddi4+0x2a8>
 80004a2:	d05f      	beq.n	8000564 <__udivmoddi4+0x2a4>
 80004a4:	b15d      	cbz	r5, 80004be <__udivmoddi4+0x1fe>
 80004a6:	ebb8 0203 	subs.w	r2, r8, r3
 80004aa:	eb64 0409 	sbc.w	r4, r4, r9
 80004ae:	fa04 f606 	lsl.w	r6, r4, r6
 80004b2:	fa22 f301 	lsr.w	r3, r2, r1
 80004b6:	431e      	orrs	r6, r3
 80004b8:	40cc      	lsrs	r4, r1
 80004ba:	e9c5 6400 	strd	r6, r4, [r5]
 80004be:	2100      	movs	r1, #0
 80004c0:	e74f      	b.n	8000362 <__udivmoddi4+0xa2>
 80004c2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004c6:	0c01      	lsrs	r1, r0, #16
 80004c8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004cc:	b280      	uxth	r0, r0
 80004ce:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004d2:	463b      	mov	r3, r7
 80004d4:	4638      	mov	r0, r7
 80004d6:	463c      	mov	r4, r7
 80004d8:	46b8      	mov	r8, r7
 80004da:	46be      	mov	lr, r7
 80004dc:	2620      	movs	r6, #32
 80004de:	fbb1 f1f7 	udiv	r1, r1, r7
 80004e2:	eba2 0208 	sub.w	r2, r2, r8
 80004e6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ea:	e766      	b.n	80003ba <__udivmoddi4+0xfa>
 80004ec:	4601      	mov	r1, r0
 80004ee:	e718      	b.n	8000322 <__udivmoddi4+0x62>
 80004f0:	4610      	mov	r0, r2
 80004f2:	e72c      	b.n	800034e <__udivmoddi4+0x8e>
 80004f4:	f1c6 0220 	rsb	r2, r6, #32
 80004f8:	fa2e f302 	lsr.w	r3, lr, r2
 80004fc:	40b7      	lsls	r7, r6
 80004fe:	40b1      	lsls	r1, r6
 8000500:	fa20 f202 	lsr.w	r2, r0, r2
 8000504:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000508:	430a      	orrs	r2, r1
 800050a:	fbb3 f8fe 	udiv	r8, r3, lr
 800050e:	b2bc      	uxth	r4, r7
 8000510:	fb0e 3318 	mls	r3, lr, r8, r3
 8000514:	0c11      	lsrs	r1, r2, #16
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb08 f904 	mul.w	r9, r8, r4
 800051e:	40b0      	lsls	r0, r6
 8000520:	4589      	cmp	r9, r1
 8000522:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000526:	b280      	uxth	r0, r0
 8000528:	d93e      	bls.n	80005a8 <__udivmoddi4+0x2e8>
 800052a:	1879      	adds	r1, r7, r1
 800052c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000530:	d201      	bcs.n	8000536 <__udivmoddi4+0x276>
 8000532:	4589      	cmp	r9, r1
 8000534:	d81f      	bhi.n	8000576 <__udivmoddi4+0x2b6>
 8000536:	eba1 0109 	sub.w	r1, r1, r9
 800053a:	fbb1 f9fe 	udiv	r9, r1, lr
 800053e:	fb09 f804 	mul.w	r8, r9, r4
 8000542:	fb0e 1119 	mls	r1, lr, r9, r1
 8000546:	b292      	uxth	r2, r2
 8000548:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800054c:	4542      	cmp	r2, r8
 800054e:	d229      	bcs.n	80005a4 <__udivmoddi4+0x2e4>
 8000550:	18ba      	adds	r2, r7, r2
 8000552:	f109 31ff 	add.w	r1, r9, #4294967295
 8000556:	d2c4      	bcs.n	80004e2 <__udivmoddi4+0x222>
 8000558:	4542      	cmp	r2, r8
 800055a:	d2c2      	bcs.n	80004e2 <__udivmoddi4+0x222>
 800055c:	f1a9 0102 	sub.w	r1, r9, #2
 8000560:	443a      	add	r2, r7
 8000562:	e7be      	b.n	80004e2 <__udivmoddi4+0x222>
 8000564:	45f0      	cmp	r8, lr
 8000566:	d29d      	bcs.n	80004a4 <__udivmoddi4+0x1e4>
 8000568:	ebbe 0302 	subs.w	r3, lr, r2
 800056c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000570:	3801      	subs	r0, #1
 8000572:	46e1      	mov	r9, ip
 8000574:	e796      	b.n	80004a4 <__udivmoddi4+0x1e4>
 8000576:	eba7 0909 	sub.w	r9, r7, r9
 800057a:	4449      	add	r1, r9
 800057c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000580:	fbb1 f9fe 	udiv	r9, r1, lr
 8000584:	fb09 f804 	mul.w	r8, r9, r4
 8000588:	e7db      	b.n	8000542 <__udivmoddi4+0x282>
 800058a:	4673      	mov	r3, lr
 800058c:	e77f      	b.n	800048e <__udivmoddi4+0x1ce>
 800058e:	4650      	mov	r0, sl
 8000590:	e766      	b.n	8000460 <__udivmoddi4+0x1a0>
 8000592:	4608      	mov	r0, r1
 8000594:	e6fd      	b.n	8000392 <__udivmoddi4+0xd2>
 8000596:	443b      	add	r3, r7
 8000598:	3a02      	subs	r2, #2
 800059a:	e733      	b.n	8000404 <__udivmoddi4+0x144>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	443b      	add	r3, r7
 80005a2:	e71c      	b.n	80003de <__udivmoddi4+0x11e>
 80005a4:	4649      	mov	r1, r9
 80005a6:	e79c      	b.n	80004e2 <__udivmoddi4+0x222>
 80005a8:	eba1 0109 	sub.w	r1, r1, r9
 80005ac:	46c4      	mov	ip, r8
 80005ae:	fbb1 f9fe 	udiv	r9, r1, lr
 80005b2:	fb09 f804 	mul.w	r8, r9, r4
 80005b6:	e7c4      	b.n	8000542 <__udivmoddi4+0x282>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <BNO_Init>:
IMUSample blackbox[MAX_SAMPLES]; // flight data buffer
uint16_t sample_index = 0;
int counter =0;


void BNO_Init(){
 80005bc:	b580      	push	{r7, lr}
 80005be:	b088      	sub	sp, #32
 80005c0:	af04      	add	r7, sp, #16
	uint8_t ndof_mode = 0x0C;
 80005c2:	230c      	movs	r3, #12
 80005c4:	71fb      	strb	r3, [r7, #7]
	uint8_t config_mode = 0x00;
 80005c6:	2300      	movs	r3, #0
 80005c8:	71bb      	strb	r3, [r7, #6]
	uint8_t successfulRead = false;
 80005ca:	2300      	movs	r3, #0
 80005cc:	73fb      	strb	r3, [r7, #15]
	uint8_t sampleData = 0x00;
 80005ce:	2300      	movs	r3, #0
 80005d0:	717b      	strb	r3, [r7, #5]
	int calibrated = false;
 80005d2:	2300      	movs	r3, #0
 80005d4:	60bb      	str	r3, [r7, #8]


	while(successfulRead == false){ //WAIT to verify IMU connection
 80005d6:	e025      	b.n	8000624 <BNO_Init+0x68>
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //reset BNO055
 80005d8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80005dc:	4836      	ldr	r0, [pc, #216]	@ (80006b8 <BNO_Init+0xfc>)
 80005de:	f002 fb72 	bl	8002cc6 <HAL_GPIO_TogglePin>
	HAL_Delay(1000);						//wait on BNO
 80005e2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80005e6:	f001 fbb5 	bl	8001d54 <HAL_Delay>
	HAL_I2C_DeInit(&hi2c1);                 //reset I2C1
 80005ea:	4834      	ldr	r0, [pc, #208]	@ (80006bc <BNO_Init+0x100>)
 80005ec:	f002 fcca 	bl	8002f84 <HAL_I2C_DeInit>
	HAL_I2C_Init(&hi2c1);
 80005f0:	4832      	ldr	r0, [pc, #200]	@ (80006bc <BNO_Init+0x100>)
 80005f2:	f002 fb83 	bl	8002cfc <HAL_I2C_Init>
	if (hi2c1.State == HAL_I2C_STATE_READY) { //once I2C is reset
 80005f6:	4b31      	ldr	r3, [pc, #196]	@ (80006bc <BNO_Init+0x100>)
 80005f8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80005fc:	b2db      	uxtb	r3, r3
 80005fe:	2b20      	cmp	r3, #32
 8000600:	d10b      	bne.n	800061a <BNO_Init+0x5e>
		HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, 0x00, 1, &sampleData, 1, 100); // 0xaA0 should be returned if receiving from IMU
 8000602:	2364      	movs	r3, #100	@ 0x64
 8000604:	9302      	str	r3, [sp, #8]
 8000606:	2301      	movs	r3, #1
 8000608:	9301      	str	r3, [sp, #4]
 800060a:	1d7b      	adds	r3, r7, #5
 800060c:	9300      	str	r3, [sp, #0]
 800060e:	2301      	movs	r3, #1
 8000610:	2200      	movs	r2, #0
 8000612:	2150      	movs	r1, #80	@ 0x50
 8000614:	4829      	ldr	r0, [pc, #164]	@ (80006bc <BNO_Init+0x100>)
 8000616:	f002 fddf 	bl	80031d8 <HAL_I2C_Mem_Read>
	}
	if (sampleData == 0xa0){ //verify that the data read is expected, not junk
 800061a:	797b      	ldrb	r3, [r7, #5]
 800061c:	2ba0      	cmp	r3, #160	@ 0xa0
 800061e:	d101      	bne.n	8000624 <BNO_Init+0x68>
		successfulRead = true;
 8000620:	2301      	movs	r3, #1
 8000622:	73fb      	strb	r3, [r7, #15]
	while(successfulRead == false){ //WAIT to verify IMU connection
 8000624:	7bfb      	ldrb	r3, [r7, #15]
 8000626:	2b00      	cmp	r3, #0
 8000628:	d0d6      	beq.n	80005d8 <BNO_Init+0x1c>
	}
	}
	// Set to CONFIG mode
    HAL_I2C_Mem_Write(&hi2c1, BNO055_I2C_ADDR, BNO055_OPR_MODE_ADDR, I2C_MEMADD_SIZE_8BIT, &config_mode, 1, 100);
 800062a:	2364      	movs	r3, #100	@ 0x64
 800062c:	9302      	str	r3, [sp, #8]
 800062e:	2301      	movs	r3, #1
 8000630:	9301      	str	r3, [sp, #4]
 8000632:	1dbb      	adds	r3, r7, #6
 8000634:	9300      	str	r3, [sp, #0]
 8000636:	2301      	movs	r3, #1
 8000638:	223d      	movs	r2, #61	@ 0x3d
 800063a:	2150      	movs	r1, #80	@ 0x50
 800063c:	481f      	ldr	r0, [pc, #124]	@ (80006bc <BNO_Init+0x100>)
 800063e:	f002 fcd1 	bl	8002fe4 <HAL_I2C_Mem_Write>
    HAL_Delay(25);
 8000642:	2019      	movs	r0, #25
 8000644:	f001 fb86 	bl	8001d54 <HAL_Delay>
    //Set to NDOF mode
    HAL_I2C_Mem_Write(&hi2c1, BNO055_I2C_ADDR, BNO055_OPR_MODE_ADDR, I2C_MEMADD_SIZE_8BIT, &ndof_mode, 1, 100);
 8000648:	2364      	movs	r3, #100	@ 0x64
 800064a:	9302      	str	r3, [sp, #8]
 800064c:	2301      	movs	r3, #1
 800064e:	9301      	str	r3, [sp, #4]
 8000650:	1dfb      	adds	r3, r7, #7
 8000652:	9300      	str	r3, [sp, #0]
 8000654:	2301      	movs	r3, #1
 8000656:	223d      	movs	r2, #61	@ 0x3d
 8000658:	2150      	movs	r1, #80	@ 0x50
 800065a:	4818      	ldr	r0, [pc, #96]	@ (80006bc <BNO_Init+0x100>)
 800065c:	f002 fcc2 	bl	8002fe4 <HAL_I2C_Mem_Write>
    HAL_Delay(25);
 8000660:	2019      	movs	r0, #25
 8000662:	f001 fb77 	bl	8001d54 <HAL_Delay>

	while(calibrated == false){ //wait for IMU to calibrate
 8000666:	e01f      	b.n	80006a8 <BNO_Init+0xec>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);   // Set PA0 High (Red LED on)
 8000668:	2201      	movs	r2, #1
 800066a:	2101      	movs	r1, #1
 800066c:	4814      	ldr	r0, [pc, #80]	@ (80006c0 <BNO_Init+0x104>)
 800066e:	f002 fb11 	bl	8002c94 <HAL_GPIO_WritePin>
		HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, BNO055_CALIB_STAT, 1, &calibData, 1, 100);
 8000672:	2364      	movs	r3, #100	@ 0x64
 8000674:	9302      	str	r3, [sp, #8]
 8000676:	2301      	movs	r3, #1
 8000678:	9301      	str	r3, [sp, #4]
 800067a:	4b12      	ldr	r3, [pc, #72]	@ (80006c4 <BNO_Init+0x108>)
 800067c:	9300      	str	r3, [sp, #0]
 800067e:	2301      	movs	r3, #1
 8000680:	2235      	movs	r2, #53	@ 0x35
 8000682:	2150      	movs	r1, #80	@ 0x50
 8000684:	480d      	ldr	r0, [pc, #52]	@ (80006bc <BNO_Init+0x100>)
 8000686:	f002 fda7 	bl	80031d8 <HAL_I2C_Mem_Read>
		if (((calibData >> 6) & 0x03) == 0x03){ //if sys cal 2-bit is equal to 3
 800068a:	4b0e      	ldr	r3, [pc, #56]	@ (80006c4 <BNO_Init+0x108>)
 800068c:	781b      	ldrb	r3, [r3, #0]
 800068e:	099b      	lsrs	r3, r3, #6
 8000690:	b2db      	uxtb	r3, r3
 8000692:	f003 0303 	and.w	r3, r3, #3
 8000696:	2b03      	cmp	r3, #3
 8000698:	d101      	bne.n	800069e <BNO_Init+0xe2>
			calibrated = true;
 800069a:	2301      	movs	r3, #1
 800069c:	60bb      	str	r3, [r7, #8]

	}
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);   // Set PA0 Low (red LED off)
 800069e:	2200      	movs	r2, #0
 80006a0:	2101      	movs	r1, #1
 80006a2:	4807      	ldr	r0, [pc, #28]	@ (80006c0 <BNO_Init+0x104>)
 80006a4:	f002 faf6 	bl	8002c94 <HAL_GPIO_WritePin>
	while(calibrated == false){ //wait for IMU to calibrate
 80006a8:	68bb      	ldr	r3, [r7, #8]
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d0dc      	beq.n	8000668 <BNO_Init+0xac>
}
}
 80006ae:	bf00      	nop
 80006b0:	bf00      	nop
 80006b2:	3710      	adds	r7, #16
 80006b4:	46bd      	mov	sp, r7
 80006b6:	bd80      	pop	{r7, pc}
 80006b8:	40020400 	.word	0x40020400
 80006bc:	2001394c 	.word	0x2001394c
 80006c0:	40020000 	.word	0x40020000
 80006c4:	200000a8 	.word	0x200000a8

080006c8 <BNO_Read>:


void BNO_Read(int32_t *roll, int32_t *pitch, int32_t *yaw){
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b08e      	sub	sp, #56	@ 0x38
 80006cc:	af04      	add	r7, sp, #16
 80006ce:	60f8      	str	r0, [r7, #12]
 80006d0:	60b9      	str	r1, [r7, #8]
 80006d2:	607a      	str	r2, [r7, #4]
	uint8_t eulerData[6];
	int32_t rawYaw16;
	int32_t rawPitch16;
	int32_t rawRoll16;
	HAL_I2C_Mem_Read(&hi2c1, BNO055_I2C_ADDR, BNO055_EULER_LSB, I2C_MEMADD_SIZE_8BIT, eulerData, 6, 100);
 80006d4:	2364      	movs	r3, #100	@ 0x64
 80006d6:	9302      	str	r3, [sp, #8]
 80006d8:	2306      	movs	r3, #6
 80006da:	9301      	str	r3, [sp, #4]
 80006dc:	f107 0314 	add.w	r3, r7, #20
 80006e0:	9300      	str	r3, [sp, #0]
 80006e2:	2301      	movs	r3, #1
 80006e4:	221a      	movs	r2, #26
 80006e6:	2150      	movs	r1, #80	@ 0x50
 80006e8:	4836      	ldr	r0, [pc, #216]	@ (80007c4 <BNO_Read+0xfc>)
 80006ea:	f002 fd75 	bl	80031d8 <HAL_I2C_Mem_Read>

    rawYaw16   = (int16_t)((eulerData[1] << 8) | eulerData[0]);
 80006ee:	7d7b      	ldrb	r3, [r7, #21]
 80006f0:	b21b      	sxth	r3, r3
 80006f2:	021b      	lsls	r3, r3, #8
 80006f4:	b21a      	sxth	r2, r3
 80006f6:	7d3b      	ldrb	r3, [r7, #20]
 80006f8:	b21b      	sxth	r3, r3
 80006fa:	4313      	orrs	r3, r2
 80006fc:	b21b      	sxth	r3, r3
 80006fe:	627b      	str	r3, [r7, #36]	@ 0x24
    rawRoll16  = (int16_t)((eulerData[3] << 8) | eulerData[2]);
 8000700:	7dfb      	ldrb	r3, [r7, #23]
 8000702:	b21b      	sxth	r3, r3
 8000704:	021b      	lsls	r3, r3, #8
 8000706:	b21a      	sxth	r2, r3
 8000708:	7dbb      	ldrb	r3, [r7, #22]
 800070a:	b21b      	sxth	r3, r3
 800070c:	4313      	orrs	r3, r2
 800070e:	b21b      	sxth	r3, r3
 8000710:	623b      	str	r3, [r7, #32]
    rawPitch16 = (int16_t)((eulerData[5] << 8) | eulerData[4]);
 8000712:	7e7b      	ldrb	r3, [r7, #25]
 8000714:	b21b      	sxth	r3, r3
 8000716:	021b      	lsls	r3, r3, #8
 8000718:	b21a      	sxth	r2, r3
 800071a:	7e3b      	ldrb	r3, [r7, #24]
 800071c:	b21b      	sxth	r3, r3
 800071e:	4313      	orrs	r3, r2
 8000720:	b21b      	sxth	r3, r3
 8000722:	61fb      	str	r3, [r7, #28]


    *yaw   = ((int32_t)rawYaw16 * 1000) / 16;
 8000724:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000726:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800072a:	fb02 f303 	mul.w	r3, r2, r3
 800072e:	2b00      	cmp	r3, #0
 8000730:	da00      	bge.n	8000734 <BNO_Read+0x6c>
 8000732:	330f      	adds	r3, #15
 8000734:	111b      	asrs	r3, r3, #4
 8000736:	461a      	mov	r2, r3
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	601a      	str	r2, [r3, #0]
    *roll  = ((int32_t)rawRoll16 * 1000) / 16;
 800073c:	6a3b      	ldr	r3, [r7, #32]
 800073e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000742:	fb02 f303 	mul.w	r3, r2, r3
 8000746:	2b00      	cmp	r3, #0
 8000748:	da00      	bge.n	800074c <BNO_Read+0x84>
 800074a:	330f      	adds	r3, #15
 800074c:	111b      	asrs	r3, r3, #4
 800074e:	461a      	mov	r2, r3
 8000750:	68fb      	ldr	r3, [r7, #12]
 8000752:	601a      	str	r2, [r3, #0]
    *pitch = ((int32_t)rawPitch16 * 1000) / 16;
 8000754:	69fb      	ldr	r3, [r7, #28]
 8000756:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800075a:	fb02 f303 	mul.w	r3, r2, r3
 800075e:	2b00      	cmp	r3, #0
 8000760:	da00      	bge.n	8000764 <BNO_Read+0x9c>
 8000762:	330f      	adds	r3, #15
 8000764:	111b      	asrs	r3, r3, #4
 8000766:	461a      	mov	r2, r3
 8000768:	68bb      	ldr	r3, [r7, #8]
 800076a:	601a      	str	r2, [r3, #0]

    if (counter++ == blackboxFreq) { //This will send data every 'blackboxFreq' to blackbox for data analysis
 800076c:	4b16      	ldr	r3, [pc, #88]	@ (80007c8 <BNO_Read+0x100>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	1c5a      	adds	r2, r3, #1
 8000772:	4915      	ldr	r1, [pc, #84]	@ (80007c8 <BNO_Read+0x100>)
 8000774:	600a      	str	r2, [r1, #0]
 8000776:	2b02      	cmp	r3, #2
 8000778:	d11f      	bne.n	80007ba <BNO_Read+0xf2>
        if (sample_index < MAX_SAMPLES) {
 800077a:	4b14      	ldr	r3, [pc, #80]	@ (80007cc <BNO_Read+0x104>)
 800077c:	881b      	ldrh	r3, [r3, #0]
 800077e:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000782:	4293      	cmp	r3, r2
 8000784:	d816      	bhi.n	80007b4 <BNO_Read+0xec>
            blackbox[sample_index].pitch = *pitch;
 8000786:	4b11      	ldr	r3, [pc, #68]	@ (80007cc <BNO_Read+0x104>)
 8000788:	881b      	ldrh	r3, [r3, #0]
 800078a:	4619      	mov	r1, r3
 800078c:	68bb      	ldr	r3, [r7, #8]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	4a0f      	ldr	r2, [pc, #60]	@ (80007d0 <BNO_Read+0x108>)
 8000792:	f842 3031 	str.w	r3, [r2, r1, lsl #3]
            blackbox[sample_index].roll  = *roll;
 8000796:	4b0d      	ldr	r3, [pc, #52]	@ (80007cc <BNO_Read+0x104>)
 8000798:	881b      	ldrh	r3, [r3, #0]
 800079a:	4618      	mov	r0, r3
 800079c:	68fb      	ldr	r3, [r7, #12]
 800079e:	681a      	ldr	r2, [r3, #0]
 80007a0:	490b      	ldr	r1, [pc, #44]	@ (80007d0 <BNO_Read+0x108>)
 80007a2:	00c3      	lsls	r3, r0, #3
 80007a4:	440b      	add	r3, r1
 80007a6:	605a      	str	r2, [r3, #4]
            sample_index++;
 80007a8:	4b08      	ldr	r3, [pc, #32]	@ (80007cc <BNO_Read+0x104>)
 80007aa:	881b      	ldrh	r3, [r3, #0]
 80007ac:	3301      	adds	r3, #1
 80007ae:	b29a      	uxth	r2, r3
 80007b0:	4b06      	ldr	r3, [pc, #24]	@ (80007cc <BNO_Read+0x104>)
 80007b2:	801a      	strh	r2, [r3, #0]
        }
        counter = 0;
 80007b4:	4b04      	ldr	r3, [pc, #16]	@ (80007c8 <BNO_Read+0x100>)
 80007b6:	2200      	movs	r2, #0
 80007b8:	601a      	str	r2, [r3, #0]
    }

}
 80007ba:	bf00      	nop
 80007bc:	3728      	adds	r7, #40	@ 0x28
 80007be:	46bd      	mov	sp, r7
 80007c0:	bd80      	pop	{r7, pc}
 80007c2:	bf00      	nop
 80007c4:	2001394c 	.word	0x2001394c
 80007c8:	20013930 	.word	0x20013930
 80007cc:	2001392c 	.word	0x2001392c
 80007d0:	200000ac 	.word	0x200000ac

080007d4 <armESC>:
int A, B, C, D = 0;
int armCompare = 0;
int  max_integral = 100000;

void armESC()
{
 80007d4:	b580      	push	{r7, lr}
 80007d6:	af00      	add	r7, sp, #0
 effort_set = 1000;
 80007d8:	4b2a      	ldr	r3, [pc, #168]	@ (8000884 <armESC+0xb0>)
 80007da:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80007de:	601a      	str	r2, [r3, #0]
	while(roll_set < 150000){
 80007e0:	e043      	b.n	800086a <armESC+0x96>
	    HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 80007e2:	2100      	movs	r1, #0
 80007e4:	4828      	ldr	r0, [pc, #160]	@ (8000888 <armESC+0xb4>)
 80007e6:	f003 ff85 	bl	80046f4 <HAL_TIM_PWM_Start>
	    HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 80007ea:	2104      	movs	r1, #4
 80007ec:	4826      	ldr	r0, [pc, #152]	@ (8000888 <armESC+0xb4>)
 80007ee:	f003 ff81 	bl	80046f4 <HAL_TIM_PWM_Start>
	    HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 80007f2:	2108      	movs	r1, #8
 80007f4:	4824      	ldr	r0, [pc, #144]	@ (8000888 <armESC+0xb4>)
 80007f6:	f003 ff7d 	bl	80046f4 <HAL_TIM_PWM_Start>
	    HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 80007fa:	210c      	movs	r1, #12
 80007fc:	4822      	ldr	r0, [pc, #136]	@ (8000888 <armESC+0xb4>)
 80007fe:	f003 ff79 	bl	80046f4 <HAL_TIM_PWM_Start>

	    // Step 1: Send 960 (approx. 1000us) to arm
	    armCompare = effort_set*4 - 2000;
 8000802:	4b20      	ldr	r3, [pc, #128]	@ (8000884 <armESC+0xb0>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	f5a3 73fa 	sub.w	r3, r3, #500	@ 0x1f4
 800080a:	009b      	lsls	r3, r3, #2
 800080c:	4a1f      	ldr	r2, [pc, #124]	@ (800088c <armESC+0xb8>)
 800080e:	6013      	str	r3, [r2, #0]
	    if (armCompare < 960) armCompare = 960;
 8000810:	4b1e      	ldr	r3, [pc, #120]	@ (800088c <armESC+0xb8>)
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8000818:	da03      	bge.n	8000822 <armESC+0x4e>
 800081a:	4b1c      	ldr	r3, [pc, #112]	@ (800088c <armESC+0xb8>)
 800081c:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000820:	601a      	str	r2, [r3, #0]
	    if (armCompare > 2000) armCompare = 2000;
 8000822:	4b1a      	ldr	r3, [pc, #104]	@ (800088c <armESC+0xb8>)
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 800082a:	dd03      	ble.n	8000834 <armESC+0x60>
 800082c:	4b17      	ldr	r3, [pc, #92]	@ (800088c <armESC+0xb8>)
 800082e:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8000832:	601a      	str	r2, [r3, #0]
	    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, armCompare);
 8000834:	4b15      	ldr	r3, [pc, #84]	@ (800088c <armESC+0xb8>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	4b13      	ldr	r3, [pc, #76]	@ (8000888 <armESC+0xb4>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	635a      	str	r2, [r3, #52]	@ 0x34
	    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_2, armCompare);
 800083e:	4b13      	ldr	r3, [pc, #76]	@ (800088c <armESC+0xb8>)
 8000840:	681a      	ldr	r2, [r3, #0]
 8000842:	4b11      	ldr	r3, [pc, #68]	@ (8000888 <armESC+0xb4>)
 8000844:	681b      	ldr	r3, [r3, #0]
 8000846:	639a      	str	r2, [r3, #56]	@ 0x38
	    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, armCompare);
 8000848:	4b10      	ldr	r3, [pc, #64]	@ (800088c <armESC+0xb8>)
 800084a:	681a      	ldr	r2, [r3, #0]
 800084c:	4b0e      	ldr	r3, [pc, #56]	@ (8000888 <armESC+0xb4>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	63da      	str	r2, [r3, #60]	@ 0x3c
	    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, armCompare);
 8000852:	4b0e      	ldr	r3, [pc, #56]	@ (800088c <armESC+0xb8>)
 8000854:	681a      	ldr	r2, [r3, #0]
 8000856:	4b0c      	ldr	r3, [pc, #48]	@ (8000888 <armESC+0xb4>)
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	641a      	str	r2, [r3, #64]	@ 0x40

	    HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0);  // Change GPIOA and PIN as needed
 800085c:	2101      	movs	r1, #1
 800085e:	480c      	ldr	r0, [pc, #48]	@ (8000890 <armESC+0xbc>)
 8000860:	f002 fa31 	bl	8002cc6 <HAL_GPIO_TogglePin>
	    HAL_Delay(125);
 8000864:	207d      	movs	r0, #125	@ 0x7d
 8000866:	f001 fa75 	bl	8001d54 <HAL_Delay>
	while(roll_set < 150000){
 800086a:	4b0a      	ldr	r3, [pc, #40]	@ (8000894 <armESC+0xc0>)
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a0a      	ldr	r2, [pc, #40]	@ (8000898 <armESC+0xc4>)
 8000870:	4293      	cmp	r3, r2
 8000872:	ddb6      	ble.n	80007e2 <armESC+0xe>
    }
   effort_set = 0;
 8000874:	4b03      	ldr	r3, [pc, #12]	@ (8000884 <armESC+0xb0>)
 8000876:	2200      	movs	r2, #0
 8000878:	601a      	str	r2, [r3, #0]
   armCompare = 0;
 800087a:	4b04      	ldr	r3, [pc, #16]	@ (800088c <armESC+0xb8>)
 800087c:	2200      	movs	r2, #0
 800087e:	601a      	str	r2, [r3, #0]
}
 8000880:	bf00      	nop
 8000882:	bd80      	pop	{r7, pc}
 8000884:	20013b40 	.word	0x20013b40
 8000888:	200139f4 	.word	0x200139f4
 800088c:	20013944 	.word	0x20013944
 8000890:	40020000 	.word	0x40020000
 8000894:	20013b34 	.word	0x20013b34
 8000898:	000249ef 	.word	0x000249ef

0800089c <update_Motors>:




void update_Motors(){ //Compare 960 = 1ms (0%)    Compare 2000 = 2ms (100%)
 800089c:	b480      	push	{r7}
 800089e:	b085      	sub	sp, #20
 80008a0:	af00      	add	r7, sp, #0
	//  Roll
	int roll_error = -roll_set + roll_true;
 80008a2:	4b85      	ldr	r3, [pc, #532]	@ (8000ab8 <update_Motors+0x21c>)
 80008a4:	681a      	ldr	r2, [r3, #0]
 80008a6:	4b85      	ldr	r3, [pc, #532]	@ (8000abc <update_Motors+0x220>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	1ad3      	subs	r3, r2, r3
 80008ac:	60fb      	str	r3, [r7, #12]
	roll_integral += roll_error;
 80008ae:	4b84      	ldr	r3, [pc, #528]	@ (8000ac0 <update_Motors+0x224>)
 80008b0:	681a      	ldr	r2, [r3, #0]
 80008b2:	68fb      	ldr	r3, [r7, #12]
 80008b4:	4413      	add	r3, r2
 80008b6:	4a82      	ldr	r2, [pc, #520]	@ (8000ac0 <update_Motors+0x224>)
 80008b8:	6013      	str	r3, [r2, #0]
	roll_derivative = roll_error - last_roll_error;
 80008ba:	4b82      	ldr	r3, [pc, #520]	@ (8000ac4 <update_Motors+0x228>)
 80008bc:	681b      	ldr	r3, [r3, #0]
 80008be:	68fa      	ldr	r2, [r7, #12]
 80008c0:	1ad3      	subs	r3, r2, r3
 80008c2:	4a81      	ldr	r2, [pc, #516]	@ (8000ac8 <update_Motors+0x22c>)
 80008c4:	6013      	str	r3, [r2, #0]

	///TESTING ONLY
	roll_effort = -(Kp_roll * roll_error + Ki_roll * roll_integral + Kd_roll * roll_derivative) / PID_SCALE;
 80008c6:	4b81      	ldr	r3, [pc, #516]	@ (8000acc <update_Motors+0x230>)
 80008c8:	681b      	ldr	r3, [r3, #0]
 80008ca:	68fa      	ldr	r2, [r7, #12]
 80008cc:	fb03 f202 	mul.w	r2, r3, r2
 80008d0:	4b7f      	ldr	r3, [pc, #508]	@ (8000ad0 <update_Motors+0x234>)
 80008d2:	681b      	ldr	r3, [r3, #0]
 80008d4:	497a      	ldr	r1, [pc, #488]	@ (8000ac0 <update_Motors+0x224>)
 80008d6:	6809      	ldr	r1, [r1, #0]
 80008d8:	fb01 f303 	mul.w	r3, r1, r3
 80008dc:	441a      	add	r2, r3
 80008de:	4b7d      	ldr	r3, [pc, #500]	@ (8000ad4 <update_Motors+0x238>)
 80008e0:	681b      	ldr	r3, [r3, #0]
 80008e2:	4979      	ldr	r1, [pc, #484]	@ (8000ac8 <update_Motors+0x22c>)
 80008e4:	6809      	ldr	r1, [r1, #0]
 80008e6:	fb01 f303 	mul.w	r3, r1, r3
 80008ea:	4413      	add	r3, r2
 80008ec:	4a7a      	ldr	r2, [pc, #488]	@ (8000ad8 <update_Motors+0x23c>)
 80008ee:	fb82 1203 	smull	r1, r2, r2, r3
 80008f2:	1352      	asrs	r2, r2, #13
 80008f4:	17db      	asrs	r3, r3, #31
 80008f6:	1a9b      	subs	r3, r3, r2
 80008f8:	4a78      	ldr	r2, [pc, #480]	@ (8000adc <update_Motors+0x240>)
 80008fa:	6013      	str	r3, [r2, #0]
	roll_effort = 0;
 80008fc:	4b77      	ldr	r3, [pc, #476]	@ (8000adc <update_Motors+0x240>)
 80008fe:	2200      	movs	r2, #0
 8000900:	601a      	str	r2, [r3, #0]
	/////END TESTING
	last_roll_error = roll_error;
 8000902:	4a70      	ldr	r2, [pc, #448]	@ (8000ac4 <update_Motors+0x228>)
 8000904:	68fb      	ldr	r3, [r7, #12]
 8000906:	6013      	str	r3, [r2, #0]

	// Pitch

	///TESTING ONLY
	pitch_set = 0;
 8000908:	4b75      	ldr	r3, [pc, #468]	@ (8000ae0 <update_Motors+0x244>)
 800090a:	2200      	movs	r2, #0
 800090c:	601a      	str	r2, [r3, #0]
	/////END TESTING
	int pitch_error = -pitch_set + pitch_true;
 800090e:	4b75      	ldr	r3, [pc, #468]	@ (8000ae4 <update_Motors+0x248>)
 8000910:	681a      	ldr	r2, [r3, #0]
 8000912:	4b73      	ldr	r3, [pc, #460]	@ (8000ae0 <update_Motors+0x244>)
 8000914:	681b      	ldr	r3, [r3, #0]
 8000916:	1ad3      	subs	r3, r2, r3
 8000918:	60bb      	str	r3, [r7, #8]

	pitch_integral += pitch_error/1000;
 800091a:	68bb      	ldr	r3, [r7, #8]
 800091c:	4a72      	ldr	r2, [pc, #456]	@ (8000ae8 <update_Motors+0x24c>)
 800091e:	fb82 1203 	smull	r1, r2, r2, r3
 8000922:	1192      	asrs	r2, r2, #6
 8000924:	17db      	asrs	r3, r3, #31
 8000926:	1ad2      	subs	r2, r2, r3
 8000928:	4b70      	ldr	r3, [pc, #448]	@ (8000aec <update_Motors+0x250>)
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	4413      	add	r3, r2
 800092e:	4a6f      	ldr	r2, [pc, #444]	@ (8000aec <update_Motors+0x250>)
 8000930:	6013      	str	r3, [r2, #0]
	if (pitch_integral > max_integral) {
 8000932:	4b6e      	ldr	r3, [pc, #440]	@ (8000aec <update_Motors+0x250>)
 8000934:	681a      	ldr	r2, [r3, #0]
 8000936:	4b6e      	ldr	r3, [pc, #440]	@ (8000af0 <update_Motors+0x254>)
 8000938:	681b      	ldr	r3, [r3, #0]
 800093a:	429a      	cmp	r2, r3
 800093c:	dd04      	ble.n	8000948 <update_Motors+0xac>
	    pitch_integral = max_integral;
 800093e:	4b6c      	ldr	r3, [pc, #432]	@ (8000af0 <update_Motors+0x254>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	4a6a      	ldr	r2, [pc, #424]	@ (8000aec <update_Motors+0x250>)
 8000944:	6013      	str	r3, [r2, #0]
 8000946:	e00b      	b.n	8000960 <update_Motors+0xc4>
	} else if (pitch_integral < -max_integral) {
 8000948:	4b69      	ldr	r3, [pc, #420]	@ (8000af0 <update_Motors+0x254>)
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	425a      	negs	r2, r3
 800094e:	4b67      	ldr	r3, [pc, #412]	@ (8000aec <update_Motors+0x250>)
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	429a      	cmp	r2, r3
 8000954:	dd04      	ble.n	8000960 <update_Motors+0xc4>
	    pitch_integral = -max_integral;
 8000956:	4b66      	ldr	r3, [pc, #408]	@ (8000af0 <update_Motors+0x254>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	425b      	negs	r3, r3
 800095c:	4a63      	ldr	r2, [pc, #396]	@ (8000aec <update_Motors+0x250>)
 800095e:	6013      	str	r3, [r2, #0]
	}
	pitch_derivative = pitch_error - last_pitch_error;
 8000960:	4b64      	ldr	r3, [pc, #400]	@ (8000af4 <update_Motors+0x258>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	68ba      	ldr	r2, [r7, #8]
 8000966:	1ad3      	subs	r3, r2, r3
 8000968:	4a63      	ldr	r2, [pc, #396]	@ (8000af8 <update_Motors+0x25c>)
 800096a:	6013      	str	r3, [r2, #0]
	pitch_effort = -(Kp_pitch * pitch_error + Ki_pitch * pitch_integral + Kd_pitch * pitch_derivative) / PID_SCALE;
 800096c:	4b63      	ldr	r3, [pc, #396]	@ (8000afc <update_Motors+0x260>)
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	68ba      	ldr	r2, [r7, #8]
 8000972:	fb03 f202 	mul.w	r2, r3, r2
 8000976:	4b62      	ldr	r3, [pc, #392]	@ (8000b00 <update_Motors+0x264>)
 8000978:	681b      	ldr	r3, [r3, #0]
 800097a:	495c      	ldr	r1, [pc, #368]	@ (8000aec <update_Motors+0x250>)
 800097c:	6809      	ldr	r1, [r1, #0]
 800097e:	fb01 f303 	mul.w	r3, r1, r3
 8000982:	441a      	add	r2, r3
 8000984:	4b5f      	ldr	r3, [pc, #380]	@ (8000b04 <update_Motors+0x268>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	495b      	ldr	r1, [pc, #364]	@ (8000af8 <update_Motors+0x25c>)
 800098a:	6809      	ldr	r1, [r1, #0]
 800098c:	fb01 f303 	mul.w	r3, r1, r3
 8000990:	4413      	add	r3, r2
 8000992:	4a51      	ldr	r2, [pc, #324]	@ (8000ad8 <update_Motors+0x23c>)
 8000994:	fb82 1203 	smull	r1, r2, r2, r3
 8000998:	1352      	asrs	r2, r2, #13
 800099a:	17db      	asrs	r3, r3, #31
 800099c:	1a9b      	subs	r3, r3, r2
 800099e:	4a5a      	ldr	r2, [pc, #360]	@ (8000b08 <update_Motors+0x26c>)
 80009a0:	6013      	str	r3, [r2, #0]
	last_pitch_error = pitch_error;
 80009a2:	4a54      	ldr	r2, [pc, #336]	@ (8000af4 <update_Motors+0x258>)
 80009a4:	68bb      	ldr	r3, [r7, #8]
 80009a6:	6013      	str	r3, [r2, #0]

	//  Yaw
	int yaw_error = -yaw_set + yaw_true;
 80009a8:	4b58      	ldr	r3, [pc, #352]	@ (8000b0c <update_Motors+0x270>)
 80009aa:	681a      	ldr	r2, [r3, #0]
 80009ac:	4b58      	ldr	r3, [pc, #352]	@ (8000b10 <update_Motors+0x274>)
 80009ae:	681b      	ldr	r3, [r3, #0]
 80009b0:	1ad3      	subs	r3, r2, r3
 80009b2:	607b      	str	r3, [r7, #4]
	yaw_integral += yaw_error;
 80009b4:	4b57      	ldr	r3, [pc, #348]	@ (8000b14 <update_Motors+0x278>)
 80009b6:	681a      	ldr	r2, [r3, #0]
 80009b8:	687b      	ldr	r3, [r7, #4]
 80009ba:	4413      	add	r3, r2
 80009bc:	4a55      	ldr	r2, [pc, #340]	@ (8000b14 <update_Motors+0x278>)
 80009be:	6013      	str	r3, [r2, #0]
	yaw_derivative = yaw_error - last_yaw_error;
 80009c0:	4b55      	ldr	r3, [pc, #340]	@ (8000b18 <update_Motors+0x27c>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	687a      	ldr	r2, [r7, #4]
 80009c6:	1ad3      	subs	r3, r2, r3
 80009c8:	4a54      	ldr	r2, [pc, #336]	@ (8000b1c <update_Motors+0x280>)
 80009ca:	6013      	str	r3, [r2, #0]
	yaw_effort = -(Kp_yaw * yaw_error + Ki_yaw * yaw_integral + Kd_yaw * yaw_derivative) / PID_SCALE;
 80009cc:	4b54      	ldr	r3, [pc, #336]	@ (8000b20 <update_Motors+0x284>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	687a      	ldr	r2, [r7, #4]
 80009d2:	fb03 f202 	mul.w	r2, r3, r2
 80009d6:	4b53      	ldr	r3, [pc, #332]	@ (8000b24 <update_Motors+0x288>)
 80009d8:	681b      	ldr	r3, [r3, #0]
 80009da:	494e      	ldr	r1, [pc, #312]	@ (8000b14 <update_Motors+0x278>)
 80009dc:	6809      	ldr	r1, [r1, #0]
 80009de:	fb01 f303 	mul.w	r3, r1, r3
 80009e2:	441a      	add	r2, r3
 80009e4:	4b50      	ldr	r3, [pc, #320]	@ (8000b28 <update_Motors+0x28c>)
 80009e6:	681b      	ldr	r3, [r3, #0]
 80009e8:	494c      	ldr	r1, [pc, #304]	@ (8000b1c <update_Motors+0x280>)
 80009ea:	6809      	ldr	r1, [r1, #0]
 80009ec:	fb01 f303 	mul.w	r3, r1, r3
 80009f0:	4413      	add	r3, r2
 80009f2:	4a39      	ldr	r2, [pc, #228]	@ (8000ad8 <update_Motors+0x23c>)
 80009f4:	fb82 1203 	smull	r1, r2, r2, r3
 80009f8:	1352      	asrs	r2, r2, #13
 80009fa:	17db      	asrs	r3, r3, #31
 80009fc:	1a9b      	subs	r3, r3, r2
 80009fe:	4a4b      	ldr	r2, [pc, #300]	@ (8000b2c <update_Motors+0x290>)
 8000a00:	6013      	str	r3, [r2, #0]
	last_yaw_error = yaw_error;
 8000a02:	4a45      	ldr	r2, [pc, #276]	@ (8000b18 <update_Motors+0x27c>)
 8000a04:	687b      	ldr	r3, [r7, #4]
 8000a06:	6013      	str	r3, [r2, #0]
	//printf("Errors -> Roll, Pitch, Yaw,  %d,%d,%d \r\n", roll_error, pitch_error, yaw_error);


	// Start with base throttle
	A = effort_set * K_effort/PID_SCALE + motA_offset;
 8000a08:	4b49      	ldr	r3, [pc, #292]	@ (8000b30 <update_Motors+0x294>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	4a49      	ldr	r2, [pc, #292]	@ (8000b34 <update_Motors+0x298>)
 8000a0e:	6812      	ldr	r2, [r2, #0]
 8000a10:	fb02 f303 	mul.w	r3, r2, r3
 8000a14:	4a30      	ldr	r2, [pc, #192]	@ (8000ad8 <update_Motors+0x23c>)
 8000a16:	fb82 1203 	smull	r1, r2, r2, r3
 8000a1a:	1352      	asrs	r2, r2, #13
 8000a1c:	17db      	asrs	r3, r3, #31
 8000a1e:	1ad2      	subs	r2, r2, r3
 8000a20:	4b45      	ldr	r3, [pc, #276]	@ (8000b38 <update_Motors+0x29c>)
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	4413      	add	r3, r2
 8000a26:	4a45      	ldr	r2, [pc, #276]	@ (8000b3c <update_Motors+0x2a0>)
 8000a28:	6013      	str	r3, [r2, #0]
	B = effort_set * K_effort/PID_SCALE + motB_offset;
 8000a2a:	4b41      	ldr	r3, [pc, #260]	@ (8000b30 <update_Motors+0x294>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	4a41      	ldr	r2, [pc, #260]	@ (8000b34 <update_Motors+0x298>)
 8000a30:	6812      	ldr	r2, [r2, #0]
 8000a32:	fb02 f303 	mul.w	r3, r2, r3
 8000a36:	4a28      	ldr	r2, [pc, #160]	@ (8000ad8 <update_Motors+0x23c>)
 8000a38:	fb82 1203 	smull	r1, r2, r2, r3
 8000a3c:	1352      	asrs	r2, r2, #13
 8000a3e:	17db      	asrs	r3, r3, #31
 8000a40:	1ad2      	subs	r2, r2, r3
 8000a42:	4b3f      	ldr	r3, [pc, #252]	@ (8000b40 <update_Motors+0x2a4>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	4413      	add	r3, r2
 8000a48:	4a3e      	ldr	r2, [pc, #248]	@ (8000b44 <update_Motors+0x2a8>)
 8000a4a:	6013      	str	r3, [r2, #0]
	C = effort_set * K_effort/PID_SCALE + motC_offset;
 8000a4c:	4b38      	ldr	r3, [pc, #224]	@ (8000b30 <update_Motors+0x294>)
 8000a4e:	681b      	ldr	r3, [r3, #0]
 8000a50:	4a38      	ldr	r2, [pc, #224]	@ (8000b34 <update_Motors+0x298>)
 8000a52:	6812      	ldr	r2, [r2, #0]
 8000a54:	fb02 f303 	mul.w	r3, r2, r3
 8000a58:	4a1f      	ldr	r2, [pc, #124]	@ (8000ad8 <update_Motors+0x23c>)
 8000a5a:	fb82 1203 	smull	r1, r2, r2, r3
 8000a5e:	1352      	asrs	r2, r2, #13
 8000a60:	17db      	asrs	r3, r3, #31
 8000a62:	1ad2      	subs	r2, r2, r3
 8000a64:	4b38      	ldr	r3, [pc, #224]	@ (8000b48 <update_Motors+0x2ac>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	4413      	add	r3, r2
 8000a6a:	4a38      	ldr	r2, [pc, #224]	@ (8000b4c <update_Motors+0x2b0>)
 8000a6c:	6013      	str	r3, [r2, #0]
	D = effort_set * K_effort/PID_SCALE + motD_offset;
 8000a6e:	4b30      	ldr	r3, [pc, #192]	@ (8000b30 <update_Motors+0x294>)
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	4a30      	ldr	r2, [pc, #192]	@ (8000b34 <update_Motors+0x298>)
 8000a74:	6812      	ldr	r2, [r2, #0]
 8000a76:	fb02 f303 	mul.w	r3, r2, r3
 8000a7a:	4a17      	ldr	r2, [pc, #92]	@ (8000ad8 <update_Motors+0x23c>)
 8000a7c:	fb82 1203 	smull	r1, r2, r2, r3
 8000a80:	1352      	asrs	r2, r2, #13
 8000a82:	17db      	asrs	r3, r3, #31
 8000a84:	1ad2      	subs	r2, r2, r3
 8000a86:	4b32      	ldr	r3, [pc, #200]	@ (8000b50 <update_Motors+0x2b4>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	4413      	add	r3, r2
 8000a8c:	4a31      	ldr	r2, [pc, #196]	@ (8000b54 <update_Motors+0x2b8>)
 8000a8e:	6013      	str	r3, [r2, #0]

	// Pitch: affects A, B, C
	if (pitch_effort > 0) {
 8000a90:	4b1d      	ldr	r3, [pc, #116]	@ (8000b08 <update_Motors+0x26c>)
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	dd5f      	ble.n	8000b58 <update_Motors+0x2bc>
	    A += pitch_effort;
 8000a98:	4b28      	ldr	r3, [pc, #160]	@ (8000b3c <update_Motors+0x2a0>)
 8000a9a:	681a      	ldr	r2, [r3, #0]
 8000a9c:	4b1a      	ldr	r3, [pc, #104]	@ (8000b08 <update_Motors+0x26c>)
 8000a9e:	681b      	ldr	r3, [r3, #0]
 8000aa0:	4413      	add	r3, r2
 8000aa2:	4a26      	ldr	r2, [pc, #152]	@ (8000b3c <update_Motors+0x2a0>)
 8000aa4:	6013      	str	r3, [r2, #0]
	    D += pitch_effort;
 8000aa6:	4b2b      	ldr	r3, [pc, #172]	@ (8000b54 <update_Motors+0x2b8>)
 8000aa8:	681a      	ldr	r2, [r3, #0]
 8000aaa:	4b17      	ldr	r3, [pc, #92]	@ (8000b08 <update_Motors+0x26c>)
 8000aac:	681b      	ldr	r3, [r3, #0]
 8000aae:	4413      	add	r3, r2
 8000ab0:	4a28      	ldr	r2, [pc, #160]	@ (8000b54 <update_Motors+0x2b8>)
 8000ab2:	6013      	str	r3, [r2, #0]
 8000ab4:	e062      	b.n	8000b7c <update_Motors+0x2e0>
 8000ab6:	bf00      	nop
 8000ab8:	20013b44 	.word	0x20013b44
 8000abc:	20013b34 	.word	0x20013b34
 8000ac0:	20013b5c 	.word	0x20013b5c
 8000ac4:	20013b74 	.word	0x20013b74
 8000ac8:	20013b68 	.word	0x20013b68
 8000acc:	2000001c 	.word	0x2000001c
 8000ad0:	20013b80 	.word	0x20013b80
 8000ad4:	20013b84 	.word	0x20013b84
 8000ad8:	14f8b589 	.word	0x14f8b589
 8000adc:	20013b50 	.word	0x20013b50
 8000ae0:	20013b38 	.word	0x20013b38
 8000ae4:	20013b48 	.word	0x20013b48
 8000ae8:	10624dd3 	.word	0x10624dd3
 8000aec:	20013b60 	.word	0x20013b60
 8000af0:	20000010 	.word	0x20000010
 8000af4:	20013b78 	.word	0x20013b78
 8000af8:	20013b6c 	.word	0x20013b6c
 8000afc:	20000020 	.word	0x20000020
 8000b00:	20013b88 	.word	0x20013b88
 8000b04:	20013b8c 	.word	0x20013b8c
 8000b08:	20013b54 	.word	0x20013b54
 8000b0c:	20013b4c 	.word	0x20013b4c
 8000b10:	20013b3c 	.word	0x20013b3c
 8000b14:	20013b64 	.word	0x20013b64
 8000b18:	20013b7c 	.word	0x20013b7c
 8000b1c:	20013b70 	.word	0x20013b70
 8000b20:	20013b90 	.word	0x20013b90
 8000b24:	20013b94 	.word	0x20013b94
 8000b28:	20013b98 	.word	0x20013b98
 8000b2c:	20013b58 	.word	0x20013b58
 8000b30:	20013b40 	.word	0x20013b40
 8000b34:	20000018 	.word	0x20000018
 8000b38:	20000000 	.word	0x20000000
 8000b3c:	20013934 	.word	0x20013934
 8000b40:	20000004 	.word	0x20000004
 8000b44:	20013938 	.word	0x20013938
 8000b48:	20000008 	.word	0x20000008
 8000b4c:	2001393c 	.word	0x2001393c
 8000b50:	2000000c 	.word	0x2000000c
 8000b54:	20013940 	.word	0x20013940
	}
	else if (pitch_effort < 0) {
 8000b58:	4b60      	ldr	r3, [pc, #384]	@ (8000cdc <update_Motors+0x440>)
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	da0d      	bge.n	8000b7c <update_Motors+0x2e0>
	    B -= pitch_effort;
 8000b60:	4b5f      	ldr	r3, [pc, #380]	@ (8000ce0 <update_Motors+0x444>)
 8000b62:	681a      	ldr	r2, [r3, #0]
 8000b64:	4b5d      	ldr	r3, [pc, #372]	@ (8000cdc <update_Motors+0x440>)
 8000b66:	681b      	ldr	r3, [r3, #0]
 8000b68:	1ad3      	subs	r3, r2, r3
 8000b6a:	4a5d      	ldr	r2, [pc, #372]	@ (8000ce0 <update_Motors+0x444>)
 8000b6c:	6013      	str	r3, [r2, #0]
	    C -= pitch_effort;
 8000b6e:	4b5d      	ldr	r3, [pc, #372]	@ (8000ce4 <update_Motors+0x448>)
 8000b70:	681a      	ldr	r2, [r3, #0]
 8000b72:	4b5a      	ldr	r3, [pc, #360]	@ (8000cdc <update_Motors+0x440>)
 8000b74:	681b      	ldr	r3, [r3, #0]
 8000b76:	1ad3      	subs	r3, r2, r3
 8000b78:	4a5a      	ldr	r2, [pc, #360]	@ (8000ce4 <update_Motors+0x448>)
 8000b7a:	6013      	str	r3, [r2, #0]
	}

	// Roll: affects B, C
	if (roll_effort > 0) {
 8000b7c:	4b5a      	ldr	r3, [pc, #360]	@ (8000ce8 <update_Motors+0x44c>)
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	dd0e      	ble.n	8000ba2 <update_Motors+0x306>
	    D += roll_effort;
 8000b84:	4b59      	ldr	r3, [pc, #356]	@ (8000cec <update_Motors+0x450>)
 8000b86:	681a      	ldr	r2, [r3, #0]
 8000b88:	4b57      	ldr	r3, [pc, #348]	@ (8000ce8 <update_Motors+0x44c>)
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	4413      	add	r3, r2
 8000b8e:	4a57      	ldr	r2, [pc, #348]	@ (8000cec <update_Motors+0x450>)
 8000b90:	6013      	str	r3, [r2, #0]
	    C += roll_effort;
 8000b92:	4b54      	ldr	r3, [pc, #336]	@ (8000ce4 <update_Motors+0x448>)
 8000b94:	681a      	ldr	r2, [r3, #0]
 8000b96:	4b54      	ldr	r3, [pc, #336]	@ (8000ce8 <update_Motors+0x44c>)
 8000b98:	681b      	ldr	r3, [r3, #0]
 8000b9a:	4413      	add	r3, r2
 8000b9c:	4a51      	ldr	r2, [pc, #324]	@ (8000ce4 <update_Motors+0x448>)
 8000b9e:	6013      	str	r3, [r2, #0]
 8000ba0:	e011      	b.n	8000bc6 <update_Motors+0x32a>
	}
	else if (roll_effort < 0) {
 8000ba2:	4b51      	ldr	r3, [pc, #324]	@ (8000ce8 <update_Motors+0x44c>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	da0d      	bge.n	8000bc6 <update_Motors+0x32a>
	    B -= roll_effort;
 8000baa:	4b4d      	ldr	r3, [pc, #308]	@ (8000ce0 <update_Motors+0x444>)
 8000bac:	681a      	ldr	r2, [r3, #0]
 8000bae:	4b4e      	ldr	r3, [pc, #312]	@ (8000ce8 <update_Motors+0x44c>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	1ad3      	subs	r3, r2, r3
 8000bb4:	4a4a      	ldr	r2, [pc, #296]	@ (8000ce0 <update_Motors+0x444>)
 8000bb6:	6013      	str	r3, [r2, #0]
	    A -= roll_effort;
 8000bb8:	4b4d      	ldr	r3, [pc, #308]	@ (8000cf0 <update_Motors+0x454>)
 8000bba:	681a      	ldr	r2, [r3, #0]
 8000bbc:	4b4a      	ldr	r3, [pc, #296]	@ (8000ce8 <update_Motors+0x44c>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	1ad3      	subs	r3, r2, r3
 8000bc2:	4a4b      	ldr	r2, [pc, #300]	@ (8000cf0 <update_Motors+0x454>)
 8000bc4:	6013      	str	r3, [r2, #0]
	}

	// Yaw: affects A, C
	if (yaw_effort > 0) {
 8000bc6:	4b4b      	ldr	r3, [pc, #300]	@ (8000cf4 <update_Motors+0x458>)
 8000bc8:	681b      	ldr	r3, [r3, #0]
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	dd0e      	ble.n	8000bec <update_Motors+0x350>
	    B += yaw_effort;
 8000bce:	4b44      	ldr	r3, [pc, #272]	@ (8000ce0 <update_Motors+0x444>)
 8000bd0:	681a      	ldr	r2, [r3, #0]
 8000bd2:	4b48      	ldr	r3, [pc, #288]	@ (8000cf4 <update_Motors+0x458>)
 8000bd4:	681b      	ldr	r3, [r3, #0]
 8000bd6:	4413      	add	r3, r2
 8000bd8:	4a41      	ldr	r2, [pc, #260]	@ (8000ce0 <update_Motors+0x444>)
 8000bda:	6013      	str	r3, [r2, #0]
	    D += yaw_effort;
 8000bdc:	4b43      	ldr	r3, [pc, #268]	@ (8000cec <update_Motors+0x450>)
 8000bde:	681a      	ldr	r2, [r3, #0]
 8000be0:	4b44      	ldr	r3, [pc, #272]	@ (8000cf4 <update_Motors+0x458>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	4413      	add	r3, r2
 8000be6:	4a41      	ldr	r2, [pc, #260]	@ (8000cec <update_Motors+0x450>)
 8000be8:	6013      	str	r3, [r2, #0]
 8000bea:	e011      	b.n	8000c10 <update_Motors+0x374>
	}
	else if (yaw_effort < 0) {
 8000bec:	4b41      	ldr	r3, [pc, #260]	@ (8000cf4 <update_Motors+0x458>)
 8000bee:	681b      	ldr	r3, [r3, #0]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	da0d      	bge.n	8000c10 <update_Motors+0x374>
	    D -= yaw_effort;
 8000bf4:	4b3d      	ldr	r3, [pc, #244]	@ (8000cec <update_Motors+0x450>)
 8000bf6:	681a      	ldr	r2, [r3, #0]
 8000bf8:	4b3e      	ldr	r3, [pc, #248]	@ (8000cf4 <update_Motors+0x458>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	1ad3      	subs	r3, r2, r3
 8000bfe:	4a3b      	ldr	r2, [pc, #236]	@ (8000cec <update_Motors+0x450>)
 8000c00:	6013      	str	r3, [r2, #0]
	    C -= yaw_effort;
 8000c02:	4b38      	ldr	r3, [pc, #224]	@ (8000ce4 <update_Motors+0x448>)
 8000c04:	681a      	ldr	r2, [r3, #0]
 8000c06:	4b3b      	ldr	r3, [pc, #236]	@ (8000cf4 <update_Motors+0x458>)
 8000c08:	681b      	ldr	r3, [r3, #0]
 8000c0a:	1ad3      	subs	r3, r2, r3
 8000c0c:	4a35      	ldr	r2, [pc, #212]	@ (8000ce4 <update_Motors+0x448>)
 8000c0e:	6013      	str	r3, [r2, #0]
	}

    // Clamp between 960 (0%) and 1500 (appx 50%)
    if (A < 960) A = 960;
 8000c10:	4b37      	ldr	r3, [pc, #220]	@ (8000cf0 <update_Motors+0x454>)
 8000c12:	681b      	ldr	r3, [r3, #0]
 8000c14:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8000c18:	da03      	bge.n	8000c22 <update_Motors+0x386>
 8000c1a:	4b35      	ldr	r3, [pc, #212]	@ (8000cf0 <update_Motors+0x454>)
 8000c1c:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000c20:	601a      	str	r2, [r3, #0]
    if (A > 1500) A = 1500;
 8000c22:	4b33      	ldr	r3, [pc, #204]	@ (8000cf0 <update_Motors+0x454>)
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c2a:	4293      	cmp	r3, r2
 8000c2c:	dd03      	ble.n	8000c36 <update_Motors+0x39a>
 8000c2e:	4b30      	ldr	r3, [pc, #192]	@ (8000cf0 <update_Motors+0x454>)
 8000c30:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c34:	601a      	str	r2, [r3, #0]

    if (B < 960) B = 960;
 8000c36:	4b2a      	ldr	r3, [pc, #168]	@ (8000ce0 <update_Motors+0x444>)
 8000c38:	681b      	ldr	r3, [r3, #0]
 8000c3a:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8000c3e:	da03      	bge.n	8000c48 <update_Motors+0x3ac>
 8000c40:	4b27      	ldr	r3, [pc, #156]	@ (8000ce0 <update_Motors+0x444>)
 8000c42:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000c46:	601a      	str	r2, [r3, #0]
    if (B > 1500) B = 1500;
 8000c48:	4b25      	ldr	r3, [pc, #148]	@ (8000ce0 <update_Motors+0x444>)
 8000c4a:	681b      	ldr	r3, [r3, #0]
 8000c4c:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c50:	4293      	cmp	r3, r2
 8000c52:	dd03      	ble.n	8000c5c <update_Motors+0x3c0>
 8000c54:	4b22      	ldr	r3, [pc, #136]	@ (8000ce0 <update_Motors+0x444>)
 8000c56:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c5a:	601a      	str	r2, [r3, #0]

    if (C < 960) C = 960;
 8000c5c:	4b21      	ldr	r3, [pc, #132]	@ (8000ce4 <update_Motors+0x448>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8000c64:	da03      	bge.n	8000c6e <update_Motors+0x3d2>
 8000c66:	4b1f      	ldr	r3, [pc, #124]	@ (8000ce4 <update_Motors+0x448>)
 8000c68:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000c6c:	601a      	str	r2, [r3, #0]
    if (C > 1500) C = 1500;
 8000c6e:	4b1d      	ldr	r3, [pc, #116]	@ (8000ce4 <update_Motors+0x448>)
 8000c70:	681b      	ldr	r3, [r3, #0]
 8000c72:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c76:	4293      	cmp	r3, r2
 8000c78:	dd03      	ble.n	8000c82 <update_Motors+0x3e6>
 8000c7a:	4b1a      	ldr	r3, [pc, #104]	@ (8000ce4 <update_Motors+0x448>)
 8000c7c:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c80:	601a      	str	r2, [r3, #0]

    if (D < 960) D = 960;
 8000c82:	4b1a      	ldr	r3, [pc, #104]	@ (8000cec <update_Motors+0x450>)
 8000c84:	681b      	ldr	r3, [r3, #0]
 8000c86:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8000c8a:	da03      	bge.n	8000c94 <update_Motors+0x3f8>
 8000c8c:	4b17      	ldr	r3, [pc, #92]	@ (8000cec <update_Motors+0x450>)
 8000c8e:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
 8000c92:	601a      	str	r2, [r3, #0]
    if (D > 1500) D = 1500;
 8000c94:	4b15      	ldr	r3, [pc, #84]	@ (8000cec <update_Motors+0x450>)
 8000c96:	681b      	ldr	r3, [r3, #0]
 8000c98:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000c9c:	4293      	cmp	r3, r2
 8000c9e:	dd03      	ble.n	8000ca8 <update_Motors+0x40c>
 8000ca0:	4b12      	ldr	r3, [pc, #72]	@ (8000cec <update_Motors+0x450>)
 8000ca2:	f240 52dc 	movw	r2, #1500	@ 0x5dc
 8000ca6:	601a      	str	r2, [r3, #0]
     //printf("%d,%d,%d,%d \r\n", pitch_true, 0, 0, 0);




	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, A);
 8000ca8:	4b11      	ldr	r3, [pc, #68]	@ (8000cf0 <update_Motors+0x454>)
 8000caa:	681a      	ldr	r2, [r3, #0]
 8000cac:	4b12      	ldr	r3, [pc, #72]	@ (8000cf8 <update_Motors+0x45c>)
 8000cae:	681b      	ldr	r3, [r3, #0]
 8000cb0:	635a      	str	r2, [r3, #52]	@ 0x34
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_2, B);
 8000cb2:	4b0b      	ldr	r3, [pc, #44]	@ (8000ce0 <update_Motors+0x444>)
 8000cb4:	681a      	ldr	r2, [r3, #0]
 8000cb6:	4b10      	ldr	r3, [pc, #64]	@ (8000cf8 <update_Motors+0x45c>)
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	639a      	str	r2, [r3, #56]	@ 0x38
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, C);
 8000cbc:	4b09      	ldr	r3, [pc, #36]	@ (8000ce4 <update_Motors+0x448>)
 8000cbe:	681a      	ldr	r2, [r3, #0]
 8000cc0:	4b0d      	ldr	r3, [pc, #52]	@ (8000cf8 <update_Motors+0x45c>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	63da      	str	r2, [r3, #60]	@ 0x3c
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, D);
 8000cc6:	4b09      	ldr	r3, [pc, #36]	@ (8000cec <update_Motors+0x450>)
 8000cc8:	681a      	ldr	r2, [r3, #0]
 8000cca:	4b0b      	ldr	r3, [pc, #44]	@ (8000cf8 <update_Motors+0x45c>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	641a      	str	r2, [r3, #64]	@ 0x40

}
 8000cd0:	bf00      	nop
 8000cd2:	3714      	adds	r7, #20
 8000cd4:	46bd      	mov	sp, r7
 8000cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cda:	4770      	bx	lr
 8000cdc:	20013b54 	.word	0x20013b54
 8000ce0:	20013938 	.word	0x20013938
 8000ce4:	2001393c 	.word	0x2001393c
 8000ce8:	20013b50 	.word	0x20013b50
 8000cec:	20013940 	.word	0x20013940
 8000cf0:	20013934 	.word	0x20013934
 8000cf4:	20013b58 	.word	0x20013b58
 8000cf8:	200139f4 	.word	0x200139f4

08000cfc <processInput>:

void InitializeBT(void){
	//send message from HC05. Receive message from PC. Confirm and continue.
}

void processInput(char *charBuf, int32_t *roll, int32_t *pitch, int32_t *yaw, int32_t *effort, int *dumpFlag){
 8000cfc:	b580      	push	{r7, lr}
 8000cfe:	b08c      	sub	sp, #48	@ 0x30
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	60f8      	str	r0, [r7, #12]
 8000d04:	60b9      	str	r1, [r7, #8]
 8000d06:	607a      	str	r2, [r7, #4]
 8000d08:	603b      	str	r3, [r7, #0]
	   int32_t LjoyX, LjoyY, RjoyX, LT, RT, ENTER;

	   // Skip pound sign if present
	       if (charBuf[0] == '#') {
 8000d0a:	68fb      	ldr	r3, [r7, #12]
 8000d0c:	781b      	ldrb	r3, [r3, #0]
 8000d0e:	2b23      	cmp	r3, #35	@ 0x23
 8000d10:	d10b      	bne.n	8000d2a <processInput+0x2e>
	           charBuf++;  // move pointer to the next character
 8000d12:	68fb      	ldr	r3, [r7, #12]
 8000d14:	3301      	adds	r3, #1
 8000d16:	60fb      	str	r3, [r7, #12]
	    	   badBTcount++;
	    	   printf("Bad BT input (did not process): %d\r\n", badBTcount);
	    	   return;
	       }

	    char *token = strtok(charBuf, ",");
 8000d18:	494f      	ldr	r1, [pc, #316]	@ (8000e58 <processInput+0x15c>)
 8000d1a:	68f8      	ldr	r0, [r7, #12]
 8000d1c:	f005 fcca 	bl	80066b4 <strtok>
 8000d20:	6178      	str	r0, [r7, #20]
	    if (token) LjoyX = (int32_t)strtol(token, NULL, 10);
 8000d22:	697b      	ldr	r3, [r7, #20]
 8000d24:	2b00      	cmp	r3, #0
 8000d26:	d012      	beq.n	8000d4e <processInput+0x52>
 8000d28:	e00b      	b.n	8000d42 <processInput+0x46>
	    	   badBTcount++;
 8000d2a:	4b4c      	ldr	r3, [pc, #304]	@ (8000e5c <processInput+0x160>)
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	3301      	adds	r3, #1
 8000d30:	4a4a      	ldr	r2, [pc, #296]	@ (8000e5c <processInput+0x160>)
 8000d32:	6013      	str	r3, [r2, #0]
	    	   printf("Bad BT input (did not process): %d\r\n", badBTcount);
 8000d34:	4b49      	ldr	r3, [pc, #292]	@ (8000e5c <processInput+0x160>)
 8000d36:	681b      	ldr	r3, [r3, #0]
 8000d38:	4619      	mov	r1, r3
 8000d3a:	4849      	ldr	r0, [pc, #292]	@ (8000e60 <processInput+0x164>)
 8000d3c:	f005 fc26 	bl	800658c <iprintf>
	    	   return;
 8000d40:	e086      	b.n	8000e50 <processInput+0x154>
	    if (token) LjoyX = (int32_t)strtol(token, NULL, 10);
 8000d42:	220a      	movs	r2, #10
 8000d44:	2100      	movs	r1, #0
 8000d46:	6978      	ldr	r0, [r7, #20]
 8000d48:	f005 fb54 	bl	80063f4 <strtol>
 8000d4c:	62f8      	str	r0, [r7, #44]	@ 0x2c

	    token = strtok(NULL, ",");
 8000d4e:	4942      	ldr	r1, [pc, #264]	@ (8000e58 <processInput+0x15c>)
 8000d50:	2000      	movs	r0, #0
 8000d52:	f005 fcaf 	bl	80066b4 <strtok>
 8000d56:	6178      	str	r0, [r7, #20]
	    if (token) LjoyY = (int32_t)strtol(token, NULL, 10);
 8000d58:	697b      	ldr	r3, [r7, #20]
 8000d5a:	2b00      	cmp	r3, #0
 8000d5c:	d005      	beq.n	8000d6a <processInput+0x6e>
 8000d5e:	220a      	movs	r2, #10
 8000d60:	2100      	movs	r1, #0
 8000d62:	6978      	ldr	r0, [r7, #20]
 8000d64:	f005 fb46 	bl	80063f4 <strtol>
 8000d68:	62b8      	str	r0, [r7, #40]	@ 0x28

	    token = strtok(NULL, ",");
 8000d6a:	493b      	ldr	r1, [pc, #236]	@ (8000e58 <processInput+0x15c>)
 8000d6c:	2000      	movs	r0, #0
 8000d6e:	f005 fca1 	bl	80066b4 <strtok>
 8000d72:	6178      	str	r0, [r7, #20]
	    if (token) RjoyX = (int32_t)strtol(token, NULL, 10);
 8000d74:	697b      	ldr	r3, [r7, #20]
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d005      	beq.n	8000d86 <processInput+0x8a>
 8000d7a:	220a      	movs	r2, #10
 8000d7c:	2100      	movs	r1, #0
 8000d7e:	6978      	ldr	r0, [r7, #20]
 8000d80:	f005 fb38 	bl	80063f4 <strtol>
 8000d84:	6278      	str	r0, [r7, #36]	@ 0x24

	    token = strtok(NULL, ",");
 8000d86:	4934      	ldr	r1, [pc, #208]	@ (8000e58 <processInput+0x15c>)
 8000d88:	2000      	movs	r0, #0
 8000d8a:	f005 fc93 	bl	80066b4 <strtok>
 8000d8e:	6178      	str	r0, [r7, #20]
	    if (token) LT = (int32_t)strtol(token, NULL, 10);
 8000d90:	697b      	ldr	r3, [r7, #20]
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d005      	beq.n	8000da2 <processInput+0xa6>
 8000d96:	220a      	movs	r2, #10
 8000d98:	2100      	movs	r1, #0
 8000d9a:	6978      	ldr	r0, [r7, #20]
 8000d9c:	f005 fb2a 	bl	80063f4 <strtol>
 8000da0:	6238      	str	r0, [r7, #32]

	    token = strtok(NULL, ",");
 8000da2:	492d      	ldr	r1, [pc, #180]	@ (8000e58 <processInput+0x15c>)
 8000da4:	2000      	movs	r0, #0
 8000da6:	f005 fc85 	bl	80066b4 <strtok>
 8000daa:	6178      	str	r0, [r7, #20]
	    if (token) RT = (int32_t)strtol(token, NULL, 10);
 8000dac:	697b      	ldr	r3, [r7, #20]
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	d005      	beq.n	8000dbe <processInput+0xc2>
 8000db2:	220a      	movs	r2, #10
 8000db4:	2100      	movs	r1, #0
 8000db6:	6978      	ldr	r0, [r7, #20]
 8000db8:	f005 fb1c 	bl	80063f4 <strtol>
 8000dbc:	61f8      	str	r0, [r7, #28]

	    token = strtok(NULL, ",");
 8000dbe:	4926      	ldr	r1, [pc, #152]	@ (8000e58 <processInput+0x15c>)
 8000dc0:	2000      	movs	r0, #0
 8000dc2:	f005 fc77 	bl	80066b4 <strtok>
 8000dc6:	6178      	str	r0, [r7, #20]
	    if (token) ENTER = (int32_t)strtol(token, NULL, 10);
 8000dc8:	697b      	ldr	r3, [r7, #20]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	d005      	beq.n	8000dda <processInput+0xde>
 8000dce:	220a      	movs	r2, #10
 8000dd0:	2100      	movs	r1, #0
 8000dd2:	6978      	ldr	r0, [r7, #20]
 8000dd4:	f005 fb0e 	bl	80063f4 <strtol>
 8000dd8:	61b8      	str	r0, [r7, #24]

	    // Assign parsed values to output pointers
	    *roll   = LjoyX*180;
 8000dda:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000ddc:	22b4      	movs	r2, #180	@ 0xb4
 8000dde:	fb03 f202 	mul.w	r2, r3, r2
 8000de2:	68bb      	ldr	r3, [r7, #8]
 8000de4:	601a      	str	r2, [r3, #0]
	    *pitch  = LjoyY*180;
 8000de6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000de8:	22b4      	movs	r2, #180	@ 0xb4
 8000dea:	fb03 f202 	mul.w	r2, r3, r2
 8000dee:	687b      	ldr	r3, [r7, #4]
 8000df0:	601a      	str	r2, [r3, #0]
	    *yaw    = RjoyX*180;
 8000df2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000df4:	22b4      	movs	r2, #180	@ 0xb4
 8000df6:	fb03 f202 	mul.w	r2, r3, r2
 8000dfa:	683b      	ldr	r3, [r7, #0]
 8000dfc:	601a      	str	r2, [r3, #0]
	    *effort = *effort + (RT - LT)*effortRate/1000;
 8000dfe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e00:	681a      	ldr	r2, [r3, #0]
 8000e02:	69f9      	ldr	r1, [r7, #28]
 8000e04:	6a3b      	ldr	r3, [r7, #32]
 8000e06:	1acb      	subs	r3, r1, r3
 8000e08:	4916      	ldr	r1, [pc, #88]	@ (8000e64 <processInput+0x168>)
 8000e0a:	6809      	ldr	r1, [r1, #0]
 8000e0c:	fb01 f303 	mul.w	r3, r1, r3
 8000e10:	4915      	ldr	r1, [pc, #84]	@ (8000e68 <processInput+0x16c>)
 8000e12:	fb81 0103 	smull	r0, r1, r1, r3
 8000e16:	1189      	asrs	r1, r1, #6
 8000e18:	17db      	asrs	r3, r3, #31
 8000e1a:	1acb      	subs	r3, r1, r3
 8000e1c:	441a      	add	r2, r3
 8000e1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e20:	601a      	str	r2, [r3, #0]
	    if (*effort < 0){
 8000e22:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e24:	681b      	ldr	r3, [r3, #0]
 8000e26:	2b00      	cmp	r3, #0
 8000e28:	da03      	bge.n	8000e32 <processInput+0x136>
	    	*effort = 0;
 8000e2a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	601a      	str	r2, [r3, #0]
 8000e30:	e008      	b.n	8000e44 <processInput+0x148>
	    }else if(*effort > 1000){
 8000e32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000e3a:	dd03      	ble.n	8000e44 <processInput+0x148>
	    	*effort = 1000;
 8000e3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000e3e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000e42:	601a      	str	r2, [r3, #0]
	    }

	    if (ENTER == 1){
 8000e44:	69bb      	ldr	r3, [r7, #24]
 8000e46:	2b01      	cmp	r3, #1
 8000e48:	d102      	bne.n	8000e50 <processInput+0x154>
	    *dumpFlag = 1;
 8000e4a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8000e4c:	2201      	movs	r2, #1
 8000e4e:	601a      	str	r2, [r3, #0]
	    }

	   }
 8000e50:	3730      	adds	r7, #48	@ 0x30
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
 8000e56:	bf00      	nop
 8000e58:	0800783c 	.word	0x0800783c
 8000e5c:	20013948 	.word	0x20013948
 8000e60:	08007814 	.word	0x08007814
 8000e64:	20000014 	.word	0x20000014
 8000e68:	10624dd3 	.word	0x10624dd3

08000e6c <dumpBlackbox>:

void dumpBlackbox(void)
{
 8000e6c:	b580      	push	{r7, lr}
 8000e6e:	b094      	sub	sp, #80	@ 0x50
 8000e70:	af02      	add	r7, sp, #8
    char msg[64];
    for (uint16_t i = 0; i < sample_index; i++) {
 8000e72:	2300      	movs	r3, #0
 8000e74:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8000e78:	e022      	b.n	8000ec0 <dumpBlackbox+0x54>
        snprintf(msg, sizeof(msg), "%ld,%ld\r\n", blackbox[i].pitch, blackbox[i].roll);
 8000e7a:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8000e7e:	4a19      	ldr	r2, [pc, #100]	@ (8000ee4 <dumpBlackbox+0x78>)
 8000e80:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8000e84:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8000e88:	4916      	ldr	r1, [pc, #88]	@ (8000ee4 <dumpBlackbox+0x78>)
 8000e8a:	00db      	lsls	r3, r3, #3
 8000e8c:	440b      	add	r3, r1
 8000e8e:	685b      	ldr	r3, [r3, #4]
 8000e90:	1d38      	adds	r0, r7, #4
 8000e92:	9300      	str	r3, [sp, #0]
 8000e94:	4613      	mov	r3, r2
 8000e96:	4a14      	ldr	r2, [pc, #80]	@ (8000ee8 <dumpBlackbox+0x7c>)
 8000e98:	2140      	movs	r1, #64	@ 0x40
 8000e9a:	f005 fb89 	bl	80065b0 <sniprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8000e9e:	1d3b      	adds	r3, r7, #4
 8000ea0:	4618      	mov	r0, r3
 8000ea2:	f7ff f99d 	bl	80001e0 <strlen>
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	b29a      	uxth	r2, r3
 8000eaa:	1d39      	adds	r1, r7, #4
 8000eac:	f04f 33ff 	mov.w	r3, #4294967295
 8000eb0:	480e      	ldr	r0, [pc, #56]	@ (8000eec <dumpBlackbox+0x80>)
 8000eb2:	f004 f88d 	bl	8004fd0 <HAL_UART_Transmit>
    for (uint16_t i = 0; i < sample_index; i++) {
 8000eb6:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8000eba:	3301      	adds	r3, #1
 8000ebc:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8000ec0:	4b0b      	ldr	r3, [pc, #44]	@ (8000ef0 <dumpBlackbox+0x84>)
 8000ec2:	881b      	ldrh	r3, [r3, #0]
 8000ec4:	f8b7 2046 	ldrh.w	r2, [r7, #70]	@ 0x46
 8000ec8:	429a      	cmp	r2, r3
 8000eca:	d3d6      	bcc.n	8000e7a <dumpBlackbox+0xe>
    }
    memset(blackbox, 0, sizeof(blackbox));
 8000ecc:	4a09      	ldr	r2, [pc, #36]	@ (8000ef4 <dumpBlackbox+0x88>)
 8000ece:	2100      	movs	r1, #0
 8000ed0:	4804      	ldr	r0, [pc, #16]	@ (8000ee4 <dumpBlackbox+0x78>)
 8000ed2:	f005 fbe6 	bl	80066a2 <memset>
    sample_index = 0;
 8000ed6:	4b06      	ldr	r3, [pc, #24]	@ (8000ef0 <dumpBlackbox+0x84>)
 8000ed8:	2200      	movs	r2, #0
 8000eda:	801a      	strh	r2, [r3, #0]
}
 8000edc:	bf00      	nop
 8000ede:	3748      	adds	r7, #72	@ 0x48
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	bd80      	pop	{r7, pc}
 8000ee4:	200000ac 	.word	0x200000ac
 8000ee8:	08007840 	.word	0x08007840
 8000eec:	20013a84 	.word	0x20013a84
 8000ef0:	2001392c 	.word	0x2001392c
 8000ef4:	00013880 	.word	0x00013880

08000ef8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	af00      	add	r7, sp, #0

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */

	HAL_Init();
 8000efc:	f000 feb8 	bl	8001c70 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f00:	f000 f890 	bl	8001024 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f04:	f000 fa44 	bl	8001390 <MX_GPIO_Init>
  MX_DMA_Init();
 8000f08:	f000 fa22 	bl	8001350 <MX_DMA_Init>
  MX_I2C1_Init();
 8000f0c:	f000 f8f2 	bl	80010f4 <MX_I2C1_Init>
  MX_TIM3_Init();
 8000f10:	f000 f94c 	bl	80011ac <MX_TIM3_Init>
  MX_USART1_UART_Init();
 8000f14:	f000 f9c8 	bl	80012a8 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000f18:	f000 f9f0 	bl	80012fc <MX_USART2_UART_Init>
  MX_I2C3_Init();
 8000f1c:	f000 f918 	bl	8001150 <MX_I2C3_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  { //potential to use HAL tim int flag if control loop needs to run at percise intervals to avoid spike in derivative/integral calculation
	 if (state == 0){
 8000f20:	4b30      	ldr	r3, [pc, #192]	@ (8000fe4 <main+0xec>)
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	d105      	bne.n	8000f34 <main+0x3c>

		 BNO_Init();
 8000f28:	f7ff fb48 	bl	80005bc <BNO_Init>
		 state = 1;
 8000f2c:	4b2d      	ldr	r3, [pc, #180]	@ (8000fe4 <main+0xec>)
 8000f2e:	2201      	movs	r2, #1
 8000f30:	601a      	str	r2, [r3, #0]
 8000f32:	e7f5      	b.n	8000f20 <main+0x28>
	 }else if (state == 1){
 8000f34:	4b2b      	ldr	r3, [pc, #172]	@ (8000fe4 <main+0xec>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	2b01      	cmp	r3, #1
 8000f3a:	d11a      	bne.n	8000f72 <main+0x7a>
		 HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1);
 8000f3c:	2224      	movs	r2, #36	@ 0x24
 8000f3e:	492a      	ldr	r1, [pc, #168]	@ (8000fe8 <main+0xf0>)
 8000f40:	482a      	ldr	r0, [pc, #168]	@ (8000fec <main+0xf4>)
 8000f42:	f004 f8d0 	bl	80050e6 <HAL_UART_Receive_DMA>
		 if (roll_set<-150000){
 8000f46:	4b2a      	ldr	r3, [pc, #168]	@ (8000ff0 <main+0xf8>)
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	4a2a      	ldr	r2, [pc, #168]	@ (8000ff4 <main+0xfc>)
 8000f4c:	4293      	cmp	r3, r2
 8000f4e:	da09      	bge.n	8000f64 <main+0x6c>
			 armESC();
 8000f50:	f7ff fc40 	bl	80007d4 <armESC>
			 state = 2;
 8000f54:	4b23      	ldr	r3, [pc, #140]	@ (8000fe4 <main+0xec>)
 8000f56:	2202      	movs	r2, #2
 8000f58:	601a      	str	r2, [r3, #0]
			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);   // Set PA0 High (go signal)
 8000f5a:	2201      	movs	r2, #1
 8000f5c:	2102      	movs	r1, #2
 8000f5e:	4826      	ldr	r0, [pc, #152]	@ (8000ff8 <main+0x100>)
 8000f60:	f001 fe98 	bl	8002c94 <HAL_GPIO_WritePin>
		 }
		 effort_set, roll_set, pitch_set = 0;
 8000f64:	4b25      	ldr	r3, [pc, #148]	@ (8000ffc <main+0x104>)
 8000f66:	2200      	movs	r2, #0
 8000f68:	601a      	str	r2, [r3, #0]
		 pitch_integral = 0;
 8000f6a:	4b25      	ldr	r3, [pc, #148]	@ (8001000 <main+0x108>)
 8000f6c:	2200      	movs	r2, #0
 8000f6e:	601a      	str	r2, [r3, #0]
 8000f70:	e7d6      	b.n	8000f20 <main+0x28>

	 }else if(state == 2){
 8000f72:	4b1c      	ldr	r3, [pc, #112]	@ (8000fe4 <main+0xec>)
 8000f74:	681b      	ldr	r3, [r3, #0]
 8000f76:	2b02      	cmp	r3, #2
 8000f78:	d116      	bne.n	8000fa8 <main+0xb0>
	//		 imu_request = true;
	//	  if (imu_request) {
    //		  imu_request = false;
		      BNO_Read(&roll_true, &pitch_true, &yaw_true);
 8000f7a:	4a22      	ldr	r2, [pc, #136]	@ (8001004 <main+0x10c>)
 8000f7c:	4922      	ldr	r1, [pc, #136]	@ (8001008 <main+0x110>)
 8000f7e:	4823      	ldr	r0, [pc, #140]	@ (800100c <main+0x114>)
 8000f80:	f7ff fba2 	bl	80006c8 <BNO_Read>
			  update_Motors(roll_effort, pitch_effort, yaw_effort, effort_set);
 8000f84:	4b22      	ldr	r3, [pc, #136]	@ (8001010 <main+0x118>)
 8000f86:	6818      	ldr	r0, [r3, #0]
 8000f88:	4b22      	ldr	r3, [pc, #136]	@ (8001014 <main+0x11c>)
 8000f8a:	6819      	ldr	r1, [r3, #0]
 8000f8c:	4b22      	ldr	r3, [pc, #136]	@ (8001018 <main+0x120>)
 8000f8e:	681a      	ldr	r2, [r3, #0]
 8000f90:	4b22      	ldr	r3, [pc, #136]	@ (800101c <main+0x124>)
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	f7ff fc82 	bl	800089c <update_Motors>
			  if (dumpFlag == 1){
 8000f98:	4b21      	ldr	r3, [pc, #132]	@ (8001020 <main+0x128>)
 8000f9a:	681b      	ldr	r3, [r3, #0]
 8000f9c:	2b01      	cmp	r3, #1
 8000f9e:	d1bf      	bne.n	8000f20 <main+0x28>
				  state = 3; }
 8000fa0:	4b10      	ldr	r3, [pc, #64]	@ (8000fe4 <main+0xec>)
 8000fa2:	2203      	movs	r2, #3
 8000fa4:	601a      	str	r2, [r3, #0]
 8000fa6:	e7bb      	b.n	8000f20 <main+0x28>

	 }else if(state == 3){
 8000fa8:	4b0e      	ldr	r3, [pc, #56]	@ (8000fe4 <main+0xec>)
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	2b03      	cmp	r3, #3
 8000fae:	d1b7      	bne.n	8000f20 <main+0x28>
		 	 dumpBlackbox();
 8000fb0:	f7ff ff5c 	bl	8000e6c <dumpBlackbox>
		 	 dumpFlag = 0;
 8000fb4:	4b1a      	ldr	r3, [pc, #104]	@ (8001020 <main+0x128>)
 8000fb6:	2200      	movs	r2, #0
 8000fb8:	601a      	str	r2, [r3, #0]
		 	HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1);
 8000fba:	2224      	movs	r2, #36	@ 0x24
 8000fbc:	490a      	ldr	r1, [pc, #40]	@ (8000fe8 <main+0xf0>)
 8000fbe:	480b      	ldr	r0, [pc, #44]	@ (8000fec <main+0xf4>)
 8000fc0:	f004 f891 	bl	80050e6 <HAL_UART_Receive_DMA>
		 	 if (roll_set<-150000){
 8000fc4:	4b0a      	ldr	r3, [pc, #40]	@ (8000ff0 <main+0xf8>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	4a0a      	ldr	r2, [pc, #40]	@ (8000ff4 <main+0xfc>)
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	daa8      	bge.n	8000f20 <main+0x28>
		 				 armESC();
 8000fce:	f7ff fc01 	bl	80007d4 <armESC>
		 				 state = 2;
 8000fd2:	4b04      	ldr	r3, [pc, #16]	@ (8000fe4 <main+0xec>)
 8000fd4:	2202      	movs	r2, #2
 8000fd6:	601a      	str	r2, [r3, #0]
		 				 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);   // Set PA0 High (go signal)
 8000fd8:	2201      	movs	r2, #1
 8000fda:	2102      	movs	r1, #2
 8000fdc:	4806      	ldr	r0, [pc, #24]	@ (8000ff8 <main+0x100>)
 8000fde:	f001 fe59 	bl	8002c94 <HAL_GPIO_WritePin>
	 if (state == 0){
 8000fe2:	e79d      	b.n	8000f20 <main+0x28>
 8000fe4:	20013b2c 	.word	0x20013b2c
 8000fe8:	20013b9c 	.word	0x20013b9c
 8000fec:	20013a84 	.word	0x20013a84
 8000ff0:	20013b34 	.word	0x20013b34
 8000ff4:	fffdb610 	.word	0xfffdb610
 8000ff8:	40020000 	.word	0x40020000
 8000ffc:	20013b38 	.word	0x20013b38
 8001000:	20013b60 	.word	0x20013b60
 8001004:	20013b4c 	.word	0x20013b4c
 8001008:	20013b48 	.word	0x20013b48
 800100c:	20013b44 	.word	0x20013b44
 8001010:	20013b50 	.word	0x20013b50
 8001014:	20013b54 	.word	0x20013b54
 8001018:	20013b58 	.word	0x20013b58
 800101c:	20013b40 	.word	0x20013b40
 8001020:	20013bc4 	.word	0x20013bc4

08001024 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b094      	sub	sp, #80	@ 0x50
 8001028:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800102a:	f107 0320 	add.w	r3, r7, #32
 800102e:	2230      	movs	r2, #48	@ 0x30
 8001030:	2100      	movs	r1, #0
 8001032:	4618      	mov	r0, r3
 8001034:	f005 fb35 	bl	80066a2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001038:	f107 030c 	add.w	r3, r7, #12
 800103c:	2200      	movs	r2, #0
 800103e:	601a      	str	r2, [r3, #0]
 8001040:	605a      	str	r2, [r3, #4]
 8001042:	609a      	str	r2, [r3, #8]
 8001044:	60da      	str	r2, [r3, #12]
 8001046:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001048:	2300      	movs	r3, #0
 800104a:	60bb      	str	r3, [r7, #8]
 800104c:	4b27      	ldr	r3, [pc, #156]	@ (80010ec <SystemClock_Config+0xc8>)
 800104e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001050:	4a26      	ldr	r2, [pc, #152]	@ (80010ec <SystemClock_Config+0xc8>)
 8001052:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001056:	6413      	str	r3, [r2, #64]	@ 0x40
 8001058:	4b24      	ldr	r3, [pc, #144]	@ (80010ec <SystemClock_Config+0xc8>)
 800105a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800105c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001060:	60bb      	str	r3, [r7, #8]
 8001062:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001064:	2300      	movs	r3, #0
 8001066:	607b      	str	r3, [r7, #4]
 8001068:	4b21      	ldr	r3, [pc, #132]	@ (80010f0 <SystemClock_Config+0xcc>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	4a20      	ldr	r2, [pc, #128]	@ (80010f0 <SystemClock_Config+0xcc>)
 800106e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001072:	6013      	str	r3, [r2, #0]
 8001074:	4b1e      	ldr	r3, [pc, #120]	@ (80010f0 <SystemClock_Config+0xcc>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800107c:	607b      	str	r3, [r7, #4]
 800107e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001080:	2302      	movs	r3, #2
 8001082:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001084:	2301      	movs	r3, #1
 8001086:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001088:	2310      	movs	r3, #16
 800108a:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800108c:	2302      	movs	r3, #2
 800108e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001090:	2300      	movs	r3, #0
 8001092:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001094:	2308      	movs	r3, #8
 8001096:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 50;
 8001098:	2332      	movs	r3, #50	@ 0x32
 800109a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800109c:	2302      	movs	r3, #2
 800109e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80010a0:	2304      	movs	r3, #4
 80010a2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010a4:	f107 0320 	add.w	r3, r7, #32
 80010a8:	4618      	mov	r0, r3
 80010aa:	f002 fe7b 	bl	8003da4 <HAL_RCC_OscConfig>
 80010ae:	4603      	mov	r3, r0
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d001      	beq.n	80010b8 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80010b4:	f000 fa4e 	bl	8001554 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80010b8:	230f      	movs	r3, #15
 80010ba:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80010bc:	2302      	movs	r3, #2
 80010be:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80010c0:	2300      	movs	r3, #0
 80010c2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80010c4:	2300      	movs	r3, #0
 80010c6:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80010c8:	2300      	movs	r3, #0
 80010ca:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80010cc:	f107 030c 	add.w	r3, r7, #12
 80010d0:	2101      	movs	r1, #1
 80010d2:	4618      	mov	r0, r3
 80010d4:	f003 f8de 	bl	8004294 <HAL_RCC_ClockConfig>
 80010d8:	4603      	mov	r3, r0
 80010da:	2b00      	cmp	r3, #0
 80010dc:	d001      	beq.n	80010e2 <SystemClock_Config+0xbe>
  {
    Error_Handler();
 80010de:	f000 fa39 	bl	8001554 <Error_Handler>
  }
}
 80010e2:	bf00      	nop
 80010e4:	3750      	adds	r7, #80	@ 0x50
 80010e6:	46bd      	mov	sp, r7
 80010e8:	bd80      	pop	{r7, pc}
 80010ea:	bf00      	nop
 80010ec:	40023800 	.word	0x40023800
 80010f0:	40007000 	.word	0x40007000

080010f4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80010f4:	b580      	push	{r7, lr}
 80010f6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80010f8:	4b12      	ldr	r3, [pc, #72]	@ (8001144 <MX_I2C1_Init+0x50>)
 80010fa:	4a13      	ldr	r2, [pc, #76]	@ (8001148 <MX_I2C1_Init+0x54>)
 80010fc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80010fe:	4b11      	ldr	r3, [pc, #68]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001100:	4a12      	ldr	r2, [pc, #72]	@ (800114c <MX_I2C1_Init+0x58>)
 8001102:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001104:	4b0f      	ldr	r3, [pc, #60]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001106:	2200      	movs	r2, #0
 8001108:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800110a:	4b0e      	ldr	r3, [pc, #56]	@ (8001144 <MX_I2C1_Init+0x50>)
 800110c:	2200      	movs	r2, #0
 800110e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001110:	4b0c      	ldr	r3, [pc, #48]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001112:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001116:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001118:	4b0a      	ldr	r3, [pc, #40]	@ (8001144 <MX_I2C1_Init+0x50>)
 800111a:	2200      	movs	r2, #0
 800111c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800111e:	4b09      	ldr	r3, [pc, #36]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001120:	2200      	movs	r2, #0
 8001122:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001124:	4b07      	ldr	r3, [pc, #28]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001126:	2200      	movs	r2, #0
 8001128:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800112a:	4b06      	ldr	r3, [pc, #24]	@ (8001144 <MX_I2C1_Init+0x50>)
 800112c:	2200      	movs	r2, #0
 800112e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001130:	4804      	ldr	r0, [pc, #16]	@ (8001144 <MX_I2C1_Init+0x50>)
 8001132:	f001 fde3 	bl	8002cfc <HAL_I2C_Init>
 8001136:	4603      	mov	r3, r0
 8001138:	2b00      	cmp	r3, #0
 800113a:	d001      	beq.n	8001140 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800113c:	f000 fa0a 	bl	8001554 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001140:	bf00      	nop
 8001142:	bd80      	pop	{r7, pc}
 8001144:	2001394c 	.word	0x2001394c
 8001148:	40005400 	.word	0x40005400
 800114c:	000186a0 	.word	0x000186a0

08001150 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8001150:	b580      	push	{r7, lr}
 8001152:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001154:	4b12      	ldr	r3, [pc, #72]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001156:	4a13      	ldr	r2, [pc, #76]	@ (80011a4 <MX_I2C3_Init+0x54>)
 8001158:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 800115a:	4b11      	ldr	r3, [pc, #68]	@ (80011a0 <MX_I2C3_Init+0x50>)
 800115c:	4a12      	ldr	r2, [pc, #72]	@ (80011a8 <MX_I2C3_Init+0x58>)
 800115e:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001160:	4b0f      	ldr	r3, [pc, #60]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001162:	2200      	movs	r2, #0
 8001164:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8001166:	4b0e      	ldr	r3, [pc, #56]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001168:	2200      	movs	r2, #0
 800116a:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800116c:	4b0c      	ldr	r3, [pc, #48]	@ (80011a0 <MX_I2C3_Init+0x50>)
 800116e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001172:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001174:	4b0a      	ldr	r3, [pc, #40]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001176:	2200      	movs	r2, #0
 8001178:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 800117a:	4b09      	ldr	r3, [pc, #36]	@ (80011a0 <MX_I2C3_Init+0x50>)
 800117c:	2200      	movs	r2, #0
 800117e:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001180:	4b07      	ldr	r3, [pc, #28]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001182:	2200      	movs	r2, #0
 8001184:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001186:	4b06      	ldr	r3, [pc, #24]	@ (80011a0 <MX_I2C3_Init+0x50>)
 8001188:	2200      	movs	r2, #0
 800118a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800118c:	4804      	ldr	r0, [pc, #16]	@ (80011a0 <MX_I2C3_Init+0x50>)
 800118e:	f001 fdb5 	bl	8002cfc <HAL_I2C_Init>
 8001192:	4603      	mov	r3, r0
 8001194:	2b00      	cmp	r3, #0
 8001196:	d001      	beq.n	800119c <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8001198:	f000 f9dc 	bl	8001554 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 800119c:	bf00      	nop
 800119e:	bd80      	pop	{r7, pc}
 80011a0:	200139a0 	.word	0x200139a0
 80011a4:	40005c00 	.word	0x40005c00
 80011a8:	000186a0 	.word	0x000186a0

080011ac <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b08a      	sub	sp, #40	@ 0x28
 80011b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011b2:	f107 0320 	add.w	r3, r7, #32
 80011b6:	2200      	movs	r2, #0
 80011b8:	601a      	str	r2, [r3, #0]
 80011ba:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80011bc:	1d3b      	adds	r3, r7, #4
 80011be:	2200      	movs	r2, #0
 80011c0:	601a      	str	r2, [r3, #0]
 80011c2:	605a      	str	r2, [r3, #4]
 80011c4:	609a      	str	r2, [r3, #8]
 80011c6:	60da      	str	r2, [r3, #12]
 80011c8:	611a      	str	r2, [r3, #16]
 80011ca:	615a      	str	r2, [r3, #20]
 80011cc:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80011ce:	4b34      	ldr	r3, [pc, #208]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011d0:	4a34      	ldr	r2, [pc, #208]	@ (80012a4 <MX_TIM3_Init+0xf8>)
 80011d2:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 50;
 80011d4:	4b32      	ldr	r3, [pc, #200]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011d6:	2232      	movs	r2, #50	@ 0x32
 80011d8:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011da:	4b31      	ldr	r3, [pc, #196]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011dc:	2200      	movs	r2, #0
 80011de:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 20660;
 80011e0:	4b2f      	ldr	r3, [pc, #188]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011e2:	f245 02b4 	movw	r2, #20660	@ 0x50b4
 80011e6:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011e8:	4b2d      	ldr	r3, [pc, #180]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011ee:	4b2c      	ldr	r3, [pc, #176]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011f0:	2200      	movs	r2, #0
 80011f2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80011f4:	482a      	ldr	r0, [pc, #168]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 80011f6:	f003 fa2d 	bl	8004654 <HAL_TIM_PWM_Init>
 80011fa:	4603      	mov	r3, r0
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d001      	beq.n	8001204 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8001200:	f000 f9a8 	bl	8001554 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001204:	2300      	movs	r3, #0
 8001206:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001208:	2300      	movs	r3, #0
 800120a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800120c:	f107 0320 	add.w	r3, r7, #32
 8001210:	4619      	mov	r1, r3
 8001212:	4823      	ldr	r0, [pc, #140]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 8001214:	f003 fe1e 	bl	8004e54 <HAL_TIMEx_MasterConfigSynchronization>
 8001218:	4603      	mov	r3, r0
 800121a:	2b00      	cmp	r3, #0
 800121c:	d001      	beq.n	8001222 <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 800121e:	f000 f999 	bl	8001554 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001222:	2360      	movs	r3, #96	@ 0x60
 8001224:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 400;
 8001226:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 800122a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800122c:	2300      	movs	r3, #0
 800122e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001230:	2300      	movs	r3, #0
 8001232:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001234:	1d3b      	adds	r3, r7, #4
 8001236:	2200      	movs	r2, #0
 8001238:	4619      	mov	r1, r3
 800123a:	4819      	ldr	r0, [pc, #100]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 800123c:	f003 fb0a 	bl	8004854 <HAL_TIM_PWM_ConfigChannel>
 8001240:	4603      	mov	r3, r0
 8001242:	2b00      	cmp	r3, #0
 8001244:	d001      	beq.n	800124a <MX_TIM3_Init+0x9e>
  {
    Error_Handler();
 8001246:	f000 f985 	bl	8001554 <Error_Handler>
  }
  sConfigOC.Pulse = 3200;
 800124a:	f44f 6348 	mov.w	r3, #3200	@ 0xc80
 800124e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001250:	1d3b      	adds	r3, r7, #4
 8001252:	2204      	movs	r2, #4
 8001254:	4619      	mov	r1, r3
 8001256:	4812      	ldr	r0, [pc, #72]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 8001258:	f003 fafc 	bl	8004854 <HAL_TIM_PWM_ConfigChannel>
 800125c:	4603      	mov	r3, r0
 800125e:	2b00      	cmp	r3, #0
 8001260:	d001      	beq.n	8001266 <MX_TIM3_Init+0xba>
  {
    Error_Handler();
 8001262:	f000 f977 	bl	8001554 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001266:	1d3b      	adds	r3, r7, #4
 8001268:	2208      	movs	r2, #8
 800126a:	4619      	mov	r1, r3
 800126c:	480c      	ldr	r0, [pc, #48]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 800126e:	f003 faf1 	bl	8004854 <HAL_TIM_PWM_ConfigChannel>
 8001272:	4603      	mov	r3, r0
 8001274:	2b00      	cmp	r3, #0
 8001276:	d001      	beq.n	800127c <MX_TIM3_Init+0xd0>
  {
    Error_Handler();
 8001278:	f000 f96c 	bl	8001554 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800127c:	1d3b      	adds	r3, r7, #4
 800127e:	220c      	movs	r2, #12
 8001280:	4619      	mov	r1, r3
 8001282:	4807      	ldr	r0, [pc, #28]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 8001284:	f003 fae6 	bl	8004854 <HAL_TIM_PWM_ConfigChannel>
 8001288:	4603      	mov	r3, r0
 800128a:	2b00      	cmp	r3, #0
 800128c:	d001      	beq.n	8001292 <MX_TIM3_Init+0xe6>
  {
    Error_Handler();
 800128e:	f000 f961 	bl	8001554 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001292:	4803      	ldr	r0, [pc, #12]	@ (80012a0 <MX_TIM3_Init+0xf4>)
 8001294:	f000 fa84 	bl	80017a0 <HAL_TIM_MspPostInit>

}
 8001298:	bf00      	nop
 800129a:	3728      	adds	r7, #40	@ 0x28
 800129c:	46bd      	mov	sp, r7
 800129e:	bd80      	pop	{r7, pc}
 80012a0:	200139f4 	.word	0x200139f4
 80012a4:	40000400 	.word	0x40000400

080012a8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80012ac:	4b11      	ldr	r3, [pc, #68]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012ae:	4a12      	ldr	r2, [pc, #72]	@ (80012f8 <MX_USART1_UART_Init+0x50>)
 80012b0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80012b2:	4b10      	ldr	r3, [pc, #64]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012b4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80012b8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80012ba:	4b0e      	ldr	r3, [pc, #56]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012bc:	2200      	movs	r2, #0
 80012be:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80012c0:	4b0c      	ldr	r3, [pc, #48]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012c2:	2200      	movs	r2, #0
 80012c4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80012c6:	4b0b      	ldr	r3, [pc, #44]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012c8:	2200      	movs	r2, #0
 80012ca:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80012cc:	4b09      	ldr	r3, [pc, #36]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012ce:	220c      	movs	r2, #12
 80012d0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80012d2:	4b08      	ldr	r3, [pc, #32]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80012d8:	4b06      	ldr	r3, [pc, #24]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012da:	2200      	movs	r2, #0
 80012dc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80012de:	4805      	ldr	r0, [pc, #20]	@ (80012f4 <MX_USART1_UART_Init+0x4c>)
 80012e0:	f003 fe26 	bl	8004f30 <HAL_UART_Init>
 80012e4:	4603      	mov	r3, r0
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d001      	beq.n	80012ee <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80012ea:	f000 f933 	bl	8001554 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80012ee:	bf00      	nop
 80012f0:	bd80      	pop	{r7, pc}
 80012f2:	bf00      	nop
 80012f4:	20013a3c 	.word	0x20013a3c
 80012f8:	40011000 	.word	0x40011000

080012fc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80012fc:	b580      	push	{r7, lr}
 80012fe:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001300:	4b11      	ldr	r3, [pc, #68]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001302:	4a12      	ldr	r2, [pc, #72]	@ (800134c <MX_USART2_UART_Init+0x50>)
 8001304:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001306:	4b10      	ldr	r3, [pc, #64]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001308:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800130c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800130e:	4b0e      	ldr	r3, [pc, #56]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001310:	2200      	movs	r2, #0
 8001312:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001314:	4b0c      	ldr	r3, [pc, #48]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001316:	2200      	movs	r2, #0
 8001318:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800131a:	4b0b      	ldr	r3, [pc, #44]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 800131c:	2200      	movs	r2, #0
 800131e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001320:	4b09      	ldr	r3, [pc, #36]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001322:	220c      	movs	r2, #12
 8001324:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001326:	4b08      	ldr	r3, [pc, #32]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001328:	2200      	movs	r2, #0
 800132a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800132c:	4b06      	ldr	r3, [pc, #24]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 800132e:	2200      	movs	r2, #0
 8001330:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001332:	4805      	ldr	r0, [pc, #20]	@ (8001348 <MX_USART2_UART_Init+0x4c>)
 8001334:	f003 fdfc 	bl	8004f30 <HAL_UART_Init>
 8001338:	4603      	mov	r3, r0
 800133a:	2b00      	cmp	r3, #0
 800133c:	d001      	beq.n	8001342 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800133e:	f000 f909 	bl	8001554 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001342:	bf00      	nop
 8001344:	bd80      	pop	{r7, pc}
 8001346:	bf00      	nop
 8001348:	20013a84 	.word	0x20013a84
 800134c:	40004400 	.word	0x40004400

08001350 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001350:	b580      	push	{r7, lr}
 8001352:	b082      	sub	sp, #8
 8001354:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001356:	2300      	movs	r3, #0
 8001358:	607b      	str	r3, [r7, #4]
 800135a:	4b0c      	ldr	r3, [pc, #48]	@ (800138c <MX_DMA_Init+0x3c>)
 800135c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800135e:	4a0b      	ldr	r2, [pc, #44]	@ (800138c <MX_DMA_Init+0x3c>)
 8001360:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001364:	6313      	str	r3, [r2, #48]	@ 0x30
 8001366:	4b09      	ldr	r3, [pc, #36]	@ (800138c <MX_DMA_Init+0x3c>)
 8001368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800136a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800136e:	607b      	str	r3, [r7, #4]
 8001370:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 8001372:	2200      	movs	r2, #0
 8001374:	2100      	movs	r1, #0
 8001376:	2010      	movs	r0, #16
 8001378:	f000 fdeb 	bl	8001f52 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 800137c:	2010      	movs	r0, #16
 800137e:	f000 fe04 	bl	8001f8a <HAL_NVIC_EnableIRQ>

}
 8001382:	bf00      	nop
 8001384:	3708      	adds	r7, #8
 8001386:	46bd      	mov	sp, r7
 8001388:	bd80      	pop	{r7, pc}
 800138a:	bf00      	nop
 800138c:	40023800 	.word	0x40023800

08001390 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b08a      	sub	sp, #40	@ 0x28
 8001394:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001396:	f107 0314 	add.w	r3, r7, #20
 800139a:	2200      	movs	r2, #0
 800139c:	601a      	str	r2, [r3, #0]
 800139e:	605a      	str	r2, [r3, #4]
 80013a0:	609a      	str	r2, [r3, #8]
 80013a2:	60da      	str	r2, [r3, #12]
 80013a4:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013a6:	2300      	movs	r3, #0
 80013a8:	613b      	str	r3, [r7, #16]
 80013aa:	4b42      	ldr	r3, [pc, #264]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ae:	4a41      	ldr	r2, [pc, #260]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013b0:	f043 0304 	orr.w	r3, r3, #4
 80013b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80013b6:	4b3f      	ldr	r3, [pc, #252]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ba:	f003 0304 	and.w	r3, r3, #4
 80013be:	613b      	str	r3, [r7, #16]
 80013c0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013c2:	2300      	movs	r3, #0
 80013c4:	60fb      	str	r3, [r7, #12]
 80013c6:	4b3b      	ldr	r3, [pc, #236]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ca:	4a3a      	ldr	r2, [pc, #232]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013cc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80013d2:	4b38      	ldr	r3, [pc, #224]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80013da:	60fb      	str	r3, [r7, #12]
 80013dc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80013de:	2300      	movs	r3, #0
 80013e0:	60bb      	str	r3, [r7, #8]
 80013e2:	4b34      	ldr	r3, [pc, #208]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013e6:	4a33      	ldr	r2, [pc, #204]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013e8:	f043 0301 	orr.w	r3, r3, #1
 80013ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80013ee:	4b31      	ldr	r3, [pc, #196]	@ (80014b4 <MX_GPIO_Init+0x124>)
 80013f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013f2:	f003 0301 	and.w	r3, r3, #1
 80013f6:	60bb      	str	r3, [r7, #8]
 80013f8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80013fa:	2300      	movs	r3, #0
 80013fc:	607b      	str	r3, [r7, #4]
 80013fe:	4b2d      	ldr	r3, [pc, #180]	@ (80014b4 <MX_GPIO_Init+0x124>)
 8001400:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001402:	4a2c      	ldr	r2, [pc, #176]	@ (80014b4 <MX_GPIO_Init+0x124>)
 8001404:	f043 0302 	orr.w	r3, r3, #2
 8001408:	6313      	str	r3, [r2, #48]	@ 0x30
 800140a:	4b2a      	ldr	r3, [pc, #168]	@ (80014b4 <MX_GPIO_Init+0x124>)
 800140c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800140e:	f003 0302 	and.w	r3, r3, #2
 8001412:	607b      	str	r3, [r7, #4]
 8001414:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8001416:	2200      	movs	r2, #0
 8001418:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 800141c:	4826      	ldr	r0, [pc, #152]	@ (80014b8 <MX_GPIO_Init+0x128>)
 800141e:	f001 fc39 	bl	8002c94 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 8001422:	2200      	movs	r2, #0
 8001424:	f641 0103 	movw	r1, #6147	@ 0x1803
 8001428:	4824      	ldr	r0, [pc, #144]	@ (80014bc <MX_GPIO_Init+0x12c>)
 800142a:	f001 fc33 	bl	8002c94 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, US_ECHO_Pin|US_TRIG_Pin|GPIO_PIN_14|GPIO_PIN_9, GPIO_PIN_RESET);
 800142e:	2200      	movs	r2, #0
 8001430:	f44f 41e4 	mov.w	r1, #29184	@ 0x7200
 8001434:	4822      	ldr	r0, [pc, #136]	@ (80014c0 <MX_GPIO_Init+0x130>)
 8001436:	f001 fc2d 	bl	8002c94 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC13 PC14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 800143a:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 800143e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001440:	2301      	movs	r3, #1
 8001442:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001444:	2300      	movs	r3, #0
 8001446:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001448:	2300      	movs	r3, #0
 800144a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800144c:	f107 0314 	add.w	r3, r7, #20
 8001450:	4619      	mov	r1, r3
 8001452:	4819      	ldr	r0, [pc, #100]	@ (80014b8 <MX_GPIO_Init+0x128>)
 8001454:	f001 f9b6 	bl	80027c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12;
 8001458:	f641 0303 	movw	r3, #6147	@ 0x1803
 800145c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800145e:	2301      	movs	r3, #1
 8001460:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001462:	2300      	movs	r3, #0
 8001464:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001466:	2300      	movs	r3, #0
 8001468:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800146a:	f107 0314 	add.w	r3, r7, #20
 800146e:	4619      	mov	r1, r3
 8001470:	4812      	ldr	r0, [pc, #72]	@ (80014bc <MX_GPIO_Init+0x12c>)
 8001472:	f001 f9a7 	bl	80027c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001476:	2310      	movs	r3, #16
 8001478:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800147a:	2300      	movs	r3, #0
 800147c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800147e:	2300      	movs	r3, #0
 8001480:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001482:	f107 0314 	add.w	r3, r7, #20
 8001486:	4619      	mov	r1, r3
 8001488:	480c      	ldr	r0, [pc, #48]	@ (80014bc <MX_GPIO_Init+0x12c>)
 800148a:	f001 f99b 	bl	80027c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : US_ECHO_Pin US_TRIG_Pin PB14 PB9 */
  GPIO_InitStruct.Pin = US_ECHO_Pin|US_TRIG_Pin|GPIO_PIN_14|GPIO_PIN_9;
 800148e:	f44f 43e4 	mov.w	r3, #29184	@ 0x7200
 8001492:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001494:	2301      	movs	r3, #1
 8001496:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001498:	2300      	movs	r3, #0
 800149a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800149c:	2300      	movs	r3, #0
 800149e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014a0:	f107 0314 	add.w	r3, r7, #20
 80014a4:	4619      	mov	r1, r3
 80014a6:	4806      	ldr	r0, [pc, #24]	@ (80014c0 <MX_GPIO_Init+0x130>)
 80014a8:	f001 f98c 	bl	80027c4 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 80014ac:	bf00      	nop
 80014ae:	3728      	adds	r7, #40	@ 0x28
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bd80      	pop	{r7, pc}
 80014b4:	40023800 	.word	0x40023800
 80014b8:	40020800 	.word	0x40020800
 80014bc:	40020000 	.word	0x40020000
 80014c0:	40020400 	.word	0x40020400

080014c4 <HAL_UART_RxCpltCallback>:
  *  It adds an end message statment, sends the buffer to the processInput function and sets the imu_request flag
  *
  * @retval None
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)//should trigger when DMA reads complete message
{    if (huart->Instance == USART2) {
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b084      	sub	sp, #16
 80014c8:	af02      	add	r7, sp, #8
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	4a0e      	ldr	r2, [pc, #56]	@ (800150c <HAL_UART_RxCpltCallback+0x48>)
 80014d2:	4293      	cmp	r3, r2
 80014d4:	d10d      	bne.n	80014f2 <HAL_UART_RxCpltCallback+0x2e>
        // Null-terminate just in case you're using sscanf or string functions
        BT_RxBuf[BT_MSG_LEN - 1] = '\0';
 80014d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001510 <HAL_UART_RxCpltCallback+0x4c>)
 80014d8:	2200      	movs	r2, #0
 80014da:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24

        // Process entire message

        processInput((char *)BT_RxBuf, &roll_set, &pitch_set, &yaw_set, &effort_set, &dumpFlag);
 80014de:	4b0d      	ldr	r3, [pc, #52]	@ (8001514 <HAL_UART_RxCpltCallback+0x50>)
 80014e0:	9301      	str	r3, [sp, #4]
 80014e2:	4b0d      	ldr	r3, [pc, #52]	@ (8001518 <HAL_UART_RxCpltCallback+0x54>)
 80014e4:	9300      	str	r3, [sp, #0]
 80014e6:	4b0d      	ldr	r3, [pc, #52]	@ (800151c <HAL_UART_RxCpltCallback+0x58>)
 80014e8:	4a0d      	ldr	r2, [pc, #52]	@ (8001520 <HAL_UART_RxCpltCallback+0x5c>)
 80014ea:	490e      	ldr	r1, [pc, #56]	@ (8001524 <HAL_UART_RxCpltCallback+0x60>)
 80014ec:	4808      	ldr	r0, [pc, #32]	@ (8001510 <HAL_UART_RxCpltCallback+0x4c>)
 80014ee:	f7ff fc05 	bl	8000cfc <processInput>
        }
        // Restart DMA to receive next message
        //HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN); //set up this function to run on next BT input
        imu_request = true; //set up IMU to run when interupt exits
 80014f2:	4b0d      	ldr	r3, [pc, #52]	@ (8001528 <HAL_UART_RxCpltCallback+0x64>)
 80014f4:	2201      	movs	r2, #1
 80014f6:	601a      	str	r2, [r3, #0]
        HAL_UART_Receive_DMA(&huart2, BT_RxBuf, BT_MSG_LEN-1); //set up this function to run on next BT input
 80014f8:	2224      	movs	r2, #36	@ 0x24
 80014fa:	4905      	ldr	r1, [pc, #20]	@ (8001510 <HAL_UART_RxCpltCallback+0x4c>)
 80014fc:	480b      	ldr	r0, [pc, #44]	@ (800152c <HAL_UART_RxCpltCallback+0x68>)
 80014fe:	f003 fdf2 	bl	80050e6 <HAL_UART_Receive_DMA>
}
 8001502:	bf00      	nop
 8001504:	3708      	adds	r7, #8
 8001506:	46bd      	mov	sp, r7
 8001508:	bd80      	pop	{r7, pc}
 800150a:	bf00      	nop
 800150c:	40004400 	.word	0x40004400
 8001510:	20013b9c 	.word	0x20013b9c
 8001514:	20013bc4 	.word	0x20013bc4
 8001518:	20013b40 	.word	0x20013b40
 800151c:	20013b3c 	.word	0x20013b3c
 8001520:	20013b38 	.word	0x20013b38
 8001524:	20013b34 	.word	0x20013b34
 8001528:	20013b30 	.word	0x20013b30
 800152c:	20013a84 	.word	0x20013a84

08001530 <__io_putchar>:
/**
  * @brief  This function is used to send printf() statments to the ST-Link UART
  * @retval None
  */
int __io_putchar(int ch) {
 8001530:	b580      	push	{r7, lr}
 8001532:	b082      	sub	sp, #8
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8001538:	1d39      	adds	r1, r7, #4
 800153a:	f04f 33ff 	mov.w	r3, #4294967295
 800153e:	2201      	movs	r2, #1
 8001540:	4803      	ldr	r0, [pc, #12]	@ (8001550 <__io_putchar+0x20>)
 8001542:	f003 fd45 	bl	8004fd0 <HAL_UART_Transmit>
    return ch;
 8001546:	687b      	ldr	r3, [r7, #4]
}
 8001548:	4618      	mov	r0, r3
 800154a:	3708      	adds	r7, #8
 800154c:	46bd      	mov	sp, r7
 800154e:	bd80      	pop	{r7, pc}
 8001550:	20013a84 	.word	0x20013a84

08001554 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001554:	b480      	push	{r7}
 8001556:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001558:	b672      	cpsid	i
}
 800155a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800155c:	bf00      	nop
 800155e:	e7fd      	b.n	800155c <Error_Handler+0x8>

08001560 <HAL_MspInit>:
 8001560:	b480      	push	{r7}
 8001562:	b083      	sub	sp, #12
 8001564:	af00      	add	r7, sp, #0
 8001566:	2300      	movs	r3, #0
 8001568:	607b      	str	r3, [r7, #4]
 800156a:	4b10      	ldr	r3, [pc, #64]	@ (80015ac <HAL_MspInit+0x4c>)
 800156c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800156e:	4a0f      	ldr	r2, [pc, #60]	@ (80015ac <HAL_MspInit+0x4c>)
 8001570:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001574:	6453      	str	r3, [r2, #68]	@ 0x44
 8001576:	4b0d      	ldr	r3, [pc, #52]	@ (80015ac <HAL_MspInit+0x4c>)
 8001578:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800157a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800157e:	607b      	str	r3, [r7, #4]
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	2300      	movs	r3, #0
 8001584:	603b      	str	r3, [r7, #0]
 8001586:	4b09      	ldr	r3, [pc, #36]	@ (80015ac <HAL_MspInit+0x4c>)
 8001588:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800158a:	4a08      	ldr	r2, [pc, #32]	@ (80015ac <HAL_MspInit+0x4c>)
 800158c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001590:	6413      	str	r3, [r2, #64]	@ 0x40
 8001592:	4b06      	ldr	r3, [pc, #24]	@ (80015ac <HAL_MspInit+0x4c>)
 8001594:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001596:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800159a:	603b      	str	r3, [r7, #0]
 800159c:	683b      	ldr	r3, [r7, #0]
 800159e:	bf00      	nop
 80015a0:	370c      	adds	r7, #12
 80015a2:	46bd      	mov	sp, r7
 80015a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a8:	4770      	bx	lr
 80015aa:	bf00      	nop
 80015ac:	40023800 	.word	0x40023800

080015b0 <HAL_I2C_MspInit>:
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b08c      	sub	sp, #48	@ 0x30
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	f107 031c 	add.w	r3, r7, #28
 80015bc:	2200      	movs	r2, #0
 80015be:	601a      	str	r2, [r3, #0]
 80015c0:	605a      	str	r2, [r3, #4]
 80015c2:	609a      	str	r2, [r3, #8]
 80015c4:	60da      	str	r2, [r3, #12]
 80015c6:	611a      	str	r2, [r3, #16]
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	4a41      	ldr	r2, [pc, #260]	@ (80016d4 <HAL_I2C_MspInit+0x124>)
 80015ce:	4293      	cmp	r3, r2
 80015d0:	d12c      	bne.n	800162c <HAL_I2C_MspInit+0x7c>
 80015d2:	2300      	movs	r3, #0
 80015d4:	61bb      	str	r3, [r7, #24]
 80015d6:	4b40      	ldr	r3, [pc, #256]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80015d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015da:	4a3f      	ldr	r2, [pc, #252]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80015dc:	f043 0302 	orr.w	r3, r3, #2
 80015e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80015e2:	4b3d      	ldr	r3, [pc, #244]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80015e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015e6:	f003 0302 	and.w	r3, r3, #2
 80015ea:	61bb      	str	r3, [r7, #24]
 80015ec:	69bb      	ldr	r3, [r7, #24]
 80015ee:	23c0      	movs	r3, #192	@ 0xc0
 80015f0:	61fb      	str	r3, [r7, #28]
 80015f2:	2312      	movs	r3, #18
 80015f4:	623b      	str	r3, [r7, #32]
 80015f6:	2300      	movs	r3, #0
 80015f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80015fa:	2303      	movs	r3, #3
 80015fc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80015fe:	2304      	movs	r3, #4
 8001600:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001602:	f107 031c 	add.w	r3, r7, #28
 8001606:	4619      	mov	r1, r3
 8001608:	4834      	ldr	r0, [pc, #208]	@ (80016dc <HAL_I2C_MspInit+0x12c>)
 800160a:	f001 f8db 	bl	80027c4 <HAL_GPIO_Init>
 800160e:	2300      	movs	r3, #0
 8001610:	617b      	str	r3, [r7, #20]
 8001612:	4b31      	ldr	r3, [pc, #196]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001614:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001616:	4a30      	ldr	r2, [pc, #192]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001618:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800161c:	6413      	str	r3, [r2, #64]	@ 0x40
 800161e:	4b2e      	ldr	r3, [pc, #184]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001620:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001622:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001626:	617b      	str	r3, [r7, #20]
 8001628:	697b      	ldr	r3, [r7, #20]
 800162a:	e04f      	b.n	80016cc <HAL_I2C_MspInit+0x11c>
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	4a2b      	ldr	r2, [pc, #172]	@ (80016e0 <HAL_I2C_MspInit+0x130>)
 8001632:	4293      	cmp	r3, r2
 8001634:	d14a      	bne.n	80016cc <HAL_I2C_MspInit+0x11c>
 8001636:	2300      	movs	r3, #0
 8001638:	613b      	str	r3, [r7, #16]
 800163a:	4b27      	ldr	r3, [pc, #156]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 800163c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800163e:	4a26      	ldr	r2, [pc, #152]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001640:	f043 0301 	orr.w	r3, r3, #1
 8001644:	6313      	str	r3, [r2, #48]	@ 0x30
 8001646:	4b24      	ldr	r3, [pc, #144]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001648:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800164a:	f003 0301 	and.w	r3, r3, #1
 800164e:	613b      	str	r3, [r7, #16]
 8001650:	693b      	ldr	r3, [r7, #16]
 8001652:	2300      	movs	r3, #0
 8001654:	60fb      	str	r3, [r7, #12]
 8001656:	4b20      	ldr	r3, [pc, #128]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800165a:	4a1f      	ldr	r2, [pc, #124]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 800165c:	f043 0302 	orr.w	r3, r3, #2
 8001660:	6313      	str	r3, [r2, #48]	@ 0x30
 8001662:	4b1d      	ldr	r3, [pc, #116]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 8001664:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001666:	f003 0302 	and.w	r3, r3, #2
 800166a:	60fb      	str	r3, [r7, #12]
 800166c:	68fb      	ldr	r3, [r7, #12]
 800166e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001672:	61fb      	str	r3, [r7, #28]
 8001674:	2312      	movs	r3, #18
 8001676:	623b      	str	r3, [r7, #32]
 8001678:	2300      	movs	r3, #0
 800167a:	627b      	str	r3, [r7, #36]	@ 0x24
 800167c:	2303      	movs	r3, #3
 800167e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001680:	2304      	movs	r3, #4
 8001682:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001684:	f107 031c 	add.w	r3, r7, #28
 8001688:	4619      	mov	r1, r3
 800168a:	4816      	ldr	r0, [pc, #88]	@ (80016e4 <HAL_I2C_MspInit+0x134>)
 800168c:	f001 f89a 	bl	80027c4 <HAL_GPIO_Init>
 8001690:	2310      	movs	r3, #16
 8001692:	61fb      	str	r3, [r7, #28]
 8001694:	2312      	movs	r3, #18
 8001696:	623b      	str	r3, [r7, #32]
 8001698:	2300      	movs	r3, #0
 800169a:	627b      	str	r3, [r7, #36]	@ 0x24
 800169c:	2303      	movs	r3, #3
 800169e:	62bb      	str	r3, [r7, #40]	@ 0x28
 80016a0:	2309      	movs	r3, #9
 80016a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80016a4:	f107 031c 	add.w	r3, r7, #28
 80016a8:	4619      	mov	r1, r3
 80016aa:	480c      	ldr	r0, [pc, #48]	@ (80016dc <HAL_I2C_MspInit+0x12c>)
 80016ac:	f001 f88a 	bl	80027c4 <HAL_GPIO_Init>
 80016b0:	2300      	movs	r3, #0
 80016b2:	60bb      	str	r3, [r7, #8]
 80016b4:	4b08      	ldr	r3, [pc, #32]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80016b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016b8:	4a07      	ldr	r2, [pc, #28]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80016ba:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80016be:	6413      	str	r3, [r2, #64]	@ 0x40
 80016c0:	4b05      	ldr	r3, [pc, #20]	@ (80016d8 <HAL_I2C_MspInit+0x128>)
 80016c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016c4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80016c8:	60bb      	str	r3, [r7, #8]
 80016ca:	68bb      	ldr	r3, [r7, #8]
 80016cc:	bf00      	nop
 80016ce:	3730      	adds	r7, #48	@ 0x30
 80016d0:	46bd      	mov	sp, r7
 80016d2:	bd80      	pop	{r7, pc}
 80016d4:	40005400 	.word	0x40005400
 80016d8:	40023800 	.word	0x40023800
 80016dc:	40020400 	.word	0x40020400
 80016e0:	40005c00 	.word	0x40005c00
 80016e4:	40020000 	.word	0x40020000

080016e8 <HAL_I2C_MspDeInit>:
 80016e8:	b580      	push	{r7, lr}
 80016ea:	b082      	sub	sp, #8
 80016ec:	af00      	add	r7, sp, #0
 80016ee:	6078      	str	r0, [r7, #4]
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	4a14      	ldr	r2, [pc, #80]	@ (8001748 <HAL_I2C_MspDeInit+0x60>)
 80016f6:	4293      	cmp	r3, r2
 80016f8:	d10e      	bne.n	8001718 <HAL_I2C_MspDeInit+0x30>
 80016fa:	4b14      	ldr	r3, [pc, #80]	@ (800174c <HAL_I2C_MspDeInit+0x64>)
 80016fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016fe:	4a13      	ldr	r2, [pc, #76]	@ (800174c <HAL_I2C_MspDeInit+0x64>)
 8001700:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8001704:	6413      	str	r3, [r2, #64]	@ 0x40
 8001706:	2140      	movs	r1, #64	@ 0x40
 8001708:	4811      	ldr	r0, [pc, #68]	@ (8001750 <HAL_I2C_MspDeInit+0x68>)
 800170a:	f001 f9df 	bl	8002acc <HAL_GPIO_DeInit>
 800170e:	2180      	movs	r1, #128	@ 0x80
 8001710:	480f      	ldr	r0, [pc, #60]	@ (8001750 <HAL_I2C_MspDeInit+0x68>)
 8001712:	f001 f9db 	bl	8002acc <HAL_GPIO_DeInit>
 8001716:	e013      	b.n	8001740 <HAL_I2C_MspDeInit+0x58>
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	4a0d      	ldr	r2, [pc, #52]	@ (8001754 <HAL_I2C_MspDeInit+0x6c>)
 800171e:	4293      	cmp	r3, r2
 8001720:	d10e      	bne.n	8001740 <HAL_I2C_MspDeInit+0x58>
 8001722:	4b0a      	ldr	r3, [pc, #40]	@ (800174c <HAL_I2C_MspDeInit+0x64>)
 8001724:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001726:	4a09      	ldr	r2, [pc, #36]	@ (800174c <HAL_I2C_MspDeInit+0x64>)
 8001728:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800172c:	6413      	str	r3, [r2, #64]	@ 0x40
 800172e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001732:	4809      	ldr	r0, [pc, #36]	@ (8001758 <HAL_I2C_MspDeInit+0x70>)
 8001734:	f001 f9ca 	bl	8002acc <HAL_GPIO_DeInit>
 8001738:	2110      	movs	r1, #16
 800173a:	4805      	ldr	r0, [pc, #20]	@ (8001750 <HAL_I2C_MspDeInit+0x68>)
 800173c:	f001 f9c6 	bl	8002acc <HAL_GPIO_DeInit>
 8001740:	bf00      	nop
 8001742:	3708      	adds	r7, #8
 8001744:	46bd      	mov	sp, r7
 8001746:	bd80      	pop	{r7, pc}
 8001748:	40005400 	.word	0x40005400
 800174c:	40023800 	.word	0x40023800
 8001750:	40020400 	.word	0x40020400
 8001754:	40005c00 	.word	0x40005c00
 8001758:	40020000 	.word	0x40020000

0800175c <HAL_TIM_PWM_MspInit>:
 800175c:	b480      	push	{r7}
 800175e:	b085      	sub	sp, #20
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	4a0b      	ldr	r2, [pc, #44]	@ (8001798 <HAL_TIM_PWM_MspInit+0x3c>)
 800176a:	4293      	cmp	r3, r2
 800176c:	d10d      	bne.n	800178a <HAL_TIM_PWM_MspInit+0x2e>
 800176e:	2300      	movs	r3, #0
 8001770:	60fb      	str	r3, [r7, #12]
 8001772:	4b0a      	ldr	r3, [pc, #40]	@ (800179c <HAL_TIM_PWM_MspInit+0x40>)
 8001774:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001776:	4a09      	ldr	r2, [pc, #36]	@ (800179c <HAL_TIM_PWM_MspInit+0x40>)
 8001778:	f043 0302 	orr.w	r3, r3, #2
 800177c:	6413      	str	r3, [r2, #64]	@ 0x40
 800177e:	4b07      	ldr	r3, [pc, #28]	@ (800179c <HAL_TIM_PWM_MspInit+0x40>)
 8001780:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001782:	f003 0302 	and.w	r3, r3, #2
 8001786:	60fb      	str	r3, [r7, #12]
 8001788:	68fb      	ldr	r3, [r7, #12]
 800178a:	bf00      	nop
 800178c:	3714      	adds	r7, #20
 800178e:	46bd      	mov	sp, r7
 8001790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop
 8001798:	40000400 	.word	0x40000400
 800179c:	40023800 	.word	0x40023800

080017a0 <HAL_TIM_MspPostInit>:
 80017a0:	b580      	push	{r7, lr}
 80017a2:	b08a      	sub	sp, #40	@ 0x28
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	6078      	str	r0, [r7, #4]
 80017a8:	f107 0314 	add.w	r3, r7, #20
 80017ac:	2200      	movs	r2, #0
 80017ae:	601a      	str	r2, [r3, #0]
 80017b0:	605a      	str	r2, [r3, #4]
 80017b2:	609a      	str	r2, [r3, #8]
 80017b4:	60da      	str	r2, [r3, #12]
 80017b6:	611a      	str	r2, [r3, #16]
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	4a21      	ldr	r2, [pc, #132]	@ (8001844 <HAL_TIM_MspPostInit+0xa4>)
 80017be:	4293      	cmp	r3, r2
 80017c0:	d13b      	bne.n	800183a <HAL_TIM_MspPostInit+0x9a>
 80017c2:	2300      	movs	r3, #0
 80017c4:	613b      	str	r3, [r7, #16]
 80017c6:	4b20      	ldr	r3, [pc, #128]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017ca:	4a1f      	ldr	r2, [pc, #124]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017cc:	f043 0301 	orr.w	r3, r3, #1
 80017d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80017d2:	4b1d      	ldr	r3, [pc, #116]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017d6:	f003 0301 	and.w	r3, r3, #1
 80017da:	613b      	str	r3, [r7, #16]
 80017dc:	693b      	ldr	r3, [r7, #16]
 80017de:	2300      	movs	r3, #0
 80017e0:	60fb      	str	r3, [r7, #12]
 80017e2:	4b19      	ldr	r3, [pc, #100]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017e6:	4a18      	ldr	r2, [pc, #96]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017e8:	f043 0302 	orr.w	r3, r3, #2
 80017ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80017ee:	4b16      	ldr	r3, [pc, #88]	@ (8001848 <HAL_TIM_MspPostInit+0xa8>)
 80017f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017f2:	f003 0302 	and.w	r3, r3, #2
 80017f6:	60fb      	str	r3, [r7, #12]
 80017f8:	68fb      	ldr	r3, [r7, #12]
 80017fa:	23c0      	movs	r3, #192	@ 0xc0
 80017fc:	617b      	str	r3, [r7, #20]
 80017fe:	2302      	movs	r3, #2
 8001800:	61bb      	str	r3, [r7, #24]
 8001802:	2300      	movs	r3, #0
 8001804:	61fb      	str	r3, [r7, #28]
 8001806:	2300      	movs	r3, #0
 8001808:	623b      	str	r3, [r7, #32]
 800180a:	2302      	movs	r3, #2
 800180c:	627b      	str	r3, [r7, #36]	@ 0x24
 800180e:	f107 0314 	add.w	r3, r7, #20
 8001812:	4619      	mov	r1, r3
 8001814:	480d      	ldr	r0, [pc, #52]	@ (800184c <HAL_TIM_MspPostInit+0xac>)
 8001816:	f000 ffd5 	bl	80027c4 <HAL_GPIO_Init>
 800181a:	2303      	movs	r3, #3
 800181c:	617b      	str	r3, [r7, #20]
 800181e:	2302      	movs	r3, #2
 8001820:	61bb      	str	r3, [r7, #24]
 8001822:	2300      	movs	r3, #0
 8001824:	61fb      	str	r3, [r7, #28]
 8001826:	2300      	movs	r3, #0
 8001828:	623b      	str	r3, [r7, #32]
 800182a:	2302      	movs	r3, #2
 800182c:	627b      	str	r3, [r7, #36]	@ 0x24
 800182e:	f107 0314 	add.w	r3, r7, #20
 8001832:	4619      	mov	r1, r3
 8001834:	4806      	ldr	r0, [pc, #24]	@ (8001850 <HAL_TIM_MspPostInit+0xb0>)
 8001836:	f000 ffc5 	bl	80027c4 <HAL_GPIO_Init>
 800183a:	bf00      	nop
 800183c:	3728      	adds	r7, #40	@ 0x28
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}
 8001842:	bf00      	nop
 8001844:	40000400 	.word	0x40000400
 8001848:	40023800 	.word	0x40023800
 800184c:	40020000 	.word	0x40020000
 8001850:	40020400 	.word	0x40020400

08001854 <HAL_UART_MspInit>:
 8001854:	b580      	push	{r7, lr}
 8001856:	b08c      	sub	sp, #48	@ 0x30
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
 800185c:	f107 031c 	add.w	r3, r7, #28
 8001860:	2200      	movs	r2, #0
 8001862:	601a      	str	r2, [r3, #0]
 8001864:	605a      	str	r2, [r3, #4]
 8001866:	609a      	str	r2, [r3, #8]
 8001868:	60da      	str	r2, [r3, #12]
 800186a:	611a      	str	r2, [r3, #16]
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	4a51      	ldr	r2, [pc, #324]	@ (80019b8 <HAL_UART_MspInit+0x164>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d135      	bne.n	80018e2 <HAL_UART_MspInit+0x8e>
 8001876:	2300      	movs	r3, #0
 8001878:	61bb      	str	r3, [r7, #24]
 800187a:	4b50      	ldr	r3, [pc, #320]	@ (80019bc <HAL_UART_MspInit+0x168>)
 800187c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800187e:	4a4f      	ldr	r2, [pc, #316]	@ (80019bc <HAL_UART_MspInit+0x168>)
 8001880:	f043 0310 	orr.w	r3, r3, #16
 8001884:	6453      	str	r3, [r2, #68]	@ 0x44
 8001886:	4b4d      	ldr	r3, [pc, #308]	@ (80019bc <HAL_UART_MspInit+0x168>)
 8001888:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800188a:	f003 0310 	and.w	r3, r3, #16
 800188e:	61bb      	str	r3, [r7, #24]
 8001890:	69bb      	ldr	r3, [r7, #24]
 8001892:	2300      	movs	r3, #0
 8001894:	617b      	str	r3, [r7, #20]
 8001896:	4b49      	ldr	r3, [pc, #292]	@ (80019bc <HAL_UART_MspInit+0x168>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800189a:	4a48      	ldr	r2, [pc, #288]	@ (80019bc <HAL_UART_MspInit+0x168>)
 800189c:	f043 0301 	orr.w	r3, r3, #1
 80018a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80018a2:	4b46      	ldr	r3, [pc, #280]	@ (80019bc <HAL_UART_MspInit+0x168>)
 80018a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018a6:	f003 0301 	and.w	r3, r3, #1
 80018aa:	617b      	str	r3, [r7, #20]
 80018ac:	697b      	ldr	r3, [r7, #20]
 80018ae:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80018b2:	61fb      	str	r3, [r7, #28]
 80018b4:	2302      	movs	r3, #2
 80018b6:	623b      	str	r3, [r7, #32]
 80018b8:	2300      	movs	r3, #0
 80018ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80018bc:	2303      	movs	r3, #3
 80018be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80018c0:	2307      	movs	r3, #7
 80018c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018c4:	f107 031c 	add.w	r3, r7, #28
 80018c8:	4619      	mov	r1, r3
 80018ca:	483d      	ldr	r0, [pc, #244]	@ (80019c0 <HAL_UART_MspInit+0x16c>)
 80018cc:	f000 ff7a 	bl	80027c4 <HAL_GPIO_Init>
 80018d0:	2200      	movs	r2, #0
 80018d2:	2100      	movs	r1, #0
 80018d4:	2025      	movs	r0, #37	@ 0x25
 80018d6:	f000 fb3c 	bl	8001f52 <HAL_NVIC_SetPriority>
 80018da:	2025      	movs	r0, #37	@ 0x25
 80018dc:	f000 fb55 	bl	8001f8a <HAL_NVIC_EnableIRQ>
 80018e0:	e066      	b.n	80019b0 <HAL_UART_MspInit+0x15c>
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	4a37      	ldr	r2, [pc, #220]	@ (80019c4 <HAL_UART_MspInit+0x170>)
 80018e8:	4293      	cmp	r3, r2
 80018ea:	d161      	bne.n	80019b0 <HAL_UART_MspInit+0x15c>
 80018ec:	2300      	movs	r3, #0
 80018ee:	613b      	str	r3, [r7, #16]
 80018f0:	4b32      	ldr	r3, [pc, #200]	@ (80019bc <HAL_UART_MspInit+0x168>)
 80018f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018f4:	4a31      	ldr	r2, [pc, #196]	@ (80019bc <HAL_UART_MspInit+0x168>)
 80018f6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80018fa:	6413      	str	r3, [r2, #64]	@ 0x40
 80018fc:	4b2f      	ldr	r3, [pc, #188]	@ (80019bc <HAL_UART_MspInit+0x168>)
 80018fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001900:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001904:	613b      	str	r3, [r7, #16]
 8001906:	693b      	ldr	r3, [r7, #16]
 8001908:	2300      	movs	r3, #0
 800190a:	60fb      	str	r3, [r7, #12]
 800190c:	4b2b      	ldr	r3, [pc, #172]	@ (80019bc <HAL_UART_MspInit+0x168>)
 800190e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001910:	4a2a      	ldr	r2, [pc, #168]	@ (80019bc <HAL_UART_MspInit+0x168>)
 8001912:	f043 0301 	orr.w	r3, r3, #1
 8001916:	6313      	str	r3, [r2, #48]	@ 0x30
 8001918:	4b28      	ldr	r3, [pc, #160]	@ (80019bc <HAL_UART_MspInit+0x168>)
 800191a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800191c:	f003 0301 	and.w	r3, r3, #1
 8001920:	60fb      	str	r3, [r7, #12]
 8001922:	68fb      	ldr	r3, [r7, #12]
 8001924:	230c      	movs	r3, #12
 8001926:	61fb      	str	r3, [r7, #28]
 8001928:	2302      	movs	r3, #2
 800192a:	623b      	str	r3, [r7, #32]
 800192c:	2300      	movs	r3, #0
 800192e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001930:	2303      	movs	r3, #3
 8001932:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001934:	2307      	movs	r3, #7
 8001936:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001938:	f107 031c 	add.w	r3, r7, #28
 800193c:	4619      	mov	r1, r3
 800193e:	4820      	ldr	r0, [pc, #128]	@ (80019c0 <HAL_UART_MspInit+0x16c>)
 8001940:	f000 ff40 	bl	80027c4 <HAL_GPIO_Init>
 8001944:	4b20      	ldr	r3, [pc, #128]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001946:	4a21      	ldr	r2, [pc, #132]	@ (80019cc <HAL_UART_MspInit+0x178>)
 8001948:	601a      	str	r2, [r3, #0]
 800194a:	4b1f      	ldr	r3, [pc, #124]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 800194c:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001950:	605a      	str	r2, [r3, #4]
 8001952:	4b1d      	ldr	r3, [pc, #116]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001954:	2200      	movs	r2, #0
 8001956:	609a      	str	r2, [r3, #8]
 8001958:	4b1b      	ldr	r3, [pc, #108]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 800195a:	2200      	movs	r2, #0
 800195c:	60da      	str	r2, [r3, #12]
 800195e:	4b1a      	ldr	r3, [pc, #104]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001960:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001964:	611a      	str	r2, [r3, #16]
 8001966:	4b18      	ldr	r3, [pc, #96]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001968:	2200      	movs	r2, #0
 800196a:	615a      	str	r2, [r3, #20]
 800196c:	4b16      	ldr	r3, [pc, #88]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 800196e:	2200      	movs	r2, #0
 8001970:	619a      	str	r2, [r3, #24]
 8001972:	4b15      	ldr	r3, [pc, #84]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001974:	2200      	movs	r2, #0
 8001976:	61da      	str	r2, [r3, #28]
 8001978:	4b13      	ldr	r3, [pc, #76]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 800197a:	2200      	movs	r2, #0
 800197c:	621a      	str	r2, [r3, #32]
 800197e:	4b12      	ldr	r3, [pc, #72]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001980:	2200      	movs	r2, #0
 8001982:	625a      	str	r2, [r3, #36]	@ 0x24
 8001984:	4810      	ldr	r0, [pc, #64]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001986:	f000 fb1b 	bl	8001fc0 <HAL_DMA_Init>
 800198a:	4603      	mov	r3, r0
 800198c:	2b00      	cmp	r3, #0
 800198e:	d001      	beq.n	8001994 <HAL_UART_MspInit+0x140>
 8001990:	f7ff fde0 	bl	8001554 <Error_Handler>
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	4a0c      	ldr	r2, [pc, #48]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 8001998:	63da      	str	r2, [r3, #60]	@ 0x3c
 800199a:	4a0b      	ldr	r2, [pc, #44]	@ (80019c8 <HAL_UART_MspInit+0x174>)
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	6393      	str	r3, [r2, #56]	@ 0x38
 80019a0:	2200      	movs	r2, #0
 80019a2:	2100      	movs	r1, #0
 80019a4:	2026      	movs	r0, #38	@ 0x26
 80019a6:	f000 fad4 	bl	8001f52 <HAL_NVIC_SetPriority>
 80019aa:	2026      	movs	r0, #38	@ 0x26
 80019ac:	f000 faed 	bl	8001f8a <HAL_NVIC_EnableIRQ>
 80019b0:	bf00      	nop
 80019b2:	3730      	adds	r7, #48	@ 0x30
 80019b4:	46bd      	mov	sp, r7
 80019b6:	bd80      	pop	{r7, pc}
 80019b8:	40011000 	.word	0x40011000
 80019bc:	40023800 	.word	0x40023800
 80019c0:	40020000 	.word	0x40020000
 80019c4:	40004400 	.word	0x40004400
 80019c8:	20013acc 	.word	0x20013acc
 80019cc:	40026088 	.word	0x40026088

080019d0 <NMI_Handler>:
 80019d0:	b480      	push	{r7}
 80019d2:	af00      	add	r7, sp, #0
 80019d4:	bf00      	nop
 80019d6:	e7fd      	b.n	80019d4 <NMI_Handler+0x4>

080019d8 <HardFault_Handler>:
 80019d8:	b480      	push	{r7}
 80019da:	af00      	add	r7, sp, #0
 80019dc:	bf00      	nop
 80019de:	e7fd      	b.n	80019dc <HardFault_Handler+0x4>

080019e0 <MemManage_Handler>:
 80019e0:	b480      	push	{r7}
 80019e2:	af00      	add	r7, sp, #0
 80019e4:	bf00      	nop
 80019e6:	e7fd      	b.n	80019e4 <MemManage_Handler+0x4>

080019e8 <BusFault_Handler>:
 80019e8:	b480      	push	{r7}
 80019ea:	af00      	add	r7, sp, #0
 80019ec:	bf00      	nop
 80019ee:	e7fd      	b.n	80019ec <BusFault_Handler+0x4>

080019f0 <UsageFault_Handler>:
 80019f0:	b480      	push	{r7}
 80019f2:	af00      	add	r7, sp, #0
 80019f4:	bf00      	nop
 80019f6:	e7fd      	b.n	80019f4 <UsageFault_Handler+0x4>

080019f8 <SVC_Handler>:
 80019f8:	b480      	push	{r7}
 80019fa:	af00      	add	r7, sp, #0
 80019fc:	bf00      	nop
 80019fe:	46bd      	mov	sp, r7
 8001a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a04:	4770      	bx	lr

08001a06 <DebugMon_Handler>:
 8001a06:	b480      	push	{r7}
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	bf00      	nop
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a12:	4770      	bx	lr

08001a14 <PendSV_Handler>:
 8001a14:	b480      	push	{r7}
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	bf00      	nop
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a20:	4770      	bx	lr

08001a22 <SysTick_Handler>:
 8001a22:	b580      	push	{r7, lr}
 8001a24:	af00      	add	r7, sp, #0
 8001a26:	f000 f975 	bl	8001d14 <HAL_IncTick>
 8001a2a:	bf00      	nop
 8001a2c:	bd80      	pop	{r7, pc}
	...

08001a30 <DMA1_Stream5_IRQHandler>:
 8001a30:	b580      	push	{r7, lr}
 8001a32:	af00      	add	r7, sp, #0
 8001a34:	4802      	ldr	r0, [pc, #8]	@ (8001a40 <DMA1_Stream5_IRQHandler+0x10>)
 8001a36:	f000 fc5b 	bl	80022f0 <HAL_DMA_IRQHandler>
 8001a3a:	bf00      	nop
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	20013acc 	.word	0x20013acc

08001a44 <USART1_IRQHandler>:
 8001a44:	b580      	push	{r7, lr}
 8001a46:	af00      	add	r7, sp, #0
 8001a48:	4802      	ldr	r0, [pc, #8]	@ (8001a54 <USART1_IRQHandler+0x10>)
 8001a4a:	f003 fb71 	bl	8005130 <HAL_UART_IRQHandler>
 8001a4e:	bf00      	nop
 8001a50:	bd80      	pop	{r7, pc}
 8001a52:	bf00      	nop
 8001a54:	20013a3c 	.word	0x20013a3c

08001a58 <USART2_IRQHandler>:
 8001a58:	b580      	push	{r7, lr}
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	4802      	ldr	r0, [pc, #8]	@ (8001a68 <USART2_IRQHandler+0x10>)
 8001a5e:	f003 fb67 	bl	8005130 <HAL_UART_IRQHandler>
 8001a62:	bf00      	nop
 8001a64:	bd80      	pop	{r7, pc}
 8001a66:	bf00      	nop
 8001a68:	20013a84 	.word	0x20013a84

08001a6c <_getpid>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	af00      	add	r7, sp, #0
 8001a70:	2301      	movs	r3, #1
 8001a72:	4618      	mov	r0, r3
 8001a74:	46bd      	mov	sp, r7
 8001a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7a:	4770      	bx	lr

08001a7c <_kill>:
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	b082      	sub	sp, #8
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	6078      	str	r0, [r7, #4]
 8001a84:	6039      	str	r1, [r7, #0]
 8001a86:	f004 feb7 	bl	80067f8 <__errno>
 8001a8a:	4603      	mov	r3, r0
 8001a8c:	2216      	movs	r2, #22
 8001a8e:	601a      	str	r2, [r3, #0]
 8001a90:	f04f 33ff 	mov.w	r3, #4294967295
 8001a94:	4618      	mov	r0, r3
 8001a96:	3708      	adds	r7, #8
 8001a98:	46bd      	mov	sp, r7
 8001a9a:	bd80      	pop	{r7, pc}

08001a9c <_exit>:
 8001a9c:	b580      	push	{r7, lr}
 8001a9e:	b082      	sub	sp, #8
 8001aa0:	af00      	add	r7, sp, #0
 8001aa2:	6078      	str	r0, [r7, #4]
 8001aa4:	f04f 31ff 	mov.w	r1, #4294967295
 8001aa8:	6878      	ldr	r0, [r7, #4]
 8001aaa:	f7ff ffe7 	bl	8001a7c <_kill>
 8001aae:	bf00      	nop
 8001ab0:	e7fd      	b.n	8001aae <_exit+0x12>

08001ab2 <_read>:
 8001ab2:	b580      	push	{r7, lr}
 8001ab4:	b086      	sub	sp, #24
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	60f8      	str	r0, [r7, #12]
 8001aba:	60b9      	str	r1, [r7, #8]
 8001abc:	607a      	str	r2, [r7, #4]
 8001abe:	2300      	movs	r3, #0
 8001ac0:	617b      	str	r3, [r7, #20]
 8001ac2:	e00a      	b.n	8001ada <_read+0x28>
 8001ac4:	f3af 8000 	nop.w
 8001ac8:	4601      	mov	r1, r0
 8001aca:	68bb      	ldr	r3, [r7, #8]
 8001acc:	1c5a      	adds	r2, r3, #1
 8001ace:	60ba      	str	r2, [r7, #8]
 8001ad0:	b2ca      	uxtb	r2, r1
 8001ad2:	701a      	strb	r2, [r3, #0]
 8001ad4:	697b      	ldr	r3, [r7, #20]
 8001ad6:	3301      	adds	r3, #1
 8001ad8:	617b      	str	r3, [r7, #20]
 8001ada:	697a      	ldr	r2, [r7, #20]
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	429a      	cmp	r2, r3
 8001ae0:	dbf0      	blt.n	8001ac4 <_read+0x12>
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	4618      	mov	r0, r3
 8001ae6:	3718      	adds	r7, #24
 8001ae8:	46bd      	mov	sp, r7
 8001aea:	bd80      	pop	{r7, pc}

08001aec <_write>:
 8001aec:	b580      	push	{r7, lr}
 8001aee:	b086      	sub	sp, #24
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	60f8      	str	r0, [r7, #12]
 8001af4:	60b9      	str	r1, [r7, #8]
 8001af6:	607a      	str	r2, [r7, #4]
 8001af8:	2300      	movs	r3, #0
 8001afa:	617b      	str	r3, [r7, #20]
 8001afc:	e009      	b.n	8001b12 <_write+0x26>
 8001afe:	68bb      	ldr	r3, [r7, #8]
 8001b00:	1c5a      	adds	r2, r3, #1
 8001b02:	60ba      	str	r2, [r7, #8]
 8001b04:	781b      	ldrb	r3, [r3, #0]
 8001b06:	4618      	mov	r0, r3
 8001b08:	f7ff fd12 	bl	8001530 <__io_putchar>
 8001b0c:	697b      	ldr	r3, [r7, #20]
 8001b0e:	3301      	adds	r3, #1
 8001b10:	617b      	str	r3, [r7, #20]
 8001b12:	697a      	ldr	r2, [r7, #20]
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	429a      	cmp	r2, r3
 8001b18:	dbf1      	blt.n	8001afe <_write+0x12>
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	4618      	mov	r0, r3
 8001b1e:	3718      	adds	r7, #24
 8001b20:	46bd      	mov	sp, r7
 8001b22:	bd80      	pop	{r7, pc}

08001b24 <_close>:
 8001b24:	b480      	push	{r7}
 8001b26:	b083      	sub	sp, #12
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	6078      	str	r0, [r7, #4]
 8001b2c:	f04f 33ff 	mov.w	r3, #4294967295
 8001b30:	4618      	mov	r0, r3
 8001b32:	370c      	adds	r7, #12
 8001b34:	46bd      	mov	sp, r7
 8001b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b3a:	4770      	bx	lr

08001b3c <_fstat>:
 8001b3c:	b480      	push	{r7}
 8001b3e:	b083      	sub	sp, #12
 8001b40:	af00      	add	r7, sp, #0
 8001b42:	6078      	str	r0, [r7, #4]
 8001b44:	6039      	str	r1, [r7, #0]
 8001b46:	683b      	ldr	r3, [r7, #0]
 8001b48:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001b4c:	605a      	str	r2, [r3, #4]
 8001b4e:	2300      	movs	r3, #0
 8001b50:	4618      	mov	r0, r3
 8001b52:	370c      	adds	r7, #12
 8001b54:	46bd      	mov	sp, r7
 8001b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b5a:	4770      	bx	lr

08001b5c <_isatty>:
 8001b5c:	b480      	push	{r7}
 8001b5e:	b083      	sub	sp, #12
 8001b60:	af00      	add	r7, sp, #0
 8001b62:	6078      	str	r0, [r7, #4]
 8001b64:	2301      	movs	r3, #1
 8001b66:	4618      	mov	r0, r3
 8001b68:	370c      	adds	r7, #12
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b70:	4770      	bx	lr

08001b72 <_lseek>:
 8001b72:	b480      	push	{r7}
 8001b74:	b085      	sub	sp, #20
 8001b76:	af00      	add	r7, sp, #0
 8001b78:	60f8      	str	r0, [r7, #12]
 8001b7a:	60b9      	str	r1, [r7, #8]
 8001b7c:	607a      	str	r2, [r7, #4]
 8001b7e:	2300      	movs	r3, #0
 8001b80:	4618      	mov	r0, r3
 8001b82:	3714      	adds	r7, #20
 8001b84:	46bd      	mov	sp, r7
 8001b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b8a:	4770      	bx	lr

08001b8c <_sbrk>:
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b086      	sub	sp, #24
 8001b90:	af00      	add	r7, sp, #0
 8001b92:	6078      	str	r0, [r7, #4]
 8001b94:	4a14      	ldr	r2, [pc, #80]	@ (8001be8 <_sbrk+0x5c>)
 8001b96:	4b15      	ldr	r3, [pc, #84]	@ (8001bec <_sbrk+0x60>)
 8001b98:	1ad3      	subs	r3, r2, r3
 8001b9a:	617b      	str	r3, [r7, #20]
 8001b9c:	697b      	ldr	r3, [r7, #20]
 8001b9e:	613b      	str	r3, [r7, #16]
 8001ba0:	4b13      	ldr	r3, [pc, #76]	@ (8001bf0 <_sbrk+0x64>)
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d102      	bne.n	8001bae <_sbrk+0x22>
 8001ba8:	4b11      	ldr	r3, [pc, #68]	@ (8001bf0 <_sbrk+0x64>)
 8001baa:	4a12      	ldr	r2, [pc, #72]	@ (8001bf4 <_sbrk+0x68>)
 8001bac:	601a      	str	r2, [r3, #0]
 8001bae:	4b10      	ldr	r3, [pc, #64]	@ (8001bf0 <_sbrk+0x64>)
 8001bb0:	681a      	ldr	r2, [r3, #0]
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	4413      	add	r3, r2
 8001bb6:	693a      	ldr	r2, [r7, #16]
 8001bb8:	429a      	cmp	r2, r3
 8001bba:	d207      	bcs.n	8001bcc <_sbrk+0x40>
 8001bbc:	f004 fe1c 	bl	80067f8 <__errno>
 8001bc0:	4603      	mov	r3, r0
 8001bc2:	220c      	movs	r2, #12
 8001bc4:	601a      	str	r2, [r3, #0]
 8001bc6:	f04f 33ff 	mov.w	r3, #4294967295
 8001bca:	e009      	b.n	8001be0 <_sbrk+0x54>
 8001bcc:	4b08      	ldr	r3, [pc, #32]	@ (8001bf0 <_sbrk+0x64>)
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	60fb      	str	r3, [r7, #12]
 8001bd2:	4b07      	ldr	r3, [pc, #28]	@ (8001bf0 <_sbrk+0x64>)
 8001bd4:	681a      	ldr	r2, [r3, #0]
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	4413      	add	r3, r2
 8001bda:	4a05      	ldr	r2, [pc, #20]	@ (8001bf0 <_sbrk+0x64>)
 8001bdc:	6013      	str	r3, [r2, #0]
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	4618      	mov	r0, r3
 8001be2:	3718      	adds	r7, #24
 8001be4:	46bd      	mov	sp, r7
 8001be6:	bd80      	pop	{r7, pc}
 8001be8:	20020000 	.word	0x20020000
 8001bec:	00000400 	.word	0x00000400
 8001bf0:	20013bc8 	.word	0x20013bc8
 8001bf4:	20013d20 	.word	0x20013d20

08001bf8 <SystemInit>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	af00      	add	r7, sp, #0
 8001bfc:	4b06      	ldr	r3, [pc, #24]	@ (8001c18 <SystemInit+0x20>)
 8001bfe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001c02:	4a05      	ldr	r2, [pc, #20]	@ (8001c18 <SystemInit+0x20>)
 8001c04:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001c08:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001c0c:	bf00      	nop
 8001c0e:	46bd      	mov	sp, r7
 8001c10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c14:	4770      	bx	lr
 8001c16:	bf00      	nop
 8001c18:	e000ed00 	.word	0xe000ed00

08001c1c <Reset_Handler>:
 8001c1c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001c54 <LoopFillZerobss+0xe>
 8001c20:	f7ff ffea 	bl	8001bf8 <SystemInit>
 8001c24:	480c      	ldr	r0, [pc, #48]	@ (8001c58 <LoopFillZerobss+0x12>)
 8001c26:	490d      	ldr	r1, [pc, #52]	@ (8001c5c <LoopFillZerobss+0x16>)
 8001c28:	4a0d      	ldr	r2, [pc, #52]	@ (8001c60 <LoopFillZerobss+0x1a>)
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	e002      	b.n	8001c34 <LoopCopyDataInit>

08001c2e <CopyDataInit>:
 8001c2e:	58d4      	ldr	r4, [r2, r3]
 8001c30:	50c4      	str	r4, [r0, r3]
 8001c32:	3304      	adds	r3, #4

08001c34 <LoopCopyDataInit>:
 8001c34:	18c4      	adds	r4, r0, r3
 8001c36:	428c      	cmp	r4, r1
 8001c38:	d3f9      	bcc.n	8001c2e <CopyDataInit>
 8001c3a:	4a0a      	ldr	r2, [pc, #40]	@ (8001c64 <LoopFillZerobss+0x1e>)
 8001c3c:	4c0a      	ldr	r4, [pc, #40]	@ (8001c68 <LoopFillZerobss+0x22>)
 8001c3e:	2300      	movs	r3, #0
 8001c40:	e001      	b.n	8001c46 <LoopFillZerobss>

08001c42 <FillZerobss>:
 8001c42:	6013      	str	r3, [r2, #0]
 8001c44:	3204      	adds	r2, #4

08001c46 <LoopFillZerobss>:
 8001c46:	42a2      	cmp	r2, r4
 8001c48:	d3fb      	bcc.n	8001c42 <FillZerobss>
 8001c4a:	f004 fddb 	bl	8006804 <__libc_init_array>
 8001c4e:	f7ff f953 	bl	8000ef8 <main>
 8001c52:	4770      	bx	lr
 8001c54:	20020000 	.word	0x20020000
 8001c58:	20000000 	.word	0x20000000
 8001c5c:	2000008c 	.word	0x2000008c
 8001c60:	08007a60 	.word	0x08007a60
 8001c64:	2000008c 	.word	0x2000008c
 8001c68:	20013d1c 	.word	0x20013d1c

08001c6c <ADC_IRQHandler>:
 8001c6c:	e7fe      	b.n	8001c6c <ADC_IRQHandler>
	...

08001c70 <HAL_Init>:
 8001c70:	b580      	push	{r7, lr}
 8001c72:	af00      	add	r7, sp, #0
 8001c74:	4b0e      	ldr	r3, [pc, #56]	@ (8001cb0 <HAL_Init+0x40>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	4a0d      	ldr	r2, [pc, #52]	@ (8001cb0 <HAL_Init+0x40>)
 8001c7a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001c7e:	6013      	str	r3, [r2, #0]
 8001c80:	4b0b      	ldr	r3, [pc, #44]	@ (8001cb0 <HAL_Init+0x40>)
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	4a0a      	ldr	r2, [pc, #40]	@ (8001cb0 <HAL_Init+0x40>)
 8001c86:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001c8a:	6013      	str	r3, [r2, #0]
 8001c8c:	4b08      	ldr	r3, [pc, #32]	@ (8001cb0 <HAL_Init+0x40>)
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	4a07      	ldr	r2, [pc, #28]	@ (8001cb0 <HAL_Init+0x40>)
 8001c92:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001c96:	6013      	str	r3, [r2, #0]
 8001c98:	2003      	movs	r0, #3
 8001c9a:	f000 f94f 	bl	8001f3c <HAL_NVIC_SetPriorityGrouping>
 8001c9e:	200f      	movs	r0, #15
 8001ca0:	f000 f808 	bl	8001cb4 <HAL_InitTick>
 8001ca4:	f7ff fc5c 	bl	8001560 <HAL_MspInit>
 8001ca8:	2300      	movs	r3, #0
 8001caa:	4618      	mov	r0, r3
 8001cac:	bd80      	pop	{r7, pc}
 8001cae:	bf00      	nop
 8001cb0:	40023c00 	.word	0x40023c00

08001cb4 <HAL_InitTick>:
 8001cb4:	b580      	push	{r7, lr}
 8001cb6:	b082      	sub	sp, #8
 8001cb8:	af00      	add	r7, sp, #0
 8001cba:	6078      	str	r0, [r7, #4]
 8001cbc:	4b12      	ldr	r3, [pc, #72]	@ (8001d08 <HAL_InitTick+0x54>)
 8001cbe:	681a      	ldr	r2, [r3, #0]
 8001cc0:	4b12      	ldr	r3, [pc, #72]	@ (8001d0c <HAL_InitTick+0x58>)
 8001cc2:	781b      	ldrb	r3, [r3, #0]
 8001cc4:	4619      	mov	r1, r3
 8001cc6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cca:	fbb3 f3f1 	udiv	r3, r3, r1
 8001cce:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cd2:	4618      	mov	r0, r3
 8001cd4:	f000 f967 	bl	8001fa6 <HAL_SYSTICK_Config>
 8001cd8:	4603      	mov	r3, r0
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d001      	beq.n	8001ce2 <HAL_InitTick+0x2e>
 8001cde:	2301      	movs	r3, #1
 8001ce0:	e00e      	b.n	8001d00 <HAL_InitTick+0x4c>
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	2b0f      	cmp	r3, #15
 8001ce6:	d80a      	bhi.n	8001cfe <HAL_InitTick+0x4a>
 8001ce8:	2200      	movs	r2, #0
 8001cea:	6879      	ldr	r1, [r7, #4]
 8001cec:	f04f 30ff 	mov.w	r0, #4294967295
 8001cf0:	f000 f92f 	bl	8001f52 <HAL_NVIC_SetPriority>
 8001cf4:	4a06      	ldr	r2, [pc, #24]	@ (8001d10 <HAL_InitTick+0x5c>)
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	6013      	str	r3, [r2, #0]
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	e000      	b.n	8001d00 <HAL_InitTick+0x4c>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	4618      	mov	r0, r3
 8001d02:	3708      	adds	r7, #8
 8001d04:	46bd      	mov	sp, r7
 8001d06:	bd80      	pop	{r7, pc}
 8001d08:	20000024 	.word	0x20000024
 8001d0c:	2000002c 	.word	0x2000002c
 8001d10:	20000028 	.word	0x20000028

08001d14 <HAL_IncTick>:
 8001d14:	b480      	push	{r7}
 8001d16:	af00      	add	r7, sp, #0
 8001d18:	4b06      	ldr	r3, [pc, #24]	@ (8001d34 <HAL_IncTick+0x20>)
 8001d1a:	781b      	ldrb	r3, [r3, #0]
 8001d1c:	461a      	mov	r2, r3
 8001d1e:	4b06      	ldr	r3, [pc, #24]	@ (8001d38 <HAL_IncTick+0x24>)
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	4413      	add	r3, r2
 8001d24:	4a04      	ldr	r2, [pc, #16]	@ (8001d38 <HAL_IncTick+0x24>)
 8001d26:	6013      	str	r3, [r2, #0]
 8001d28:	bf00      	nop
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d30:	4770      	bx	lr
 8001d32:	bf00      	nop
 8001d34:	2000002c 	.word	0x2000002c
 8001d38:	20013bcc 	.word	0x20013bcc

08001d3c <HAL_GetTick>:
 8001d3c:	b480      	push	{r7}
 8001d3e:	af00      	add	r7, sp, #0
 8001d40:	4b03      	ldr	r3, [pc, #12]	@ (8001d50 <HAL_GetTick+0x14>)
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	4618      	mov	r0, r3
 8001d46:	46bd      	mov	sp, r7
 8001d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	20013bcc 	.word	0x20013bcc

08001d54 <HAL_Delay>:
 8001d54:	b580      	push	{r7, lr}
 8001d56:	b084      	sub	sp, #16
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	6078      	str	r0, [r7, #4]
 8001d5c:	f7ff ffee 	bl	8001d3c <HAL_GetTick>
 8001d60:	60b8      	str	r0, [r7, #8]
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	60fb      	str	r3, [r7, #12]
 8001d66:	68fb      	ldr	r3, [r7, #12]
 8001d68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d6c:	d005      	beq.n	8001d7a <HAL_Delay+0x26>
 8001d6e:	4b0a      	ldr	r3, [pc, #40]	@ (8001d98 <HAL_Delay+0x44>)
 8001d70:	781b      	ldrb	r3, [r3, #0]
 8001d72:	461a      	mov	r2, r3
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	4413      	add	r3, r2
 8001d78:	60fb      	str	r3, [r7, #12]
 8001d7a:	bf00      	nop
 8001d7c:	f7ff ffde 	bl	8001d3c <HAL_GetTick>
 8001d80:	4602      	mov	r2, r0
 8001d82:	68bb      	ldr	r3, [r7, #8]
 8001d84:	1ad3      	subs	r3, r2, r3
 8001d86:	68fa      	ldr	r2, [r7, #12]
 8001d88:	429a      	cmp	r2, r3
 8001d8a:	d8f7      	bhi.n	8001d7c <HAL_Delay+0x28>
 8001d8c:	bf00      	nop
 8001d8e:	bf00      	nop
 8001d90:	3710      	adds	r7, #16
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}
 8001d96:	bf00      	nop
 8001d98:	2000002c 	.word	0x2000002c

08001d9c <__NVIC_SetPriorityGrouping>:
 8001d9c:	b480      	push	{r7}
 8001d9e:	b085      	sub	sp, #20
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	6078      	str	r0, [r7, #4]
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	f003 0307 	and.w	r3, r3, #7
 8001daa:	60fb      	str	r3, [r7, #12]
 8001dac:	4b0c      	ldr	r3, [pc, #48]	@ (8001de0 <__NVIC_SetPriorityGrouping+0x44>)
 8001dae:	68db      	ldr	r3, [r3, #12]
 8001db0:	60bb      	str	r3, [r7, #8]
 8001db2:	68ba      	ldr	r2, [r7, #8]
 8001db4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001db8:	4013      	ands	r3, r2
 8001dba:	60bb      	str	r3, [r7, #8]
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	021a      	lsls	r2, r3, #8
 8001dc0:	68bb      	ldr	r3, [r7, #8]
 8001dc2:	4313      	orrs	r3, r2
 8001dc4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001dc8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001dcc:	60bb      	str	r3, [r7, #8]
 8001dce:	4a04      	ldr	r2, [pc, #16]	@ (8001de0 <__NVIC_SetPriorityGrouping+0x44>)
 8001dd0:	68bb      	ldr	r3, [r7, #8]
 8001dd2:	60d3      	str	r3, [r2, #12]
 8001dd4:	bf00      	nop
 8001dd6:	3714      	adds	r7, #20
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dde:	4770      	bx	lr
 8001de0:	e000ed00 	.word	0xe000ed00

08001de4 <__NVIC_GetPriorityGrouping>:
 8001de4:	b480      	push	{r7}
 8001de6:	af00      	add	r7, sp, #0
 8001de8:	4b04      	ldr	r3, [pc, #16]	@ (8001dfc <__NVIC_GetPriorityGrouping+0x18>)
 8001dea:	68db      	ldr	r3, [r3, #12]
 8001dec:	0a1b      	lsrs	r3, r3, #8
 8001dee:	f003 0307 	and.w	r3, r3, #7
 8001df2:	4618      	mov	r0, r3
 8001df4:	46bd      	mov	sp, r7
 8001df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dfa:	4770      	bx	lr
 8001dfc:	e000ed00 	.word	0xe000ed00

08001e00 <__NVIC_EnableIRQ>:
 8001e00:	b480      	push	{r7}
 8001e02:	b083      	sub	sp, #12
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	4603      	mov	r3, r0
 8001e08:	71fb      	strb	r3, [r7, #7]
 8001e0a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	db0b      	blt.n	8001e2a <__NVIC_EnableIRQ+0x2a>
 8001e12:	79fb      	ldrb	r3, [r7, #7]
 8001e14:	f003 021f 	and.w	r2, r3, #31
 8001e18:	4907      	ldr	r1, [pc, #28]	@ (8001e38 <__NVIC_EnableIRQ+0x38>)
 8001e1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e1e:	095b      	lsrs	r3, r3, #5
 8001e20:	2001      	movs	r0, #1
 8001e22:	fa00 f202 	lsl.w	r2, r0, r2
 8001e26:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001e2a:	bf00      	nop
 8001e2c:	370c      	adds	r7, #12
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e34:	4770      	bx	lr
 8001e36:	bf00      	nop
 8001e38:	e000e100 	.word	0xe000e100

08001e3c <__NVIC_SetPriority>:
 8001e3c:	b480      	push	{r7}
 8001e3e:	b083      	sub	sp, #12
 8001e40:	af00      	add	r7, sp, #0
 8001e42:	4603      	mov	r3, r0
 8001e44:	6039      	str	r1, [r7, #0]
 8001e46:	71fb      	strb	r3, [r7, #7]
 8001e48:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e4c:	2b00      	cmp	r3, #0
 8001e4e:	db0a      	blt.n	8001e66 <__NVIC_SetPriority+0x2a>
 8001e50:	683b      	ldr	r3, [r7, #0]
 8001e52:	b2da      	uxtb	r2, r3
 8001e54:	490c      	ldr	r1, [pc, #48]	@ (8001e88 <__NVIC_SetPriority+0x4c>)
 8001e56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e5a:	0112      	lsls	r2, r2, #4
 8001e5c:	b2d2      	uxtb	r2, r2
 8001e5e:	440b      	add	r3, r1
 8001e60:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001e64:	e00a      	b.n	8001e7c <__NVIC_SetPriority+0x40>
 8001e66:	683b      	ldr	r3, [r7, #0]
 8001e68:	b2da      	uxtb	r2, r3
 8001e6a:	4908      	ldr	r1, [pc, #32]	@ (8001e8c <__NVIC_SetPriority+0x50>)
 8001e6c:	79fb      	ldrb	r3, [r7, #7]
 8001e6e:	f003 030f 	and.w	r3, r3, #15
 8001e72:	3b04      	subs	r3, #4
 8001e74:	0112      	lsls	r2, r2, #4
 8001e76:	b2d2      	uxtb	r2, r2
 8001e78:	440b      	add	r3, r1
 8001e7a:	761a      	strb	r2, [r3, #24]
 8001e7c:	bf00      	nop
 8001e7e:	370c      	adds	r7, #12
 8001e80:	46bd      	mov	sp, r7
 8001e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e86:	4770      	bx	lr
 8001e88:	e000e100 	.word	0xe000e100
 8001e8c:	e000ed00 	.word	0xe000ed00

08001e90 <NVIC_EncodePriority>:
 8001e90:	b480      	push	{r7}
 8001e92:	b089      	sub	sp, #36	@ 0x24
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	60f8      	str	r0, [r7, #12]
 8001e98:	60b9      	str	r1, [r7, #8]
 8001e9a:	607a      	str	r2, [r7, #4]
 8001e9c:	68fb      	ldr	r3, [r7, #12]
 8001e9e:	f003 0307 	and.w	r3, r3, #7
 8001ea2:	61fb      	str	r3, [r7, #28]
 8001ea4:	69fb      	ldr	r3, [r7, #28]
 8001ea6:	f1c3 0307 	rsb	r3, r3, #7
 8001eaa:	2b04      	cmp	r3, #4
 8001eac:	bf28      	it	cs
 8001eae:	2304      	movcs	r3, #4
 8001eb0:	61bb      	str	r3, [r7, #24]
 8001eb2:	69fb      	ldr	r3, [r7, #28]
 8001eb4:	3304      	adds	r3, #4
 8001eb6:	2b06      	cmp	r3, #6
 8001eb8:	d902      	bls.n	8001ec0 <NVIC_EncodePriority+0x30>
 8001eba:	69fb      	ldr	r3, [r7, #28]
 8001ebc:	3b03      	subs	r3, #3
 8001ebe:	e000      	b.n	8001ec2 <NVIC_EncodePriority+0x32>
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	617b      	str	r3, [r7, #20]
 8001ec4:	f04f 32ff 	mov.w	r2, #4294967295
 8001ec8:	69bb      	ldr	r3, [r7, #24]
 8001eca:	fa02 f303 	lsl.w	r3, r2, r3
 8001ece:	43da      	mvns	r2, r3
 8001ed0:	68bb      	ldr	r3, [r7, #8]
 8001ed2:	401a      	ands	r2, r3
 8001ed4:	697b      	ldr	r3, [r7, #20]
 8001ed6:	409a      	lsls	r2, r3
 8001ed8:	f04f 31ff 	mov.w	r1, #4294967295
 8001edc:	697b      	ldr	r3, [r7, #20]
 8001ede:	fa01 f303 	lsl.w	r3, r1, r3
 8001ee2:	43d9      	mvns	r1, r3
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	400b      	ands	r3, r1
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	4618      	mov	r0, r3
 8001eec:	3724      	adds	r7, #36	@ 0x24
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ef4:	4770      	bx	lr
	...

08001ef8 <SysTick_Config>:
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b082      	sub	sp, #8
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	6078      	str	r0, [r7, #4]
 8001f00:	687b      	ldr	r3, [r7, #4]
 8001f02:	3b01      	subs	r3, #1
 8001f04:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001f08:	d301      	bcc.n	8001f0e <SysTick_Config+0x16>
 8001f0a:	2301      	movs	r3, #1
 8001f0c:	e00f      	b.n	8001f2e <SysTick_Config+0x36>
 8001f0e:	4a0a      	ldr	r2, [pc, #40]	@ (8001f38 <SysTick_Config+0x40>)
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	3b01      	subs	r3, #1
 8001f14:	6053      	str	r3, [r2, #4]
 8001f16:	210f      	movs	r1, #15
 8001f18:	f04f 30ff 	mov.w	r0, #4294967295
 8001f1c:	f7ff ff8e 	bl	8001e3c <__NVIC_SetPriority>
 8001f20:	4b05      	ldr	r3, [pc, #20]	@ (8001f38 <SysTick_Config+0x40>)
 8001f22:	2200      	movs	r2, #0
 8001f24:	609a      	str	r2, [r3, #8]
 8001f26:	4b04      	ldr	r3, [pc, #16]	@ (8001f38 <SysTick_Config+0x40>)
 8001f28:	2207      	movs	r2, #7
 8001f2a:	601a      	str	r2, [r3, #0]
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	4618      	mov	r0, r3
 8001f30:	3708      	adds	r7, #8
 8001f32:	46bd      	mov	sp, r7
 8001f34:	bd80      	pop	{r7, pc}
 8001f36:	bf00      	nop
 8001f38:	e000e010 	.word	0xe000e010

08001f3c <HAL_NVIC_SetPriorityGrouping>:
 8001f3c:	b580      	push	{r7, lr}
 8001f3e:	b082      	sub	sp, #8
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	6078      	str	r0, [r7, #4]
 8001f44:	6878      	ldr	r0, [r7, #4]
 8001f46:	f7ff ff29 	bl	8001d9c <__NVIC_SetPriorityGrouping>
 8001f4a:	bf00      	nop
 8001f4c:	3708      	adds	r7, #8
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	bd80      	pop	{r7, pc}

08001f52 <HAL_NVIC_SetPriority>:
 8001f52:	b580      	push	{r7, lr}
 8001f54:	b086      	sub	sp, #24
 8001f56:	af00      	add	r7, sp, #0
 8001f58:	4603      	mov	r3, r0
 8001f5a:	60b9      	str	r1, [r7, #8]
 8001f5c:	607a      	str	r2, [r7, #4]
 8001f5e:	73fb      	strb	r3, [r7, #15]
 8001f60:	2300      	movs	r3, #0
 8001f62:	617b      	str	r3, [r7, #20]
 8001f64:	f7ff ff3e 	bl	8001de4 <__NVIC_GetPriorityGrouping>
 8001f68:	6178      	str	r0, [r7, #20]
 8001f6a:	687a      	ldr	r2, [r7, #4]
 8001f6c:	68b9      	ldr	r1, [r7, #8]
 8001f6e:	6978      	ldr	r0, [r7, #20]
 8001f70:	f7ff ff8e 	bl	8001e90 <NVIC_EncodePriority>
 8001f74:	4602      	mov	r2, r0
 8001f76:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001f7a:	4611      	mov	r1, r2
 8001f7c:	4618      	mov	r0, r3
 8001f7e:	f7ff ff5d 	bl	8001e3c <__NVIC_SetPriority>
 8001f82:	bf00      	nop
 8001f84:	3718      	adds	r7, #24
 8001f86:	46bd      	mov	sp, r7
 8001f88:	bd80      	pop	{r7, pc}

08001f8a <HAL_NVIC_EnableIRQ>:
 8001f8a:	b580      	push	{r7, lr}
 8001f8c:	b082      	sub	sp, #8
 8001f8e:	af00      	add	r7, sp, #0
 8001f90:	4603      	mov	r3, r0
 8001f92:	71fb      	strb	r3, [r7, #7]
 8001f94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f98:	4618      	mov	r0, r3
 8001f9a:	f7ff ff31 	bl	8001e00 <__NVIC_EnableIRQ>
 8001f9e:	bf00      	nop
 8001fa0:	3708      	adds	r7, #8
 8001fa2:	46bd      	mov	sp, r7
 8001fa4:	bd80      	pop	{r7, pc}

08001fa6 <HAL_SYSTICK_Config>:
 8001fa6:	b580      	push	{r7, lr}
 8001fa8:	b082      	sub	sp, #8
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	6078      	str	r0, [r7, #4]
 8001fae:	6878      	ldr	r0, [r7, #4]
 8001fb0:	f7ff ffa2 	bl	8001ef8 <SysTick_Config>
 8001fb4:	4603      	mov	r3, r0
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	3708      	adds	r7, #8
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	bd80      	pop	{r7, pc}
	...

08001fc0 <HAL_DMA_Init>:
 8001fc0:	b580      	push	{r7, lr}
 8001fc2:	b086      	sub	sp, #24
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	6078      	str	r0, [r7, #4]
 8001fc8:	2300      	movs	r3, #0
 8001fca:	617b      	str	r3, [r7, #20]
 8001fcc:	f7ff feb6 	bl	8001d3c <HAL_GetTick>
 8001fd0:	6138      	str	r0, [r7, #16]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	d101      	bne.n	8001fdc <HAL_DMA_Init+0x1c>
 8001fd8:	2301      	movs	r3, #1
 8001fda:	e099      	b.n	8002110 <HAL_DMA_Init+0x150>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	2202      	movs	r2, #2
 8001fe0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	2200      	movs	r2, #0
 8001fe8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	681a      	ldr	r2, [r3, #0]
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	f022 0201 	bic.w	r2, r2, #1
 8001ffa:	601a      	str	r2, [r3, #0]
 8001ffc:	e00f      	b.n	800201e <HAL_DMA_Init+0x5e>
 8001ffe:	f7ff fe9d 	bl	8001d3c <HAL_GetTick>
 8002002:	4602      	mov	r2, r0
 8002004:	693b      	ldr	r3, [r7, #16]
 8002006:	1ad3      	subs	r3, r2, r3
 8002008:	2b05      	cmp	r3, #5
 800200a:	d908      	bls.n	800201e <HAL_DMA_Init+0x5e>
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	2220      	movs	r2, #32
 8002010:	655a      	str	r2, [r3, #84]	@ 0x54
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	2203      	movs	r2, #3
 8002016:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800201a:	2303      	movs	r3, #3
 800201c:	e078      	b.n	8002110 <HAL_DMA_Init+0x150>
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	f003 0301 	and.w	r3, r3, #1
 8002028:	2b00      	cmp	r3, #0
 800202a:	d1e8      	bne.n	8001ffe <HAL_DMA_Init+0x3e>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	617b      	str	r3, [r7, #20]
 8002034:	697a      	ldr	r2, [r7, #20]
 8002036:	4b38      	ldr	r3, [pc, #224]	@ (8002118 <HAL_DMA_Init+0x158>)
 8002038:	4013      	ands	r3, r2
 800203a:	617b      	str	r3, [r7, #20]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	685a      	ldr	r2, [r3, #4]
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	689b      	ldr	r3, [r3, #8]
 8002044:	431a      	orrs	r2, r3
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	68db      	ldr	r3, [r3, #12]
 800204a:	431a      	orrs	r2, r3
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	691b      	ldr	r3, [r3, #16]
 8002050:	431a      	orrs	r2, r3
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	695b      	ldr	r3, [r3, #20]
 8002056:	431a      	orrs	r2, r3
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	699b      	ldr	r3, [r3, #24]
 800205c:	431a      	orrs	r2, r3
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	69db      	ldr	r3, [r3, #28]
 8002062:	431a      	orrs	r2, r3
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	6a1b      	ldr	r3, [r3, #32]
 8002068:	4313      	orrs	r3, r2
 800206a:	697a      	ldr	r2, [r7, #20]
 800206c:	4313      	orrs	r3, r2
 800206e:	617b      	str	r3, [r7, #20]
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002074:	2b04      	cmp	r3, #4
 8002076:	d107      	bne.n	8002088 <HAL_DMA_Init+0xc8>
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002080:	4313      	orrs	r3, r2
 8002082:	697a      	ldr	r2, [r7, #20]
 8002084:	4313      	orrs	r3, r2
 8002086:	617b      	str	r3, [r7, #20]
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	697a      	ldr	r2, [r7, #20]
 800208e:	601a      	str	r2, [r3, #0]
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	695b      	ldr	r3, [r3, #20]
 8002096:	617b      	str	r3, [r7, #20]
 8002098:	697b      	ldr	r3, [r7, #20]
 800209a:	f023 0307 	bic.w	r3, r3, #7
 800209e:	617b      	str	r3, [r7, #20]
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020a4:	697a      	ldr	r2, [r7, #20]
 80020a6:	4313      	orrs	r3, r2
 80020a8:	617b      	str	r3, [r7, #20]
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020ae:	2b04      	cmp	r3, #4
 80020b0:	d117      	bne.n	80020e2 <HAL_DMA_Init+0x122>
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020b6:	697a      	ldr	r2, [r7, #20]
 80020b8:	4313      	orrs	r3, r2
 80020ba:	617b      	str	r3, [r7, #20]
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d00e      	beq.n	80020e2 <HAL_DMA_Init+0x122>
 80020c4:	6878      	ldr	r0, [r7, #4]
 80020c6:	f000 fb01 	bl	80026cc <DMA_CheckFifoParam>
 80020ca:	4603      	mov	r3, r0
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d008      	beq.n	80020e2 <HAL_DMA_Init+0x122>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2240      	movs	r2, #64	@ 0x40
 80020d4:	655a      	str	r2, [r3, #84]	@ 0x54
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	2201      	movs	r2, #1
 80020da:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80020de:	2301      	movs	r3, #1
 80020e0:	e016      	b.n	8002110 <HAL_DMA_Init+0x150>
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	681b      	ldr	r3, [r3, #0]
 80020e6:	697a      	ldr	r2, [r7, #20]
 80020e8:	615a      	str	r2, [r3, #20]
 80020ea:	6878      	ldr	r0, [r7, #4]
 80020ec:	f000 fab8 	bl	8002660 <DMA_CalcBaseAndBitshift>
 80020f0:	4603      	mov	r3, r0
 80020f2:	60fb      	str	r3, [r7, #12]
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020f8:	223f      	movs	r2, #63	@ 0x3f
 80020fa:	409a      	lsls	r2, r3
 80020fc:	68fb      	ldr	r3, [r7, #12]
 80020fe:	609a      	str	r2, [r3, #8]
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	2200      	movs	r2, #0
 8002104:	655a      	str	r2, [r3, #84]	@ 0x54
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	2201      	movs	r2, #1
 800210a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800210e:	2300      	movs	r3, #0
 8002110:	4618      	mov	r0, r3
 8002112:	3718      	adds	r7, #24
 8002114:	46bd      	mov	sp, r7
 8002116:	bd80      	pop	{r7, pc}
 8002118:	f010803f 	.word	0xf010803f

0800211c <HAL_DMA_Start_IT>:
 800211c:	b580      	push	{r7, lr}
 800211e:	b086      	sub	sp, #24
 8002120:	af00      	add	r7, sp, #0
 8002122:	60f8      	str	r0, [r7, #12]
 8002124:	60b9      	str	r1, [r7, #8]
 8002126:	607a      	str	r2, [r7, #4]
 8002128:	603b      	str	r3, [r7, #0]
 800212a:	2300      	movs	r3, #0
 800212c:	75fb      	strb	r3, [r7, #23]
 800212e:	68fb      	ldr	r3, [r7, #12]
 8002130:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002132:	613b      	str	r3, [r7, #16]
 8002134:	68fb      	ldr	r3, [r7, #12]
 8002136:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800213a:	2b01      	cmp	r3, #1
 800213c:	d101      	bne.n	8002142 <HAL_DMA_Start_IT+0x26>
 800213e:	2302      	movs	r3, #2
 8002140:	e040      	b.n	80021c4 <HAL_DMA_Start_IT+0xa8>
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	2201      	movs	r2, #1
 8002146:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800214a:	68fb      	ldr	r3, [r7, #12]
 800214c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002150:	b2db      	uxtb	r3, r3
 8002152:	2b01      	cmp	r3, #1
 8002154:	d12f      	bne.n	80021b6 <HAL_DMA_Start_IT+0x9a>
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	2202      	movs	r2, #2
 800215a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800215e:	68fb      	ldr	r3, [r7, #12]
 8002160:	2200      	movs	r2, #0
 8002162:	655a      	str	r2, [r3, #84]	@ 0x54
 8002164:	683b      	ldr	r3, [r7, #0]
 8002166:	687a      	ldr	r2, [r7, #4]
 8002168:	68b9      	ldr	r1, [r7, #8]
 800216a:	68f8      	ldr	r0, [r7, #12]
 800216c:	f000 fa4a 	bl	8002604 <DMA_SetConfig>
 8002170:	68fb      	ldr	r3, [r7, #12]
 8002172:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002174:	223f      	movs	r2, #63	@ 0x3f
 8002176:	409a      	lsls	r2, r3
 8002178:	693b      	ldr	r3, [r7, #16]
 800217a:	609a      	str	r2, [r3, #8]
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	681a      	ldr	r2, [r3, #0]
 8002182:	68fb      	ldr	r3, [r7, #12]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	f042 0216 	orr.w	r2, r2, #22
 800218a:	601a      	str	r2, [r3, #0]
 800218c:	68fb      	ldr	r3, [r7, #12]
 800218e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002190:	2b00      	cmp	r3, #0
 8002192:	d007      	beq.n	80021a4 <HAL_DMA_Start_IT+0x88>
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	681a      	ldr	r2, [r3, #0]
 800219a:	68fb      	ldr	r3, [r7, #12]
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	f042 0208 	orr.w	r2, r2, #8
 80021a2:	601a      	str	r2, [r3, #0]
 80021a4:	68fb      	ldr	r3, [r7, #12]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	681a      	ldr	r2, [r3, #0]
 80021aa:	68fb      	ldr	r3, [r7, #12]
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	f042 0201 	orr.w	r2, r2, #1
 80021b2:	601a      	str	r2, [r3, #0]
 80021b4:	e005      	b.n	80021c2 <HAL_DMA_Start_IT+0xa6>
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	2200      	movs	r2, #0
 80021ba:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80021be:	2302      	movs	r3, #2
 80021c0:	75fb      	strb	r3, [r7, #23]
 80021c2:	7dfb      	ldrb	r3, [r7, #23]
 80021c4:	4618      	mov	r0, r3
 80021c6:	3718      	adds	r7, #24
 80021c8:	46bd      	mov	sp, r7
 80021ca:	bd80      	pop	{r7, pc}

080021cc <HAL_DMA_Abort>:
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b084      	sub	sp, #16
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80021d8:	60fb      	str	r3, [r7, #12]
 80021da:	f7ff fdaf 	bl	8001d3c <HAL_GetTick>
 80021de:	60b8      	str	r0, [r7, #8]
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80021e6:	b2db      	uxtb	r3, r3
 80021e8:	2b02      	cmp	r3, #2
 80021ea:	d008      	beq.n	80021fe <HAL_DMA_Abort+0x32>
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	2280      	movs	r2, #128	@ 0x80
 80021f0:	655a      	str	r2, [r3, #84]	@ 0x54
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	2200      	movs	r2, #0
 80021f6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80021fa:	2301      	movs	r3, #1
 80021fc:	e052      	b.n	80022a4 <HAL_DMA_Abort+0xd8>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	681a      	ldr	r2, [r3, #0]
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	f022 0216 	bic.w	r2, r2, #22
 800220c:	601a      	str	r2, [r3, #0]
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	695a      	ldr	r2, [r3, #20]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800221c:	615a      	str	r2, [r3, #20]
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002222:	2b00      	cmp	r3, #0
 8002224:	d103      	bne.n	800222e <HAL_DMA_Abort+0x62>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800222a:	2b00      	cmp	r3, #0
 800222c:	d007      	beq.n	800223e <HAL_DMA_Abort+0x72>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	681a      	ldr	r2, [r3, #0]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	f022 0208 	bic.w	r2, r2, #8
 800223c:	601a      	str	r2, [r3, #0]
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	681a      	ldr	r2, [r3, #0]
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	f022 0201 	bic.w	r2, r2, #1
 800224c:	601a      	str	r2, [r3, #0]
 800224e:	e013      	b.n	8002278 <HAL_DMA_Abort+0xac>
 8002250:	f7ff fd74 	bl	8001d3c <HAL_GetTick>
 8002254:	4602      	mov	r2, r0
 8002256:	68bb      	ldr	r3, [r7, #8]
 8002258:	1ad3      	subs	r3, r2, r3
 800225a:	2b05      	cmp	r3, #5
 800225c:	d90c      	bls.n	8002278 <HAL_DMA_Abort+0xac>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	2220      	movs	r2, #32
 8002262:	655a      	str	r2, [r3, #84]	@ 0x54
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	2203      	movs	r2, #3
 8002268:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	2200      	movs	r2, #0
 8002270:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002274:	2303      	movs	r3, #3
 8002276:	e015      	b.n	80022a4 <HAL_DMA_Abort+0xd8>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	f003 0301 	and.w	r3, r3, #1
 8002282:	2b00      	cmp	r3, #0
 8002284:	d1e4      	bne.n	8002250 <HAL_DMA_Abort+0x84>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800228a:	223f      	movs	r2, #63	@ 0x3f
 800228c:	409a      	lsls	r2, r3
 800228e:	68fb      	ldr	r3, [r7, #12]
 8002290:	609a      	str	r2, [r3, #8]
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	2201      	movs	r2, #1
 8002296:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	2200      	movs	r2, #0
 800229e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80022a2:	2300      	movs	r3, #0
 80022a4:	4618      	mov	r0, r3
 80022a6:	3710      	adds	r7, #16
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bd80      	pop	{r7, pc}

080022ac <HAL_DMA_Abort_IT>:
 80022ac:	b480      	push	{r7}
 80022ae:	b083      	sub	sp, #12
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	6078      	str	r0, [r7, #4]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80022ba:	b2db      	uxtb	r3, r3
 80022bc:	2b02      	cmp	r3, #2
 80022be:	d004      	beq.n	80022ca <HAL_DMA_Abort_IT+0x1e>
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	2280      	movs	r2, #128	@ 0x80
 80022c4:	655a      	str	r2, [r3, #84]	@ 0x54
 80022c6:	2301      	movs	r3, #1
 80022c8:	e00c      	b.n	80022e4 <HAL_DMA_Abort_IT+0x38>
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	2205      	movs	r2, #5
 80022ce:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	681a      	ldr	r2, [r3, #0]
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	f022 0201 	bic.w	r2, r2, #1
 80022e0:	601a      	str	r2, [r3, #0]
 80022e2:	2300      	movs	r3, #0
 80022e4:	4618      	mov	r0, r3
 80022e6:	370c      	adds	r7, #12
 80022e8:	46bd      	mov	sp, r7
 80022ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ee:	4770      	bx	lr

080022f0 <HAL_DMA_IRQHandler>:
 80022f0:	b580      	push	{r7, lr}
 80022f2:	b086      	sub	sp, #24
 80022f4:	af00      	add	r7, sp, #0
 80022f6:	6078      	str	r0, [r7, #4]
 80022f8:	2300      	movs	r3, #0
 80022fa:	60bb      	str	r3, [r7, #8]
 80022fc:	4b8e      	ldr	r3, [pc, #568]	@ (8002538 <HAL_DMA_IRQHandler+0x248>)
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	4a8e      	ldr	r2, [pc, #568]	@ (800253c <HAL_DMA_IRQHandler+0x24c>)
 8002302:	fba2 2303 	umull	r2, r3, r2, r3
 8002306:	0a9b      	lsrs	r3, r3, #10
 8002308:	617b      	str	r3, [r7, #20]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800230e:	613b      	str	r3, [r7, #16]
 8002310:	693b      	ldr	r3, [r7, #16]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	60fb      	str	r3, [r7, #12]
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800231a:	2208      	movs	r2, #8
 800231c:	409a      	lsls	r2, r3
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	4013      	ands	r3, r2
 8002322:	2b00      	cmp	r3, #0
 8002324:	d01a      	beq.n	800235c <HAL_DMA_IRQHandler+0x6c>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	f003 0304 	and.w	r3, r3, #4
 8002330:	2b00      	cmp	r3, #0
 8002332:	d013      	beq.n	800235c <HAL_DMA_IRQHandler+0x6c>
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	681a      	ldr	r2, [r3, #0]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	f022 0204 	bic.w	r2, r2, #4
 8002342:	601a      	str	r2, [r3, #0]
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002348:	2208      	movs	r2, #8
 800234a:	409a      	lsls	r2, r3
 800234c:	693b      	ldr	r3, [r7, #16]
 800234e:	609a      	str	r2, [r3, #8]
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002354:	f043 0201 	orr.w	r2, r3, #1
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	655a      	str	r2, [r3, #84]	@ 0x54
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002360:	2201      	movs	r2, #1
 8002362:	409a      	lsls	r2, r3
 8002364:	68fb      	ldr	r3, [r7, #12]
 8002366:	4013      	ands	r3, r2
 8002368:	2b00      	cmp	r3, #0
 800236a:	d012      	beq.n	8002392 <HAL_DMA_IRQHandler+0xa2>
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	695b      	ldr	r3, [r3, #20]
 8002372:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002376:	2b00      	cmp	r3, #0
 8002378:	d00b      	beq.n	8002392 <HAL_DMA_IRQHandler+0xa2>
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800237e:	2201      	movs	r2, #1
 8002380:	409a      	lsls	r2, r3
 8002382:	693b      	ldr	r3, [r7, #16]
 8002384:	609a      	str	r2, [r3, #8]
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800238a:	f043 0202 	orr.w	r2, r3, #2
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	655a      	str	r2, [r3, #84]	@ 0x54
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002396:	2204      	movs	r2, #4
 8002398:	409a      	lsls	r2, r3
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	4013      	ands	r3, r2
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d012      	beq.n	80023c8 <HAL_DMA_IRQHandler+0xd8>
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	f003 0302 	and.w	r3, r3, #2
 80023ac:	2b00      	cmp	r3, #0
 80023ae:	d00b      	beq.n	80023c8 <HAL_DMA_IRQHandler+0xd8>
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023b4:	2204      	movs	r2, #4
 80023b6:	409a      	lsls	r2, r3
 80023b8:	693b      	ldr	r3, [r7, #16]
 80023ba:	609a      	str	r2, [r3, #8]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80023c0:	f043 0204 	orr.w	r2, r3, #4
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023cc:	2210      	movs	r2, #16
 80023ce:	409a      	lsls	r2, r3
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	4013      	ands	r3, r2
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d043      	beq.n	8002460 <HAL_DMA_IRQHandler+0x170>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f003 0308 	and.w	r3, r3, #8
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	d03c      	beq.n	8002460 <HAL_DMA_IRQHandler+0x170>
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023ea:	2210      	movs	r2, #16
 80023ec:	409a      	lsls	r2, r3
 80023ee:	693b      	ldr	r3, [r7, #16]
 80023f0:	609a      	str	r2, [r3, #8]
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d018      	beq.n	8002432 <HAL_DMA_IRQHandler+0x142>
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800240a:	2b00      	cmp	r3, #0
 800240c:	d108      	bne.n	8002420 <HAL_DMA_IRQHandler+0x130>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002412:	2b00      	cmp	r3, #0
 8002414:	d024      	beq.n	8002460 <HAL_DMA_IRQHandler+0x170>
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800241a:	6878      	ldr	r0, [r7, #4]
 800241c:	4798      	blx	r3
 800241e:	e01f      	b.n	8002460 <HAL_DMA_IRQHandler+0x170>
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002424:	2b00      	cmp	r3, #0
 8002426:	d01b      	beq.n	8002460 <HAL_DMA_IRQHandler+0x170>
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800242c:	6878      	ldr	r0, [r7, #4]
 800242e:	4798      	blx	r3
 8002430:	e016      	b.n	8002460 <HAL_DMA_IRQHandler+0x170>
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800243c:	2b00      	cmp	r3, #0
 800243e:	d107      	bne.n	8002450 <HAL_DMA_IRQHandler+0x160>
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	681a      	ldr	r2, [r3, #0]
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	f022 0208 	bic.w	r2, r2, #8
 800244e:	601a      	str	r2, [r3, #0]
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002454:	2b00      	cmp	r3, #0
 8002456:	d003      	beq.n	8002460 <HAL_DMA_IRQHandler+0x170>
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800245c:	6878      	ldr	r0, [r7, #4]
 800245e:	4798      	blx	r3
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002464:	2220      	movs	r2, #32
 8002466:	409a      	lsls	r2, r3
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	4013      	ands	r3, r2
 800246c:	2b00      	cmp	r3, #0
 800246e:	f000 808f 	beq.w	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f003 0310 	and.w	r3, r3, #16
 800247c:	2b00      	cmp	r3, #0
 800247e:	f000 8087 	beq.w	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002486:	2220      	movs	r2, #32
 8002488:	409a      	lsls	r2, r3
 800248a:	693b      	ldr	r3, [r7, #16]
 800248c:	609a      	str	r2, [r3, #8]
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002494:	b2db      	uxtb	r3, r3
 8002496:	2b05      	cmp	r3, #5
 8002498:	d136      	bne.n	8002508 <HAL_DMA_IRQHandler+0x218>
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	681a      	ldr	r2, [r3, #0]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	f022 0216 	bic.w	r2, r2, #22
 80024a8:	601a      	str	r2, [r3, #0]
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	695a      	ldr	r2, [r3, #20]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80024b8:	615a      	str	r2, [r3, #20]
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024be:	2b00      	cmp	r3, #0
 80024c0:	d103      	bne.n	80024ca <HAL_DMA_IRQHandler+0x1da>
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d007      	beq.n	80024da <HAL_DMA_IRQHandler+0x1ea>
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	681a      	ldr	r2, [r3, #0]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	f022 0208 	bic.w	r2, r2, #8
 80024d8:	601a      	str	r2, [r3, #0]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024de:	223f      	movs	r2, #63	@ 0x3f
 80024e0:	409a      	lsls	r2, r3
 80024e2:	693b      	ldr	r3, [r7, #16]
 80024e4:	609a      	str	r2, [r3, #8]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	2201      	movs	r2, #1
 80024ea:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	2200      	movs	r2, #0
 80024f2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d07e      	beq.n	80025fc <HAL_DMA_IRQHandler+0x30c>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002502:	6878      	ldr	r0, [r7, #4]
 8002504:	4798      	blx	r3
 8002506:	e079      	b.n	80025fc <HAL_DMA_IRQHandler+0x30c>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002512:	2b00      	cmp	r3, #0
 8002514:	d01d      	beq.n	8002552 <HAL_DMA_IRQHandler+0x262>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002520:	2b00      	cmp	r3, #0
 8002522:	d10d      	bne.n	8002540 <HAL_DMA_IRQHandler+0x250>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002528:	2b00      	cmp	r3, #0
 800252a:	d031      	beq.n	8002590 <HAL_DMA_IRQHandler+0x2a0>
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002530:	6878      	ldr	r0, [r7, #4]
 8002532:	4798      	blx	r3
 8002534:	e02c      	b.n	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002536:	bf00      	nop
 8002538:	20000024 	.word	0x20000024
 800253c:	1b4e81b5 	.word	0x1b4e81b5
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002544:	2b00      	cmp	r3, #0
 8002546:	d023      	beq.n	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800254c:	6878      	ldr	r0, [r7, #4]
 800254e:	4798      	blx	r3
 8002550:	e01e      	b.n	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800255c:	2b00      	cmp	r3, #0
 800255e:	d10f      	bne.n	8002580 <HAL_DMA_IRQHandler+0x290>
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	681a      	ldr	r2, [r3, #0]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	f022 0210 	bic.w	r2, r2, #16
 800256e:	601a      	str	r2, [r3, #0]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	2201      	movs	r2, #1
 8002574:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	2200      	movs	r2, #0
 800257c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002584:	2b00      	cmp	r3, #0
 8002586:	d003      	beq.n	8002590 <HAL_DMA_IRQHandler+0x2a0>
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800258c:	6878      	ldr	r0, [r7, #4]
 800258e:	4798      	blx	r3
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002594:	2b00      	cmp	r3, #0
 8002596:	d032      	beq.n	80025fe <HAL_DMA_IRQHandler+0x30e>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800259c:	f003 0301 	and.w	r3, r3, #1
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d022      	beq.n	80025ea <HAL_DMA_IRQHandler+0x2fa>
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	2205      	movs	r2, #5
 80025a8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	681a      	ldr	r2, [r3, #0]
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	f022 0201 	bic.w	r2, r2, #1
 80025ba:	601a      	str	r2, [r3, #0]
 80025bc:	68bb      	ldr	r3, [r7, #8]
 80025be:	3301      	adds	r3, #1
 80025c0:	60bb      	str	r3, [r7, #8]
 80025c2:	697a      	ldr	r2, [r7, #20]
 80025c4:	429a      	cmp	r2, r3
 80025c6:	d307      	bcc.n	80025d8 <HAL_DMA_IRQHandler+0x2e8>
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	f003 0301 	and.w	r3, r3, #1
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d1f2      	bne.n	80025bc <HAL_DMA_IRQHandler+0x2cc>
 80025d6:	e000      	b.n	80025da <HAL_DMA_IRQHandler+0x2ea>
 80025d8:	bf00      	nop
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	2201      	movs	r2, #1
 80025de:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	2200      	movs	r2, #0
 80025e6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d005      	beq.n	80025fe <HAL_DMA_IRQHandler+0x30e>
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80025f6:	6878      	ldr	r0, [r7, #4]
 80025f8:	4798      	blx	r3
 80025fa:	e000      	b.n	80025fe <HAL_DMA_IRQHandler+0x30e>
 80025fc:	bf00      	nop
 80025fe:	3718      	adds	r7, #24
 8002600:	46bd      	mov	sp, r7
 8002602:	bd80      	pop	{r7, pc}

08002604 <DMA_SetConfig>:
 8002604:	b480      	push	{r7}
 8002606:	b085      	sub	sp, #20
 8002608:	af00      	add	r7, sp, #0
 800260a:	60f8      	str	r0, [r7, #12]
 800260c:	60b9      	str	r1, [r7, #8]
 800260e:	607a      	str	r2, [r7, #4]
 8002610:	603b      	str	r3, [r7, #0]
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	681a      	ldr	r2, [r3, #0]
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8002620:	601a      	str	r2, [r3, #0]
 8002622:	68fb      	ldr	r3, [r7, #12]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	683a      	ldr	r2, [r7, #0]
 8002628:	605a      	str	r2, [r3, #4]
 800262a:	68fb      	ldr	r3, [r7, #12]
 800262c:	689b      	ldr	r3, [r3, #8]
 800262e:	2b40      	cmp	r3, #64	@ 0x40
 8002630:	d108      	bne.n	8002644 <DMA_SetConfig+0x40>
 8002632:	68fb      	ldr	r3, [r7, #12]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	687a      	ldr	r2, [r7, #4]
 8002638:	609a      	str	r2, [r3, #8]
 800263a:	68fb      	ldr	r3, [r7, #12]
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	68ba      	ldr	r2, [r7, #8]
 8002640:	60da      	str	r2, [r3, #12]
 8002642:	e007      	b.n	8002654 <DMA_SetConfig+0x50>
 8002644:	68fb      	ldr	r3, [r7, #12]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	68ba      	ldr	r2, [r7, #8]
 800264a:	609a      	str	r2, [r3, #8]
 800264c:	68fb      	ldr	r3, [r7, #12]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	687a      	ldr	r2, [r7, #4]
 8002652:	60da      	str	r2, [r3, #12]
 8002654:	bf00      	nop
 8002656:	3714      	adds	r7, #20
 8002658:	46bd      	mov	sp, r7
 800265a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800265e:	4770      	bx	lr

08002660 <DMA_CalcBaseAndBitshift>:
 8002660:	b480      	push	{r7}
 8002662:	b085      	sub	sp, #20
 8002664:	af00      	add	r7, sp, #0
 8002666:	6078      	str	r0, [r7, #4]
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	b2db      	uxtb	r3, r3
 800266e:	3b10      	subs	r3, #16
 8002670:	4a14      	ldr	r2, [pc, #80]	@ (80026c4 <DMA_CalcBaseAndBitshift+0x64>)
 8002672:	fba2 2303 	umull	r2, r3, r2, r3
 8002676:	091b      	lsrs	r3, r3, #4
 8002678:	60fb      	str	r3, [r7, #12]
 800267a:	4a13      	ldr	r2, [pc, #76]	@ (80026c8 <DMA_CalcBaseAndBitshift+0x68>)
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	4413      	add	r3, r2
 8002680:	781b      	ldrb	r3, [r3, #0]
 8002682:	461a      	mov	r2, r3
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002688:	68fb      	ldr	r3, [r7, #12]
 800268a:	2b03      	cmp	r3, #3
 800268c:	d909      	bls.n	80026a2 <DMA_CalcBaseAndBitshift+0x42>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002696:	f023 0303 	bic.w	r3, r3, #3
 800269a:	1d1a      	adds	r2, r3, #4
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	659a      	str	r2, [r3, #88]	@ 0x58
 80026a0:	e007      	b.n	80026b2 <DMA_CalcBaseAndBitshift+0x52>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80026aa:	f023 0303 	bic.w	r3, r3, #3
 80026ae:	687a      	ldr	r2, [r7, #4]
 80026b0:	6593      	str	r3, [r2, #88]	@ 0x58
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80026b6:	4618      	mov	r0, r3
 80026b8:	3714      	adds	r7, #20
 80026ba:	46bd      	mov	sp, r7
 80026bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c0:	4770      	bx	lr
 80026c2:	bf00      	nop
 80026c4:	aaaaaaab 	.word	0xaaaaaaab
 80026c8:	08007864 	.word	0x08007864

080026cc <DMA_CheckFifoParam>:
 80026cc:	b480      	push	{r7}
 80026ce:	b085      	sub	sp, #20
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	6078      	str	r0, [r7, #4]
 80026d4:	2300      	movs	r3, #0
 80026d6:	73fb      	strb	r3, [r7, #15]
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026dc:	60bb      	str	r3, [r7, #8]
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	699b      	ldr	r3, [r3, #24]
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d11f      	bne.n	8002726 <DMA_CheckFifoParam+0x5a>
 80026e6:	68bb      	ldr	r3, [r7, #8]
 80026e8:	2b03      	cmp	r3, #3
 80026ea:	d856      	bhi.n	800279a <DMA_CheckFifoParam+0xce>
 80026ec:	a201      	add	r2, pc, #4	@ (adr r2, 80026f4 <DMA_CheckFifoParam+0x28>)
 80026ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026f2:	bf00      	nop
 80026f4:	08002705 	.word	0x08002705
 80026f8:	08002717 	.word	0x08002717
 80026fc:	08002705 	.word	0x08002705
 8002700:	0800279b 	.word	0x0800279b
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002708:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800270c:	2b00      	cmp	r3, #0
 800270e:	d046      	beq.n	800279e <DMA_CheckFifoParam+0xd2>
 8002710:	2301      	movs	r3, #1
 8002712:	73fb      	strb	r3, [r7, #15]
 8002714:	e043      	b.n	800279e <DMA_CheckFifoParam+0xd2>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800271a:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800271e:	d140      	bne.n	80027a2 <DMA_CheckFifoParam+0xd6>
 8002720:	2301      	movs	r3, #1
 8002722:	73fb      	strb	r3, [r7, #15]
 8002724:	e03d      	b.n	80027a2 <DMA_CheckFifoParam+0xd6>
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	699b      	ldr	r3, [r3, #24]
 800272a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800272e:	d121      	bne.n	8002774 <DMA_CheckFifoParam+0xa8>
 8002730:	68bb      	ldr	r3, [r7, #8]
 8002732:	2b03      	cmp	r3, #3
 8002734:	d837      	bhi.n	80027a6 <DMA_CheckFifoParam+0xda>
 8002736:	a201      	add	r2, pc, #4	@ (adr r2, 800273c <DMA_CheckFifoParam+0x70>)
 8002738:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800273c:	0800274d 	.word	0x0800274d
 8002740:	08002753 	.word	0x08002753
 8002744:	0800274d 	.word	0x0800274d
 8002748:	08002765 	.word	0x08002765
 800274c:	2301      	movs	r3, #1
 800274e:	73fb      	strb	r3, [r7, #15]
 8002750:	e030      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002756:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800275a:	2b00      	cmp	r3, #0
 800275c:	d025      	beq.n	80027aa <DMA_CheckFifoParam+0xde>
 800275e:	2301      	movs	r3, #1
 8002760:	73fb      	strb	r3, [r7, #15]
 8002762:	e022      	b.n	80027aa <DMA_CheckFifoParam+0xde>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002768:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800276c:	d11f      	bne.n	80027ae <DMA_CheckFifoParam+0xe2>
 800276e:	2301      	movs	r3, #1
 8002770:	73fb      	strb	r3, [r7, #15]
 8002772:	e01c      	b.n	80027ae <DMA_CheckFifoParam+0xe2>
 8002774:	68bb      	ldr	r3, [r7, #8]
 8002776:	2b02      	cmp	r3, #2
 8002778:	d903      	bls.n	8002782 <DMA_CheckFifoParam+0xb6>
 800277a:	68bb      	ldr	r3, [r7, #8]
 800277c:	2b03      	cmp	r3, #3
 800277e:	d003      	beq.n	8002788 <DMA_CheckFifoParam+0xbc>
 8002780:	e018      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 8002782:	2301      	movs	r3, #1
 8002784:	73fb      	strb	r3, [r7, #15]
 8002786:	e015      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800278c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002790:	2b00      	cmp	r3, #0
 8002792:	d00e      	beq.n	80027b2 <DMA_CheckFifoParam+0xe6>
 8002794:	2301      	movs	r3, #1
 8002796:	73fb      	strb	r3, [r7, #15]
 8002798:	e00b      	b.n	80027b2 <DMA_CheckFifoParam+0xe6>
 800279a:	bf00      	nop
 800279c:	e00a      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 800279e:	bf00      	nop
 80027a0:	e008      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 80027a2:	bf00      	nop
 80027a4:	e006      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 80027a6:	bf00      	nop
 80027a8:	e004      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 80027aa:	bf00      	nop
 80027ac:	e002      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 80027ae:	bf00      	nop
 80027b0:	e000      	b.n	80027b4 <DMA_CheckFifoParam+0xe8>
 80027b2:	bf00      	nop
 80027b4:	7bfb      	ldrb	r3, [r7, #15]
 80027b6:	4618      	mov	r0, r3
 80027b8:	3714      	adds	r7, #20
 80027ba:	46bd      	mov	sp, r7
 80027bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c0:	4770      	bx	lr
 80027c2:	bf00      	nop

080027c4 <HAL_GPIO_Init>:
 80027c4:	b480      	push	{r7}
 80027c6:	b089      	sub	sp, #36	@ 0x24
 80027c8:	af00      	add	r7, sp, #0
 80027ca:	6078      	str	r0, [r7, #4]
 80027cc:	6039      	str	r1, [r7, #0]
 80027ce:	2300      	movs	r3, #0
 80027d0:	617b      	str	r3, [r7, #20]
 80027d2:	2300      	movs	r3, #0
 80027d4:	613b      	str	r3, [r7, #16]
 80027d6:	2300      	movs	r3, #0
 80027d8:	61bb      	str	r3, [r7, #24]
 80027da:	2300      	movs	r3, #0
 80027dc:	61fb      	str	r3, [r7, #28]
 80027de:	e159      	b.n	8002a94 <HAL_GPIO_Init+0x2d0>
 80027e0:	2201      	movs	r2, #1
 80027e2:	69fb      	ldr	r3, [r7, #28]
 80027e4:	fa02 f303 	lsl.w	r3, r2, r3
 80027e8:	617b      	str	r3, [r7, #20]
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	697a      	ldr	r2, [r7, #20]
 80027f0:	4013      	ands	r3, r2
 80027f2:	613b      	str	r3, [r7, #16]
 80027f4:	693a      	ldr	r2, [r7, #16]
 80027f6:	697b      	ldr	r3, [r7, #20]
 80027f8:	429a      	cmp	r2, r3
 80027fa:	f040 8148 	bne.w	8002a8e <HAL_GPIO_Init+0x2ca>
 80027fe:	683b      	ldr	r3, [r7, #0]
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	f003 0303 	and.w	r3, r3, #3
 8002806:	2b01      	cmp	r3, #1
 8002808:	d005      	beq.n	8002816 <HAL_GPIO_Init+0x52>
 800280a:	683b      	ldr	r3, [r7, #0]
 800280c:	685b      	ldr	r3, [r3, #4]
 800280e:	f003 0303 	and.w	r3, r3, #3
 8002812:	2b02      	cmp	r3, #2
 8002814:	d130      	bne.n	8002878 <HAL_GPIO_Init+0xb4>
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	689b      	ldr	r3, [r3, #8]
 800281a:	61bb      	str	r3, [r7, #24]
 800281c:	69fb      	ldr	r3, [r7, #28]
 800281e:	005b      	lsls	r3, r3, #1
 8002820:	2203      	movs	r2, #3
 8002822:	fa02 f303 	lsl.w	r3, r2, r3
 8002826:	43db      	mvns	r3, r3
 8002828:	69ba      	ldr	r2, [r7, #24]
 800282a:	4013      	ands	r3, r2
 800282c:	61bb      	str	r3, [r7, #24]
 800282e:	683b      	ldr	r3, [r7, #0]
 8002830:	68da      	ldr	r2, [r3, #12]
 8002832:	69fb      	ldr	r3, [r7, #28]
 8002834:	005b      	lsls	r3, r3, #1
 8002836:	fa02 f303 	lsl.w	r3, r2, r3
 800283a:	69ba      	ldr	r2, [r7, #24]
 800283c:	4313      	orrs	r3, r2
 800283e:	61bb      	str	r3, [r7, #24]
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	69ba      	ldr	r2, [r7, #24]
 8002844:	609a      	str	r2, [r3, #8]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	685b      	ldr	r3, [r3, #4]
 800284a:	61bb      	str	r3, [r7, #24]
 800284c:	2201      	movs	r2, #1
 800284e:	69fb      	ldr	r3, [r7, #28]
 8002850:	fa02 f303 	lsl.w	r3, r2, r3
 8002854:	43db      	mvns	r3, r3
 8002856:	69ba      	ldr	r2, [r7, #24]
 8002858:	4013      	ands	r3, r2
 800285a:	61bb      	str	r3, [r7, #24]
 800285c:	683b      	ldr	r3, [r7, #0]
 800285e:	685b      	ldr	r3, [r3, #4]
 8002860:	091b      	lsrs	r3, r3, #4
 8002862:	f003 0201 	and.w	r2, r3, #1
 8002866:	69fb      	ldr	r3, [r7, #28]
 8002868:	fa02 f303 	lsl.w	r3, r2, r3
 800286c:	69ba      	ldr	r2, [r7, #24]
 800286e:	4313      	orrs	r3, r2
 8002870:	61bb      	str	r3, [r7, #24]
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	69ba      	ldr	r2, [r7, #24]
 8002876:	605a      	str	r2, [r3, #4]
 8002878:	683b      	ldr	r3, [r7, #0]
 800287a:	685b      	ldr	r3, [r3, #4]
 800287c:	f003 0303 	and.w	r3, r3, #3
 8002880:	2b03      	cmp	r3, #3
 8002882:	d017      	beq.n	80028b4 <HAL_GPIO_Init+0xf0>
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	68db      	ldr	r3, [r3, #12]
 8002888:	61bb      	str	r3, [r7, #24]
 800288a:	69fb      	ldr	r3, [r7, #28]
 800288c:	005b      	lsls	r3, r3, #1
 800288e:	2203      	movs	r2, #3
 8002890:	fa02 f303 	lsl.w	r3, r2, r3
 8002894:	43db      	mvns	r3, r3
 8002896:	69ba      	ldr	r2, [r7, #24]
 8002898:	4013      	ands	r3, r2
 800289a:	61bb      	str	r3, [r7, #24]
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	689a      	ldr	r2, [r3, #8]
 80028a0:	69fb      	ldr	r3, [r7, #28]
 80028a2:	005b      	lsls	r3, r3, #1
 80028a4:	fa02 f303 	lsl.w	r3, r2, r3
 80028a8:	69ba      	ldr	r2, [r7, #24]
 80028aa:	4313      	orrs	r3, r2
 80028ac:	61bb      	str	r3, [r7, #24]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	69ba      	ldr	r2, [r7, #24]
 80028b2:	60da      	str	r2, [r3, #12]
 80028b4:	683b      	ldr	r3, [r7, #0]
 80028b6:	685b      	ldr	r3, [r3, #4]
 80028b8:	f003 0303 	and.w	r3, r3, #3
 80028bc:	2b02      	cmp	r3, #2
 80028be:	d123      	bne.n	8002908 <HAL_GPIO_Init+0x144>
 80028c0:	69fb      	ldr	r3, [r7, #28]
 80028c2:	08da      	lsrs	r2, r3, #3
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	3208      	adds	r2, #8
 80028c8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80028cc:	61bb      	str	r3, [r7, #24]
 80028ce:	69fb      	ldr	r3, [r7, #28]
 80028d0:	f003 0307 	and.w	r3, r3, #7
 80028d4:	009b      	lsls	r3, r3, #2
 80028d6:	220f      	movs	r2, #15
 80028d8:	fa02 f303 	lsl.w	r3, r2, r3
 80028dc:	43db      	mvns	r3, r3
 80028de:	69ba      	ldr	r2, [r7, #24]
 80028e0:	4013      	ands	r3, r2
 80028e2:	61bb      	str	r3, [r7, #24]
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	691a      	ldr	r2, [r3, #16]
 80028e8:	69fb      	ldr	r3, [r7, #28]
 80028ea:	f003 0307 	and.w	r3, r3, #7
 80028ee:	009b      	lsls	r3, r3, #2
 80028f0:	fa02 f303 	lsl.w	r3, r2, r3
 80028f4:	69ba      	ldr	r2, [r7, #24]
 80028f6:	4313      	orrs	r3, r2
 80028f8:	61bb      	str	r3, [r7, #24]
 80028fa:	69fb      	ldr	r3, [r7, #28]
 80028fc:	08da      	lsrs	r2, r3, #3
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	3208      	adds	r2, #8
 8002902:	69b9      	ldr	r1, [r7, #24]
 8002904:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	61bb      	str	r3, [r7, #24]
 800290e:	69fb      	ldr	r3, [r7, #28]
 8002910:	005b      	lsls	r3, r3, #1
 8002912:	2203      	movs	r2, #3
 8002914:	fa02 f303 	lsl.w	r3, r2, r3
 8002918:	43db      	mvns	r3, r3
 800291a:	69ba      	ldr	r2, [r7, #24]
 800291c:	4013      	ands	r3, r2
 800291e:	61bb      	str	r3, [r7, #24]
 8002920:	683b      	ldr	r3, [r7, #0]
 8002922:	685b      	ldr	r3, [r3, #4]
 8002924:	f003 0203 	and.w	r2, r3, #3
 8002928:	69fb      	ldr	r3, [r7, #28]
 800292a:	005b      	lsls	r3, r3, #1
 800292c:	fa02 f303 	lsl.w	r3, r2, r3
 8002930:	69ba      	ldr	r2, [r7, #24]
 8002932:	4313      	orrs	r3, r2
 8002934:	61bb      	str	r3, [r7, #24]
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	69ba      	ldr	r2, [r7, #24]
 800293a:	601a      	str	r2, [r3, #0]
 800293c:	683b      	ldr	r3, [r7, #0]
 800293e:	685b      	ldr	r3, [r3, #4]
 8002940:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002944:	2b00      	cmp	r3, #0
 8002946:	f000 80a2 	beq.w	8002a8e <HAL_GPIO_Init+0x2ca>
 800294a:	2300      	movs	r3, #0
 800294c:	60fb      	str	r3, [r7, #12]
 800294e:	4b57      	ldr	r3, [pc, #348]	@ (8002aac <HAL_GPIO_Init+0x2e8>)
 8002950:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002952:	4a56      	ldr	r2, [pc, #344]	@ (8002aac <HAL_GPIO_Init+0x2e8>)
 8002954:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002958:	6453      	str	r3, [r2, #68]	@ 0x44
 800295a:	4b54      	ldr	r3, [pc, #336]	@ (8002aac <HAL_GPIO_Init+0x2e8>)
 800295c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800295e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002962:	60fb      	str	r3, [r7, #12]
 8002964:	68fb      	ldr	r3, [r7, #12]
 8002966:	4a52      	ldr	r2, [pc, #328]	@ (8002ab0 <HAL_GPIO_Init+0x2ec>)
 8002968:	69fb      	ldr	r3, [r7, #28]
 800296a:	089b      	lsrs	r3, r3, #2
 800296c:	3302      	adds	r3, #2
 800296e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002972:	61bb      	str	r3, [r7, #24]
 8002974:	69fb      	ldr	r3, [r7, #28]
 8002976:	f003 0303 	and.w	r3, r3, #3
 800297a:	009b      	lsls	r3, r3, #2
 800297c:	220f      	movs	r2, #15
 800297e:	fa02 f303 	lsl.w	r3, r2, r3
 8002982:	43db      	mvns	r3, r3
 8002984:	69ba      	ldr	r2, [r7, #24]
 8002986:	4013      	ands	r3, r2
 8002988:	61bb      	str	r3, [r7, #24]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	4a49      	ldr	r2, [pc, #292]	@ (8002ab4 <HAL_GPIO_Init+0x2f0>)
 800298e:	4293      	cmp	r3, r2
 8002990:	d019      	beq.n	80029c6 <HAL_GPIO_Init+0x202>
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	4a48      	ldr	r2, [pc, #288]	@ (8002ab8 <HAL_GPIO_Init+0x2f4>)
 8002996:	4293      	cmp	r3, r2
 8002998:	d013      	beq.n	80029c2 <HAL_GPIO_Init+0x1fe>
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	4a47      	ldr	r2, [pc, #284]	@ (8002abc <HAL_GPIO_Init+0x2f8>)
 800299e:	4293      	cmp	r3, r2
 80029a0:	d00d      	beq.n	80029be <HAL_GPIO_Init+0x1fa>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	4a46      	ldr	r2, [pc, #280]	@ (8002ac0 <HAL_GPIO_Init+0x2fc>)
 80029a6:	4293      	cmp	r3, r2
 80029a8:	d007      	beq.n	80029ba <HAL_GPIO_Init+0x1f6>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	4a45      	ldr	r2, [pc, #276]	@ (8002ac4 <HAL_GPIO_Init+0x300>)
 80029ae:	4293      	cmp	r3, r2
 80029b0:	d101      	bne.n	80029b6 <HAL_GPIO_Init+0x1f2>
 80029b2:	2304      	movs	r3, #4
 80029b4:	e008      	b.n	80029c8 <HAL_GPIO_Init+0x204>
 80029b6:	2307      	movs	r3, #7
 80029b8:	e006      	b.n	80029c8 <HAL_GPIO_Init+0x204>
 80029ba:	2303      	movs	r3, #3
 80029bc:	e004      	b.n	80029c8 <HAL_GPIO_Init+0x204>
 80029be:	2302      	movs	r3, #2
 80029c0:	e002      	b.n	80029c8 <HAL_GPIO_Init+0x204>
 80029c2:	2301      	movs	r3, #1
 80029c4:	e000      	b.n	80029c8 <HAL_GPIO_Init+0x204>
 80029c6:	2300      	movs	r3, #0
 80029c8:	69fa      	ldr	r2, [r7, #28]
 80029ca:	f002 0203 	and.w	r2, r2, #3
 80029ce:	0092      	lsls	r2, r2, #2
 80029d0:	4093      	lsls	r3, r2
 80029d2:	69ba      	ldr	r2, [r7, #24]
 80029d4:	4313      	orrs	r3, r2
 80029d6:	61bb      	str	r3, [r7, #24]
 80029d8:	4935      	ldr	r1, [pc, #212]	@ (8002ab0 <HAL_GPIO_Init+0x2ec>)
 80029da:	69fb      	ldr	r3, [r7, #28]
 80029dc:	089b      	lsrs	r3, r3, #2
 80029de:	3302      	adds	r3, #2
 80029e0:	69ba      	ldr	r2, [r7, #24]
 80029e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80029e6:	4b38      	ldr	r3, [pc, #224]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 80029e8:	689b      	ldr	r3, [r3, #8]
 80029ea:	61bb      	str	r3, [r7, #24]
 80029ec:	693b      	ldr	r3, [r7, #16]
 80029ee:	43db      	mvns	r3, r3
 80029f0:	69ba      	ldr	r2, [r7, #24]
 80029f2:	4013      	ands	r3, r2
 80029f4:	61bb      	str	r3, [r7, #24]
 80029f6:	683b      	ldr	r3, [r7, #0]
 80029f8:	685b      	ldr	r3, [r3, #4]
 80029fa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d003      	beq.n	8002a0a <HAL_GPIO_Init+0x246>
 8002a02:	69ba      	ldr	r2, [r7, #24]
 8002a04:	693b      	ldr	r3, [r7, #16]
 8002a06:	4313      	orrs	r3, r2
 8002a08:	61bb      	str	r3, [r7, #24]
 8002a0a:	4a2f      	ldr	r2, [pc, #188]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a0c:	69bb      	ldr	r3, [r7, #24]
 8002a0e:	6093      	str	r3, [r2, #8]
 8002a10:	4b2d      	ldr	r3, [pc, #180]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a12:	68db      	ldr	r3, [r3, #12]
 8002a14:	61bb      	str	r3, [r7, #24]
 8002a16:	693b      	ldr	r3, [r7, #16]
 8002a18:	43db      	mvns	r3, r3
 8002a1a:	69ba      	ldr	r2, [r7, #24]
 8002a1c:	4013      	ands	r3, r2
 8002a1e:	61bb      	str	r3, [r7, #24]
 8002a20:	683b      	ldr	r3, [r7, #0]
 8002a22:	685b      	ldr	r3, [r3, #4]
 8002a24:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	d003      	beq.n	8002a34 <HAL_GPIO_Init+0x270>
 8002a2c:	69ba      	ldr	r2, [r7, #24]
 8002a2e:	693b      	ldr	r3, [r7, #16]
 8002a30:	4313      	orrs	r3, r2
 8002a32:	61bb      	str	r3, [r7, #24]
 8002a34:	4a24      	ldr	r2, [pc, #144]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a36:	69bb      	ldr	r3, [r7, #24]
 8002a38:	60d3      	str	r3, [r2, #12]
 8002a3a:	4b23      	ldr	r3, [pc, #140]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a3c:	685b      	ldr	r3, [r3, #4]
 8002a3e:	61bb      	str	r3, [r7, #24]
 8002a40:	693b      	ldr	r3, [r7, #16]
 8002a42:	43db      	mvns	r3, r3
 8002a44:	69ba      	ldr	r2, [r7, #24]
 8002a46:	4013      	ands	r3, r2
 8002a48:	61bb      	str	r3, [r7, #24]
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	685b      	ldr	r3, [r3, #4]
 8002a4e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	d003      	beq.n	8002a5e <HAL_GPIO_Init+0x29a>
 8002a56:	69ba      	ldr	r2, [r7, #24]
 8002a58:	693b      	ldr	r3, [r7, #16]
 8002a5a:	4313      	orrs	r3, r2
 8002a5c:	61bb      	str	r3, [r7, #24]
 8002a5e:	4a1a      	ldr	r2, [pc, #104]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a60:	69bb      	ldr	r3, [r7, #24]
 8002a62:	6053      	str	r3, [r2, #4]
 8002a64:	4b18      	ldr	r3, [pc, #96]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	61bb      	str	r3, [r7, #24]
 8002a6a:	693b      	ldr	r3, [r7, #16]
 8002a6c:	43db      	mvns	r3, r3
 8002a6e:	69ba      	ldr	r2, [r7, #24]
 8002a70:	4013      	ands	r3, r2
 8002a72:	61bb      	str	r3, [r7, #24]
 8002a74:	683b      	ldr	r3, [r7, #0]
 8002a76:	685b      	ldr	r3, [r3, #4]
 8002a78:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d003      	beq.n	8002a88 <HAL_GPIO_Init+0x2c4>
 8002a80:	69ba      	ldr	r2, [r7, #24]
 8002a82:	693b      	ldr	r3, [r7, #16]
 8002a84:	4313      	orrs	r3, r2
 8002a86:	61bb      	str	r3, [r7, #24]
 8002a88:	4a0f      	ldr	r2, [pc, #60]	@ (8002ac8 <HAL_GPIO_Init+0x304>)
 8002a8a:	69bb      	ldr	r3, [r7, #24]
 8002a8c:	6013      	str	r3, [r2, #0]
 8002a8e:	69fb      	ldr	r3, [r7, #28]
 8002a90:	3301      	adds	r3, #1
 8002a92:	61fb      	str	r3, [r7, #28]
 8002a94:	69fb      	ldr	r3, [r7, #28]
 8002a96:	2b0f      	cmp	r3, #15
 8002a98:	f67f aea2 	bls.w	80027e0 <HAL_GPIO_Init+0x1c>
 8002a9c:	bf00      	nop
 8002a9e:	bf00      	nop
 8002aa0:	3724      	adds	r7, #36	@ 0x24
 8002aa2:	46bd      	mov	sp, r7
 8002aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa8:	4770      	bx	lr
 8002aaa:	bf00      	nop
 8002aac:	40023800 	.word	0x40023800
 8002ab0:	40013800 	.word	0x40013800
 8002ab4:	40020000 	.word	0x40020000
 8002ab8:	40020400 	.word	0x40020400
 8002abc:	40020800 	.word	0x40020800
 8002ac0:	40020c00 	.word	0x40020c00
 8002ac4:	40021000 	.word	0x40021000
 8002ac8:	40013c00 	.word	0x40013c00

08002acc <HAL_GPIO_DeInit>:
 8002acc:	b480      	push	{r7}
 8002ace:	b087      	sub	sp, #28
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	6078      	str	r0, [r7, #4]
 8002ad4:	6039      	str	r1, [r7, #0]
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	613b      	str	r3, [r7, #16]
 8002ada:	2300      	movs	r3, #0
 8002adc:	60fb      	str	r3, [r7, #12]
 8002ade:	2300      	movs	r3, #0
 8002ae0:	60bb      	str	r3, [r7, #8]
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	617b      	str	r3, [r7, #20]
 8002ae6:	e0bb      	b.n	8002c60 <HAL_GPIO_DeInit+0x194>
 8002ae8:	2201      	movs	r2, #1
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	fa02 f303 	lsl.w	r3, r2, r3
 8002af0:	613b      	str	r3, [r7, #16]
 8002af2:	683a      	ldr	r2, [r7, #0]
 8002af4:	693b      	ldr	r3, [r7, #16]
 8002af6:	4013      	ands	r3, r2
 8002af8:	60fb      	str	r3, [r7, #12]
 8002afa:	68fa      	ldr	r2, [r7, #12]
 8002afc:	693b      	ldr	r3, [r7, #16]
 8002afe:	429a      	cmp	r2, r3
 8002b00:	f040 80ab 	bne.w	8002c5a <HAL_GPIO_DeInit+0x18e>
 8002b04:	4a5c      	ldr	r2, [pc, #368]	@ (8002c78 <HAL_GPIO_DeInit+0x1ac>)
 8002b06:	697b      	ldr	r3, [r7, #20]
 8002b08:	089b      	lsrs	r3, r3, #2
 8002b0a:	3302      	adds	r3, #2
 8002b0c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b10:	60bb      	str	r3, [r7, #8]
 8002b12:	697b      	ldr	r3, [r7, #20]
 8002b14:	f003 0303 	and.w	r3, r3, #3
 8002b18:	009b      	lsls	r3, r3, #2
 8002b1a:	220f      	movs	r2, #15
 8002b1c:	fa02 f303 	lsl.w	r3, r2, r3
 8002b20:	68ba      	ldr	r2, [r7, #8]
 8002b22:	4013      	ands	r3, r2
 8002b24:	60bb      	str	r3, [r7, #8]
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	4a54      	ldr	r2, [pc, #336]	@ (8002c7c <HAL_GPIO_DeInit+0x1b0>)
 8002b2a:	4293      	cmp	r3, r2
 8002b2c:	d019      	beq.n	8002b62 <HAL_GPIO_DeInit+0x96>
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	4a53      	ldr	r2, [pc, #332]	@ (8002c80 <HAL_GPIO_DeInit+0x1b4>)
 8002b32:	4293      	cmp	r3, r2
 8002b34:	d013      	beq.n	8002b5e <HAL_GPIO_DeInit+0x92>
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	4a52      	ldr	r2, [pc, #328]	@ (8002c84 <HAL_GPIO_DeInit+0x1b8>)
 8002b3a:	4293      	cmp	r3, r2
 8002b3c:	d00d      	beq.n	8002b5a <HAL_GPIO_DeInit+0x8e>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	4a51      	ldr	r2, [pc, #324]	@ (8002c88 <HAL_GPIO_DeInit+0x1bc>)
 8002b42:	4293      	cmp	r3, r2
 8002b44:	d007      	beq.n	8002b56 <HAL_GPIO_DeInit+0x8a>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	4a50      	ldr	r2, [pc, #320]	@ (8002c8c <HAL_GPIO_DeInit+0x1c0>)
 8002b4a:	4293      	cmp	r3, r2
 8002b4c:	d101      	bne.n	8002b52 <HAL_GPIO_DeInit+0x86>
 8002b4e:	2304      	movs	r3, #4
 8002b50:	e008      	b.n	8002b64 <HAL_GPIO_DeInit+0x98>
 8002b52:	2307      	movs	r3, #7
 8002b54:	e006      	b.n	8002b64 <HAL_GPIO_DeInit+0x98>
 8002b56:	2303      	movs	r3, #3
 8002b58:	e004      	b.n	8002b64 <HAL_GPIO_DeInit+0x98>
 8002b5a:	2302      	movs	r3, #2
 8002b5c:	e002      	b.n	8002b64 <HAL_GPIO_DeInit+0x98>
 8002b5e:	2301      	movs	r3, #1
 8002b60:	e000      	b.n	8002b64 <HAL_GPIO_DeInit+0x98>
 8002b62:	2300      	movs	r3, #0
 8002b64:	697a      	ldr	r2, [r7, #20]
 8002b66:	f002 0203 	and.w	r2, r2, #3
 8002b6a:	0092      	lsls	r2, r2, #2
 8002b6c:	4093      	lsls	r3, r2
 8002b6e:	68ba      	ldr	r2, [r7, #8]
 8002b70:	429a      	cmp	r2, r3
 8002b72:	d132      	bne.n	8002bda <HAL_GPIO_DeInit+0x10e>
 8002b74:	4b46      	ldr	r3, [pc, #280]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b76:	681a      	ldr	r2, [r3, #0]
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	43db      	mvns	r3, r3
 8002b7c:	4944      	ldr	r1, [pc, #272]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b7e:	4013      	ands	r3, r2
 8002b80:	600b      	str	r3, [r1, #0]
 8002b82:	4b43      	ldr	r3, [pc, #268]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b84:	685a      	ldr	r2, [r3, #4]
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	43db      	mvns	r3, r3
 8002b8a:	4941      	ldr	r1, [pc, #260]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b8c:	4013      	ands	r3, r2
 8002b8e:	604b      	str	r3, [r1, #4]
 8002b90:	4b3f      	ldr	r3, [pc, #252]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b92:	68da      	ldr	r2, [r3, #12]
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	43db      	mvns	r3, r3
 8002b98:	493d      	ldr	r1, [pc, #244]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002b9a:	4013      	ands	r3, r2
 8002b9c:	60cb      	str	r3, [r1, #12]
 8002b9e:	4b3c      	ldr	r3, [pc, #240]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002ba0:	689a      	ldr	r2, [r3, #8]
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	43db      	mvns	r3, r3
 8002ba6:	493a      	ldr	r1, [pc, #232]	@ (8002c90 <HAL_GPIO_DeInit+0x1c4>)
 8002ba8:	4013      	ands	r3, r2
 8002baa:	608b      	str	r3, [r1, #8]
 8002bac:	697b      	ldr	r3, [r7, #20]
 8002bae:	f003 0303 	and.w	r3, r3, #3
 8002bb2:	009b      	lsls	r3, r3, #2
 8002bb4:	220f      	movs	r2, #15
 8002bb6:	fa02 f303 	lsl.w	r3, r2, r3
 8002bba:	60bb      	str	r3, [r7, #8]
 8002bbc:	4a2e      	ldr	r2, [pc, #184]	@ (8002c78 <HAL_GPIO_DeInit+0x1ac>)
 8002bbe:	697b      	ldr	r3, [r7, #20]
 8002bc0:	089b      	lsrs	r3, r3, #2
 8002bc2:	3302      	adds	r3, #2
 8002bc4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8002bc8:	68bb      	ldr	r3, [r7, #8]
 8002bca:	43da      	mvns	r2, r3
 8002bcc:	482a      	ldr	r0, [pc, #168]	@ (8002c78 <HAL_GPIO_DeInit+0x1ac>)
 8002bce:	697b      	ldr	r3, [r7, #20]
 8002bd0:	089b      	lsrs	r3, r3, #2
 8002bd2:	400a      	ands	r2, r1
 8002bd4:	3302      	adds	r3, #2
 8002bd6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681a      	ldr	r2, [r3, #0]
 8002bde:	697b      	ldr	r3, [r7, #20]
 8002be0:	005b      	lsls	r3, r3, #1
 8002be2:	2103      	movs	r1, #3
 8002be4:	fa01 f303 	lsl.w	r3, r1, r3
 8002be8:	43db      	mvns	r3, r3
 8002bea:	401a      	ands	r2, r3
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	601a      	str	r2, [r3, #0]
 8002bf0:	697b      	ldr	r3, [r7, #20]
 8002bf2:	08da      	lsrs	r2, r3, #3
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	3208      	adds	r2, #8
 8002bf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002bfc:	697b      	ldr	r3, [r7, #20]
 8002bfe:	f003 0307 	and.w	r3, r3, #7
 8002c02:	009b      	lsls	r3, r3, #2
 8002c04:	220f      	movs	r2, #15
 8002c06:	fa02 f303 	lsl.w	r3, r2, r3
 8002c0a:	43db      	mvns	r3, r3
 8002c0c:	697a      	ldr	r2, [r7, #20]
 8002c0e:	08d2      	lsrs	r2, r2, #3
 8002c10:	4019      	ands	r1, r3
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	3208      	adds	r2, #8
 8002c16:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	68da      	ldr	r2, [r3, #12]
 8002c1e:	697b      	ldr	r3, [r7, #20]
 8002c20:	005b      	lsls	r3, r3, #1
 8002c22:	2103      	movs	r1, #3
 8002c24:	fa01 f303 	lsl.w	r3, r1, r3
 8002c28:	43db      	mvns	r3, r3
 8002c2a:	401a      	ands	r2, r3
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	60da      	str	r2, [r3, #12]
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	685a      	ldr	r2, [r3, #4]
 8002c34:	2101      	movs	r1, #1
 8002c36:	697b      	ldr	r3, [r7, #20]
 8002c38:	fa01 f303 	lsl.w	r3, r1, r3
 8002c3c:	43db      	mvns	r3, r3
 8002c3e:	401a      	ands	r2, r3
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	605a      	str	r2, [r3, #4]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	689a      	ldr	r2, [r3, #8]
 8002c48:	697b      	ldr	r3, [r7, #20]
 8002c4a:	005b      	lsls	r3, r3, #1
 8002c4c:	2103      	movs	r1, #3
 8002c4e:	fa01 f303 	lsl.w	r3, r1, r3
 8002c52:	43db      	mvns	r3, r3
 8002c54:	401a      	ands	r2, r3
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	609a      	str	r2, [r3, #8]
 8002c5a:	697b      	ldr	r3, [r7, #20]
 8002c5c:	3301      	adds	r3, #1
 8002c5e:	617b      	str	r3, [r7, #20]
 8002c60:	697b      	ldr	r3, [r7, #20]
 8002c62:	2b0f      	cmp	r3, #15
 8002c64:	f67f af40 	bls.w	8002ae8 <HAL_GPIO_DeInit+0x1c>
 8002c68:	bf00      	nop
 8002c6a:	bf00      	nop
 8002c6c:	371c      	adds	r7, #28
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c74:	4770      	bx	lr
 8002c76:	bf00      	nop
 8002c78:	40013800 	.word	0x40013800
 8002c7c:	40020000 	.word	0x40020000
 8002c80:	40020400 	.word	0x40020400
 8002c84:	40020800 	.word	0x40020800
 8002c88:	40020c00 	.word	0x40020c00
 8002c8c:	40021000 	.word	0x40021000
 8002c90:	40013c00 	.word	0x40013c00

08002c94 <HAL_GPIO_WritePin>:
 8002c94:	b480      	push	{r7}
 8002c96:	b083      	sub	sp, #12
 8002c98:	af00      	add	r7, sp, #0
 8002c9a:	6078      	str	r0, [r7, #4]
 8002c9c:	460b      	mov	r3, r1
 8002c9e:	807b      	strh	r3, [r7, #2]
 8002ca0:	4613      	mov	r3, r2
 8002ca2:	707b      	strb	r3, [r7, #1]
 8002ca4:	787b      	ldrb	r3, [r7, #1]
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d003      	beq.n	8002cb2 <HAL_GPIO_WritePin+0x1e>
 8002caa:	887a      	ldrh	r2, [r7, #2]
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	619a      	str	r2, [r3, #24]
 8002cb0:	e003      	b.n	8002cba <HAL_GPIO_WritePin+0x26>
 8002cb2:	887b      	ldrh	r3, [r7, #2]
 8002cb4:	041a      	lsls	r2, r3, #16
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	619a      	str	r2, [r3, #24]
 8002cba:	bf00      	nop
 8002cbc:	370c      	adds	r7, #12
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc4:	4770      	bx	lr

08002cc6 <HAL_GPIO_TogglePin>:
 8002cc6:	b480      	push	{r7}
 8002cc8:	b085      	sub	sp, #20
 8002cca:	af00      	add	r7, sp, #0
 8002ccc:	6078      	str	r0, [r7, #4]
 8002cce:	460b      	mov	r3, r1
 8002cd0:	807b      	strh	r3, [r7, #2]
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	695b      	ldr	r3, [r3, #20]
 8002cd6:	60fb      	str	r3, [r7, #12]
 8002cd8:	887a      	ldrh	r2, [r7, #2]
 8002cda:	68fb      	ldr	r3, [r7, #12]
 8002cdc:	4013      	ands	r3, r2
 8002cde:	041a      	lsls	r2, r3, #16
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	43d9      	mvns	r1, r3
 8002ce4:	887b      	ldrh	r3, [r7, #2]
 8002ce6:	400b      	ands	r3, r1
 8002ce8:	431a      	orrs	r2, r3
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	619a      	str	r2, [r3, #24]
 8002cee:	bf00      	nop
 8002cf0:	3714      	adds	r7, #20
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf8:	4770      	bx	lr
	...

08002cfc <HAL_I2C_Init>:
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b084      	sub	sp, #16
 8002d00:	af00      	add	r7, sp, #0
 8002d02:	6078      	str	r0, [r7, #4]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d101      	bne.n	8002d0e <HAL_I2C_Init+0x12>
 8002d0a:	2301      	movs	r3, #1
 8002d0c:	e12b      	b.n	8002f66 <HAL_I2C_Init+0x26a>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002d14:	b2db      	uxtb	r3, r3
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d106      	bne.n	8002d28 <HAL_I2C_Init+0x2c>
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d22:	6878      	ldr	r0, [r7, #4]
 8002d24:	f7fe fc44 	bl	80015b0 <HAL_I2C_MspInit>
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	2224      	movs	r2, #36	@ 0x24
 8002d2c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	681a      	ldr	r2, [r3, #0]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	f022 0201 	bic.w	r2, r2, #1
 8002d3e:	601a      	str	r2, [r3, #0]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	681a      	ldr	r2, [r3, #0]
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002d4e:	601a      	str	r2, [r3, #0]
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	681a      	ldr	r2, [r3, #0]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002d5e:	601a      	str	r2, [r3, #0]
 8002d60:	f001 fc50 	bl	8004604 <HAL_RCC_GetPCLK1Freq>
 8002d64:	60f8      	str	r0, [r7, #12]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	685b      	ldr	r3, [r3, #4]
 8002d6a:	4a81      	ldr	r2, [pc, #516]	@ (8002f70 <HAL_I2C_Init+0x274>)
 8002d6c:	4293      	cmp	r3, r2
 8002d6e:	d807      	bhi.n	8002d80 <HAL_I2C_Init+0x84>
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	4a80      	ldr	r2, [pc, #512]	@ (8002f74 <HAL_I2C_Init+0x278>)
 8002d74:	4293      	cmp	r3, r2
 8002d76:	bf94      	ite	ls
 8002d78:	2301      	movls	r3, #1
 8002d7a:	2300      	movhi	r3, #0
 8002d7c:	b2db      	uxtb	r3, r3
 8002d7e:	e006      	b.n	8002d8e <HAL_I2C_Init+0x92>
 8002d80:	68fb      	ldr	r3, [r7, #12]
 8002d82:	4a7d      	ldr	r2, [pc, #500]	@ (8002f78 <HAL_I2C_Init+0x27c>)
 8002d84:	4293      	cmp	r3, r2
 8002d86:	bf94      	ite	ls
 8002d88:	2301      	movls	r3, #1
 8002d8a:	2300      	movhi	r3, #0
 8002d8c:	b2db      	uxtb	r3, r3
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d001      	beq.n	8002d96 <HAL_I2C_Init+0x9a>
 8002d92:	2301      	movs	r3, #1
 8002d94:	e0e7      	b.n	8002f66 <HAL_I2C_Init+0x26a>
 8002d96:	68fb      	ldr	r3, [r7, #12]
 8002d98:	4a78      	ldr	r2, [pc, #480]	@ (8002f7c <HAL_I2C_Init+0x280>)
 8002d9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d9e:	0c9b      	lsrs	r3, r3, #18
 8002da0:	60bb      	str	r3, [r7, #8]
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	685b      	ldr	r3, [r3, #4]
 8002da8:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	68ba      	ldr	r2, [r7, #8]
 8002db2:	430a      	orrs	r2, r1
 8002db4:	605a      	str	r2, [r3, #4]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	6a1b      	ldr	r3, [r3, #32]
 8002dbc:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	685b      	ldr	r3, [r3, #4]
 8002dc4:	4a6a      	ldr	r2, [pc, #424]	@ (8002f70 <HAL_I2C_Init+0x274>)
 8002dc6:	4293      	cmp	r3, r2
 8002dc8:	d802      	bhi.n	8002dd0 <HAL_I2C_Init+0xd4>
 8002dca:	68bb      	ldr	r3, [r7, #8]
 8002dcc:	3301      	adds	r3, #1
 8002dce:	e009      	b.n	8002de4 <HAL_I2C_Init+0xe8>
 8002dd0:	68bb      	ldr	r3, [r7, #8]
 8002dd2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002dd6:	fb02 f303 	mul.w	r3, r2, r3
 8002dda:	4a69      	ldr	r2, [pc, #420]	@ (8002f80 <HAL_I2C_Init+0x284>)
 8002ddc:	fba2 2303 	umull	r2, r3, r2, r3
 8002de0:	099b      	lsrs	r3, r3, #6
 8002de2:	3301      	adds	r3, #1
 8002de4:	687a      	ldr	r2, [r7, #4]
 8002de6:	6812      	ldr	r2, [r2, #0]
 8002de8:	430b      	orrs	r3, r1
 8002dea:	6213      	str	r3, [r2, #32]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	69db      	ldr	r3, [r3, #28]
 8002df2:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002df6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	685b      	ldr	r3, [r3, #4]
 8002dfe:	495c      	ldr	r1, [pc, #368]	@ (8002f70 <HAL_I2C_Init+0x274>)
 8002e00:	428b      	cmp	r3, r1
 8002e02:	d819      	bhi.n	8002e38 <HAL_I2C_Init+0x13c>
 8002e04:	68fb      	ldr	r3, [r7, #12]
 8002e06:	1e59      	subs	r1, r3, #1
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	685b      	ldr	r3, [r3, #4]
 8002e0c:	005b      	lsls	r3, r3, #1
 8002e0e:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e12:	1c59      	adds	r1, r3, #1
 8002e14:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8002e18:	400b      	ands	r3, r1
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d00a      	beq.n	8002e34 <HAL_I2C_Init+0x138>
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	1e59      	subs	r1, r3, #1
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	685b      	ldr	r3, [r3, #4]
 8002e26:	005b      	lsls	r3, r3, #1
 8002e28:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e2c:	3301      	adds	r3, #1
 8002e2e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e32:	e051      	b.n	8002ed8 <HAL_I2C_Init+0x1dc>
 8002e34:	2304      	movs	r3, #4
 8002e36:	e04f      	b.n	8002ed8 <HAL_I2C_Init+0x1dc>
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	d111      	bne.n	8002e64 <HAL_I2C_Init+0x168>
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	1e58      	subs	r0, r3, #1
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6859      	ldr	r1, [r3, #4]
 8002e48:	460b      	mov	r3, r1
 8002e4a:	005b      	lsls	r3, r3, #1
 8002e4c:	440b      	add	r3, r1
 8002e4e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002e52:	3301      	adds	r3, #1
 8002e54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	bf0c      	ite	eq
 8002e5c:	2301      	moveq	r3, #1
 8002e5e:	2300      	movne	r3, #0
 8002e60:	b2db      	uxtb	r3, r3
 8002e62:	e012      	b.n	8002e8a <HAL_I2C_Init+0x18e>
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	1e58      	subs	r0, r3, #1
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	6859      	ldr	r1, [r3, #4]
 8002e6c:	460b      	mov	r3, r1
 8002e6e:	009b      	lsls	r3, r3, #2
 8002e70:	440b      	add	r3, r1
 8002e72:	0099      	lsls	r1, r3, #2
 8002e74:	440b      	add	r3, r1
 8002e76:	fbb0 f3f3 	udiv	r3, r0, r3
 8002e7a:	3301      	adds	r3, #1
 8002e7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	bf0c      	ite	eq
 8002e84:	2301      	moveq	r3, #1
 8002e86:	2300      	movne	r3, #0
 8002e88:	b2db      	uxtb	r3, r3
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d001      	beq.n	8002e92 <HAL_I2C_Init+0x196>
 8002e8e:	2301      	movs	r3, #1
 8002e90:	e022      	b.n	8002ed8 <HAL_I2C_Init+0x1dc>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	689b      	ldr	r3, [r3, #8]
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d10e      	bne.n	8002eb8 <HAL_I2C_Init+0x1bc>
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	1e58      	subs	r0, r3, #1
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	6859      	ldr	r1, [r3, #4]
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	005b      	lsls	r3, r3, #1
 8002ea6:	440b      	add	r3, r1
 8002ea8:	fbb0 f3f3 	udiv	r3, r0, r3
 8002eac:	3301      	adds	r3, #1
 8002eae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002eb2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002eb6:	e00f      	b.n	8002ed8 <HAL_I2C_Init+0x1dc>
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	1e58      	subs	r0, r3, #1
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	6859      	ldr	r1, [r3, #4]
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	009b      	lsls	r3, r3, #2
 8002ec4:	440b      	add	r3, r1
 8002ec6:	0099      	lsls	r1, r3, #2
 8002ec8:	440b      	add	r3, r1
 8002eca:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ece:	3301      	adds	r3, #1
 8002ed0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ed4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002ed8:	6879      	ldr	r1, [r7, #4]
 8002eda:	6809      	ldr	r1, [r1, #0]
 8002edc:	4313      	orrs	r3, r2
 8002ede:	61cb      	str	r3, [r1, #28]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	69da      	ldr	r2, [r3, #28]
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6a1b      	ldr	r3, [r3, #32]
 8002ef2:	431a      	orrs	r2, r3
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	430a      	orrs	r2, r1
 8002efa:	601a      	str	r2, [r3, #0]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	689b      	ldr	r3, [r3, #8]
 8002f02:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8002f06:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8002f0a:	687a      	ldr	r2, [r7, #4]
 8002f0c:	6911      	ldr	r1, [r2, #16]
 8002f0e:	687a      	ldr	r2, [r7, #4]
 8002f10:	68d2      	ldr	r2, [r2, #12]
 8002f12:	4311      	orrs	r1, r2
 8002f14:	687a      	ldr	r2, [r7, #4]
 8002f16:	6812      	ldr	r2, [r2, #0]
 8002f18:	430b      	orrs	r3, r1
 8002f1a:	6093      	str	r3, [r2, #8]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	68db      	ldr	r3, [r3, #12]
 8002f22:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	695a      	ldr	r2, [r3, #20]
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	699b      	ldr	r3, [r3, #24]
 8002f2e:	431a      	orrs	r2, r3
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	430a      	orrs	r2, r1
 8002f36:	60da      	str	r2, [r3, #12]
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	681a      	ldr	r2, [r3, #0]
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	f042 0201 	orr.w	r2, r2, #1
 8002f46:	601a      	str	r2, [r3, #0]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	2200      	movs	r2, #0
 8002f4c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	2220      	movs	r2, #32
 8002f52:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	2200      	movs	r2, #0
 8002f5a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	2200      	movs	r2, #0
 8002f60:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002f64:	2300      	movs	r3, #0
 8002f66:	4618      	mov	r0, r3
 8002f68:	3710      	adds	r7, #16
 8002f6a:	46bd      	mov	sp, r7
 8002f6c:	bd80      	pop	{r7, pc}
 8002f6e:	bf00      	nop
 8002f70:	000186a0 	.word	0x000186a0
 8002f74:	001e847f 	.word	0x001e847f
 8002f78:	003d08ff 	.word	0x003d08ff
 8002f7c:	431bde83 	.word	0x431bde83
 8002f80:	10624dd3 	.word	0x10624dd3

08002f84 <HAL_I2C_DeInit>:
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b082      	sub	sp, #8
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d101      	bne.n	8002f96 <HAL_I2C_DeInit+0x12>
 8002f92:	2301      	movs	r3, #1
 8002f94:	e021      	b.n	8002fda <HAL_I2C_DeInit+0x56>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	2224      	movs	r2, #36	@ 0x24
 8002f9a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	681a      	ldr	r2, [r3, #0]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	f022 0201 	bic.w	r2, r2, #1
 8002fac:	601a      	str	r2, [r3, #0]
 8002fae:	6878      	ldr	r0, [r7, #4]
 8002fb0:	f7fe fb9a 	bl	80016e8 <HAL_I2C_MspDeInit>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	2200      	movs	r2, #0
 8002fb8:	641a      	str	r2, [r3, #64]	@ 0x40
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	2200      	movs	r2, #0
 8002fcc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	2200      	movs	r2, #0
 8002fd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002fd8:	2300      	movs	r3, #0
 8002fda:	4618      	mov	r0, r3
 8002fdc:	3708      	adds	r7, #8
 8002fde:	46bd      	mov	sp, r7
 8002fe0:	bd80      	pop	{r7, pc}
	...

08002fe4 <HAL_I2C_Mem_Write>:
 8002fe4:	b580      	push	{r7, lr}
 8002fe6:	b088      	sub	sp, #32
 8002fe8:	af02      	add	r7, sp, #8
 8002fea:	60f8      	str	r0, [r7, #12]
 8002fec:	4608      	mov	r0, r1
 8002fee:	4611      	mov	r1, r2
 8002ff0:	461a      	mov	r2, r3
 8002ff2:	4603      	mov	r3, r0
 8002ff4:	817b      	strh	r3, [r7, #10]
 8002ff6:	460b      	mov	r3, r1
 8002ff8:	813b      	strh	r3, [r7, #8]
 8002ffa:	4613      	mov	r3, r2
 8002ffc:	80fb      	strh	r3, [r7, #6]
 8002ffe:	f7fe fe9d 	bl	8001d3c <HAL_GetTick>
 8003002:	6178      	str	r0, [r7, #20]
 8003004:	68fb      	ldr	r3, [r7, #12]
 8003006:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800300a:	b2db      	uxtb	r3, r3
 800300c:	2b20      	cmp	r3, #32
 800300e:	f040 80d9 	bne.w	80031c4 <HAL_I2C_Mem_Write+0x1e0>
 8003012:	697b      	ldr	r3, [r7, #20]
 8003014:	9300      	str	r3, [sp, #0]
 8003016:	2319      	movs	r3, #25
 8003018:	2201      	movs	r2, #1
 800301a:	496d      	ldr	r1, [pc, #436]	@ (80031d0 <HAL_I2C_Mem_Write+0x1ec>)
 800301c:	68f8      	ldr	r0, [r7, #12]
 800301e:	f000 fc8b 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 8003022:	4603      	mov	r3, r0
 8003024:	2b00      	cmp	r3, #0
 8003026:	d001      	beq.n	800302c <HAL_I2C_Mem_Write+0x48>
 8003028:	2302      	movs	r3, #2
 800302a:	e0cc      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003032:	2b01      	cmp	r3, #1
 8003034:	d101      	bne.n	800303a <HAL_I2C_Mem_Write+0x56>
 8003036:	2302      	movs	r3, #2
 8003038:	e0c5      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	2201      	movs	r2, #1
 800303e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	f003 0301 	and.w	r3, r3, #1
 800304c:	2b01      	cmp	r3, #1
 800304e:	d007      	beq.n	8003060 <HAL_I2C_Mem_Write+0x7c>
 8003050:	68fb      	ldr	r3, [r7, #12]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	681a      	ldr	r2, [r3, #0]
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	f042 0201 	orr.w	r2, r2, #1
 800305e:	601a      	str	r2, [r3, #0]
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	681a      	ldr	r2, [r3, #0]
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800306e:	601a      	str	r2, [r3, #0]
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	2221      	movs	r2, #33	@ 0x21
 8003074:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003078:	68fb      	ldr	r3, [r7, #12]
 800307a:	2240      	movs	r2, #64	@ 0x40
 800307c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003080:	68fb      	ldr	r3, [r7, #12]
 8003082:	2200      	movs	r2, #0
 8003084:	641a      	str	r2, [r3, #64]	@ 0x40
 8003086:	68fb      	ldr	r3, [r7, #12]
 8003088:	6a3a      	ldr	r2, [r7, #32]
 800308a:	625a      	str	r2, [r3, #36]	@ 0x24
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003090:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003096:	b29a      	uxth	r2, r3
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	4a4d      	ldr	r2, [pc, #308]	@ (80031d4 <HAL_I2C_Mem_Write+0x1f0>)
 80030a0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80030a2:	88f8      	ldrh	r0, [r7, #6]
 80030a4:	893a      	ldrh	r2, [r7, #8]
 80030a6:	8979      	ldrh	r1, [r7, #10]
 80030a8:	697b      	ldr	r3, [r7, #20]
 80030aa:	9301      	str	r3, [sp, #4]
 80030ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80030ae:	9300      	str	r3, [sp, #0]
 80030b0:	4603      	mov	r3, r0
 80030b2:	68f8      	ldr	r0, [r7, #12]
 80030b4:	f000 fac2 	bl	800363c <I2C_RequestMemoryWrite>
 80030b8:	4603      	mov	r3, r0
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d052      	beq.n	8003164 <HAL_I2C_Mem_Write+0x180>
 80030be:	2301      	movs	r3, #1
 80030c0:	e081      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 80030c2:	697a      	ldr	r2, [r7, #20]
 80030c4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80030c6:	68f8      	ldr	r0, [r7, #12]
 80030c8:	f000 fd50 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 80030cc:	4603      	mov	r3, r0
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d00d      	beq.n	80030ee <HAL_I2C_Mem_Write+0x10a>
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030d6:	2b04      	cmp	r3, #4
 80030d8:	d107      	bne.n	80030ea <HAL_I2C_Mem_Write+0x106>
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	681a      	ldr	r2, [r3, #0]
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80030e8:	601a      	str	r2, [r3, #0]
 80030ea:	2301      	movs	r3, #1
 80030ec:	e06b      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030f2:	781a      	ldrb	r2, [r3, #0]
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	611a      	str	r2, [r3, #16]
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030fe:	1c5a      	adds	r2, r3, #1
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	625a      	str	r2, [r3, #36]	@ 0x24
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003108:	3b01      	subs	r3, #1
 800310a:	b29a      	uxth	r2, r3
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003114:	b29b      	uxth	r3, r3
 8003116:	3b01      	subs	r3, #1
 8003118:	b29a      	uxth	r2, r3
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	695b      	ldr	r3, [r3, #20]
 8003124:	f003 0304 	and.w	r3, r3, #4
 8003128:	2b04      	cmp	r3, #4
 800312a:	d11b      	bne.n	8003164 <HAL_I2C_Mem_Write+0x180>
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003130:	2b00      	cmp	r3, #0
 8003132:	d017      	beq.n	8003164 <HAL_I2C_Mem_Write+0x180>
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003138:	781a      	ldrb	r2, [r3, #0]
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	611a      	str	r2, [r3, #16]
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003144:	1c5a      	adds	r2, r3, #1
 8003146:	68fb      	ldr	r3, [r7, #12]
 8003148:	625a      	str	r2, [r3, #36]	@ 0x24
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800314e:	3b01      	subs	r3, #1
 8003150:	b29a      	uxth	r2, r3
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003156:	68fb      	ldr	r3, [r7, #12]
 8003158:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800315a:	b29b      	uxth	r3, r3
 800315c:	3b01      	subs	r3, #1
 800315e:	b29a      	uxth	r2, r3
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003168:	2b00      	cmp	r3, #0
 800316a:	d1aa      	bne.n	80030c2 <HAL_I2C_Mem_Write+0xde>
 800316c:	697a      	ldr	r2, [r7, #20]
 800316e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003170:	68f8      	ldr	r0, [r7, #12]
 8003172:	f000 fd43 	bl	8003bfc <I2C_WaitOnBTFFlagUntilTimeout>
 8003176:	4603      	mov	r3, r0
 8003178:	2b00      	cmp	r3, #0
 800317a:	d00d      	beq.n	8003198 <HAL_I2C_Mem_Write+0x1b4>
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003180:	2b04      	cmp	r3, #4
 8003182:	d107      	bne.n	8003194 <HAL_I2C_Mem_Write+0x1b0>
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	681a      	ldr	r2, [r3, #0]
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003192:	601a      	str	r2, [r3, #0]
 8003194:	2301      	movs	r3, #1
 8003196:	e016      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	681a      	ldr	r2, [r3, #0]
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80031a6:	601a      	str	r2, [r3, #0]
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	2220      	movs	r2, #32
 80031ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	2200      	movs	r2, #0
 80031b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	2200      	movs	r2, #0
 80031bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031c0:	2300      	movs	r3, #0
 80031c2:	e000      	b.n	80031c6 <HAL_I2C_Mem_Write+0x1e2>
 80031c4:	2302      	movs	r3, #2
 80031c6:	4618      	mov	r0, r3
 80031c8:	3718      	adds	r7, #24
 80031ca:	46bd      	mov	sp, r7
 80031cc:	bd80      	pop	{r7, pc}
 80031ce:	bf00      	nop
 80031d0:	00100002 	.word	0x00100002
 80031d4:	ffff0000 	.word	0xffff0000

080031d8 <HAL_I2C_Mem_Read>:
 80031d8:	b580      	push	{r7, lr}
 80031da:	b08c      	sub	sp, #48	@ 0x30
 80031dc:	af02      	add	r7, sp, #8
 80031de:	60f8      	str	r0, [r7, #12]
 80031e0:	4608      	mov	r0, r1
 80031e2:	4611      	mov	r1, r2
 80031e4:	461a      	mov	r2, r3
 80031e6:	4603      	mov	r3, r0
 80031e8:	817b      	strh	r3, [r7, #10]
 80031ea:	460b      	mov	r3, r1
 80031ec:	813b      	strh	r3, [r7, #8]
 80031ee:	4613      	mov	r3, r2
 80031f0:	80fb      	strh	r3, [r7, #6]
 80031f2:	f7fe fda3 	bl	8001d3c <HAL_GetTick>
 80031f6:	6278      	str	r0, [r7, #36]	@ 0x24
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031fe:	b2db      	uxtb	r3, r3
 8003200:	2b20      	cmp	r3, #32
 8003202:	f040 8214 	bne.w	800362e <HAL_I2C_Mem_Read+0x456>
 8003206:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003208:	9300      	str	r3, [sp, #0]
 800320a:	2319      	movs	r3, #25
 800320c:	2201      	movs	r2, #1
 800320e:	497b      	ldr	r1, [pc, #492]	@ (80033fc <HAL_I2C_Mem_Read+0x224>)
 8003210:	68f8      	ldr	r0, [r7, #12]
 8003212:	f000 fb91 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 8003216:	4603      	mov	r3, r0
 8003218:	2b00      	cmp	r3, #0
 800321a:	d001      	beq.n	8003220 <HAL_I2C_Mem_Read+0x48>
 800321c:	2302      	movs	r3, #2
 800321e:	e207      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 8003220:	68fb      	ldr	r3, [r7, #12]
 8003222:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003226:	2b01      	cmp	r3, #1
 8003228:	d101      	bne.n	800322e <HAL_I2C_Mem_Read+0x56>
 800322a:	2302      	movs	r3, #2
 800322c:	e200      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	2201      	movs	r2, #1
 8003232:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003236:	68fb      	ldr	r3, [r7, #12]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f003 0301 	and.w	r3, r3, #1
 8003240:	2b01      	cmp	r3, #1
 8003242:	d007      	beq.n	8003254 <HAL_I2C_Mem_Read+0x7c>
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	681a      	ldr	r2, [r3, #0]
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	f042 0201 	orr.w	r2, r2, #1
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	681a      	ldr	r2, [r3, #0]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003262:	601a      	str	r2, [r3, #0]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	2222      	movs	r2, #34	@ 0x22
 8003268:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	2240      	movs	r2, #64	@ 0x40
 8003270:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	2200      	movs	r2, #0
 8003278:	641a      	str	r2, [r3, #64]	@ 0x40
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800327e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8003284:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800328a:	b29a      	uxth	r2, r3
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	4a5b      	ldr	r2, [pc, #364]	@ (8003400 <HAL_I2C_Mem_Read+0x228>)
 8003294:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003296:	88f8      	ldrh	r0, [r7, #6]
 8003298:	893a      	ldrh	r2, [r7, #8]
 800329a:	8979      	ldrh	r1, [r7, #10]
 800329c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800329e:	9301      	str	r3, [sp, #4]
 80032a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80032a2:	9300      	str	r3, [sp, #0]
 80032a4:	4603      	mov	r3, r0
 80032a6:	68f8      	ldr	r0, [r7, #12]
 80032a8:	f000 fa5e 	bl	8003768 <I2C_RequestMemoryRead>
 80032ac:	4603      	mov	r3, r0
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d001      	beq.n	80032b6 <HAL_I2C_Mem_Read+0xde>
 80032b2:	2301      	movs	r3, #1
 80032b4:	e1bc      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 80032b6:	68fb      	ldr	r3, [r7, #12]
 80032b8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d113      	bne.n	80032e6 <HAL_I2C_Mem_Read+0x10e>
 80032be:	2300      	movs	r3, #0
 80032c0:	623b      	str	r3, [r7, #32]
 80032c2:	68fb      	ldr	r3, [r7, #12]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	695b      	ldr	r3, [r3, #20]
 80032c8:	623b      	str	r3, [r7, #32]
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	699b      	ldr	r3, [r3, #24]
 80032d0:	623b      	str	r3, [r7, #32]
 80032d2:	6a3b      	ldr	r3, [r7, #32]
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	681a      	ldr	r2, [r3, #0]
 80032da:	68fb      	ldr	r3, [r7, #12]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80032e2:	601a      	str	r2, [r3, #0]
 80032e4:	e190      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032ea:	2b01      	cmp	r3, #1
 80032ec:	d11b      	bne.n	8003326 <HAL_I2C_Mem_Read+0x14e>
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	681a      	ldr	r2, [r3, #0]
 80032f4:	68fb      	ldr	r3, [r7, #12]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80032fc:	601a      	str	r2, [r3, #0]
 80032fe:	2300      	movs	r3, #0
 8003300:	61fb      	str	r3, [r7, #28]
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	695b      	ldr	r3, [r3, #20]
 8003308:	61fb      	str	r3, [r7, #28]
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	699b      	ldr	r3, [r3, #24]
 8003310:	61fb      	str	r3, [r7, #28]
 8003312:	69fb      	ldr	r3, [r7, #28]
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	681a      	ldr	r2, [r3, #0]
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003322:	601a      	str	r2, [r3, #0]
 8003324:	e170      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800332a:	2b02      	cmp	r3, #2
 800332c:	d11b      	bne.n	8003366 <HAL_I2C_Mem_Read+0x18e>
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	681a      	ldr	r2, [r3, #0]
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800333c:	601a      	str	r2, [r3, #0]
 800333e:	68fb      	ldr	r3, [r7, #12]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	681a      	ldr	r2, [r3, #0]
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800334c:	601a      	str	r2, [r3, #0]
 800334e:	2300      	movs	r3, #0
 8003350:	61bb      	str	r3, [r7, #24]
 8003352:	68fb      	ldr	r3, [r7, #12]
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	695b      	ldr	r3, [r3, #20]
 8003358:	61bb      	str	r3, [r7, #24]
 800335a:	68fb      	ldr	r3, [r7, #12]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	699b      	ldr	r3, [r3, #24]
 8003360:	61bb      	str	r3, [r7, #24]
 8003362:	69bb      	ldr	r3, [r7, #24]
 8003364:	e150      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 8003366:	2300      	movs	r3, #0
 8003368:	617b      	str	r3, [r7, #20]
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	695b      	ldr	r3, [r3, #20]
 8003370:	617b      	str	r3, [r7, #20]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	699b      	ldr	r3, [r3, #24]
 8003378:	617b      	str	r3, [r7, #20]
 800337a:	697b      	ldr	r3, [r7, #20]
 800337c:	e144      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003382:	2b03      	cmp	r3, #3
 8003384:	f200 80f1 	bhi.w	800356a <HAL_I2C_Mem_Read+0x392>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800338c:	2b01      	cmp	r3, #1
 800338e:	d123      	bne.n	80033d8 <HAL_I2C_Mem_Read+0x200>
 8003390:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003392:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003394:	68f8      	ldr	r0, [r7, #12]
 8003396:	f000 fc79 	bl	8003c8c <I2C_WaitOnRXNEFlagUntilTimeout>
 800339a:	4603      	mov	r3, r0
 800339c:	2b00      	cmp	r3, #0
 800339e:	d001      	beq.n	80033a4 <HAL_I2C_Mem_Read+0x1cc>
 80033a0:	2301      	movs	r3, #1
 80033a2:	e145      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	691a      	ldr	r2, [r3, #16]
 80033aa:	68fb      	ldr	r3, [r7, #12]
 80033ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033ae:	b2d2      	uxtb	r2, r2
 80033b0:	701a      	strb	r2, [r3, #0]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033b6:	1c5a      	adds	r2, r3, #1
 80033b8:	68fb      	ldr	r3, [r7, #12]
 80033ba:	625a      	str	r2, [r3, #36]	@ 0x24
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033c0:	3b01      	subs	r3, #1
 80033c2:	b29a      	uxth	r2, r3
 80033c4:	68fb      	ldr	r3, [r7, #12]
 80033c6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80033cc:	b29b      	uxth	r3, r3
 80033ce:	3b01      	subs	r3, #1
 80033d0:	b29a      	uxth	r2, r3
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80033d6:	e117      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033dc:	2b02      	cmp	r3, #2
 80033de:	d14e      	bne.n	800347e <HAL_I2C_Mem_Read+0x2a6>
 80033e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80033e2:	9300      	str	r3, [sp, #0]
 80033e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80033e6:	2200      	movs	r2, #0
 80033e8:	4906      	ldr	r1, [pc, #24]	@ (8003404 <HAL_I2C_Mem_Read+0x22c>)
 80033ea:	68f8      	ldr	r0, [r7, #12]
 80033ec:	f000 faa4 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 80033f0:	4603      	mov	r3, r0
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d008      	beq.n	8003408 <HAL_I2C_Mem_Read+0x230>
 80033f6:	2301      	movs	r3, #1
 80033f8:	e11a      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 80033fa:	bf00      	nop
 80033fc:	00100002 	.word	0x00100002
 8003400:	ffff0000 	.word	0xffff0000
 8003404:	00010004 	.word	0x00010004
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	681a      	ldr	r2, [r3, #0]
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003416:	601a      	str	r2, [r3, #0]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	691a      	ldr	r2, [r3, #16]
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003422:	b2d2      	uxtb	r2, r2
 8003424:	701a      	strb	r2, [r3, #0]
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800342a:	1c5a      	adds	r2, r3, #1
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003434:	3b01      	subs	r3, #1
 8003436:	b29a      	uxth	r2, r3
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003440:	b29b      	uxth	r3, r3
 8003442:	3b01      	subs	r3, #1
 8003444:	b29a      	uxth	r2, r3
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	691a      	ldr	r2, [r3, #16]
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003454:	b2d2      	uxtb	r2, r2
 8003456:	701a      	strb	r2, [r3, #0]
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800345c:	1c5a      	adds	r2, r3, #1
 800345e:	68fb      	ldr	r3, [r7, #12]
 8003460:	625a      	str	r2, [r3, #36]	@ 0x24
 8003462:	68fb      	ldr	r3, [r7, #12]
 8003464:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003466:	3b01      	subs	r3, #1
 8003468:	b29a      	uxth	r2, r3
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003472:	b29b      	uxth	r3, r3
 8003474:	3b01      	subs	r3, #1
 8003476:	b29a      	uxth	r2, r3
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800347c:	e0c4      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 800347e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003480:	9300      	str	r3, [sp, #0]
 8003482:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003484:	2200      	movs	r2, #0
 8003486:	496c      	ldr	r1, [pc, #432]	@ (8003638 <HAL_I2C_Mem_Read+0x460>)
 8003488:	68f8      	ldr	r0, [r7, #12]
 800348a:	f000 fa55 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 800348e:	4603      	mov	r3, r0
 8003490:	2b00      	cmp	r3, #0
 8003492:	d001      	beq.n	8003498 <HAL_I2C_Mem_Read+0x2c0>
 8003494:	2301      	movs	r3, #1
 8003496:	e0cb      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	681a      	ldr	r2, [r3, #0]
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034a6:	601a      	str	r2, [r3, #0]
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	691a      	ldr	r2, [r3, #16]
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034b2:	b2d2      	uxtb	r2, r2
 80034b4:	701a      	strb	r2, [r3, #0]
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034ba:	1c5a      	adds	r2, r3, #1
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	625a      	str	r2, [r3, #36]	@ 0x24
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034c4:	3b01      	subs	r3, #1
 80034c6:	b29a      	uxth	r2, r3
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034d0:	b29b      	uxth	r3, r3
 80034d2:	3b01      	subs	r3, #1
 80034d4:	b29a      	uxth	r2, r3
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80034da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034dc:	9300      	str	r3, [sp, #0]
 80034de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80034e0:	2200      	movs	r2, #0
 80034e2:	4955      	ldr	r1, [pc, #340]	@ (8003638 <HAL_I2C_Mem_Read+0x460>)
 80034e4:	68f8      	ldr	r0, [r7, #12]
 80034e6:	f000 fa27 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 80034ea:	4603      	mov	r3, r0
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d001      	beq.n	80034f4 <HAL_I2C_Mem_Read+0x31c>
 80034f0:	2301      	movs	r3, #1
 80034f2:	e09d      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	681a      	ldr	r2, [r3, #0]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	691a      	ldr	r2, [r3, #16]
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800350e:	b2d2      	uxtb	r2, r2
 8003510:	701a      	strb	r2, [r3, #0]
 8003512:	68fb      	ldr	r3, [r7, #12]
 8003514:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003516:	1c5a      	adds	r2, r3, #1
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	625a      	str	r2, [r3, #36]	@ 0x24
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003520:	3b01      	subs	r3, #1
 8003522:	b29a      	uxth	r2, r3
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800352c:	b29b      	uxth	r3, r3
 800352e:	3b01      	subs	r3, #1
 8003530:	b29a      	uxth	r2, r3
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	691a      	ldr	r2, [r3, #16]
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003540:	b2d2      	uxtb	r2, r2
 8003542:	701a      	strb	r2, [r3, #0]
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003548:	1c5a      	adds	r2, r3, #1
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	625a      	str	r2, [r3, #36]	@ 0x24
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003552:	3b01      	subs	r3, #1
 8003554:	b29a      	uxth	r2, r3
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	851a      	strh	r2, [r3, #40]	@ 0x28
 800355a:	68fb      	ldr	r3, [r7, #12]
 800355c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800355e:	b29b      	uxth	r3, r3
 8003560:	3b01      	subs	r3, #1
 8003562:	b29a      	uxth	r2, r3
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003568:	e04e      	b.n	8003608 <HAL_I2C_Mem_Read+0x430>
 800356a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800356c:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800356e:	68f8      	ldr	r0, [r7, #12]
 8003570:	f000 fb8c 	bl	8003c8c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003574:	4603      	mov	r3, r0
 8003576:	2b00      	cmp	r3, #0
 8003578:	d001      	beq.n	800357e <HAL_I2C_Mem_Read+0x3a6>
 800357a:	2301      	movs	r3, #1
 800357c:	e058      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	691a      	ldr	r2, [r3, #16]
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003588:	b2d2      	uxtb	r2, r2
 800358a:	701a      	strb	r2, [r3, #0]
 800358c:	68fb      	ldr	r3, [r7, #12]
 800358e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003590:	1c5a      	adds	r2, r3, #1
 8003592:	68fb      	ldr	r3, [r7, #12]
 8003594:	625a      	str	r2, [r3, #36]	@ 0x24
 8003596:	68fb      	ldr	r3, [r7, #12]
 8003598:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800359a:	3b01      	subs	r3, #1
 800359c:	b29a      	uxth	r2, r3
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035a6:	b29b      	uxth	r3, r3
 80035a8:	3b01      	subs	r3, #1
 80035aa:	b29a      	uxth	r2, r3
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	695b      	ldr	r3, [r3, #20]
 80035b6:	f003 0304 	and.w	r3, r3, #4
 80035ba:	2b04      	cmp	r3, #4
 80035bc:	d124      	bne.n	8003608 <HAL_I2C_Mem_Read+0x430>
 80035be:	68fb      	ldr	r3, [r7, #12]
 80035c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035c2:	2b03      	cmp	r3, #3
 80035c4:	d107      	bne.n	80035d6 <HAL_I2C_Mem_Read+0x3fe>
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	681a      	ldr	r2, [r3, #0]
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80035d4:	601a      	str	r2, [r3, #0]
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	691a      	ldr	r2, [r3, #16]
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e0:	b2d2      	uxtb	r2, r2
 80035e2:	701a      	strb	r2, [r3, #0]
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e8:	1c5a      	adds	r2, r3, #1
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	625a      	str	r2, [r3, #36]	@ 0x24
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035f2:	3b01      	subs	r3, #1
 80035f4:	b29a      	uxth	r2, r3
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035fe:	b29b      	uxth	r3, r3
 8003600:	3b01      	subs	r3, #1
 8003602:	b29a      	uxth	r2, r3
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800360c:	2b00      	cmp	r3, #0
 800360e:	f47f aeb6 	bne.w	800337e <HAL_I2C_Mem_Read+0x1a6>
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	2220      	movs	r2, #32
 8003616:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	2200      	movs	r2, #0
 800361e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	2200      	movs	r2, #0
 8003626:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800362a:	2300      	movs	r3, #0
 800362c:	e000      	b.n	8003630 <HAL_I2C_Mem_Read+0x458>
 800362e:	2302      	movs	r3, #2
 8003630:	4618      	mov	r0, r3
 8003632:	3728      	adds	r7, #40	@ 0x28
 8003634:	46bd      	mov	sp, r7
 8003636:	bd80      	pop	{r7, pc}
 8003638:	00010004 	.word	0x00010004

0800363c <I2C_RequestMemoryWrite>:
 800363c:	b580      	push	{r7, lr}
 800363e:	b088      	sub	sp, #32
 8003640:	af02      	add	r7, sp, #8
 8003642:	60f8      	str	r0, [r7, #12]
 8003644:	4608      	mov	r0, r1
 8003646:	4611      	mov	r1, r2
 8003648:	461a      	mov	r2, r3
 800364a:	4603      	mov	r3, r0
 800364c:	817b      	strh	r3, [r7, #10]
 800364e:	460b      	mov	r3, r1
 8003650:	813b      	strh	r3, [r7, #8]
 8003652:	4613      	mov	r3, r2
 8003654:	80fb      	strh	r3, [r7, #6]
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	681a      	ldr	r2, [r3, #0]
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003664:	601a      	str	r2, [r3, #0]
 8003666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003668:	9300      	str	r3, [sp, #0]
 800366a:	6a3b      	ldr	r3, [r7, #32]
 800366c:	2200      	movs	r2, #0
 800366e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003672:	68f8      	ldr	r0, [r7, #12]
 8003674:	f000 f960 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 8003678:	4603      	mov	r3, r0
 800367a:	2b00      	cmp	r3, #0
 800367c:	d00d      	beq.n	800369a <I2C_RequestMemoryWrite+0x5e>
 800367e:	68fb      	ldr	r3, [r7, #12]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003688:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800368c:	d103      	bne.n	8003696 <I2C_RequestMemoryWrite+0x5a>
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003694:	641a      	str	r2, [r3, #64]	@ 0x40
 8003696:	2303      	movs	r3, #3
 8003698:	e05f      	b.n	800375a <I2C_RequestMemoryWrite+0x11e>
 800369a:	897b      	ldrh	r3, [r7, #10]
 800369c:	b2db      	uxtb	r3, r3
 800369e:	461a      	mov	r2, r3
 80036a0:	68fb      	ldr	r3, [r7, #12]
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80036a8:	611a      	str	r2, [r3, #16]
 80036aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80036ac:	6a3a      	ldr	r2, [r7, #32]
 80036ae:	492d      	ldr	r1, [pc, #180]	@ (8003764 <I2C_RequestMemoryWrite+0x128>)
 80036b0:	68f8      	ldr	r0, [r7, #12]
 80036b2:	f000 f9bb 	bl	8003a2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80036b6:	4603      	mov	r3, r0
 80036b8:	2b00      	cmp	r3, #0
 80036ba:	d001      	beq.n	80036c0 <I2C_RequestMemoryWrite+0x84>
 80036bc:	2301      	movs	r3, #1
 80036be:	e04c      	b.n	800375a <I2C_RequestMemoryWrite+0x11e>
 80036c0:	2300      	movs	r3, #0
 80036c2:	617b      	str	r3, [r7, #20]
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	695b      	ldr	r3, [r3, #20]
 80036ca:	617b      	str	r3, [r7, #20]
 80036cc:	68fb      	ldr	r3, [r7, #12]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	699b      	ldr	r3, [r3, #24]
 80036d2:	617b      	str	r3, [r7, #20]
 80036d4:	697b      	ldr	r3, [r7, #20]
 80036d6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80036d8:	6a39      	ldr	r1, [r7, #32]
 80036da:	68f8      	ldr	r0, [r7, #12]
 80036dc:	f000 fa46 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 80036e0:	4603      	mov	r3, r0
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d00d      	beq.n	8003702 <I2C_RequestMemoryWrite+0xc6>
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036ea:	2b04      	cmp	r3, #4
 80036ec:	d107      	bne.n	80036fe <I2C_RequestMemoryWrite+0xc2>
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	681a      	ldr	r2, [r3, #0]
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80036fc:	601a      	str	r2, [r3, #0]
 80036fe:	2301      	movs	r3, #1
 8003700:	e02b      	b.n	800375a <I2C_RequestMemoryWrite+0x11e>
 8003702:	88fb      	ldrh	r3, [r7, #6]
 8003704:	2b01      	cmp	r3, #1
 8003706:	d105      	bne.n	8003714 <I2C_RequestMemoryWrite+0xd8>
 8003708:	893b      	ldrh	r3, [r7, #8]
 800370a:	b2da      	uxtb	r2, r3
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	611a      	str	r2, [r3, #16]
 8003712:	e021      	b.n	8003758 <I2C_RequestMemoryWrite+0x11c>
 8003714:	893b      	ldrh	r3, [r7, #8]
 8003716:	0a1b      	lsrs	r3, r3, #8
 8003718:	b29b      	uxth	r3, r3
 800371a:	b2da      	uxtb	r2, r3
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	681b      	ldr	r3, [r3, #0]
 8003720:	611a      	str	r2, [r3, #16]
 8003722:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003724:	6a39      	ldr	r1, [r7, #32]
 8003726:	68f8      	ldr	r0, [r7, #12]
 8003728:	f000 fa20 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 800372c:	4603      	mov	r3, r0
 800372e:	2b00      	cmp	r3, #0
 8003730:	d00d      	beq.n	800374e <I2C_RequestMemoryWrite+0x112>
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003736:	2b04      	cmp	r3, #4
 8003738:	d107      	bne.n	800374a <I2C_RequestMemoryWrite+0x10e>
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	681a      	ldr	r2, [r3, #0]
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003748:	601a      	str	r2, [r3, #0]
 800374a:	2301      	movs	r3, #1
 800374c:	e005      	b.n	800375a <I2C_RequestMemoryWrite+0x11e>
 800374e:	893b      	ldrh	r3, [r7, #8]
 8003750:	b2da      	uxtb	r2, r3
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	611a      	str	r2, [r3, #16]
 8003758:	2300      	movs	r3, #0
 800375a:	4618      	mov	r0, r3
 800375c:	3718      	adds	r7, #24
 800375e:	46bd      	mov	sp, r7
 8003760:	bd80      	pop	{r7, pc}
 8003762:	bf00      	nop
 8003764:	00010002 	.word	0x00010002

08003768 <I2C_RequestMemoryRead>:
 8003768:	b580      	push	{r7, lr}
 800376a:	b088      	sub	sp, #32
 800376c:	af02      	add	r7, sp, #8
 800376e:	60f8      	str	r0, [r7, #12]
 8003770:	4608      	mov	r0, r1
 8003772:	4611      	mov	r1, r2
 8003774:	461a      	mov	r2, r3
 8003776:	4603      	mov	r3, r0
 8003778:	817b      	strh	r3, [r7, #10]
 800377a:	460b      	mov	r3, r1
 800377c:	813b      	strh	r3, [r7, #8]
 800377e:	4613      	mov	r3, r2
 8003780:	80fb      	strh	r3, [r7, #6]
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	681a      	ldr	r2, [r3, #0]
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003790:	601a      	str	r2, [r3, #0]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	681a      	ldr	r2, [r3, #0]
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80037a0:	601a      	str	r2, [r3, #0]
 80037a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037a4:	9300      	str	r3, [sp, #0]
 80037a6:	6a3b      	ldr	r3, [r7, #32]
 80037a8:	2200      	movs	r2, #0
 80037aa:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80037ae:	68f8      	ldr	r0, [r7, #12]
 80037b0:	f000 f8c2 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 80037b4:	4603      	mov	r3, r0
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d00d      	beq.n	80037d6 <I2C_RequestMemoryRead+0x6e>
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80037c4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80037c8:	d103      	bne.n	80037d2 <I2C_RequestMemoryRead+0x6a>
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80037d0:	641a      	str	r2, [r3, #64]	@ 0x40
 80037d2:	2303      	movs	r3, #3
 80037d4:	e0aa      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 80037d6:	897b      	ldrh	r3, [r7, #10]
 80037d8:	b2db      	uxtb	r3, r3
 80037da:	461a      	mov	r2, r3
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80037e4:	611a      	str	r2, [r3, #16]
 80037e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037e8:	6a3a      	ldr	r2, [r7, #32]
 80037ea:	4952      	ldr	r1, [pc, #328]	@ (8003934 <I2C_RequestMemoryRead+0x1cc>)
 80037ec:	68f8      	ldr	r0, [r7, #12]
 80037ee:	f000 f91d 	bl	8003a2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80037f2:	4603      	mov	r3, r0
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d001      	beq.n	80037fc <I2C_RequestMemoryRead+0x94>
 80037f8:	2301      	movs	r3, #1
 80037fa:	e097      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 80037fc:	2300      	movs	r3, #0
 80037fe:	617b      	str	r3, [r7, #20]
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	695b      	ldr	r3, [r3, #20]
 8003806:	617b      	str	r3, [r7, #20]
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	699b      	ldr	r3, [r3, #24]
 800380e:	617b      	str	r3, [r7, #20]
 8003810:	697b      	ldr	r3, [r7, #20]
 8003812:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003814:	6a39      	ldr	r1, [r7, #32]
 8003816:	68f8      	ldr	r0, [r7, #12]
 8003818:	f000 f9a8 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 800381c:	4603      	mov	r3, r0
 800381e:	2b00      	cmp	r3, #0
 8003820:	d00d      	beq.n	800383e <I2C_RequestMemoryRead+0xd6>
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003826:	2b04      	cmp	r3, #4
 8003828:	d107      	bne.n	800383a <I2C_RequestMemoryRead+0xd2>
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	681a      	ldr	r2, [r3, #0]
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003838:	601a      	str	r2, [r3, #0]
 800383a:	2301      	movs	r3, #1
 800383c:	e076      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 800383e:	88fb      	ldrh	r3, [r7, #6]
 8003840:	2b01      	cmp	r3, #1
 8003842:	d105      	bne.n	8003850 <I2C_RequestMemoryRead+0xe8>
 8003844:	893b      	ldrh	r3, [r7, #8]
 8003846:	b2da      	uxtb	r2, r3
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	611a      	str	r2, [r3, #16]
 800384e:	e021      	b.n	8003894 <I2C_RequestMemoryRead+0x12c>
 8003850:	893b      	ldrh	r3, [r7, #8]
 8003852:	0a1b      	lsrs	r3, r3, #8
 8003854:	b29b      	uxth	r3, r3
 8003856:	b2da      	uxtb	r2, r3
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	611a      	str	r2, [r3, #16]
 800385e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003860:	6a39      	ldr	r1, [r7, #32]
 8003862:	68f8      	ldr	r0, [r7, #12]
 8003864:	f000 f982 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003868:	4603      	mov	r3, r0
 800386a:	2b00      	cmp	r3, #0
 800386c:	d00d      	beq.n	800388a <I2C_RequestMemoryRead+0x122>
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003872:	2b04      	cmp	r3, #4
 8003874:	d107      	bne.n	8003886 <I2C_RequestMemoryRead+0x11e>
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	681a      	ldr	r2, [r3, #0]
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003884:	601a      	str	r2, [r3, #0]
 8003886:	2301      	movs	r3, #1
 8003888:	e050      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 800388a:	893b      	ldrh	r3, [r7, #8]
 800388c:	b2da      	uxtb	r2, r3
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	611a      	str	r2, [r3, #16]
 8003894:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003896:	6a39      	ldr	r1, [r7, #32]
 8003898:	68f8      	ldr	r0, [r7, #12]
 800389a:	f000 f967 	bl	8003b6c <I2C_WaitOnTXEFlagUntilTimeout>
 800389e:	4603      	mov	r3, r0
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	d00d      	beq.n	80038c0 <I2C_RequestMemoryRead+0x158>
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038a8:	2b04      	cmp	r3, #4
 80038aa:	d107      	bne.n	80038bc <I2C_RequestMemoryRead+0x154>
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	681a      	ldr	r2, [r3, #0]
 80038b2:	68fb      	ldr	r3, [r7, #12]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038ba:	601a      	str	r2, [r3, #0]
 80038bc:	2301      	movs	r3, #1
 80038be:	e035      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	681a      	ldr	r2, [r3, #0]
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80038ce:	601a      	str	r2, [r3, #0]
 80038d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038d2:	9300      	str	r3, [sp, #0]
 80038d4:	6a3b      	ldr	r3, [r7, #32]
 80038d6:	2200      	movs	r2, #0
 80038d8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80038dc:	68f8      	ldr	r0, [r7, #12]
 80038de:	f000 f82b 	bl	8003938 <I2C_WaitOnFlagUntilTimeout>
 80038e2:	4603      	mov	r3, r0
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	d00d      	beq.n	8003904 <I2C_RequestMemoryRead+0x19c>
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80038f2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80038f6:	d103      	bne.n	8003900 <I2C_RequestMemoryRead+0x198>
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038fe:	641a      	str	r2, [r3, #64]	@ 0x40
 8003900:	2303      	movs	r3, #3
 8003902:	e013      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 8003904:	897b      	ldrh	r3, [r7, #10]
 8003906:	b2db      	uxtb	r3, r3
 8003908:	f043 0301 	orr.w	r3, r3, #1
 800390c:	b2da      	uxtb	r2, r3
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	611a      	str	r2, [r3, #16]
 8003914:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003916:	6a3a      	ldr	r2, [r7, #32]
 8003918:	4906      	ldr	r1, [pc, #24]	@ (8003934 <I2C_RequestMemoryRead+0x1cc>)
 800391a:	68f8      	ldr	r0, [r7, #12]
 800391c:	f000 f886 	bl	8003a2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003920:	4603      	mov	r3, r0
 8003922:	2b00      	cmp	r3, #0
 8003924:	d001      	beq.n	800392a <I2C_RequestMemoryRead+0x1c2>
 8003926:	2301      	movs	r3, #1
 8003928:	e000      	b.n	800392c <I2C_RequestMemoryRead+0x1c4>
 800392a:	2300      	movs	r3, #0
 800392c:	4618      	mov	r0, r3
 800392e:	3718      	adds	r7, #24
 8003930:	46bd      	mov	sp, r7
 8003932:	bd80      	pop	{r7, pc}
 8003934:	00010002 	.word	0x00010002

08003938 <I2C_WaitOnFlagUntilTimeout>:
 8003938:	b580      	push	{r7, lr}
 800393a:	b084      	sub	sp, #16
 800393c:	af00      	add	r7, sp, #0
 800393e:	60f8      	str	r0, [r7, #12]
 8003940:	60b9      	str	r1, [r7, #8]
 8003942:	603b      	str	r3, [r7, #0]
 8003944:	4613      	mov	r3, r2
 8003946:	71fb      	strb	r3, [r7, #7]
 8003948:	e048      	b.n	80039dc <I2C_WaitOnFlagUntilTimeout+0xa4>
 800394a:	683b      	ldr	r3, [r7, #0]
 800394c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003950:	d044      	beq.n	80039dc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003952:	f7fe f9f3 	bl	8001d3c <HAL_GetTick>
 8003956:	4602      	mov	r2, r0
 8003958:	69bb      	ldr	r3, [r7, #24]
 800395a:	1ad3      	subs	r3, r2, r3
 800395c:	683a      	ldr	r2, [r7, #0]
 800395e:	429a      	cmp	r2, r3
 8003960:	d302      	bcc.n	8003968 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003962:	683b      	ldr	r3, [r7, #0]
 8003964:	2b00      	cmp	r3, #0
 8003966:	d139      	bne.n	80039dc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003968:	68bb      	ldr	r3, [r7, #8]
 800396a:	0c1b      	lsrs	r3, r3, #16
 800396c:	b2db      	uxtb	r3, r3
 800396e:	2b01      	cmp	r3, #1
 8003970:	d10d      	bne.n	800398e <I2C_WaitOnFlagUntilTimeout+0x56>
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	695b      	ldr	r3, [r3, #20]
 8003978:	43da      	mvns	r2, r3
 800397a:	68bb      	ldr	r3, [r7, #8]
 800397c:	4013      	ands	r3, r2
 800397e:	b29b      	uxth	r3, r3
 8003980:	2b00      	cmp	r3, #0
 8003982:	bf0c      	ite	eq
 8003984:	2301      	moveq	r3, #1
 8003986:	2300      	movne	r3, #0
 8003988:	b2db      	uxtb	r3, r3
 800398a:	461a      	mov	r2, r3
 800398c:	e00c      	b.n	80039a8 <I2C_WaitOnFlagUntilTimeout+0x70>
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	699b      	ldr	r3, [r3, #24]
 8003994:	43da      	mvns	r2, r3
 8003996:	68bb      	ldr	r3, [r7, #8]
 8003998:	4013      	ands	r3, r2
 800399a:	b29b      	uxth	r3, r3
 800399c:	2b00      	cmp	r3, #0
 800399e:	bf0c      	ite	eq
 80039a0:	2301      	moveq	r3, #1
 80039a2:	2300      	movne	r3, #0
 80039a4:	b2db      	uxtb	r3, r3
 80039a6:	461a      	mov	r2, r3
 80039a8:	79fb      	ldrb	r3, [r7, #7]
 80039aa:	429a      	cmp	r2, r3
 80039ac:	d116      	bne.n	80039dc <I2C_WaitOnFlagUntilTimeout+0xa4>
 80039ae:	68fb      	ldr	r3, [r7, #12]
 80039b0:	2200      	movs	r2, #0
 80039b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	2220      	movs	r2, #32
 80039b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	2200      	movs	r2, #0
 80039c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039c8:	f043 0220 	orr.w	r2, r3, #32
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	2200      	movs	r2, #0
 80039d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039d8:	2301      	movs	r3, #1
 80039da:	e023      	b.n	8003a24 <I2C_WaitOnFlagUntilTimeout+0xec>
 80039dc:	68bb      	ldr	r3, [r7, #8]
 80039de:	0c1b      	lsrs	r3, r3, #16
 80039e0:	b2db      	uxtb	r3, r3
 80039e2:	2b01      	cmp	r3, #1
 80039e4:	d10d      	bne.n	8003a02 <I2C_WaitOnFlagUntilTimeout+0xca>
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	695b      	ldr	r3, [r3, #20]
 80039ec:	43da      	mvns	r2, r3
 80039ee:	68bb      	ldr	r3, [r7, #8]
 80039f0:	4013      	ands	r3, r2
 80039f2:	b29b      	uxth	r3, r3
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	bf0c      	ite	eq
 80039f8:	2301      	moveq	r3, #1
 80039fa:	2300      	movne	r3, #0
 80039fc:	b2db      	uxtb	r3, r3
 80039fe:	461a      	mov	r2, r3
 8003a00:	e00c      	b.n	8003a1c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	699b      	ldr	r3, [r3, #24]
 8003a08:	43da      	mvns	r2, r3
 8003a0a:	68bb      	ldr	r3, [r7, #8]
 8003a0c:	4013      	ands	r3, r2
 8003a0e:	b29b      	uxth	r3, r3
 8003a10:	2b00      	cmp	r3, #0
 8003a12:	bf0c      	ite	eq
 8003a14:	2301      	moveq	r3, #1
 8003a16:	2300      	movne	r3, #0
 8003a18:	b2db      	uxtb	r3, r3
 8003a1a:	461a      	mov	r2, r3
 8003a1c:	79fb      	ldrb	r3, [r7, #7]
 8003a1e:	429a      	cmp	r2, r3
 8003a20:	d093      	beq.n	800394a <I2C_WaitOnFlagUntilTimeout+0x12>
 8003a22:	2300      	movs	r3, #0
 8003a24:	4618      	mov	r0, r3
 8003a26:	3710      	adds	r7, #16
 8003a28:	46bd      	mov	sp, r7
 8003a2a:	bd80      	pop	{r7, pc}

08003a2c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003a2c:	b580      	push	{r7, lr}
 8003a2e:	b084      	sub	sp, #16
 8003a30:	af00      	add	r7, sp, #0
 8003a32:	60f8      	str	r0, [r7, #12]
 8003a34:	60b9      	str	r1, [r7, #8]
 8003a36:	607a      	str	r2, [r7, #4]
 8003a38:	603b      	str	r3, [r7, #0]
 8003a3a:	e071      	b.n	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	695b      	ldr	r3, [r3, #20]
 8003a42:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003a46:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003a4a:	d123      	bne.n	8003a94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	681a      	ldr	r2, [r3, #0]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a5a:	601a      	str	r2, [r3, #0]
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003a64:	615a      	str	r2, [r3, #20]
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	2200      	movs	r2, #0
 8003a6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	2220      	movs	r2, #32
 8003a70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a74:	68fb      	ldr	r3, [r7, #12]
 8003a76:	2200      	movs	r2, #0
 8003a78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a80:	f043 0204 	orr.w	r2, r3, #4
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	2200      	movs	r2, #0
 8003a8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a90:	2301      	movs	r3, #1
 8003a92:	e067      	b.n	8003b64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a9a:	d041      	beq.n	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003a9c:	f7fe f94e 	bl	8001d3c <HAL_GetTick>
 8003aa0:	4602      	mov	r2, r0
 8003aa2:	683b      	ldr	r3, [r7, #0]
 8003aa4:	1ad3      	subs	r3, r2, r3
 8003aa6:	687a      	ldr	r2, [r7, #4]
 8003aa8:	429a      	cmp	r2, r3
 8003aaa:	d302      	bcc.n	8003ab2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d136      	bne.n	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003ab2:	68bb      	ldr	r3, [r7, #8]
 8003ab4:	0c1b      	lsrs	r3, r3, #16
 8003ab6:	b2db      	uxtb	r3, r3
 8003ab8:	2b01      	cmp	r3, #1
 8003aba:	d10c      	bne.n	8003ad6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	695b      	ldr	r3, [r3, #20]
 8003ac2:	43da      	mvns	r2, r3
 8003ac4:	68bb      	ldr	r3, [r7, #8]
 8003ac6:	4013      	ands	r3, r2
 8003ac8:	b29b      	uxth	r3, r3
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	bf14      	ite	ne
 8003ace:	2301      	movne	r3, #1
 8003ad0:	2300      	moveq	r3, #0
 8003ad2:	b2db      	uxtb	r3, r3
 8003ad4:	e00b      	b.n	8003aee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003ad6:	68fb      	ldr	r3, [r7, #12]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	699b      	ldr	r3, [r3, #24]
 8003adc:	43da      	mvns	r2, r3
 8003ade:	68bb      	ldr	r3, [r7, #8]
 8003ae0:	4013      	ands	r3, r2
 8003ae2:	b29b      	uxth	r3, r3
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	bf14      	ite	ne
 8003ae8:	2301      	movne	r3, #1
 8003aea:	2300      	moveq	r3, #0
 8003aec:	b2db      	uxtb	r3, r3
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d016      	beq.n	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	2200      	movs	r2, #0
 8003af6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	2220      	movs	r2, #32
 8003afc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2200      	movs	r2, #0
 8003b04:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b0c:	f043 0220 	orr.w	r2, r3, #32
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	2200      	movs	r2, #0
 8003b18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b1c:	2301      	movs	r3, #1
 8003b1e:	e021      	b.n	8003b64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003b20:	68bb      	ldr	r3, [r7, #8]
 8003b22:	0c1b      	lsrs	r3, r3, #16
 8003b24:	b2db      	uxtb	r3, r3
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	d10c      	bne.n	8003b44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	695b      	ldr	r3, [r3, #20]
 8003b30:	43da      	mvns	r2, r3
 8003b32:	68bb      	ldr	r3, [r7, #8]
 8003b34:	4013      	ands	r3, r2
 8003b36:	b29b      	uxth	r3, r3
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	bf14      	ite	ne
 8003b3c:	2301      	movne	r3, #1
 8003b3e:	2300      	moveq	r3, #0
 8003b40:	b2db      	uxtb	r3, r3
 8003b42:	e00b      	b.n	8003b5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	699b      	ldr	r3, [r3, #24]
 8003b4a:	43da      	mvns	r2, r3
 8003b4c:	68bb      	ldr	r3, [r7, #8]
 8003b4e:	4013      	ands	r3, r2
 8003b50:	b29b      	uxth	r3, r3
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	bf14      	ite	ne
 8003b56:	2301      	movne	r3, #1
 8003b58:	2300      	moveq	r3, #0
 8003b5a:	b2db      	uxtb	r3, r3
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	f47f af6d 	bne.w	8003a3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003b62:	2300      	movs	r3, #0
 8003b64:	4618      	mov	r0, r3
 8003b66:	3710      	adds	r7, #16
 8003b68:	46bd      	mov	sp, r7
 8003b6a:	bd80      	pop	{r7, pc}

08003b6c <I2C_WaitOnTXEFlagUntilTimeout>:
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b084      	sub	sp, #16
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	60f8      	str	r0, [r7, #12]
 8003b74:	60b9      	str	r1, [r7, #8]
 8003b76:	607a      	str	r2, [r7, #4]
 8003b78:	e034      	b.n	8003be4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003b7a:	68f8      	ldr	r0, [r7, #12]
 8003b7c:	f000 f8e3 	bl	8003d46 <I2C_IsAcknowledgeFailed>
 8003b80:	4603      	mov	r3, r0
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d001      	beq.n	8003b8a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003b86:	2301      	movs	r3, #1
 8003b88:	e034      	b.n	8003bf4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003b8a:	68bb      	ldr	r3, [r7, #8]
 8003b8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b90:	d028      	beq.n	8003be4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003b92:	f7fe f8d3 	bl	8001d3c <HAL_GetTick>
 8003b96:	4602      	mov	r2, r0
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	1ad3      	subs	r3, r2, r3
 8003b9c:	68ba      	ldr	r2, [r7, #8]
 8003b9e:	429a      	cmp	r2, r3
 8003ba0:	d302      	bcc.n	8003ba8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003ba2:	68bb      	ldr	r3, [r7, #8]
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d11d      	bne.n	8003be4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	695b      	ldr	r3, [r3, #20]
 8003bae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003bb2:	2b80      	cmp	r3, #128	@ 0x80
 8003bb4:	d016      	beq.n	8003be4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	2200      	movs	r2, #0
 8003bba:	631a      	str	r2, [r3, #48]	@ 0x30
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	2220      	movs	r2, #32
 8003bc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bd0:	f043 0220 	orr.w	r2, r3, #32
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	641a      	str	r2, [r3, #64]	@ 0x40
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	2200      	movs	r2, #0
 8003bdc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003be0:	2301      	movs	r3, #1
 8003be2:	e007      	b.n	8003bf4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003be4:	68fb      	ldr	r3, [r7, #12]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	695b      	ldr	r3, [r3, #20]
 8003bea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003bee:	2b80      	cmp	r3, #128	@ 0x80
 8003bf0:	d1c3      	bne.n	8003b7a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003bf2:	2300      	movs	r3, #0
 8003bf4:	4618      	mov	r0, r3
 8003bf6:	3710      	adds	r7, #16
 8003bf8:	46bd      	mov	sp, r7
 8003bfa:	bd80      	pop	{r7, pc}

08003bfc <I2C_WaitOnBTFFlagUntilTimeout>:
 8003bfc:	b580      	push	{r7, lr}
 8003bfe:	b084      	sub	sp, #16
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	60f8      	str	r0, [r7, #12]
 8003c04:	60b9      	str	r1, [r7, #8]
 8003c06:	607a      	str	r2, [r7, #4]
 8003c08:	e034      	b.n	8003c74 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003c0a:	68f8      	ldr	r0, [r7, #12]
 8003c0c:	f000 f89b 	bl	8003d46 <I2C_IsAcknowledgeFailed>
 8003c10:	4603      	mov	r3, r0
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d001      	beq.n	8003c1a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003c16:	2301      	movs	r3, #1
 8003c18:	e034      	b.n	8003c84 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003c1a:	68bb      	ldr	r3, [r7, #8]
 8003c1c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c20:	d028      	beq.n	8003c74 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003c22:	f7fe f88b 	bl	8001d3c <HAL_GetTick>
 8003c26:	4602      	mov	r2, r0
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	1ad3      	subs	r3, r2, r3
 8003c2c:	68ba      	ldr	r2, [r7, #8]
 8003c2e:	429a      	cmp	r2, r3
 8003c30:	d302      	bcc.n	8003c38 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003c32:	68bb      	ldr	r3, [r7, #8]
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	d11d      	bne.n	8003c74 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	695b      	ldr	r3, [r3, #20]
 8003c3e:	f003 0304 	and.w	r3, r3, #4
 8003c42:	2b04      	cmp	r3, #4
 8003c44:	d016      	beq.n	8003c74 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	2200      	movs	r2, #0
 8003c4a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	2220      	movs	r2, #32
 8003c50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	2200      	movs	r2, #0
 8003c58:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c60:	f043 0220 	orr.w	r2, r3, #32
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	2200      	movs	r2, #0
 8003c6c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c70:	2301      	movs	r3, #1
 8003c72:	e007      	b.n	8003c84 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	695b      	ldr	r3, [r3, #20]
 8003c7a:	f003 0304 	and.w	r3, r3, #4
 8003c7e:	2b04      	cmp	r3, #4
 8003c80:	d1c3      	bne.n	8003c0a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003c82:	2300      	movs	r3, #0
 8003c84:	4618      	mov	r0, r3
 8003c86:	3710      	adds	r7, #16
 8003c88:	46bd      	mov	sp, r7
 8003c8a:	bd80      	pop	{r7, pc}

08003c8c <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b084      	sub	sp, #16
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	60f8      	str	r0, [r7, #12]
 8003c94:	60b9      	str	r1, [r7, #8]
 8003c96:	607a      	str	r2, [r7, #4]
 8003c98:	e049      	b.n	8003d2e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	695b      	ldr	r3, [r3, #20]
 8003ca0:	f003 0310 	and.w	r3, r3, #16
 8003ca4:	2b10      	cmp	r3, #16
 8003ca6:	d119      	bne.n	8003cdc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	f06f 0210 	mvn.w	r2, #16
 8003cb0:	615a      	str	r2, [r3, #20]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	2220      	movs	r2, #32
 8003cbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	2200      	movs	r2, #0
 8003cc4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003ccc:	68fb      	ldr	r3, [r7, #12]
 8003cce:	641a      	str	r2, [r3, #64]	@ 0x40
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003cd8:	2301      	movs	r3, #1
 8003cda:	e030      	b.n	8003d3e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003cdc:	f7fe f82e 	bl	8001d3c <HAL_GetTick>
 8003ce0:	4602      	mov	r2, r0
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	1ad3      	subs	r3, r2, r3
 8003ce6:	68ba      	ldr	r2, [r7, #8]
 8003ce8:	429a      	cmp	r2, r3
 8003cea:	d302      	bcc.n	8003cf2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003cec:	68bb      	ldr	r3, [r7, #8]
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d11d      	bne.n	8003d2e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	695b      	ldr	r3, [r3, #20]
 8003cf8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003cfc:	2b40      	cmp	r3, #64	@ 0x40
 8003cfe:	d016      	beq.n	8003d2e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003d00:	68fb      	ldr	r3, [r7, #12]
 8003d02:	2200      	movs	r2, #0
 8003d04:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	2220      	movs	r2, #32
 8003d0a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d0e:	68fb      	ldr	r3, [r7, #12]
 8003d10:	2200      	movs	r2, #0
 8003d12:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d1a:	f043 0220 	orr.w	r2, r3, #32
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	2200      	movs	r2, #0
 8003d26:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d2a:	2301      	movs	r3, #1
 8003d2c:	e007      	b.n	8003d3e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003d2e:	68fb      	ldr	r3, [r7, #12]
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	695b      	ldr	r3, [r3, #20]
 8003d34:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003d38:	2b40      	cmp	r3, #64	@ 0x40
 8003d3a:	d1ae      	bne.n	8003c9a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	4618      	mov	r0, r3
 8003d40:	3710      	adds	r7, #16
 8003d42:	46bd      	mov	sp, r7
 8003d44:	bd80      	pop	{r7, pc}

08003d46 <I2C_IsAcknowledgeFailed>:
 8003d46:	b480      	push	{r7}
 8003d48:	b083      	sub	sp, #12
 8003d4a:	af00      	add	r7, sp, #0
 8003d4c:	6078      	str	r0, [r7, #4]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	695b      	ldr	r3, [r3, #20]
 8003d54:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003d58:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003d5c:	d11b      	bne.n	8003d96 <I2C_IsAcknowledgeFailed+0x50>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003d66:	615a      	str	r2, [r3, #20]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	2200      	movs	r2, #0
 8003d6c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	2220      	movs	r2, #32
 8003d72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	2200      	movs	r2, #0
 8003d7a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d82:	f043 0204 	orr.w	r2, r3, #4
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d92:	2301      	movs	r3, #1
 8003d94:	e000      	b.n	8003d98 <I2C_IsAcknowledgeFailed+0x52>
 8003d96:	2300      	movs	r3, #0
 8003d98:	4618      	mov	r0, r3
 8003d9a:	370c      	adds	r7, #12
 8003d9c:	46bd      	mov	sp, r7
 8003d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da2:	4770      	bx	lr

08003da4 <HAL_RCC_OscConfig>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	b086      	sub	sp, #24
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	6078      	str	r0, [r7, #4]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d101      	bne.n	8003db6 <HAL_RCC_OscConfig+0x12>
 8003db2:	2301      	movs	r3, #1
 8003db4:	e267      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	f003 0301 	and.w	r3, r3, #1
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d075      	beq.n	8003eae <HAL_RCC_OscConfig+0x10a>
 8003dc2:	4b88      	ldr	r3, [pc, #544]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003dc4:	689b      	ldr	r3, [r3, #8]
 8003dc6:	f003 030c 	and.w	r3, r3, #12
 8003dca:	2b04      	cmp	r3, #4
 8003dcc:	d00c      	beq.n	8003de8 <HAL_RCC_OscConfig+0x44>
 8003dce:	4b85      	ldr	r3, [pc, #532]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003dd0:	689b      	ldr	r3, [r3, #8]
 8003dd2:	f003 030c 	and.w	r3, r3, #12
 8003dd6:	2b08      	cmp	r3, #8
 8003dd8:	d112      	bne.n	8003e00 <HAL_RCC_OscConfig+0x5c>
 8003dda:	4b82      	ldr	r3, [pc, #520]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ddc:	685b      	ldr	r3, [r3, #4]
 8003dde:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003de2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003de6:	d10b      	bne.n	8003e00 <HAL_RCC_OscConfig+0x5c>
 8003de8:	4b7e      	ldr	r3, [pc, #504]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d05b      	beq.n	8003eac <HAL_RCC_OscConfig+0x108>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	685b      	ldr	r3, [r3, #4]
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d157      	bne.n	8003eac <HAL_RCC_OscConfig+0x108>
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	e242      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	685b      	ldr	r3, [r3, #4]
 8003e04:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003e08:	d106      	bne.n	8003e18 <HAL_RCC_OscConfig+0x74>
 8003e0a:	4b76      	ldr	r3, [pc, #472]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	4a75      	ldr	r2, [pc, #468]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e10:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003e14:	6013      	str	r3, [r2, #0]
 8003e16:	e01d      	b.n	8003e54 <HAL_RCC_OscConfig+0xb0>
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	685b      	ldr	r3, [r3, #4]
 8003e1c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003e20:	d10c      	bne.n	8003e3c <HAL_RCC_OscConfig+0x98>
 8003e22:	4b70      	ldr	r3, [pc, #448]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	4a6f      	ldr	r2, [pc, #444]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e28:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003e2c:	6013      	str	r3, [r2, #0]
 8003e2e:	4b6d      	ldr	r3, [pc, #436]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	4a6c      	ldr	r2, [pc, #432]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e34:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003e38:	6013      	str	r3, [r2, #0]
 8003e3a:	e00b      	b.n	8003e54 <HAL_RCC_OscConfig+0xb0>
 8003e3c:	4b69      	ldr	r3, [pc, #420]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	4a68      	ldr	r2, [pc, #416]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e42:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003e46:	6013      	str	r3, [r2, #0]
 8003e48:	4b66      	ldr	r3, [pc, #408]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	4a65      	ldr	r2, [pc, #404]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e4e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003e52:	6013      	str	r3, [r2, #0]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	685b      	ldr	r3, [r3, #4]
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	d013      	beq.n	8003e84 <HAL_RCC_OscConfig+0xe0>
 8003e5c:	f7fd ff6e 	bl	8001d3c <HAL_GetTick>
 8003e60:	6138      	str	r0, [r7, #16]
 8003e62:	e008      	b.n	8003e76 <HAL_RCC_OscConfig+0xd2>
 8003e64:	f7fd ff6a 	bl	8001d3c <HAL_GetTick>
 8003e68:	4602      	mov	r2, r0
 8003e6a:	693b      	ldr	r3, [r7, #16]
 8003e6c:	1ad3      	subs	r3, r2, r3
 8003e6e:	2b64      	cmp	r3, #100	@ 0x64
 8003e70:	d901      	bls.n	8003e76 <HAL_RCC_OscConfig+0xd2>
 8003e72:	2303      	movs	r3, #3
 8003e74:	e207      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003e76:	4b5b      	ldr	r3, [pc, #364]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d0f0      	beq.n	8003e64 <HAL_RCC_OscConfig+0xc0>
 8003e82:	e014      	b.n	8003eae <HAL_RCC_OscConfig+0x10a>
 8003e84:	f7fd ff5a 	bl	8001d3c <HAL_GetTick>
 8003e88:	6138      	str	r0, [r7, #16]
 8003e8a:	e008      	b.n	8003e9e <HAL_RCC_OscConfig+0xfa>
 8003e8c:	f7fd ff56 	bl	8001d3c <HAL_GetTick>
 8003e90:	4602      	mov	r2, r0
 8003e92:	693b      	ldr	r3, [r7, #16]
 8003e94:	1ad3      	subs	r3, r2, r3
 8003e96:	2b64      	cmp	r3, #100	@ 0x64
 8003e98:	d901      	bls.n	8003e9e <HAL_RCC_OscConfig+0xfa>
 8003e9a:	2303      	movs	r3, #3
 8003e9c:	e1f3      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003e9e:	4b51      	ldr	r3, [pc, #324]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d1f0      	bne.n	8003e8c <HAL_RCC_OscConfig+0xe8>
 8003eaa:	e000      	b.n	8003eae <HAL_RCC_OscConfig+0x10a>
 8003eac:	bf00      	nop
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	f003 0302 	and.w	r3, r3, #2
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	d063      	beq.n	8003f82 <HAL_RCC_OscConfig+0x1de>
 8003eba:	4b4a      	ldr	r3, [pc, #296]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ebc:	689b      	ldr	r3, [r3, #8]
 8003ebe:	f003 030c 	and.w	r3, r3, #12
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d00b      	beq.n	8003ede <HAL_RCC_OscConfig+0x13a>
 8003ec6:	4b47      	ldr	r3, [pc, #284]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ec8:	689b      	ldr	r3, [r3, #8]
 8003eca:	f003 030c 	and.w	r3, r3, #12
 8003ece:	2b08      	cmp	r3, #8
 8003ed0:	d11c      	bne.n	8003f0c <HAL_RCC_OscConfig+0x168>
 8003ed2:	4b44      	ldr	r3, [pc, #272]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ed4:	685b      	ldr	r3, [r3, #4]
 8003ed6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d116      	bne.n	8003f0c <HAL_RCC_OscConfig+0x168>
 8003ede:	4b41      	ldr	r3, [pc, #260]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	f003 0302 	and.w	r3, r3, #2
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d005      	beq.n	8003ef6 <HAL_RCC_OscConfig+0x152>
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	68db      	ldr	r3, [r3, #12]
 8003eee:	2b01      	cmp	r3, #1
 8003ef0:	d001      	beq.n	8003ef6 <HAL_RCC_OscConfig+0x152>
 8003ef2:	2301      	movs	r3, #1
 8003ef4:	e1c7      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003ef6:	4b3b      	ldr	r3, [pc, #236]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	691b      	ldr	r3, [r3, #16]
 8003f02:	00db      	lsls	r3, r3, #3
 8003f04:	4937      	ldr	r1, [pc, #220]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003f06:	4313      	orrs	r3, r2
 8003f08:	600b      	str	r3, [r1, #0]
 8003f0a:	e03a      	b.n	8003f82 <HAL_RCC_OscConfig+0x1de>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	68db      	ldr	r3, [r3, #12]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d020      	beq.n	8003f56 <HAL_RCC_OscConfig+0x1b2>
 8003f14:	4b34      	ldr	r3, [pc, #208]	@ (8003fe8 <HAL_RCC_OscConfig+0x244>)
 8003f16:	2201      	movs	r2, #1
 8003f18:	601a      	str	r2, [r3, #0]
 8003f1a:	f7fd ff0f 	bl	8001d3c <HAL_GetTick>
 8003f1e:	6138      	str	r0, [r7, #16]
 8003f20:	e008      	b.n	8003f34 <HAL_RCC_OscConfig+0x190>
 8003f22:	f7fd ff0b 	bl	8001d3c <HAL_GetTick>
 8003f26:	4602      	mov	r2, r0
 8003f28:	693b      	ldr	r3, [r7, #16]
 8003f2a:	1ad3      	subs	r3, r2, r3
 8003f2c:	2b02      	cmp	r3, #2
 8003f2e:	d901      	bls.n	8003f34 <HAL_RCC_OscConfig+0x190>
 8003f30:	2303      	movs	r3, #3
 8003f32:	e1a8      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003f34:	4b2b      	ldr	r3, [pc, #172]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	f003 0302 	and.w	r3, r3, #2
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d0f0      	beq.n	8003f22 <HAL_RCC_OscConfig+0x17e>
 8003f40:	4b28      	ldr	r3, [pc, #160]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	691b      	ldr	r3, [r3, #16]
 8003f4c:	00db      	lsls	r3, r3, #3
 8003f4e:	4925      	ldr	r1, [pc, #148]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003f50:	4313      	orrs	r3, r2
 8003f52:	600b      	str	r3, [r1, #0]
 8003f54:	e015      	b.n	8003f82 <HAL_RCC_OscConfig+0x1de>
 8003f56:	4b24      	ldr	r3, [pc, #144]	@ (8003fe8 <HAL_RCC_OscConfig+0x244>)
 8003f58:	2200      	movs	r2, #0
 8003f5a:	601a      	str	r2, [r3, #0]
 8003f5c:	f7fd feee 	bl	8001d3c <HAL_GetTick>
 8003f60:	6138      	str	r0, [r7, #16]
 8003f62:	e008      	b.n	8003f76 <HAL_RCC_OscConfig+0x1d2>
 8003f64:	f7fd feea 	bl	8001d3c <HAL_GetTick>
 8003f68:	4602      	mov	r2, r0
 8003f6a:	693b      	ldr	r3, [r7, #16]
 8003f6c:	1ad3      	subs	r3, r2, r3
 8003f6e:	2b02      	cmp	r3, #2
 8003f70:	d901      	bls.n	8003f76 <HAL_RCC_OscConfig+0x1d2>
 8003f72:	2303      	movs	r3, #3
 8003f74:	e187      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003f76:	4b1b      	ldr	r3, [pc, #108]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	f003 0302 	and.w	r3, r3, #2
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d1f0      	bne.n	8003f64 <HAL_RCC_OscConfig+0x1c0>
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	f003 0308 	and.w	r3, r3, #8
 8003f8a:	2b00      	cmp	r3, #0
 8003f8c:	d036      	beq.n	8003ffc <HAL_RCC_OscConfig+0x258>
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	695b      	ldr	r3, [r3, #20]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d016      	beq.n	8003fc4 <HAL_RCC_OscConfig+0x220>
 8003f96:	4b15      	ldr	r3, [pc, #84]	@ (8003fec <HAL_RCC_OscConfig+0x248>)
 8003f98:	2201      	movs	r2, #1
 8003f9a:	601a      	str	r2, [r3, #0]
 8003f9c:	f7fd fece 	bl	8001d3c <HAL_GetTick>
 8003fa0:	6138      	str	r0, [r7, #16]
 8003fa2:	e008      	b.n	8003fb6 <HAL_RCC_OscConfig+0x212>
 8003fa4:	f7fd feca 	bl	8001d3c <HAL_GetTick>
 8003fa8:	4602      	mov	r2, r0
 8003faa:	693b      	ldr	r3, [r7, #16]
 8003fac:	1ad3      	subs	r3, r2, r3
 8003fae:	2b02      	cmp	r3, #2
 8003fb0:	d901      	bls.n	8003fb6 <HAL_RCC_OscConfig+0x212>
 8003fb2:	2303      	movs	r3, #3
 8003fb4:	e167      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003fb6:	4b0b      	ldr	r3, [pc, #44]	@ (8003fe4 <HAL_RCC_OscConfig+0x240>)
 8003fb8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003fba:	f003 0302 	and.w	r3, r3, #2
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d0f0      	beq.n	8003fa4 <HAL_RCC_OscConfig+0x200>
 8003fc2:	e01b      	b.n	8003ffc <HAL_RCC_OscConfig+0x258>
 8003fc4:	4b09      	ldr	r3, [pc, #36]	@ (8003fec <HAL_RCC_OscConfig+0x248>)
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	601a      	str	r2, [r3, #0]
 8003fca:	f7fd feb7 	bl	8001d3c <HAL_GetTick>
 8003fce:	6138      	str	r0, [r7, #16]
 8003fd0:	e00e      	b.n	8003ff0 <HAL_RCC_OscConfig+0x24c>
 8003fd2:	f7fd feb3 	bl	8001d3c <HAL_GetTick>
 8003fd6:	4602      	mov	r2, r0
 8003fd8:	693b      	ldr	r3, [r7, #16]
 8003fda:	1ad3      	subs	r3, r2, r3
 8003fdc:	2b02      	cmp	r3, #2
 8003fde:	d907      	bls.n	8003ff0 <HAL_RCC_OscConfig+0x24c>
 8003fe0:	2303      	movs	r3, #3
 8003fe2:	e150      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8003fe4:	40023800 	.word	0x40023800
 8003fe8:	42470000 	.word	0x42470000
 8003fec:	42470e80 	.word	0x42470e80
 8003ff0:	4b88      	ldr	r3, [pc, #544]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8003ff2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003ff4:	f003 0302 	and.w	r3, r3, #2
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d1ea      	bne.n	8003fd2 <HAL_RCC_OscConfig+0x22e>
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	f003 0304 	and.w	r3, r3, #4
 8004004:	2b00      	cmp	r3, #0
 8004006:	f000 8097 	beq.w	8004138 <HAL_RCC_OscConfig+0x394>
 800400a:	2300      	movs	r3, #0
 800400c:	75fb      	strb	r3, [r7, #23]
 800400e:	4b81      	ldr	r3, [pc, #516]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004010:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004012:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004016:	2b00      	cmp	r3, #0
 8004018:	d10f      	bne.n	800403a <HAL_RCC_OscConfig+0x296>
 800401a:	2300      	movs	r3, #0
 800401c:	60bb      	str	r3, [r7, #8]
 800401e:	4b7d      	ldr	r3, [pc, #500]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004020:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004022:	4a7c      	ldr	r2, [pc, #496]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004024:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004028:	6413      	str	r3, [r2, #64]	@ 0x40
 800402a:	4b7a      	ldr	r3, [pc, #488]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 800402c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800402e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004032:	60bb      	str	r3, [r7, #8]
 8004034:	68bb      	ldr	r3, [r7, #8]
 8004036:	2301      	movs	r3, #1
 8004038:	75fb      	strb	r3, [r7, #23]
 800403a:	4b77      	ldr	r3, [pc, #476]	@ (8004218 <HAL_RCC_OscConfig+0x474>)
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004042:	2b00      	cmp	r3, #0
 8004044:	d118      	bne.n	8004078 <HAL_RCC_OscConfig+0x2d4>
 8004046:	4b74      	ldr	r3, [pc, #464]	@ (8004218 <HAL_RCC_OscConfig+0x474>)
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	4a73      	ldr	r2, [pc, #460]	@ (8004218 <HAL_RCC_OscConfig+0x474>)
 800404c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004050:	6013      	str	r3, [r2, #0]
 8004052:	f7fd fe73 	bl	8001d3c <HAL_GetTick>
 8004056:	6138      	str	r0, [r7, #16]
 8004058:	e008      	b.n	800406c <HAL_RCC_OscConfig+0x2c8>
 800405a:	f7fd fe6f 	bl	8001d3c <HAL_GetTick>
 800405e:	4602      	mov	r2, r0
 8004060:	693b      	ldr	r3, [r7, #16]
 8004062:	1ad3      	subs	r3, r2, r3
 8004064:	2b02      	cmp	r3, #2
 8004066:	d901      	bls.n	800406c <HAL_RCC_OscConfig+0x2c8>
 8004068:	2303      	movs	r3, #3
 800406a:	e10c      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 800406c:	4b6a      	ldr	r3, [pc, #424]	@ (8004218 <HAL_RCC_OscConfig+0x474>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004074:	2b00      	cmp	r3, #0
 8004076:	d0f0      	beq.n	800405a <HAL_RCC_OscConfig+0x2b6>
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	689b      	ldr	r3, [r3, #8]
 800407c:	2b01      	cmp	r3, #1
 800407e:	d106      	bne.n	800408e <HAL_RCC_OscConfig+0x2ea>
 8004080:	4b64      	ldr	r3, [pc, #400]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004082:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004084:	4a63      	ldr	r2, [pc, #396]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004086:	f043 0301 	orr.w	r3, r3, #1
 800408a:	6713      	str	r3, [r2, #112]	@ 0x70
 800408c:	e01c      	b.n	80040c8 <HAL_RCC_OscConfig+0x324>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	689b      	ldr	r3, [r3, #8]
 8004092:	2b05      	cmp	r3, #5
 8004094:	d10c      	bne.n	80040b0 <HAL_RCC_OscConfig+0x30c>
 8004096:	4b5f      	ldr	r3, [pc, #380]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004098:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800409a:	4a5e      	ldr	r2, [pc, #376]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 800409c:	f043 0304 	orr.w	r3, r3, #4
 80040a0:	6713      	str	r3, [r2, #112]	@ 0x70
 80040a2:	4b5c      	ldr	r3, [pc, #368]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80040a6:	4a5b      	ldr	r2, [pc, #364]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040a8:	f043 0301 	orr.w	r3, r3, #1
 80040ac:	6713      	str	r3, [r2, #112]	@ 0x70
 80040ae:	e00b      	b.n	80040c8 <HAL_RCC_OscConfig+0x324>
 80040b0:	4b58      	ldr	r3, [pc, #352]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040b2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80040b4:	4a57      	ldr	r2, [pc, #348]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040b6:	f023 0301 	bic.w	r3, r3, #1
 80040ba:	6713      	str	r3, [r2, #112]	@ 0x70
 80040bc:	4b55      	ldr	r3, [pc, #340]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040be:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80040c0:	4a54      	ldr	r2, [pc, #336]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040c2:	f023 0304 	bic.w	r3, r3, #4
 80040c6:	6713      	str	r3, [r2, #112]	@ 0x70
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	689b      	ldr	r3, [r3, #8]
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	d015      	beq.n	80040fc <HAL_RCC_OscConfig+0x358>
 80040d0:	f7fd fe34 	bl	8001d3c <HAL_GetTick>
 80040d4:	6138      	str	r0, [r7, #16]
 80040d6:	e00a      	b.n	80040ee <HAL_RCC_OscConfig+0x34a>
 80040d8:	f7fd fe30 	bl	8001d3c <HAL_GetTick>
 80040dc:	4602      	mov	r2, r0
 80040de:	693b      	ldr	r3, [r7, #16]
 80040e0:	1ad3      	subs	r3, r2, r3
 80040e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80040e6:	4293      	cmp	r3, r2
 80040e8:	d901      	bls.n	80040ee <HAL_RCC_OscConfig+0x34a>
 80040ea:	2303      	movs	r3, #3
 80040ec:	e0cb      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 80040ee:	4b49      	ldr	r3, [pc, #292]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80040f0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80040f2:	f003 0302 	and.w	r3, r3, #2
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	d0ee      	beq.n	80040d8 <HAL_RCC_OscConfig+0x334>
 80040fa:	e014      	b.n	8004126 <HAL_RCC_OscConfig+0x382>
 80040fc:	f7fd fe1e 	bl	8001d3c <HAL_GetTick>
 8004100:	6138      	str	r0, [r7, #16]
 8004102:	e00a      	b.n	800411a <HAL_RCC_OscConfig+0x376>
 8004104:	f7fd fe1a 	bl	8001d3c <HAL_GetTick>
 8004108:	4602      	mov	r2, r0
 800410a:	693b      	ldr	r3, [r7, #16]
 800410c:	1ad3      	subs	r3, r2, r3
 800410e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004112:	4293      	cmp	r3, r2
 8004114:	d901      	bls.n	800411a <HAL_RCC_OscConfig+0x376>
 8004116:	2303      	movs	r3, #3
 8004118:	e0b5      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 800411a:	4b3e      	ldr	r3, [pc, #248]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 800411c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800411e:	f003 0302 	and.w	r3, r3, #2
 8004122:	2b00      	cmp	r3, #0
 8004124:	d1ee      	bne.n	8004104 <HAL_RCC_OscConfig+0x360>
 8004126:	7dfb      	ldrb	r3, [r7, #23]
 8004128:	2b01      	cmp	r3, #1
 800412a:	d105      	bne.n	8004138 <HAL_RCC_OscConfig+0x394>
 800412c:	4b39      	ldr	r3, [pc, #228]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 800412e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004130:	4a38      	ldr	r2, [pc, #224]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004132:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004136:	6413      	str	r3, [r2, #64]	@ 0x40
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	699b      	ldr	r3, [r3, #24]
 800413c:	2b00      	cmp	r3, #0
 800413e:	f000 80a1 	beq.w	8004284 <HAL_RCC_OscConfig+0x4e0>
 8004142:	4b34      	ldr	r3, [pc, #208]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004144:	689b      	ldr	r3, [r3, #8]
 8004146:	f003 030c 	and.w	r3, r3, #12
 800414a:	2b08      	cmp	r3, #8
 800414c:	d05c      	beq.n	8004208 <HAL_RCC_OscConfig+0x464>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	699b      	ldr	r3, [r3, #24]
 8004152:	2b02      	cmp	r3, #2
 8004154:	d141      	bne.n	80041da <HAL_RCC_OscConfig+0x436>
 8004156:	4b31      	ldr	r3, [pc, #196]	@ (800421c <HAL_RCC_OscConfig+0x478>)
 8004158:	2200      	movs	r2, #0
 800415a:	601a      	str	r2, [r3, #0]
 800415c:	f7fd fdee 	bl	8001d3c <HAL_GetTick>
 8004160:	6138      	str	r0, [r7, #16]
 8004162:	e008      	b.n	8004176 <HAL_RCC_OscConfig+0x3d2>
 8004164:	f7fd fdea 	bl	8001d3c <HAL_GetTick>
 8004168:	4602      	mov	r2, r0
 800416a:	693b      	ldr	r3, [r7, #16]
 800416c:	1ad3      	subs	r3, r2, r3
 800416e:	2b02      	cmp	r3, #2
 8004170:	d901      	bls.n	8004176 <HAL_RCC_OscConfig+0x3d2>
 8004172:	2303      	movs	r3, #3
 8004174:	e087      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8004176:	4b27      	ldr	r3, [pc, #156]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800417e:	2b00      	cmp	r3, #0
 8004180:	d1f0      	bne.n	8004164 <HAL_RCC_OscConfig+0x3c0>
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	69da      	ldr	r2, [r3, #28]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	6a1b      	ldr	r3, [r3, #32]
 800418a:	431a      	orrs	r2, r3
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004190:	019b      	lsls	r3, r3, #6
 8004192:	431a      	orrs	r2, r3
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004198:	085b      	lsrs	r3, r3, #1
 800419a:	3b01      	subs	r3, #1
 800419c:	041b      	lsls	r3, r3, #16
 800419e:	431a      	orrs	r2, r3
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80041a4:	061b      	lsls	r3, r3, #24
 80041a6:	491b      	ldr	r1, [pc, #108]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80041a8:	4313      	orrs	r3, r2
 80041aa:	604b      	str	r3, [r1, #4]
 80041ac:	4b1b      	ldr	r3, [pc, #108]	@ (800421c <HAL_RCC_OscConfig+0x478>)
 80041ae:	2201      	movs	r2, #1
 80041b0:	601a      	str	r2, [r3, #0]
 80041b2:	f7fd fdc3 	bl	8001d3c <HAL_GetTick>
 80041b6:	6138      	str	r0, [r7, #16]
 80041b8:	e008      	b.n	80041cc <HAL_RCC_OscConfig+0x428>
 80041ba:	f7fd fdbf 	bl	8001d3c <HAL_GetTick>
 80041be:	4602      	mov	r2, r0
 80041c0:	693b      	ldr	r3, [r7, #16]
 80041c2:	1ad3      	subs	r3, r2, r3
 80041c4:	2b02      	cmp	r3, #2
 80041c6:	d901      	bls.n	80041cc <HAL_RCC_OscConfig+0x428>
 80041c8:	2303      	movs	r3, #3
 80041ca:	e05c      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 80041cc:	4b11      	ldr	r3, [pc, #68]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d0f0      	beq.n	80041ba <HAL_RCC_OscConfig+0x416>
 80041d8:	e054      	b.n	8004284 <HAL_RCC_OscConfig+0x4e0>
 80041da:	4b10      	ldr	r3, [pc, #64]	@ (800421c <HAL_RCC_OscConfig+0x478>)
 80041dc:	2200      	movs	r2, #0
 80041de:	601a      	str	r2, [r3, #0]
 80041e0:	f7fd fdac 	bl	8001d3c <HAL_GetTick>
 80041e4:	6138      	str	r0, [r7, #16]
 80041e6:	e008      	b.n	80041fa <HAL_RCC_OscConfig+0x456>
 80041e8:	f7fd fda8 	bl	8001d3c <HAL_GetTick>
 80041ec:	4602      	mov	r2, r0
 80041ee:	693b      	ldr	r3, [r7, #16]
 80041f0:	1ad3      	subs	r3, r2, r3
 80041f2:	2b02      	cmp	r3, #2
 80041f4:	d901      	bls.n	80041fa <HAL_RCC_OscConfig+0x456>
 80041f6:	2303      	movs	r3, #3
 80041f8:	e045      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 80041fa:	4b06      	ldr	r3, [pc, #24]	@ (8004214 <HAL_RCC_OscConfig+0x470>)
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004202:	2b00      	cmp	r3, #0
 8004204:	d1f0      	bne.n	80041e8 <HAL_RCC_OscConfig+0x444>
 8004206:	e03d      	b.n	8004284 <HAL_RCC_OscConfig+0x4e0>
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	699b      	ldr	r3, [r3, #24]
 800420c:	2b01      	cmp	r3, #1
 800420e:	d107      	bne.n	8004220 <HAL_RCC_OscConfig+0x47c>
 8004210:	2301      	movs	r3, #1
 8004212:	e038      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8004214:	40023800 	.word	0x40023800
 8004218:	40007000 	.word	0x40007000
 800421c:	42470060 	.word	0x42470060
 8004220:	4b1b      	ldr	r3, [pc, #108]	@ (8004290 <HAL_RCC_OscConfig+0x4ec>)
 8004222:	685b      	ldr	r3, [r3, #4]
 8004224:	60fb      	str	r3, [r7, #12]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	699b      	ldr	r3, [r3, #24]
 800422a:	2b01      	cmp	r3, #1
 800422c:	d028      	beq.n	8004280 <HAL_RCC_OscConfig+0x4dc>
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	69db      	ldr	r3, [r3, #28]
 8004238:	429a      	cmp	r2, r3
 800423a:	d121      	bne.n	8004280 <HAL_RCC_OscConfig+0x4dc>
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	6a1b      	ldr	r3, [r3, #32]
 8004246:	429a      	cmp	r2, r3
 8004248:	d11a      	bne.n	8004280 <HAL_RCC_OscConfig+0x4dc>
 800424a:	68fa      	ldr	r2, [r7, #12]
 800424c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004250:	4013      	ands	r3, r2
 8004252:	687a      	ldr	r2, [r7, #4]
 8004254:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004256:	0192      	lsls	r2, r2, #6
 8004258:	4293      	cmp	r3, r2
 800425a:	d111      	bne.n	8004280 <HAL_RCC_OscConfig+0x4dc>
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004266:	085b      	lsrs	r3, r3, #1
 8004268:	3b01      	subs	r3, #1
 800426a:	041b      	lsls	r3, r3, #16
 800426c:	429a      	cmp	r2, r3
 800426e:	d107      	bne.n	8004280 <HAL_RCC_OscConfig+0x4dc>
 8004270:	68fb      	ldr	r3, [r7, #12]
 8004272:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800427a:	061b      	lsls	r3, r3, #24
 800427c:	429a      	cmp	r2, r3
 800427e:	d001      	beq.n	8004284 <HAL_RCC_OscConfig+0x4e0>
 8004280:	2301      	movs	r3, #1
 8004282:	e000      	b.n	8004286 <HAL_RCC_OscConfig+0x4e2>
 8004284:	2300      	movs	r3, #0
 8004286:	4618      	mov	r0, r3
 8004288:	3718      	adds	r7, #24
 800428a:	46bd      	mov	sp, r7
 800428c:	bd80      	pop	{r7, pc}
 800428e:	bf00      	nop
 8004290:	40023800 	.word	0x40023800

08004294 <HAL_RCC_ClockConfig>:
 8004294:	b580      	push	{r7, lr}
 8004296:	b084      	sub	sp, #16
 8004298:	af00      	add	r7, sp, #0
 800429a:	6078      	str	r0, [r7, #4]
 800429c:	6039      	str	r1, [r7, #0]
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d101      	bne.n	80042a8 <HAL_RCC_ClockConfig+0x14>
 80042a4:	2301      	movs	r3, #1
 80042a6:	e0cc      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 80042a8:	4b68      	ldr	r3, [pc, #416]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f003 0307 	and.w	r3, r3, #7
 80042b0:	683a      	ldr	r2, [r7, #0]
 80042b2:	429a      	cmp	r2, r3
 80042b4:	d90c      	bls.n	80042d0 <HAL_RCC_ClockConfig+0x3c>
 80042b6:	4b65      	ldr	r3, [pc, #404]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80042b8:	683a      	ldr	r2, [r7, #0]
 80042ba:	b2d2      	uxtb	r2, r2
 80042bc:	701a      	strb	r2, [r3, #0]
 80042be:	4b63      	ldr	r3, [pc, #396]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	f003 0307 	and.w	r3, r3, #7
 80042c6:	683a      	ldr	r2, [r7, #0]
 80042c8:	429a      	cmp	r2, r3
 80042ca:	d001      	beq.n	80042d0 <HAL_RCC_ClockConfig+0x3c>
 80042cc:	2301      	movs	r3, #1
 80042ce:	e0b8      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	f003 0302 	and.w	r3, r3, #2
 80042d8:	2b00      	cmp	r3, #0
 80042da:	d020      	beq.n	800431e <HAL_RCC_ClockConfig+0x8a>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	f003 0304 	and.w	r3, r3, #4
 80042e4:	2b00      	cmp	r3, #0
 80042e6:	d005      	beq.n	80042f4 <HAL_RCC_ClockConfig+0x60>
 80042e8:	4b59      	ldr	r3, [pc, #356]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 80042ea:	689b      	ldr	r3, [r3, #8]
 80042ec:	4a58      	ldr	r2, [pc, #352]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 80042ee:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80042f2:	6093      	str	r3, [r2, #8]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	f003 0308 	and.w	r3, r3, #8
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d005      	beq.n	800430c <HAL_RCC_ClockConfig+0x78>
 8004300:	4b53      	ldr	r3, [pc, #332]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004302:	689b      	ldr	r3, [r3, #8]
 8004304:	4a52      	ldr	r2, [pc, #328]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004306:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800430a:	6093      	str	r3, [r2, #8]
 800430c:	4b50      	ldr	r3, [pc, #320]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 800430e:	689b      	ldr	r3, [r3, #8]
 8004310:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	689b      	ldr	r3, [r3, #8]
 8004318:	494d      	ldr	r1, [pc, #308]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 800431a:	4313      	orrs	r3, r2
 800431c:	608b      	str	r3, [r1, #8]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f003 0301 	and.w	r3, r3, #1
 8004326:	2b00      	cmp	r3, #0
 8004328:	d044      	beq.n	80043b4 <HAL_RCC_ClockConfig+0x120>
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	685b      	ldr	r3, [r3, #4]
 800432e:	2b01      	cmp	r3, #1
 8004330:	d107      	bne.n	8004342 <HAL_RCC_ClockConfig+0xae>
 8004332:	4b47      	ldr	r3, [pc, #284]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800433a:	2b00      	cmp	r3, #0
 800433c:	d119      	bne.n	8004372 <HAL_RCC_ClockConfig+0xde>
 800433e:	2301      	movs	r3, #1
 8004340:	e07f      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	685b      	ldr	r3, [r3, #4]
 8004346:	2b02      	cmp	r3, #2
 8004348:	d003      	beq.n	8004352 <HAL_RCC_ClockConfig+0xbe>
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	685b      	ldr	r3, [r3, #4]
 800434e:	2b03      	cmp	r3, #3
 8004350:	d107      	bne.n	8004362 <HAL_RCC_ClockConfig+0xce>
 8004352:	4b3f      	ldr	r3, [pc, #252]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800435a:	2b00      	cmp	r3, #0
 800435c:	d109      	bne.n	8004372 <HAL_RCC_ClockConfig+0xde>
 800435e:	2301      	movs	r3, #1
 8004360:	e06f      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 8004362:	4b3b      	ldr	r3, [pc, #236]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	f003 0302 	and.w	r3, r3, #2
 800436a:	2b00      	cmp	r3, #0
 800436c:	d101      	bne.n	8004372 <HAL_RCC_ClockConfig+0xde>
 800436e:	2301      	movs	r3, #1
 8004370:	e067      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 8004372:	4b37      	ldr	r3, [pc, #220]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004374:	689b      	ldr	r3, [r3, #8]
 8004376:	f023 0203 	bic.w	r2, r3, #3
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	685b      	ldr	r3, [r3, #4]
 800437e:	4934      	ldr	r1, [pc, #208]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004380:	4313      	orrs	r3, r2
 8004382:	608b      	str	r3, [r1, #8]
 8004384:	f7fd fcda 	bl	8001d3c <HAL_GetTick>
 8004388:	60f8      	str	r0, [r7, #12]
 800438a:	e00a      	b.n	80043a2 <HAL_RCC_ClockConfig+0x10e>
 800438c:	f7fd fcd6 	bl	8001d3c <HAL_GetTick>
 8004390:	4602      	mov	r2, r0
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	1ad3      	subs	r3, r2, r3
 8004396:	f241 3288 	movw	r2, #5000	@ 0x1388
 800439a:	4293      	cmp	r3, r2
 800439c:	d901      	bls.n	80043a2 <HAL_RCC_ClockConfig+0x10e>
 800439e:	2303      	movs	r3, #3
 80043a0:	e04f      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 80043a2:	4b2b      	ldr	r3, [pc, #172]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 80043a4:	689b      	ldr	r3, [r3, #8]
 80043a6:	f003 020c 	and.w	r2, r3, #12
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	685b      	ldr	r3, [r3, #4]
 80043ae:	009b      	lsls	r3, r3, #2
 80043b0:	429a      	cmp	r2, r3
 80043b2:	d1eb      	bne.n	800438c <HAL_RCC_ClockConfig+0xf8>
 80043b4:	4b25      	ldr	r3, [pc, #148]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	f003 0307 	and.w	r3, r3, #7
 80043bc:	683a      	ldr	r2, [r7, #0]
 80043be:	429a      	cmp	r2, r3
 80043c0:	d20c      	bcs.n	80043dc <HAL_RCC_ClockConfig+0x148>
 80043c2:	4b22      	ldr	r3, [pc, #136]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80043c4:	683a      	ldr	r2, [r7, #0]
 80043c6:	b2d2      	uxtb	r2, r2
 80043c8:	701a      	strb	r2, [r3, #0]
 80043ca:	4b20      	ldr	r3, [pc, #128]	@ (800444c <HAL_RCC_ClockConfig+0x1b8>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	f003 0307 	and.w	r3, r3, #7
 80043d2:	683a      	ldr	r2, [r7, #0]
 80043d4:	429a      	cmp	r2, r3
 80043d6:	d001      	beq.n	80043dc <HAL_RCC_ClockConfig+0x148>
 80043d8:	2301      	movs	r3, #1
 80043da:	e032      	b.n	8004442 <HAL_RCC_ClockConfig+0x1ae>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	f003 0304 	and.w	r3, r3, #4
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d008      	beq.n	80043fa <HAL_RCC_ClockConfig+0x166>
 80043e8:	4b19      	ldr	r3, [pc, #100]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 80043ea:	689b      	ldr	r3, [r3, #8]
 80043ec:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	68db      	ldr	r3, [r3, #12]
 80043f4:	4916      	ldr	r1, [pc, #88]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 80043f6:	4313      	orrs	r3, r2
 80043f8:	608b      	str	r3, [r1, #8]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	f003 0308 	and.w	r3, r3, #8
 8004402:	2b00      	cmp	r3, #0
 8004404:	d009      	beq.n	800441a <HAL_RCC_ClockConfig+0x186>
 8004406:	4b12      	ldr	r3, [pc, #72]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004408:	689b      	ldr	r3, [r3, #8]
 800440a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	691b      	ldr	r3, [r3, #16]
 8004412:	00db      	lsls	r3, r3, #3
 8004414:	490e      	ldr	r1, [pc, #56]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004416:	4313      	orrs	r3, r2
 8004418:	608b      	str	r3, [r1, #8]
 800441a:	f000 f821 	bl	8004460 <HAL_RCC_GetSysClockFreq>
 800441e:	4602      	mov	r2, r0
 8004420:	4b0b      	ldr	r3, [pc, #44]	@ (8004450 <HAL_RCC_ClockConfig+0x1bc>)
 8004422:	689b      	ldr	r3, [r3, #8]
 8004424:	091b      	lsrs	r3, r3, #4
 8004426:	f003 030f 	and.w	r3, r3, #15
 800442a:	490a      	ldr	r1, [pc, #40]	@ (8004454 <HAL_RCC_ClockConfig+0x1c0>)
 800442c:	5ccb      	ldrb	r3, [r1, r3]
 800442e:	fa22 f303 	lsr.w	r3, r2, r3
 8004432:	4a09      	ldr	r2, [pc, #36]	@ (8004458 <HAL_RCC_ClockConfig+0x1c4>)
 8004434:	6013      	str	r3, [r2, #0]
 8004436:	4b09      	ldr	r3, [pc, #36]	@ (800445c <HAL_RCC_ClockConfig+0x1c8>)
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	4618      	mov	r0, r3
 800443c:	f7fd fc3a 	bl	8001cb4 <HAL_InitTick>
 8004440:	2300      	movs	r3, #0
 8004442:	4618      	mov	r0, r3
 8004444:	3710      	adds	r7, #16
 8004446:	46bd      	mov	sp, r7
 8004448:	bd80      	pop	{r7, pc}
 800444a:	bf00      	nop
 800444c:	40023c00 	.word	0x40023c00
 8004450:	40023800 	.word	0x40023800
 8004454:	0800784c 	.word	0x0800784c
 8004458:	20000024 	.word	0x20000024
 800445c:	20000028 	.word	0x20000028

08004460 <HAL_RCC_GetSysClockFreq>:
 8004460:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004464:	b090      	sub	sp, #64	@ 0x40
 8004466:	af00      	add	r7, sp, #0
 8004468:	2300      	movs	r3, #0
 800446a:	637b      	str	r3, [r7, #52]	@ 0x34
 800446c:	2300      	movs	r3, #0
 800446e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004470:	2300      	movs	r3, #0
 8004472:	633b      	str	r3, [r7, #48]	@ 0x30
 8004474:	2300      	movs	r3, #0
 8004476:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004478:	4b59      	ldr	r3, [pc, #356]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 800447a:	689b      	ldr	r3, [r3, #8]
 800447c:	f003 030c 	and.w	r3, r3, #12
 8004480:	2b08      	cmp	r3, #8
 8004482:	d00d      	beq.n	80044a0 <HAL_RCC_GetSysClockFreq+0x40>
 8004484:	2b08      	cmp	r3, #8
 8004486:	f200 80a1 	bhi.w	80045cc <HAL_RCC_GetSysClockFreq+0x16c>
 800448a:	2b00      	cmp	r3, #0
 800448c:	d002      	beq.n	8004494 <HAL_RCC_GetSysClockFreq+0x34>
 800448e:	2b04      	cmp	r3, #4
 8004490:	d003      	beq.n	800449a <HAL_RCC_GetSysClockFreq+0x3a>
 8004492:	e09b      	b.n	80045cc <HAL_RCC_GetSysClockFreq+0x16c>
 8004494:	4b53      	ldr	r3, [pc, #332]	@ (80045e4 <HAL_RCC_GetSysClockFreq+0x184>)
 8004496:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004498:	e09b      	b.n	80045d2 <HAL_RCC_GetSysClockFreq+0x172>
 800449a:	4b53      	ldr	r3, [pc, #332]	@ (80045e8 <HAL_RCC_GetSysClockFreq+0x188>)
 800449c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800449e:	e098      	b.n	80045d2 <HAL_RCC_GetSysClockFreq+0x172>
 80044a0:	4b4f      	ldr	r3, [pc, #316]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 80044a2:	685b      	ldr	r3, [r3, #4]
 80044a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80044a8:	637b      	str	r3, [r7, #52]	@ 0x34
 80044aa:	4b4d      	ldr	r3, [pc, #308]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 80044ac:	685b      	ldr	r3, [r3, #4]
 80044ae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d028      	beq.n	8004508 <HAL_RCC_GetSysClockFreq+0xa8>
 80044b6:	4b4a      	ldr	r3, [pc, #296]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 80044b8:	685b      	ldr	r3, [r3, #4]
 80044ba:	099b      	lsrs	r3, r3, #6
 80044bc:	2200      	movs	r2, #0
 80044be:	623b      	str	r3, [r7, #32]
 80044c0:	627a      	str	r2, [r7, #36]	@ 0x24
 80044c2:	6a3b      	ldr	r3, [r7, #32]
 80044c4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80044c8:	2100      	movs	r1, #0
 80044ca:	4b47      	ldr	r3, [pc, #284]	@ (80045e8 <HAL_RCC_GetSysClockFreq+0x188>)
 80044cc:	fb03 f201 	mul.w	r2, r3, r1
 80044d0:	2300      	movs	r3, #0
 80044d2:	fb00 f303 	mul.w	r3, r0, r3
 80044d6:	4413      	add	r3, r2
 80044d8:	4a43      	ldr	r2, [pc, #268]	@ (80045e8 <HAL_RCC_GetSysClockFreq+0x188>)
 80044da:	fba0 1202 	umull	r1, r2, r0, r2
 80044de:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80044e0:	460a      	mov	r2, r1
 80044e2:	62ba      	str	r2, [r7, #40]	@ 0x28
 80044e4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80044e6:	4413      	add	r3, r2
 80044e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80044ea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80044ec:	2200      	movs	r2, #0
 80044ee:	61bb      	str	r3, [r7, #24]
 80044f0:	61fa      	str	r2, [r7, #28]
 80044f2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80044f6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80044fa:	f7fb fec9 	bl	8000290 <__aeabi_uldivmod>
 80044fe:	4602      	mov	r2, r0
 8004500:	460b      	mov	r3, r1
 8004502:	4613      	mov	r3, r2
 8004504:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004506:	e053      	b.n	80045b0 <HAL_RCC_GetSysClockFreq+0x150>
 8004508:	4b35      	ldr	r3, [pc, #212]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 800450a:	685b      	ldr	r3, [r3, #4]
 800450c:	099b      	lsrs	r3, r3, #6
 800450e:	2200      	movs	r2, #0
 8004510:	613b      	str	r3, [r7, #16]
 8004512:	617a      	str	r2, [r7, #20]
 8004514:	693b      	ldr	r3, [r7, #16]
 8004516:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800451a:	f04f 0b00 	mov.w	fp, #0
 800451e:	4652      	mov	r2, sl
 8004520:	465b      	mov	r3, fp
 8004522:	f04f 0000 	mov.w	r0, #0
 8004526:	f04f 0100 	mov.w	r1, #0
 800452a:	0159      	lsls	r1, r3, #5
 800452c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004530:	0150      	lsls	r0, r2, #5
 8004532:	4602      	mov	r2, r0
 8004534:	460b      	mov	r3, r1
 8004536:	ebb2 080a 	subs.w	r8, r2, sl
 800453a:	eb63 090b 	sbc.w	r9, r3, fp
 800453e:	f04f 0200 	mov.w	r2, #0
 8004542:	f04f 0300 	mov.w	r3, #0
 8004546:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800454a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800454e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004552:	ebb2 0408 	subs.w	r4, r2, r8
 8004556:	eb63 0509 	sbc.w	r5, r3, r9
 800455a:	f04f 0200 	mov.w	r2, #0
 800455e:	f04f 0300 	mov.w	r3, #0
 8004562:	00eb      	lsls	r3, r5, #3
 8004564:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004568:	00e2      	lsls	r2, r4, #3
 800456a:	4614      	mov	r4, r2
 800456c:	461d      	mov	r5, r3
 800456e:	eb14 030a 	adds.w	r3, r4, sl
 8004572:	603b      	str	r3, [r7, #0]
 8004574:	eb45 030b 	adc.w	r3, r5, fp
 8004578:	607b      	str	r3, [r7, #4]
 800457a:	f04f 0200 	mov.w	r2, #0
 800457e:	f04f 0300 	mov.w	r3, #0
 8004582:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004586:	4629      	mov	r1, r5
 8004588:	028b      	lsls	r3, r1, #10
 800458a:	4621      	mov	r1, r4
 800458c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004590:	4621      	mov	r1, r4
 8004592:	028a      	lsls	r2, r1, #10
 8004594:	4610      	mov	r0, r2
 8004596:	4619      	mov	r1, r3
 8004598:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800459a:	2200      	movs	r2, #0
 800459c:	60bb      	str	r3, [r7, #8]
 800459e:	60fa      	str	r2, [r7, #12]
 80045a0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80045a4:	f7fb fe74 	bl	8000290 <__aeabi_uldivmod>
 80045a8:	4602      	mov	r2, r0
 80045aa:	460b      	mov	r3, r1
 80045ac:	4613      	mov	r3, r2
 80045ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80045b0:	4b0b      	ldr	r3, [pc, #44]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0x180>)
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	0c1b      	lsrs	r3, r3, #16
 80045b6:	f003 0303 	and.w	r3, r3, #3
 80045ba:	3301      	adds	r3, #1
 80045bc:	005b      	lsls	r3, r3, #1
 80045be:	633b      	str	r3, [r7, #48]	@ 0x30
 80045c0:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80045c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045c4:	fbb2 f3f3 	udiv	r3, r2, r3
 80045c8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80045ca:	e002      	b.n	80045d2 <HAL_RCC_GetSysClockFreq+0x172>
 80045cc:	4b05      	ldr	r3, [pc, #20]	@ (80045e4 <HAL_RCC_GetSysClockFreq+0x184>)
 80045ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80045d0:	bf00      	nop
 80045d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80045d4:	4618      	mov	r0, r3
 80045d6:	3740      	adds	r7, #64	@ 0x40
 80045d8:	46bd      	mov	sp, r7
 80045da:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80045de:	bf00      	nop
 80045e0:	40023800 	.word	0x40023800
 80045e4:	00f42400 	.word	0x00f42400
 80045e8:	017d7840 	.word	0x017d7840

080045ec <HAL_RCC_GetHCLKFreq>:
 80045ec:	b480      	push	{r7}
 80045ee:	af00      	add	r7, sp, #0
 80045f0:	4b03      	ldr	r3, [pc, #12]	@ (8004600 <HAL_RCC_GetHCLKFreq+0x14>)
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	4618      	mov	r0, r3
 80045f6:	46bd      	mov	sp, r7
 80045f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045fc:	4770      	bx	lr
 80045fe:	bf00      	nop
 8004600:	20000024 	.word	0x20000024

08004604 <HAL_RCC_GetPCLK1Freq>:
 8004604:	b580      	push	{r7, lr}
 8004606:	af00      	add	r7, sp, #0
 8004608:	f7ff fff0 	bl	80045ec <HAL_RCC_GetHCLKFreq>
 800460c:	4602      	mov	r2, r0
 800460e:	4b05      	ldr	r3, [pc, #20]	@ (8004624 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004610:	689b      	ldr	r3, [r3, #8]
 8004612:	0a9b      	lsrs	r3, r3, #10
 8004614:	f003 0307 	and.w	r3, r3, #7
 8004618:	4903      	ldr	r1, [pc, #12]	@ (8004628 <HAL_RCC_GetPCLK1Freq+0x24>)
 800461a:	5ccb      	ldrb	r3, [r1, r3]
 800461c:	fa22 f303 	lsr.w	r3, r2, r3
 8004620:	4618      	mov	r0, r3
 8004622:	bd80      	pop	{r7, pc}
 8004624:	40023800 	.word	0x40023800
 8004628:	0800785c 	.word	0x0800785c

0800462c <HAL_RCC_GetPCLK2Freq>:
 800462c:	b580      	push	{r7, lr}
 800462e:	af00      	add	r7, sp, #0
 8004630:	f7ff ffdc 	bl	80045ec <HAL_RCC_GetHCLKFreq>
 8004634:	4602      	mov	r2, r0
 8004636:	4b05      	ldr	r3, [pc, #20]	@ (800464c <HAL_RCC_GetPCLK2Freq+0x20>)
 8004638:	689b      	ldr	r3, [r3, #8]
 800463a:	0b5b      	lsrs	r3, r3, #13
 800463c:	f003 0307 	and.w	r3, r3, #7
 8004640:	4903      	ldr	r1, [pc, #12]	@ (8004650 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004642:	5ccb      	ldrb	r3, [r1, r3]
 8004644:	fa22 f303 	lsr.w	r3, r2, r3
 8004648:	4618      	mov	r0, r3
 800464a:	bd80      	pop	{r7, pc}
 800464c:	40023800 	.word	0x40023800
 8004650:	0800785c 	.word	0x0800785c

08004654 <HAL_TIM_PWM_Init>:
 8004654:	b580      	push	{r7, lr}
 8004656:	b082      	sub	sp, #8
 8004658:	af00      	add	r7, sp, #0
 800465a:	6078      	str	r0, [r7, #4]
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	2b00      	cmp	r3, #0
 8004660:	d101      	bne.n	8004666 <HAL_TIM_PWM_Init+0x12>
 8004662:	2301      	movs	r3, #1
 8004664:	e041      	b.n	80046ea <HAL_TIM_PWM_Init+0x96>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800466c:	b2db      	uxtb	r3, r3
 800466e:	2b00      	cmp	r3, #0
 8004670:	d106      	bne.n	8004680 <HAL_TIM_PWM_Init+0x2c>
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	2200      	movs	r2, #0
 8004676:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800467a:	6878      	ldr	r0, [r7, #4]
 800467c:	f7fd f86e 	bl	800175c <HAL_TIM_PWM_MspInit>
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	2202      	movs	r2, #2
 8004684:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681a      	ldr	r2, [r3, #0]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	3304      	adds	r3, #4
 8004690:	4619      	mov	r1, r3
 8004692:	4610      	mov	r0, r2
 8004694:	f000 f9a0 	bl	80049d8 <TIM_Base_SetConfig>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	2201      	movs	r2, #1
 800469c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	2201      	movs	r2, #1
 80046a4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	2201      	movs	r2, #1
 80046ac:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	2201      	movs	r2, #1
 80046b4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	2201      	movs	r2, #1
 80046bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	2201      	movs	r2, #1
 80046c4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	2201      	movs	r2, #1
 80046cc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2201      	movs	r2, #1
 80046d4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	2201      	movs	r2, #1
 80046dc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	2201      	movs	r2, #1
 80046e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046e8:	2300      	movs	r3, #0
 80046ea:	4618      	mov	r0, r3
 80046ec:	3708      	adds	r7, #8
 80046ee:	46bd      	mov	sp, r7
 80046f0:	bd80      	pop	{r7, pc}
	...

080046f4 <HAL_TIM_PWM_Start>:
 80046f4:	b580      	push	{r7, lr}
 80046f6:	b084      	sub	sp, #16
 80046f8:	af00      	add	r7, sp, #0
 80046fa:	6078      	str	r0, [r7, #4]
 80046fc:	6039      	str	r1, [r7, #0]
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	2b00      	cmp	r3, #0
 8004702:	d109      	bne.n	8004718 <HAL_TIM_PWM_Start+0x24>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800470a:	b2db      	uxtb	r3, r3
 800470c:	2b01      	cmp	r3, #1
 800470e:	bf14      	ite	ne
 8004710:	2301      	movne	r3, #1
 8004712:	2300      	moveq	r3, #0
 8004714:	b2db      	uxtb	r3, r3
 8004716:	e022      	b.n	800475e <HAL_TIM_PWM_Start+0x6a>
 8004718:	683b      	ldr	r3, [r7, #0]
 800471a:	2b04      	cmp	r3, #4
 800471c:	d109      	bne.n	8004732 <HAL_TIM_PWM_Start+0x3e>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004724:	b2db      	uxtb	r3, r3
 8004726:	2b01      	cmp	r3, #1
 8004728:	bf14      	ite	ne
 800472a:	2301      	movne	r3, #1
 800472c:	2300      	moveq	r3, #0
 800472e:	b2db      	uxtb	r3, r3
 8004730:	e015      	b.n	800475e <HAL_TIM_PWM_Start+0x6a>
 8004732:	683b      	ldr	r3, [r7, #0]
 8004734:	2b08      	cmp	r3, #8
 8004736:	d109      	bne.n	800474c <HAL_TIM_PWM_Start+0x58>
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800473e:	b2db      	uxtb	r3, r3
 8004740:	2b01      	cmp	r3, #1
 8004742:	bf14      	ite	ne
 8004744:	2301      	movne	r3, #1
 8004746:	2300      	moveq	r3, #0
 8004748:	b2db      	uxtb	r3, r3
 800474a:	e008      	b.n	800475e <HAL_TIM_PWM_Start+0x6a>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004752:	b2db      	uxtb	r3, r3
 8004754:	2b01      	cmp	r3, #1
 8004756:	bf14      	ite	ne
 8004758:	2301      	movne	r3, #1
 800475a:	2300      	moveq	r3, #0
 800475c:	b2db      	uxtb	r3, r3
 800475e:	2b00      	cmp	r3, #0
 8004760:	d001      	beq.n	8004766 <HAL_TIM_PWM_Start+0x72>
 8004762:	2301      	movs	r3, #1
 8004764:	e068      	b.n	8004838 <HAL_TIM_PWM_Start+0x144>
 8004766:	683b      	ldr	r3, [r7, #0]
 8004768:	2b00      	cmp	r3, #0
 800476a:	d104      	bne.n	8004776 <HAL_TIM_PWM_Start+0x82>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	2202      	movs	r2, #2
 8004770:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004774:	e013      	b.n	800479e <HAL_TIM_PWM_Start+0xaa>
 8004776:	683b      	ldr	r3, [r7, #0]
 8004778:	2b04      	cmp	r3, #4
 800477a:	d104      	bne.n	8004786 <HAL_TIM_PWM_Start+0x92>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2202      	movs	r2, #2
 8004780:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004784:	e00b      	b.n	800479e <HAL_TIM_PWM_Start+0xaa>
 8004786:	683b      	ldr	r3, [r7, #0]
 8004788:	2b08      	cmp	r3, #8
 800478a:	d104      	bne.n	8004796 <HAL_TIM_PWM_Start+0xa2>
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	2202      	movs	r2, #2
 8004790:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004794:	e003      	b.n	800479e <HAL_TIM_PWM_Start+0xaa>
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	2202      	movs	r2, #2
 800479a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	2201      	movs	r2, #1
 80047a4:	6839      	ldr	r1, [r7, #0]
 80047a6:	4618      	mov	r0, r3
 80047a8:	f000 fb2e 	bl	8004e08 <TIM_CCxChannelCmd>
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	4a23      	ldr	r2, [pc, #140]	@ (8004840 <HAL_TIM_PWM_Start+0x14c>)
 80047b2:	4293      	cmp	r3, r2
 80047b4:	d107      	bne.n	80047c6 <HAL_TIM_PWM_Start+0xd2>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80047c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	4a1d      	ldr	r2, [pc, #116]	@ (8004840 <HAL_TIM_PWM_Start+0x14c>)
 80047cc:	4293      	cmp	r3, r2
 80047ce:	d018      	beq.n	8004802 <HAL_TIM_PWM_Start+0x10e>
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80047d8:	d013      	beq.n	8004802 <HAL_TIM_PWM_Start+0x10e>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a19      	ldr	r2, [pc, #100]	@ (8004844 <HAL_TIM_PWM_Start+0x150>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d00e      	beq.n	8004802 <HAL_TIM_PWM_Start+0x10e>
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	4a17      	ldr	r2, [pc, #92]	@ (8004848 <HAL_TIM_PWM_Start+0x154>)
 80047ea:	4293      	cmp	r3, r2
 80047ec:	d009      	beq.n	8004802 <HAL_TIM_PWM_Start+0x10e>
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	4a16      	ldr	r2, [pc, #88]	@ (800484c <HAL_TIM_PWM_Start+0x158>)
 80047f4:	4293      	cmp	r3, r2
 80047f6:	d004      	beq.n	8004802 <HAL_TIM_PWM_Start+0x10e>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	4a14      	ldr	r2, [pc, #80]	@ (8004850 <HAL_TIM_PWM_Start+0x15c>)
 80047fe:	4293      	cmp	r3, r2
 8004800:	d111      	bne.n	8004826 <HAL_TIM_PWM_Start+0x132>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	689b      	ldr	r3, [r3, #8]
 8004808:	f003 0307 	and.w	r3, r3, #7
 800480c:	60fb      	str	r3, [r7, #12]
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	2b06      	cmp	r3, #6
 8004812:	d010      	beq.n	8004836 <HAL_TIM_PWM_Start+0x142>
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	681b      	ldr	r3, [r3, #0]
 8004818:	681a      	ldr	r2, [r3, #0]
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	f042 0201 	orr.w	r2, r2, #1
 8004822:	601a      	str	r2, [r3, #0]
 8004824:	e007      	b.n	8004836 <HAL_TIM_PWM_Start+0x142>
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	681a      	ldr	r2, [r3, #0]
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	f042 0201 	orr.w	r2, r2, #1
 8004834:	601a      	str	r2, [r3, #0]
 8004836:	2300      	movs	r3, #0
 8004838:	4618      	mov	r0, r3
 800483a:	3710      	adds	r7, #16
 800483c:	46bd      	mov	sp, r7
 800483e:	bd80      	pop	{r7, pc}
 8004840:	40010000 	.word	0x40010000
 8004844:	40000400 	.word	0x40000400
 8004848:	40000800 	.word	0x40000800
 800484c:	40000c00 	.word	0x40000c00
 8004850:	40014000 	.word	0x40014000

08004854 <HAL_TIM_PWM_ConfigChannel>:
 8004854:	b580      	push	{r7, lr}
 8004856:	b086      	sub	sp, #24
 8004858:	af00      	add	r7, sp, #0
 800485a:	60f8      	str	r0, [r7, #12]
 800485c:	60b9      	str	r1, [r7, #8]
 800485e:	607a      	str	r2, [r7, #4]
 8004860:	2300      	movs	r3, #0
 8004862:	75fb      	strb	r3, [r7, #23]
 8004864:	68fb      	ldr	r3, [r7, #12]
 8004866:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800486a:	2b01      	cmp	r3, #1
 800486c:	d101      	bne.n	8004872 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800486e:	2302      	movs	r3, #2
 8004870:	e0ae      	b.n	80049d0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	2201      	movs	r2, #1
 8004876:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	2b0c      	cmp	r3, #12
 800487e:	f200 809f 	bhi.w	80049c0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004882:	a201      	add	r2, pc, #4	@ (adr r2, 8004888 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004884:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004888:	080048bd 	.word	0x080048bd
 800488c:	080049c1 	.word	0x080049c1
 8004890:	080049c1 	.word	0x080049c1
 8004894:	080049c1 	.word	0x080049c1
 8004898:	080048fd 	.word	0x080048fd
 800489c:	080049c1 	.word	0x080049c1
 80048a0:	080049c1 	.word	0x080049c1
 80048a4:	080049c1 	.word	0x080049c1
 80048a8:	0800493f 	.word	0x0800493f
 80048ac:	080049c1 	.word	0x080049c1
 80048b0:	080049c1 	.word	0x080049c1
 80048b4:	080049c1 	.word	0x080049c1
 80048b8:	0800497f 	.word	0x0800497f
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	68b9      	ldr	r1, [r7, #8]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 f914 	bl	8004af0 <TIM_OC1_SetConfig>
 80048c8:	68fb      	ldr	r3, [r7, #12]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	699a      	ldr	r2, [r3, #24]
 80048ce:	68fb      	ldr	r3, [r7, #12]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	f042 0208 	orr.w	r2, r2, #8
 80048d6:	619a      	str	r2, [r3, #24]
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	699a      	ldr	r2, [r3, #24]
 80048de:	68fb      	ldr	r3, [r7, #12]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	f022 0204 	bic.w	r2, r2, #4
 80048e6:	619a      	str	r2, [r3, #24]
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	6999      	ldr	r1, [r3, #24]
 80048ee:	68bb      	ldr	r3, [r7, #8]
 80048f0:	691a      	ldr	r2, [r3, #16]
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	430a      	orrs	r2, r1
 80048f8:	619a      	str	r2, [r3, #24]
 80048fa:	e064      	b.n	80049c6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	68b9      	ldr	r1, [r7, #8]
 8004902:	4618      	mov	r0, r3
 8004904:	f000 f95a 	bl	8004bbc <TIM_OC2_SetConfig>
 8004908:	68fb      	ldr	r3, [r7, #12]
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	699a      	ldr	r2, [r3, #24]
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004916:	619a      	str	r2, [r3, #24]
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	699a      	ldr	r2, [r3, #24]
 800491e:	68fb      	ldr	r3, [r7, #12]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004926:	619a      	str	r2, [r3, #24]
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	6999      	ldr	r1, [r3, #24]
 800492e:	68bb      	ldr	r3, [r7, #8]
 8004930:	691b      	ldr	r3, [r3, #16]
 8004932:	021a      	lsls	r2, r3, #8
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	430a      	orrs	r2, r1
 800493a:	619a      	str	r2, [r3, #24]
 800493c:	e043      	b.n	80049c6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	68b9      	ldr	r1, [r7, #8]
 8004944:	4618      	mov	r0, r3
 8004946:	f000 f9a5 	bl	8004c94 <TIM_OC3_SetConfig>
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	69da      	ldr	r2, [r3, #28]
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f042 0208 	orr.w	r2, r2, #8
 8004958:	61da      	str	r2, [r3, #28]
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	69da      	ldr	r2, [r3, #28]
 8004960:	68fb      	ldr	r3, [r7, #12]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f022 0204 	bic.w	r2, r2, #4
 8004968:	61da      	str	r2, [r3, #28]
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	69d9      	ldr	r1, [r3, #28]
 8004970:	68bb      	ldr	r3, [r7, #8]
 8004972:	691a      	ldr	r2, [r3, #16]
 8004974:	68fb      	ldr	r3, [r7, #12]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	430a      	orrs	r2, r1
 800497a:	61da      	str	r2, [r3, #28]
 800497c:	e023      	b.n	80049c6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	68b9      	ldr	r1, [r7, #8]
 8004984:	4618      	mov	r0, r3
 8004986:	f000 f9ef 	bl	8004d68 <TIM_OC4_SetConfig>
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	69da      	ldr	r2, [r3, #28]
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004998:	61da      	str	r2, [r3, #28]
 800499a:	68fb      	ldr	r3, [r7, #12]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	69da      	ldr	r2, [r3, #28]
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80049a8:	61da      	str	r2, [r3, #28]
 80049aa:	68fb      	ldr	r3, [r7, #12]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	69d9      	ldr	r1, [r3, #28]
 80049b0:	68bb      	ldr	r3, [r7, #8]
 80049b2:	691b      	ldr	r3, [r3, #16]
 80049b4:	021a      	lsls	r2, r3, #8
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	430a      	orrs	r2, r1
 80049bc:	61da      	str	r2, [r3, #28]
 80049be:	e002      	b.n	80049c6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80049c0:	2301      	movs	r3, #1
 80049c2:	75fb      	strb	r3, [r7, #23]
 80049c4:	bf00      	nop
 80049c6:	68fb      	ldr	r3, [r7, #12]
 80049c8:	2200      	movs	r2, #0
 80049ca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80049ce:	7dfb      	ldrb	r3, [r7, #23]
 80049d0:	4618      	mov	r0, r3
 80049d2:	3718      	adds	r7, #24
 80049d4:	46bd      	mov	sp, r7
 80049d6:	bd80      	pop	{r7, pc}

080049d8 <TIM_Base_SetConfig>:
 80049d8:	b480      	push	{r7}
 80049da:	b085      	sub	sp, #20
 80049dc:	af00      	add	r7, sp, #0
 80049de:	6078      	str	r0, [r7, #4]
 80049e0:	6039      	str	r1, [r7, #0]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	60fb      	str	r3, [r7, #12]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	4a3a      	ldr	r2, [pc, #232]	@ (8004ad4 <TIM_Base_SetConfig+0xfc>)
 80049ec:	4293      	cmp	r3, r2
 80049ee:	d00f      	beq.n	8004a10 <TIM_Base_SetConfig+0x38>
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80049f6:	d00b      	beq.n	8004a10 <TIM_Base_SetConfig+0x38>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	4a37      	ldr	r2, [pc, #220]	@ (8004ad8 <TIM_Base_SetConfig+0x100>)
 80049fc:	4293      	cmp	r3, r2
 80049fe:	d007      	beq.n	8004a10 <TIM_Base_SetConfig+0x38>
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	4a36      	ldr	r2, [pc, #216]	@ (8004adc <TIM_Base_SetConfig+0x104>)
 8004a04:	4293      	cmp	r3, r2
 8004a06:	d003      	beq.n	8004a10 <TIM_Base_SetConfig+0x38>
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	4a35      	ldr	r2, [pc, #212]	@ (8004ae0 <TIM_Base_SetConfig+0x108>)
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	d108      	bne.n	8004a22 <TIM_Base_SetConfig+0x4a>
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a16:	60fb      	str	r3, [r7, #12]
 8004a18:	683b      	ldr	r3, [r7, #0]
 8004a1a:	685b      	ldr	r3, [r3, #4]
 8004a1c:	68fa      	ldr	r2, [r7, #12]
 8004a1e:	4313      	orrs	r3, r2
 8004a20:	60fb      	str	r3, [r7, #12]
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	4a2b      	ldr	r2, [pc, #172]	@ (8004ad4 <TIM_Base_SetConfig+0xfc>)
 8004a26:	4293      	cmp	r3, r2
 8004a28:	d01b      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004a30:	d017      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	4a28      	ldr	r2, [pc, #160]	@ (8004ad8 <TIM_Base_SetConfig+0x100>)
 8004a36:	4293      	cmp	r3, r2
 8004a38:	d013      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	4a27      	ldr	r2, [pc, #156]	@ (8004adc <TIM_Base_SetConfig+0x104>)
 8004a3e:	4293      	cmp	r3, r2
 8004a40:	d00f      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	4a26      	ldr	r2, [pc, #152]	@ (8004ae0 <TIM_Base_SetConfig+0x108>)
 8004a46:	4293      	cmp	r3, r2
 8004a48:	d00b      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	4a25      	ldr	r2, [pc, #148]	@ (8004ae4 <TIM_Base_SetConfig+0x10c>)
 8004a4e:	4293      	cmp	r3, r2
 8004a50:	d007      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	4a24      	ldr	r2, [pc, #144]	@ (8004ae8 <TIM_Base_SetConfig+0x110>)
 8004a56:	4293      	cmp	r3, r2
 8004a58:	d003      	beq.n	8004a62 <TIM_Base_SetConfig+0x8a>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	4a23      	ldr	r2, [pc, #140]	@ (8004aec <TIM_Base_SetConfig+0x114>)
 8004a5e:	4293      	cmp	r3, r2
 8004a60:	d108      	bne.n	8004a74 <TIM_Base_SetConfig+0x9c>
 8004a62:	68fb      	ldr	r3, [r7, #12]
 8004a64:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004a68:	60fb      	str	r3, [r7, #12]
 8004a6a:	683b      	ldr	r3, [r7, #0]
 8004a6c:	68db      	ldr	r3, [r3, #12]
 8004a6e:	68fa      	ldr	r2, [r7, #12]
 8004a70:	4313      	orrs	r3, r2
 8004a72:	60fb      	str	r3, [r7, #12]
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004a7a:	683b      	ldr	r3, [r7, #0]
 8004a7c:	695b      	ldr	r3, [r3, #20]
 8004a7e:	4313      	orrs	r3, r2
 8004a80:	60fb      	str	r3, [r7, #12]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	68fa      	ldr	r2, [r7, #12]
 8004a86:	601a      	str	r2, [r3, #0]
 8004a88:	683b      	ldr	r3, [r7, #0]
 8004a8a:	689a      	ldr	r2, [r3, #8]
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004a90:	683b      	ldr	r3, [r7, #0]
 8004a92:	681a      	ldr	r2, [r3, #0]
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	629a      	str	r2, [r3, #40]	@ 0x28
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	4a0e      	ldr	r2, [pc, #56]	@ (8004ad4 <TIM_Base_SetConfig+0xfc>)
 8004a9c:	4293      	cmp	r3, r2
 8004a9e:	d103      	bne.n	8004aa8 <TIM_Base_SetConfig+0xd0>
 8004aa0:	683b      	ldr	r3, [r7, #0]
 8004aa2:	691a      	ldr	r2, [r3, #16]
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	631a      	str	r2, [r3, #48]	@ 0x30
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	2201      	movs	r2, #1
 8004aac:	615a      	str	r2, [r3, #20]
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	691b      	ldr	r3, [r3, #16]
 8004ab2:	f003 0301 	and.w	r3, r3, #1
 8004ab6:	2b01      	cmp	r3, #1
 8004ab8:	d105      	bne.n	8004ac6 <TIM_Base_SetConfig+0xee>
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	691b      	ldr	r3, [r3, #16]
 8004abe:	f023 0201 	bic.w	r2, r3, #1
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	611a      	str	r2, [r3, #16]
 8004ac6:	bf00      	nop
 8004ac8:	3714      	adds	r7, #20
 8004aca:	46bd      	mov	sp, r7
 8004acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad0:	4770      	bx	lr
 8004ad2:	bf00      	nop
 8004ad4:	40010000 	.word	0x40010000
 8004ad8:	40000400 	.word	0x40000400
 8004adc:	40000800 	.word	0x40000800
 8004ae0:	40000c00 	.word	0x40000c00
 8004ae4:	40014000 	.word	0x40014000
 8004ae8:	40014400 	.word	0x40014400
 8004aec:	40014800 	.word	0x40014800

08004af0 <TIM_OC1_SetConfig>:
 8004af0:	b480      	push	{r7}
 8004af2:	b087      	sub	sp, #28
 8004af4:	af00      	add	r7, sp, #0
 8004af6:	6078      	str	r0, [r7, #4]
 8004af8:	6039      	str	r1, [r7, #0]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	6a1b      	ldr	r3, [r3, #32]
 8004afe:	617b      	str	r3, [r7, #20]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	6a1b      	ldr	r3, [r3, #32]
 8004b04:	f023 0201 	bic.w	r2, r3, #1
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	621a      	str	r2, [r3, #32]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	685b      	ldr	r3, [r3, #4]
 8004b10:	613b      	str	r3, [r7, #16]
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	699b      	ldr	r3, [r3, #24]
 8004b16:	60fb      	str	r3, [r7, #12]
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	f023 0303 	bic.w	r3, r3, #3
 8004b26:	60fb      	str	r3, [r7, #12]
 8004b28:	683b      	ldr	r3, [r7, #0]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	68fa      	ldr	r2, [r7, #12]
 8004b2e:	4313      	orrs	r3, r2
 8004b30:	60fb      	str	r3, [r7, #12]
 8004b32:	697b      	ldr	r3, [r7, #20]
 8004b34:	f023 0302 	bic.w	r3, r3, #2
 8004b38:	617b      	str	r3, [r7, #20]
 8004b3a:	683b      	ldr	r3, [r7, #0]
 8004b3c:	689b      	ldr	r3, [r3, #8]
 8004b3e:	697a      	ldr	r2, [r7, #20]
 8004b40:	4313      	orrs	r3, r2
 8004b42:	617b      	str	r3, [r7, #20]
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	4a1c      	ldr	r2, [pc, #112]	@ (8004bb8 <TIM_OC1_SetConfig+0xc8>)
 8004b48:	4293      	cmp	r3, r2
 8004b4a:	d10c      	bne.n	8004b66 <TIM_OC1_SetConfig+0x76>
 8004b4c:	697b      	ldr	r3, [r7, #20]
 8004b4e:	f023 0308 	bic.w	r3, r3, #8
 8004b52:	617b      	str	r3, [r7, #20]
 8004b54:	683b      	ldr	r3, [r7, #0]
 8004b56:	68db      	ldr	r3, [r3, #12]
 8004b58:	697a      	ldr	r2, [r7, #20]
 8004b5a:	4313      	orrs	r3, r2
 8004b5c:	617b      	str	r3, [r7, #20]
 8004b5e:	697b      	ldr	r3, [r7, #20]
 8004b60:	f023 0304 	bic.w	r3, r3, #4
 8004b64:	617b      	str	r3, [r7, #20]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	4a13      	ldr	r2, [pc, #76]	@ (8004bb8 <TIM_OC1_SetConfig+0xc8>)
 8004b6a:	4293      	cmp	r3, r2
 8004b6c:	d111      	bne.n	8004b92 <TIM_OC1_SetConfig+0xa2>
 8004b6e:	693b      	ldr	r3, [r7, #16]
 8004b70:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004b74:	613b      	str	r3, [r7, #16]
 8004b76:	693b      	ldr	r3, [r7, #16]
 8004b78:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004b7c:	613b      	str	r3, [r7, #16]
 8004b7e:	683b      	ldr	r3, [r7, #0]
 8004b80:	695b      	ldr	r3, [r3, #20]
 8004b82:	693a      	ldr	r2, [r7, #16]
 8004b84:	4313      	orrs	r3, r2
 8004b86:	613b      	str	r3, [r7, #16]
 8004b88:	683b      	ldr	r3, [r7, #0]
 8004b8a:	699b      	ldr	r3, [r3, #24]
 8004b8c:	693a      	ldr	r2, [r7, #16]
 8004b8e:	4313      	orrs	r3, r2
 8004b90:	613b      	str	r3, [r7, #16]
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	693a      	ldr	r2, [r7, #16]
 8004b96:	605a      	str	r2, [r3, #4]
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	68fa      	ldr	r2, [r7, #12]
 8004b9c:	619a      	str	r2, [r3, #24]
 8004b9e:	683b      	ldr	r3, [r7, #0]
 8004ba0:	685a      	ldr	r2, [r3, #4]
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	635a      	str	r2, [r3, #52]	@ 0x34
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	697a      	ldr	r2, [r7, #20]
 8004baa:	621a      	str	r2, [r3, #32]
 8004bac:	bf00      	nop
 8004bae:	371c      	adds	r7, #28
 8004bb0:	46bd      	mov	sp, r7
 8004bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb6:	4770      	bx	lr
 8004bb8:	40010000 	.word	0x40010000

08004bbc <TIM_OC2_SetConfig>:
 8004bbc:	b480      	push	{r7}
 8004bbe:	b087      	sub	sp, #28
 8004bc0:	af00      	add	r7, sp, #0
 8004bc2:	6078      	str	r0, [r7, #4]
 8004bc4:	6039      	str	r1, [r7, #0]
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	6a1b      	ldr	r3, [r3, #32]
 8004bca:	617b      	str	r3, [r7, #20]
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	6a1b      	ldr	r3, [r3, #32]
 8004bd0:	f023 0210 	bic.w	r2, r3, #16
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	621a      	str	r2, [r3, #32]
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	613b      	str	r3, [r7, #16]
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	699b      	ldr	r3, [r3, #24]
 8004be2:	60fb      	str	r3, [r7, #12]
 8004be4:	68fb      	ldr	r3, [r7, #12]
 8004be6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004bea:	60fb      	str	r3, [r7, #12]
 8004bec:	68fb      	ldr	r3, [r7, #12]
 8004bee:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004bf2:	60fb      	str	r3, [r7, #12]
 8004bf4:	683b      	ldr	r3, [r7, #0]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	021b      	lsls	r3, r3, #8
 8004bfa:	68fa      	ldr	r2, [r7, #12]
 8004bfc:	4313      	orrs	r3, r2
 8004bfe:	60fb      	str	r3, [r7, #12]
 8004c00:	697b      	ldr	r3, [r7, #20]
 8004c02:	f023 0320 	bic.w	r3, r3, #32
 8004c06:	617b      	str	r3, [r7, #20]
 8004c08:	683b      	ldr	r3, [r7, #0]
 8004c0a:	689b      	ldr	r3, [r3, #8]
 8004c0c:	011b      	lsls	r3, r3, #4
 8004c0e:	697a      	ldr	r2, [r7, #20]
 8004c10:	4313      	orrs	r3, r2
 8004c12:	617b      	str	r3, [r7, #20]
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	4a1e      	ldr	r2, [pc, #120]	@ (8004c90 <TIM_OC2_SetConfig+0xd4>)
 8004c18:	4293      	cmp	r3, r2
 8004c1a:	d10d      	bne.n	8004c38 <TIM_OC2_SetConfig+0x7c>
 8004c1c:	697b      	ldr	r3, [r7, #20]
 8004c1e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004c22:	617b      	str	r3, [r7, #20]
 8004c24:	683b      	ldr	r3, [r7, #0]
 8004c26:	68db      	ldr	r3, [r3, #12]
 8004c28:	011b      	lsls	r3, r3, #4
 8004c2a:	697a      	ldr	r2, [r7, #20]
 8004c2c:	4313      	orrs	r3, r2
 8004c2e:	617b      	str	r3, [r7, #20]
 8004c30:	697b      	ldr	r3, [r7, #20]
 8004c32:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004c36:	617b      	str	r3, [r7, #20]
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	4a15      	ldr	r2, [pc, #84]	@ (8004c90 <TIM_OC2_SetConfig+0xd4>)
 8004c3c:	4293      	cmp	r3, r2
 8004c3e:	d113      	bne.n	8004c68 <TIM_OC2_SetConfig+0xac>
 8004c40:	693b      	ldr	r3, [r7, #16]
 8004c42:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004c46:	613b      	str	r3, [r7, #16]
 8004c48:	693b      	ldr	r3, [r7, #16]
 8004c4a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004c4e:	613b      	str	r3, [r7, #16]
 8004c50:	683b      	ldr	r3, [r7, #0]
 8004c52:	695b      	ldr	r3, [r3, #20]
 8004c54:	009b      	lsls	r3, r3, #2
 8004c56:	693a      	ldr	r2, [r7, #16]
 8004c58:	4313      	orrs	r3, r2
 8004c5a:	613b      	str	r3, [r7, #16]
 8004c5c:	683b      	ldr	r3, [r7, #0]
 8004c5e:	699b      	ldr	r3, [r3, #24]
 8004c60:	009b      	lsls	r3, r3, #2
 8004c62:	693a      	ldr	r2, [r7, #16]
 8004c64:	4313      	orrs	r3, r2
 8004c66:	613b      	str	r3, [r7, #16]
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	693a      	ldr	r2, [r7, #16]
 8004c6c:	605a      	str	r2, [r3, #4]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	68fa      	ldr	r2, [r7, #12]
 8004c72:	619a      	str	r2, [r3, #24]
 8004c74:	683b      	ldr	r3, [r7, #0]
 8004c76:	685a      	ldr	r2, [r3, #4]
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	639a      	str	r2, [r3, #56]	@ 0x38
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	697a      	ldr	r2, [r7, #20]
 8004c80:	621a      	str	r2, [r3, #32]
 8004c82:	bf00      	nop
 8004c84:	371c      	adds	r7, #28
 8004c86:	46bd      	mov	sp, r7
 8004c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c8c:	4770      	bx	lr
 8004c8e:	bf00      	nop
 8004c90:	40010000 	.word	0x40010000

08004c94 <TIM_OC3_SetConfig>:
 8004c94:	b480      	push	{r7}
 8004c96:	b087      	sub	sp, #28
 8004c98:	af00      	add	r7, sp, #0
 8004c9a:	6078      	str	r0, [r7, #4]
 8004c9c:	6039      	str	r1, [r7, #0]
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	6a1b      	ldr	r3, [r3, #32]
 8004ca2:	617b      	str	r3, [r7, #20]
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	6a1b      	ldr	r3, [r3, #32]
 8004ca8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	621a      	str	r2, [r3, #32]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	685b      	ldr	r3, [r3, #4]
 8004cb4:	613b      	str	r3, [r7, #16]
 8004cb6:	687b      	ldr	r3, [r7, #4]
 8004cb8:	69db      	ldr	r3, [r3, #28]
 8004cba:	60fb      	str	r3, [r7, #12]
 8004cbc:	68fb      	ldr	r3, [r7, #12]
 8004cbe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004cc2:	60fb      	str	r3, [r7, #12]
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	f023 0303 	bic.w	r3, r3, #3
 8004cca:	60fb      	str	r3, [r7, #12]
 8004ccc:	683b      	ldr	r3, [r7, #0]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	68fa      	ldr	r2, [r7, #12]
 8004cd2:	4313      	orrs	r3, r2
 8004cd4:	60fb      	str	r3, [r7, #12]
 8004cd6:	697b      	ldr	r3, [r7, #20]
 8004cd8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004cdc:	617b      	str	r3, [r7, #20]
 8004cde:	683b      	ldr	r3, [r7, #0]
 8004ce0:	689b      	ldr	r3, [r3, #8]
 8004ce2:	021b      	lsls	r3, r3, #8
 8004ce4:	697a      	ldr	r2, [r7, #20]
 8004ce6:	4313      	orrs	r3, r2
 8004ce8:	617b      	str	r3, [r7, #20]
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	4a1d      	ldr	r2, [pc, #116]	@ (8004d64 <TIM_OC3_SetConfig+0xd0>)
 8004cee:	4293      	cmp	r3, r2
 8004cf0:	d10d      	bne.n	8004d0e <TIM_OC3_SetConfig+0x7a>
 8004cf2:	697b      	ldr	r3, [r7, #20]
 8004cf4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004cf8:	617b      	str	r3, [r7, #20]
 8004cfa:	683b      	ldr	r3, [r7, #0]
 8004cfc:	68db      	ldr	r3, [r3, #12]
 8004cfe:	021b      	lsls	r3, r3, #8
 8004d00:	697a      	ldr	r2, [r7, #20]
 8004d02:	4313      	orrs	r3, r2
 8004d04:	617b      	str	r3, [r7, #20]
 8004d06:	697b      	ldr	r3, [r7, #20]
 8004d08:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004d0c:	617b      	str	r3, [r7, #20]
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	4a14      	ldr	r2, [pc, #80]	@ (8004d64 <TIM_OC3_SetConfig+0xd0>)
 8004d12:	4293      	cmp	r3, r2
 8004d14:	d113      	bne.n	8004d3e <TIM_OC3_SetConfig+0xaa>
 8004d16:	693b      	ldr	r3, [r7, #16]
 8004d18:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004d1c:	613b      	str	r3, [r7, #16]
 8004d1e:	693b      	ldr	r3, [r7, #16]
 8004d20:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004d24:	613b      	str	r3, [r7, #16]
 8004d26:	683b      	ldr	r3, [r7, #0]
 8004d28:	695b      	ldr	r3, [r3, #20]
 8004d2a:	011b      	lsls	r3, r3, #4
 8004d2c:	693a      	ldr	r2, [r7, #16]
 8004d2e:	4313      	orrs	r3, r2
 8004d30:	613b      	str	r3, [r7, #16]
 8004d32:	683b      	ldr	r3, [r7, #0]
 8004d34:	699b      	ldr	r3, [r3, #24]
 8004d36:	011b      	lsls	r3, r3, #4
 8004d38:	693a      	ldr	r2, [r7, #16]
 8004d3a:	4313      	orrs	r3, r2
 8004d3c:	613b      	str	r3, [r7, #16]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	693a      	ldr	r2, [r7, #16]
 8004d42:	605a      	str	r2, [r3, #4]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	68fa      	ldr	r2, [r7, #12]
 8004d48:	61da      	str	r2, [r3, #28]
 8004d4a:	683b      	ldr	r3, [r7, #0]
 8004d4c:	685a      	ldr	r2, [r3, #4]
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	697a      	ldr	r2, [r7, #20]
 8004d56:	621a      	str	r2, [r3, #32]
 8004d58:	bf00      	nop
 8004d5a:	371c      	adds	r7, #28
 8004d5c:	46bd      	mov	sp, r7
 8004d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d62:	4770      	bx	lr
 8004d64:	40010000 	.word	0x40010000

08004d68 <TIM_OC4_SetConfig>:
 8004d68:	b480      	push	{r7}
 8004d6a:	b087      	sub	sp, #28
 8004d6c:	af00      	add	r7, sp, #0
 8004d6e:	6078      	str	r0, [r7, #4]
 8004d70:	6039      	str	r1, [r7, #0]
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	6a1b      	ldr	r3, [r3, #32]
 8004d76:	613b      	str	r3, [r7, #16]
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	6a1b      	ldr	r3, [r3, #32]
 8004d7c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	621a      	str	r2, [r3, #32]
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	685b      	ldr	r3, [r3, #4]
 8004d88:	617b      	str	r3, [r7, #20]
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	69db      	ldr	r3, [r3, #28]
 8004d8e:	60fb      	str	r3, [r7, #12]
 8004d90:	68fb      	ldr	r3, [r7, #12]
 8004d92:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004d96:	60fb      	str	r3, [r7, #12]
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d9e:	60fb      	str	r3, [r7, #12]
 8004da0:	683b      	ldr	r3, [r7, #0]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	021b      	lsls	r3, r3, #8
 8004da6:	68fa      	ldr	r2, [r7, #12]
 8004da8:	4313      	orrs	r3, r2
 8004daa:	60fb      	str	r3, [r7, #12]
 8004dac:	693b      	ldr	r3, [r7, #16]
 8004dae:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004db2:	613b      	str	r3, [r7, #16]
 8004db4:	683b      	ldr	r3, [r7, #0]
 8004db6:	689b      	ldr	r3, [r3, #8]
 8004db8:	031b      	lsls	r3, r3, #12
 8004dba:	693a      	ldr	r2, [r7, #16]
 8004dbc:	4313      	orrs	r3, r2
 8004dbe:	613b      	str	r3, [r7, #16]
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	4a10      	ldr	r2, [pc, #64]	@ (8004e04 <TIM_OC4_SetConfig+0x9c>)
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d109      	bne.n	8004ddc <TIM_OC4_SetConfig+0x74>
 8004dc8:	697b      	ldr	r3, [r7, #20]
 8004dca:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004dce:	617b      	str	r3, [r7, #20]
 8004dd0:	683b      	ldr	r3, [r7, #0]
 8004dd2:	695b      	ldr	r3, [r3, #20]
 8004dd4:	019b      	lsls	r3, r3, #6
 8004dd6:	697a      	ldr	r2, [r7, #20]
 8004dd8:	4313      	orrs	r3, r2
 8004dda:	617b      	str	r3, [r7, #20]
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	697a      	ldr	r2, [r7, #20]
 8004de0:	605a      	str	r2, [r3, #4]
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	68fa      	ldr	r2, [r7, #12]
 8004de6:	61da      	str	r2, [r3, #28]
 8004de8:	683b      	ldr	r3, [r7, #0]
 8004dea:	685a      	ldr	r2, [r3, #4]
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	641a      	str	r2, [r3, #64]	@ 0x40
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	693a      	ldr	r2, [r7, #16]
 8004df4:	621a      	str	r2, [r3, #32]
 8004df6:	bf00      	nop
 8004df8:	371c      	adds	r7, #28
 8004dfa:	46bd      	mov	sp, r7
 8004dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e00:	4770      	bx	lr
 8004e02:	bf00      	nop
 8004e04:	40010000 	.word	0x40010000

08004e08 <TIM_CCxChannelCmd>:
 8004e08:	b480      	push	{r7}
 8004e0a:	b087      	sub	sp, #28
 8004e0c:	af00      	add	r7, sp, #0
 8004e0e:	60f8      	str	r0, [r7, #12]
 8004e10:	60b9      	str	r1, [r7, #8]
 8004e12:	607a      	str	r2, [r7, #4]
 8004e14:	68bb      	ldr	r3, [r7, #8]
 8004e16:	f003 031f 	and.w	r3, r3, #31
 8004e1a:	2201      	movs	r2, #1
 8004e1c:	fa02 f303 	lsl.w	r3, r2, r3
 8004e20:	617b      	str	r3, [r7, #20]
 8004e22:	68fb      	ldr	r3, [r7, #12]
 8004e24:	6a1a      	ldr	r2, [r3, #32]
 8004e26:	697b      	ldr	r3, [r7, #20]
 8004e28:	43db      	mvns	r3, r3
 8004e2a:	401a      	ands	r2, r3
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	621a      	str	r2, [r3, #32]
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	6a1a      	ldr	r2, [r3, #32]
 8004e34:	68bb      	ldr	r3, [r7, #8]
 8004e36:	f003 031f 	and.w	r3, r3, #31
 8004e3a:	6879      	ldr	r1, [r7, #4]
 8004e3c:	fa01 f303 	lsl.w	r3, r1, r3
 8004e40:	431a      	orrs	r2, r3
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	621a      	str	r2, [r3, #32]
 8004e46:	bf00      	nop
 8004e48:	371c      	adds	r7, #28
 8004e4a:	46bd      	mov	sp, r7
 8004e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e50:	4770      	bx	lr
	...

08004e54 <HAL_TIMEx_MasterConfigSynchronization>:
 8004e54:	b480      	push	{r7}
 8004e56:	b085      	sub	sp, #20
 8004e58:	af00      	add	r7, sp, #0
 8004e5a:	6078      	str	r0, [r7, #4]
 8004e5c:	6039      	str	r1, [r7, #0]
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004e64:	2b01      	cmp	r3, #1
 8004e66:	d101      	bne.n	8004e6c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004e68:	2302      	movs	r3, #2
 8004e6a:	e050      	b.n	8004f0e <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2201      	movs	r2, #1
 8004e70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	2202      	movs	r2, #2
 8004e78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	685b      	ldr	r3, [r3, #4]
 8004e82:	60fb      	str	r3, [r7, #12]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	689b      	ldr	r3, [r3, #8]
 8004e8a:	60bb      	str	r3, [r7, #8]
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e92:	60fb      	str	r3, [r7, #12]
 8004e94:	683b      	ldr	r3, [r7, #0]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	68fa      	ldr	r2, [r7, #12]
 8004e9a:	4313      	orrs	r3, r2
 8004e9c:	60fb      	str	r3, [r7, #12]
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	68fa      	ldr	r2, [r7, #12]
 8004ea4:	605a      	str	r2, [r3, #4]
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	4a1c      	ldr	r2, [pc, #112]	@ (8004f1c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8004eac:	4293      	cmp	r3, r2
 8004eae:	d018      	beq.n	8004ee2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004eb8:	d013      	beq.n	8004ee2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	4a18      	ldr	r2, [pc, #96]	@ (8004f20 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8004ec0:	4293      	cmp	r3, r2
 8004ec2:	d00e      	beq.n	8004ee2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	4a16      	ldr	r2, [pc, #88]	@ (8004f24 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8004eca:	4293      	cmp	r3, r2
 8004ecc:	d009      	beq.n	8004ee2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	4a15      	ldr	r2, [pc, #84]	@ (8004f28 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8004ed4:	4293      	cmp	r3, r2
 8004ed6:	d004      	beq.n	8004ee2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	4a13      	ldr	r2, [pc, #76]	@ (8004f2c <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8004ede:	4293      	cmp	r3, r2
 8004ee0:	d10c      	bne.n	8004efc <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8004ee2:	68bb      	ldr	r3, [r7, #8]
 8004ee4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004ee8:	60bb      	str	r3, [r7, #8]
 8004eea:	683b      	ldr	r3, [r7, #0]
 8004eec:	685b      	ldr	r3, [r3, #4]
 8004eee:	68ba      	ldr	r2, [r7, #8]
 8004ef0:	4313      	orrs	r3, r2
 8004ef2:	60bb      	str	r3, [r7, #8]
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	68ba      	ldr	r2, [r7, #8]
 8004efa:	609a      	str	r2, [r3, #8]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	2201      	movs	r2, #1
 8004f00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	2200      	movs	r2, #0
 8004f08:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f0c:	2300      	movs	r3, #0
 8004f0e:	4618      	mov	r0, r3
 8004f10:	3714      	adds	r7, #20
 8004f12:	46bd      	mov	sp, r7
 8004f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f18:	4770      	bx	lr
 8004f1a:	bf00      	nop
 8004f1c:	40010000 	.word	0x40010000
 8004f20:	40000400 	.word	0x40000400
 8004f24:	40000800 	.word	0x40000800
 8004f28:	40000c00 	.word	0x40000c00
 8004f2c:	40014000 	.word	0x40014000

08004f30 <HAL_UART_Init>:
 8004f30:	b580      	push	{r7, lr}
 8004f32:	b082      	sub	sp, #8
 8004f34:	af00      	add	r7, sp, #0
 8004f36:	6078      	str	r0, [r7, #4]
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d101      	bne.n	8004f42 <HAL_UART_Init+0x12>
 8004f3e:	2301      	movs	r3, #1
 8004f40:	e042      	b.n	8004fc8 <HAL_UART_Init+0x98>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004f48:	b2db      	uxtb	r3, r3
 8004f4a:	2b00      	cmp	r3, #0
 8004f4c:	d106      	bne.n	8004f5c <HAL_UART_Init+0x2c>
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	2200      	movs	r2, #0
 8004f52:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004f56:	6878      	ldr	r0, [r7, #4]
 8004f58:	f7fc fc7c 	bl	8001854 <HAL_UART_MspInit>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	2224      	movs	r2, #36	@ 0x24
 8004f60:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	681b      	ldr	r3, [r3, #0]
 8004f68:	68da      	ldr	r2, [r3, #12]
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004f72:	60da      	str	r2, [r3, #12]
 8004f74:	6878      	ldr	r0, [r7, #4]
 8004f76:	f000 ff4f 	bl	8005e18 <UART_SetConfig>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	691a      	ldr	r2, [r3, #16]
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8004f88:	611a      	str	r2, [r3, #16]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	695a      	ldr	r2, [r3, #20]
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	681b      	ldr	r3, [r3, #0]
 8004f94:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8004f98:	615a      	str	r2, [r3, #20]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	68da      	ldr	r2, [r3, #12]
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004fa8:	60da      	str	r2, [r3, #12]
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	2200      	movs	r2, #0
 8004fae:	645a      	str	r2, [r3, #68]	@ 0x44
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	2220      	movs	r2, #32
 8004fb4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	2220      	movs	r2, #32
 8004fbc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	2200      	movs	r2, #0
 8004fc4:	635a      	str	r2, [r3, #52]	@ 0x34
 8004fc6:	2300      	movs	r3, #0
 8004fc8:	4618      	mov	r0, r3
 8004fca:	3708      	adds	r7, #8
 8004fcc:	46bd      	mov	sp, r7
 8004fce:	bd80      	pop	{r7, pc}

08004fd0 <HAL_UART_Transmit>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b08a      	sub	sp, #40	@ 0x28
 8004fd4:	af02      	add	r7, sp, #8
 8004fd6:	60f8      	str	r0, [r7, #12]
 8004fd8:	60b9      	str	r1, [r7, #8]
 8004fda:	603b      	str	r3, [r7, #0]
 8004fdc:	4613      	mov	r3, r2
 8004fde:	80fb      	strh	r3, [r7, #6]
 8004fe0:	2300      	movs	r3, #0
 8004fe2:	617b      	str	r3, [r7, #20]
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004fea:	b2db      	uxtb	r3, r3
 8004fec:	2b20      	cmp	r3, #32
 8004fee:	d175      	bne.n	80050dc <HAL_UART_Transmit+0x10c>
 8004ff0:	68bb      	ldr	r3, [r7, #8]
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d002      	beq.n	8004ffc <HAL_UART_Transmit+0x2c>
 8004ff6:	88fb      	ldrh	r3, [r7, #6]
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	d101      	bne.n	8005000 <HAL_UART_Transmit+0x30>
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	e06e      	b.n	80050de <HAL_UART_Transmit+0x10e>
 8005000:	68fb      	ldr	r3, [r7, #12]
 8005002:	2200      	movs	r2, #0
 8005004:	645a      	str	r2, [r3, #68]	@ 0x44
 8005006:	68fb      	ldr	r3, [r7, #12]
 8005008:	2221      	movs	r2, #33	@ 0x21
 800500a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800500e:	f7fc fe95 	bl	8001d3c <HAL_GetTick>
 8005012:	6178      	str	r0, [r7, #20]
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	88fa      	ldrh	r2, [r7, #6]
 8005018:	849a      	strh	r2, [r3, #36]	@ 0x24
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	88fa      	ldrh	r2, [r7, #6]
 800501e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005020:	68fb      	ldr	r3, [r7, #12]
 8005022:	689b      	ldr	r3, [r3, #8]
 8005024:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005028:	d108      	bne.n	800503c <HAL_UART_Transmit+0x6c>
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	691b      	ldr	r3, [r3, #16]
 800502e:	2b00      	cmp	r3, #0
 8005030:	d104      	bne.n	800503c <HAL_UART_Transmit+0x6c>
 8005032:	2300      	movs	r3, #0
 8005034:	61fb      	str	r3, [r7, #28]
 8005036:	68bb      	ldr	r3, [r7, #8]
 8005038:	61bb      	str	r3, [r7, #24]
 800503a:	e003      	b.n	8005044 <HAL_UART_Transmit+0x74>
 800503c:	68bb      	ldr	r3, [r7, #8]
 800503e:	61fb      	str	r3, [r7, #28]
 8005040:	2300      	movs	r3, #0
 8005042:	61bb      	str	r3, [r7, #24]
 8005044:	e02e      	b.n	80050a4 <HAL_UART_Transmit+0xd4>
 8005046:	683b      	ldr	r3, [r7, #0]
 8005048:	9300      	str	r3, [sp, #0]
 800504a:	697b      	ldr	r3, [r7, #20]
 800504c:	2200      	movs	r2, #0
 800504e:	2180      	movs	r1, #128	@ 0x80
 8005050:	68f8      	ldr	r0, [r7, #12]
 8005052:	f000 fc27 	bl	80058a4 <UART_WaitOnFlagUntilTimeout>
 8005056:	4603      	mov	r3, r0
 8005058:	2b00      	cmp	r3, #0
 800505a:	d005      	beq.n	8005068 <HAL_UART_Transmit+0x98>
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	2220      	movs	r2, #32
 8005060:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005064:	2303      	movs	r3, #3
 8005066:	e03a      	b.n	80050de <HAL_UART_Transmit+0x10e>
 8005068:	69fb      	ldr	r3, [r7, #28]
 800506a:	2b00      	cmp	r3, #0
 800506c:	d10b      	bne.n	8005086 <HAL_UART_Transmit+0xb6>
 800506e:	69bb      	ldr	r3, [r7, #24]
 8005070:	881b      	ldrh	r3, [r3, #0]
 8005072:	461a      	mov	r2, r3
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800507c:	605a      	str	r2, [r3, #4]
 800507e:	69bb      	ldr	r3, [r7, #24]
 8005080:	3302      	adds	r3, #2
 8005082:	61bb      	str	r3, [r7, #24]
 8005084:	e007      	b.n	8005096 <HAL_UART_Transmit+0xc6>
 8005086:	69fb      	ldr	r3, [r7, #28]
 8005088:	781a      	ldrb	r2, [r3, #0]
 800508a:	68fb      	ldr	r3, [r7, #12]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	605a      	str	r2, [r3, #4]
 8005090:	69fb      	ldr	r3, [r7, #28]
 8005092:	3301      	adds	r3, #1
 8005094:	61fb      	str	r3, [r7, #28]
 8005096:	68fb      	ldr	r3, [r7, #12]
 8005098:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800509a:	b29b      	uxth	r3, r3
 800509c:	3b01      	subs	r3, #1
 800509e:	b29a      	uxth	r2, r3
 80050a0:	68fb      	ldr	r3, [r7, #12]
 80050a2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80050a8:	b29b      	uxth	r3, r3
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d1cb      	bne.n	8005046 <HAL_UART_Transmit+0x76>
 80050ae:	683b      	ldr	r3, [r7, #0]
 80050b0:	9300      	str	r3, [sp, #0]
 80050b2:	697b      	ldr	r3, [r7, #20]
 80050b4:	2200      	movs	r2, #0
 80050b6:	2140      	movs	r1, #64	@ 0x40
 80050b8:	68f8      	ldr	r0, [r7, #12]
 80050ba:	f000 fbf3 	bl	80058a4 <UART_WaitOnFlagUntilTimeout>
 80050be:	4603      	mov	r3, r0
 80050c0:	2b00      	cmp	r3, #0
 80050c2:	d005      	beq.n	80050d0 <HAL_UART_Transmit+0x100>
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	2220      	movs	r2, #32
 80050c8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80050cc:	2303      	movs	r3, #3
 80050ce:	e006      	b.n	80050de <HAL_UART_Transmit+0x10e>
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	2220      	movs	r2, #32
 80050d4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80050d8:	2300      	movs	r3, #0
 80050da:	e000      	b.n	80050de <HAL_UART_Transmit+0x10e>
 80050dc:	2302      	movs	r3, #2
 80050de:	4618      	mov	r0, r3
 80050e0:	3720      	adds	r7, #32
 80050e2:	46bd      	mov	sp, r7
 80050e4:	bd80      	pop	{r7, pc}

080050e6 <HAL_UART_Receive_DMA>:
 80050e6:	b580      	push	{r7, lr}
 80050e8:	b084      	sub	sp, #16
 80050ea:	af00      	add	r7, sp, #0
 80050ec:	60f8      	str	r0, [r7, #12]
 80050ee:	60b9      	str	r1, [r7, #8]
 80050f0:	4613      	mov	r3, r2
 80050f2:	80fb      	strh	r3, [r7, #6]
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80050fa:	b2db      	uxtb	r3, r3
 80050fc:	2b20      	cmp	r3, #32
 80050fe:	d112      	bne.n	8005126 <HAL_UART_Receive_DMA+0x40>
 8005100:	68bb      	ldr	r3, [r7, #8]
 8005102:	2b00      	cmp	r3, #0
 8005104:	d002      	beq.n	800510c <HAL_UART_Receive_DMA+0x26>
 8005106:	88fb      	ldrh	r3, [r7, #6]
 8005108:	2b00      	cmp	r3, #0
 800510a:	d101      	bne.n	8005110 <HAL_UART_Receive_DMA+0x2a>
 800510c:	2301      	movs	r3, #1
 800510e:	e00b      	b.n	8005128 <HAL_UART_Receive_DMA+0x42>
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	2200      	movs	r2, #0
 8005114:	631a      	str	r2, [r3, #48]	@ 0x30
 8005116:	88fb      	ldrh	r3, [r7, #6]
 8005118:	461a      	mov	r2, r3
 800511a:	68b9      	ldr	r1, [r7, #8]
 800511c:	68f8      	ldr	r0, [r7, #12]
 800511e:	f000 fc1b 	bl	8005958 <UART_Start_Receive_DMA>
 8005122:	4603      	mov	r3, r0
 8005124:	e000      	b.n	8005128 <HAL_UART_Receive_DMA+0x42>
 8005126:	2302      	movs	r3, #2
 8005128:	4618      	mov	r0, r3
 800512a:	3710      	adds	r7, #16
 800512c:	46bd      	mov	sp, r7
 800512e:	bd80      	pop	{r7, pc}

08005130 <HAL_UART_IRQHandler>:
 8005130:	b580      	push	{r7, lr}
 8005132:	b0ba      	sub	sp, #232	@ 0xe8
 8005134:	af00      	add	r7, sp, #0
 8005136:	6078      	str	r0, [r7, #4]
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	68db      	ldr	r3, [r3, #12]
 8005148:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	695b      	ldr	r3, [r3, #20]
 8005152:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005156:	2300      	movs	r3, #0
 8005158:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800515c:	2300      	movs	r3, #0
 800515e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005162:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005166:	f003 030f 	and.w	r3, r3, #15
 800516a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800516e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005172:	2b00      	cmp	r3, #0
 8005174:	d10f      	bne.n	8005196 <HAL_UART_IRQHandler+0x66>
 8005176:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800517a:	f003 0320 	and.w	r3, r3, #32
 800517e:	2b00      	cmp	r3, #0
 8005180:	d009      	beq.n	8005196 <HAL_UART_IRQHandler+0x66>
 8005182:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005186:	f003 0320 	and.w	r3, r3, #32
 800518a:	2b00      	cmp	r3, #0
 800518c:	d003      	beq.n	8005196 <HAL_UART_IRQHandler+0x66>
 800518e:	6878      	ldr	r0, [r7, #4]
 8005190:	f000 fd83 	bl	8005c9a <UART_Receive_IT>
 8005194:	e25b      	b.n	800564e <HAL_UART_IRQHandler+0x51e>
 8005196:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800519a:	2b00      	cmp	r3, #0
 800519c:	f000 80de 	beq.w	800535c <HAL_UART_IRQHandler+0x22c>
 80051a0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80051a4:	f003 0301 	and.w	r3, r3, #1
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d106      	bne.n	80051ba <HAL_UART_IRQHandler+0x8a>
 80051ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80051b0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 80051b4:	2b00      	cmp	r3, #0
 80051b6:	f000 80d1 	beq.w	800535c <HAL_UART_IRQHandler+0x22c>
 80051ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80051be:	f003 0301 	and.w	r3, r3, #1
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d00b      	beq.n	80051de <HAL_UART_IRQHandler+0xae>
 80051c6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80051ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d005      	beq.n	80051de <HAL_UART_IRQHandler+0xae>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80051d6:	f043 0201 	orr.w	r2, r3, #1
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80051de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80051e2:	f003 0304 	and.w	r3, r3, #4
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	d00b      	beq.n	8005202 <HAL_UART_IRQHandler+0xd2>
 80051ea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80051ee:	f003 0301 	and.w	r3, r3, #1
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d005      	beq.n	8005202 <HAL_UART_IRQHandler+0xd2>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80051fa:	f043 0202 	orr.w	r2, r3, #2
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	645a      	str	r2, [r3, #68]	@ 0x44
 8005202:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005206:	f003 0302 	and.w	r3, r3, #2
 800520a:	2b00      	cmp	r3, #0
 800520c:	d00b      	beq.n	8005226 <HAL_UART_IRQHandler+0xf6>
 800520e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005212:	f003 0301 	and.w	r3, r3, #1
 8005216:	2b00      	cmp	r3, #0
 8005218:	d005      	beq.n	8005226 <HAL_UART_IRQHandler+0xf6>
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800521e:	f043 0204 	orr.w	r2, r3, #4
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	645a      	str	r2, [r3, #68]	@ 0x44
 8005226:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800522a:	f003 0308 	and.w	r3, r3, #8
 800522e:	2b00      	cmp	r3, #0
 8005230:	d011      	beq.n	8005256 <HAL_UART_IRQHandler+0x126>
 8005232:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005236:	f003 0320 	and.w	r3, r3, #32
 800523a:	2b00      	cmp	r3, #0
 800523c:	d105      	bne.n	800524a <HAL_UART_IRQHandler+0x11a>
 800523e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005242:	f003 0301 	and.w	r3, r3, #1
 8005246:	2b00      	cmp	r3, #0
 8005248:	d005      	beq.n	8005256 <HAL_UART_IRQHandler+0x126>
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800524e:	f043 0208 	orr.w	r2, r3, #8
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	645a      	str	r2, [r3, #68]	@ 0x44
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800525a:	2b00      	cmp	r3, #0
 800525c:	f000 81f2 	beq.w	8005644 <HAL_UART_IRQHandler+0x514>
 8005260:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005264:	f003 0320 	and.w	r3, r3, #32
 8005268:	2b00      	cmp	r3, #0
 800526a:	d008      	beq.n	800527e <HAL_UART_IRQHandler+0x14e>
 800526c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005270:	f003 0320 	and.w	r3, r3, #32
 8005274:	2b00      	cmp	r3, #0
 8005276:	d002      	beq.n	800527e <HAL_UART_IRQHandler+0x14e>
 8005278:	6878      	ldr	r0, [r7, #4]
 800527a:	f000 fd0e 	bl	8005c9a <UART_Receive_IT>
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	695b      	ldr	r3, [r3, #20]
 8005284:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005288:	2b40      	cmp	r3, #64	@ 0x40
 800528a:	bf0c      	ite	eq
 800528c:	2301      	moveq	r3, #1
 800528e:	2300      	movne	r3, #0
 8005290:	b2db      	uxtb	r3, r3
 8005292:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800529a:	f003 0308 	and.w	r3, r3, #8
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d103      	bne.n	80052aa <HAL_UART_IRQHandler+0x17a>
 80052a2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	d04f      	beq.n	800534a <HAL_UART_IRQHandler+0x21a>
 80052aa:	6878      	ldr	r0, [r7, #4]
 80052ac:	f000 fc16 	bl	8005adc <UART_EndRxTransfer>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	695b      	ldr	r3, [r3, #20]
 80052b6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052ba:	2b40      	cmp	r3, #64	@ 0x40
 80052bc:	d141      	bne.n	8005342 <HAL_UART_IRQHandler+0x212>
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	3314      	adds	r3, #20
 80052c4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80052c8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80052cc:	e853 3f00 	ldrex	r3, [r3]
 80052d0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80052d4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80052d8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80052dc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	3314      	adds	r3, #20
 80052e6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80052ea:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80052ee:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80052f2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80052f6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80052fa:	e841 2300 	strex	r3, r2, [r1]
 80052fe:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005302:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005306:	2b00      	cmp	r3, #0
 8005308:	d1d9      	bne.n	80052be <HAL_UART_IRQHandler+0x18e>
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800530e:	2b00      	cmp	r3, #0
 8005310:	d013      	beq.n	800533a <HAL_UART_IRQHandler+0x20a>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005316:	4a7e      	ldr	r2, [pc, #504]	@ (8005510 <HAL_UART_IRQHandler+0x3e0>)
 8005318:	651a      	str	r2, [r3, #80]	@ 0x50
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800531e:	4618      	mov	r0, r3
 8005320:	f7fc ffc4 	bl	80022ac <HAL_DMA_Abort_IT>
 8005324:	4603      	mov	r3, r0
 8005326:	2b00      	cmp	r3, #0
 8005328:	d016      	beq.n	8005358 <HAL_UART_IRQHandler+0x228>
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800532e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005330:	687a      	ldr	r2, [r7, #4]
 8005332:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005334:	4610      	mov	r0, r2
 8005336:	4798      	blx	r3
 8005338:	e00e      	b.n	8005358 <HAL_UART_IRQHandler+0x228>
 800533a:	6878      	ldr	r0, [r7, #4]
 800533c:	f000 f99e 	bl	800567c <HAL_UART_ErrorCallback>
 8005340:	e00a      	b.n	8005358 <HAL_UART_IRQHandler+0x228>
 8005342:	6878      	ldr	r0, [r7, #4]
 8005344:	f000 f99a 	bl	800567c <HAL_UART_ErrorCallback>
 8005348:	e006      	b.n	8005358 <HAL_UART_IRQHandler+0x228>
 800534a:	6878      	ldr	r0, [r7, #4]
 800534c:	f000 f996 	bl	800567c <HAL_UART_ErrorCallback>
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	2200      	movs	r2, #0
 8005354:	645a      	str	r2, [r3, #68]	@ 0x44
 8005356:	e175      	b.n	8005644 <HAL_UART_IRQHandler+0x514>
 8005358:	bf00      	nop
 800535a:	e173      	b.n	8005644 <HAL_UART_IRQHandler+0x514>
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005360:	2b01      	cmp	r3, #1
 8005362:	f040 814f 	bne.w	8005604 <HAL_UART_IRQHandler+0x4d4>
 8005366:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800536a:	f003 0310 	and.w	r3, r3, #16
 800536e:	2b00      	cmp	r3, #0
 8005370:	f000 8148 	beq.w	8005604 <HAL_UART_IRQHandler+0x4d4>
 8005374:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005378:	f003 0310 	and.w	r3, r3, #16
 800537c:	2b00      	cmp	r3, #0
 800537e:	f000 8141 	beq.w	8005604 <HAL_UART_IRQHandler+0x4d4>
 8005382:	2300      	movs	r3, #0
 8005384:	60bb      	str	r3, [r7, #8]
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	60bb      	str	r3, [r7, #8]
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	685b      	ldr	r3, [r3, #4]
 8005394:	60bb      	str	r3, [r7, #8]
 8005396:	68bb      	ldr	r3, [r7, #8]
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	695b      	ldr	r3, [r3, #20]
 800539e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053a2:	2b40      	cmp	r3, #64	@ 0x40
 80053a4:	f040 80b6 	bne.w	8005514 <HAL_UART_IRQHandler+0x3e4>
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	685b      	ldr	r3, [r3, #4]
 80053b0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80053b4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	f000 8145 	beq.w	8005648 <HAL_UART_IRQHandler+0x518>
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80053c2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80053c6:	429a      	cmp	r2, r3
 80053c8:	f080 813e 	bcs.w	8005648 <HAL_UART_IRQHandler+0x518>
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80053d2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80053d8:	69db      	ldr	r3, [r3, #28]
 80053da:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80053de:	f000 8088 	beq.w	80054f2 <HAL_UART_IRQHandler+0x3c2>
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	330c      	adds	r3, #12
 80053e8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80053ec:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80053f0:	e853 3f00 	ldrex	r3, [r3]
 80053f4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80053f8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80053fc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005400:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	330c      	adds	r3, #12
 800540a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800540e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005412:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005416:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800541a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800541e:	e841 2300 	strex	r3, r2, [r1]
 8005422:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005426:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800542a:	2b00      	cmp	r3, #0
 800542c:	d1d9      	bne.n	80053e2 <HAL_UART_IRQHandler+0x2b2>
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	3314      	adds	r3, #20
 8005434:	677b      	str	r3, [r7, #116]	@ 0x74
 8005436:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005438:	e853 3f00 	ldrex	r3, [r3]
 800543c:	673b      	str	r3, [r7, #112]	@ 0x70
 800543e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005440:	f023 0301 	bic.w	r3, r3, #1
 8005444:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	3314      	adds	r3, #20
 800544e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005452:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8005456:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005458:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800545a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800545e:	e841 2300 	strex	r3, r2, [r1]
 8005462:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005464:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005466:	2b00      	cmp	r3, #0
 8005468:	d1e1      	bne.n	800542e <HAL_UART_IRQHandler+0x2fe>
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	681b      	ldr	r3, [r3, #0]
 800546e:	3314      	adds	r3, #20
 8005470:	663b      	str	r3, [r7, #96]	@ 0x60
 8005472:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8005474:	e853 3f00 	ldrex	r3, [r3]
 8005478:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800547a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800547c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005480:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	681b      	ldr	r3, [r3, #0]
 8005488:	3314      	adds	r3, #20
 800548a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800548e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005490:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005492:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8005494:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8005496:	e841 2300 	strex	r3, r2, [r1]
 800549a:	667b      	str	r3, [r7, #100]	@ 0x64
 800549c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d1e3      	bne.n	800546a <HAL_UART_IRQHandler+0x33a>
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	2220      	movs	r2, #32
 80054a6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	2200      	movs	r2, #0
 80054ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	330c      	adds	r3, #12
 80054b6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80054b8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80054ba:	e853 3f00 	ldrex	r3, [r3]
 80054be:	64bb      	str	r3, [r7, #72]	@ 0x48
 80054c0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80054c2:	f023 0310 	bic.w	r3, r3, #16
 80054c6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	330c      	adds	r3, #12
 80054d0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80054d4:	65ba      	str	r2, [r7, #88]	@ 0x58
 80054d6:	657b      	str	r3, [r7, #84]	@ 0x54
 80054d8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80054da:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80054dc:	e841 2300 	strex	r3, r2, [r1]
 80054e0:	653b      	str	r3, [r7, #80]	@ 0x50
 80054e2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	d1e3      	bne.n	80054b0 <HAL_UART_IRQHandler+0x380>
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80054ec:	4618      	mov	r0, r3
 80054ee:	f7fc fe6d 	bl	80021cc <HAL_DMA_Abort>
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	2202      	movs	r2, #2
 80054f6:	635a      	str	r2, [r3, #52]	@ 0x34
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005500:	b29b      	uxth	r3, r3
 8005502:	1ad3      	subs	r3, r2, r3
 8005504:	b29b      	uxth	r3, r3
 8005506:	4619      	mov	r1, r3
 8005508:	6878      	ldr	r0, [r7, #4]
 800550a:	f000 f8c1 	bl	8005690 <HAL_UARTEx_RxEventCallback>
 800550e:	e09b      	b.n	8005648 <HAL_UART_IRQHandler+0x518>
 8005510:	08005ba3 	.word	0x08005ba3
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800551c:	b29b      	uxth	r3, r3
 800551e:	1ad3      	subs	r3, r2, r3
 8005520:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005528:	b29b      	uxth	r3, r3
 800552a:	2b00      	cmp	r3, #0
 800552c:	f000 808e 	beq.w	800564c <HAL_UART_IRQHandler+0x51c>
 8005530:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005534:	2b00      	cmp	r3, #0
 8005536:	f000 8089 	beq.w	800564c <HAL_UART_IRQHandler+0x51c>
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	330c      	adds	r3, #12
 8005540:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005542:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005544:	e853 3f00 	ldrex	r3, [r3]
 8005548:	637b      	str	r3, [r7, #52]	@ 0x34
 800554a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800554c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005550:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	330c      	adds	r3, #12
 800555a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800555e:	647a      	str	r2, [r7, #68]	@ 0x44
 8005560:	643b      	str	r3, [r7, #64]	@ 0x40
 8005562:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8005564:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005566:	e841 2300 	strex	r3, r2, [r1]
 800556a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800556c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800556e:	2b00      	cmp	r3, #0
 8005570:	d1e3      	bne.n	800553a <HAL_UART_IRQHandler+0x40a>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	3314      	adds	r3, #20
 8005578:	627b      	str	r3, [r7, #36]	@ 0x24
 800557a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800557c:	e853 3f00 	ldrex	r3, [r3]
 8005580:	623b      	str	r3, [r7, #32]
 8005582:	6a3b      	ldr	r3, [r7, #32]
 8005584:	f023 0301 	bic.w	r3, r3, #1
 8005588:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	3314      	adds	r3, #20
 8005592:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8005596:	633a      	str	r2, [r7, #48]	@ 0x30
 8005598:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800559a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800559c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800559e:	e841 2300 	strex	r3, r2, [r1]
 80055a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80055a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80055a6:	2b00      	cmp	r3, #0
 80055a8:	d1e3      	bne.n	8005572 <HAL_UART_IRQHandler+0x442>
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	2220      	movs	r2, #32
 80055ae:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	2200      	movs	r2, #0
 80055b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	330c      	adds	r3, #12
 80055be:	613b      	str	r3, [r7, #16]
 80055c0:	693b      	ldr	r3, [r7, #16]
 80055c2:	e853 3f00 	ldrex	r3, [r3]
 80055c6:	60fb      	str	r3, [r7, #12]
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	f023 0310 	bic.w	r3, r3, #16
 80055ce:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	330c      	adds	r3, #12
 80055d8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80055dc:	61fa      	str	r2, [r7, #28]
 80055de:	61bb      	str	r3, [r7, #24]
 80055e0:	69b9      	ldr	r1, [r7, #24]
 80055e2:	69fa      	ldr	r2, [r7, #28]
 80055e4:	e841 2300 	strex	r3, r2, [r1]
 80055e8:	617b      	str	r3, [r7, #20]
 80055ea:	697b      	ldr	r3, [r7, #20]
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d1e3      	bne.n	80055b8 <HAL_UART_IRQHandler+0x488>
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	2202      	movs	r2, #2
 80055f4:	635a      	str	r2, [r3, #52]	@ 0x34
 80055f6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80055fa:	4619      	mov	r1, r3
 80055fc:	6878      	ldr	r0, [r7, #4]
 80055fe:	f000 f847 	bl	8005690 <HAL_UARTEx_RxEventCallback>
 8005602:	e023      	b.n	800564c <HAL_UART_IRQHandler+0x51c>
 8005604:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005608:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800560c:	2b00      	cmp	r3, #0
 800560e:	d009      	beq.n	8005624 <HAL_UART_IRQHandler+0x4f4>
 8005610:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005614:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005618:	2b00      	cmp	r3, #0
 800561a:	d003      	beq.n	8005624 <HAL_UART_IRQHandler+0x4f4>
 800561c:	6878      	ldr	r0, [r7, #4]
 800561e:	f000 fad4 	bl	8005bca <UART_Transmit_IT>
 8005622:	e014      	b.n	800564e <HAL_UART_IRQHandler+0x51e>
 8005624:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005628:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800562c:	2b00      	cmp	r3, #0
 800562e:	d00e      	beq.n	800564e <HAL_UART_IRQHandler+0x51e>
 8005630:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005634:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005638:	2b00      	cmp	r3, #0
 800563a:	d008      	beq.n	800564e <HAL_UART_IRQHandler+0x51e>
 800563c:	6878      	ldr	r0, [r7, #4]
 800563e:	f000 fb14 	bl	8005c6a <UART_EndTransmit_IT>
 8005642:	e004      	b.n	800564e <HAL_UART_IRQHandler+0x51e>
 8005644:	bf00      	nop
 8005646:	e002      	b.n	800564e <HAL_UART_IRQHandler+0x51e>
 8005648:	bf00      	nop
 800564a:	e000      	b.n	800564e <HAL_UART_IRQHandler+0x51e>
 800564c:	bf00      	nop
 800564e:	37e8      	adds	r7, #232	@ 0xe8
 8005650:	46bd      	mov	sp, r7
 8005652:	bd80      	pop	{r7, pc}

08005654 <HAL_UART_TxCpltCallback>:
 8005654:	b480      	push	{r7}
 8005656:	b083      	sub	sp, #12
 8005658:	af00      	add	r7, sp, #0
 800565a:	6078      	str	r0, [r7, #4]
 800565c:	bf00      	nop
 800565e:	370c      	adds	r7, #12
 8005660:	46bd      	mov	sp, r7
 8005662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005666:	4770      	bx	lr

08005668 <HAL_UART_RxHalfCpltCallback>:
 8005668:	b480      	push	{r7}
 800566a:	b083      	sub	sp, #12
 800566c:	af00      	add	r7, sp, #0
 800566e:	6078      	str	r0, [r7, #4]
 8005670:	bf00      	nop
 8005672:	370c      	adds	r7, #12
 8005674:	46bd      	mov	sp, r7
 8005676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800567a:	4770      	bx	lr

0800567c <HAL_UART_ErrorCallback>:
 800567c:	b480      	push	{r7}
 800567e:	b083      	sub	sp, #12
 8005680:	af00      	add	r7, sp, #0
 8005682:	6078      	str	r0, [r7, #4]
 8005684:	bf00      	nop
 8005686:	370c      	adds	r7, #12
 8005688:	46bd      	mov	sp, r7
 800568a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800568e:	4770      	bx	lr

08005690 <HAL_UARTEx_RxEventCallback>:
 8005690:	b480      	push	{r7}
 8005692:	b083      	sub	sp, #12
 8005694:	af00      	add	r7, sp, #0
 8005696:	6078      	str	r0, [r7, #4]
 8005698:	460b      	mov	r3, r1
 800569a:	807b      	strh	r3, [r7, #2]
 800569c:	bf00      	nop
 800569e:	370c      	adds	r7, #12
 80056a0:	46bd      	mov	sp, r7
 80056a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056a6:	4770      	bx	lr

080056a8 <UART_DMAReceiveCplt>:
 80056a8:	b580      	push	{r7, lr}
 80056aa:	b09c      	sub	sp, #112	@ 0x70
 80056ac:	af00      	add	r7, sp, #0
 80056ae:	6078      	str	r0, [r7, #4]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80056b4:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	681b      	ldr	r3, [r3, #0]
 80056bc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80056c0:	2b00      	cmp	r3, #0
 80056c2:	d172      	bne.n	80057aa <UART_DMAReceiveCplt+0x102>
 80056c4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80056c6:	2200      	movs	r2, #0
 80056c8:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80056ca:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	330c      	adds	r3, #12
 80056d0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80056d2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80056d4:	e853 3f00 	ldrex	r3, [r3]
 80056d8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80056da:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80056dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80056e0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80056e2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	330c      	adds	r3, #12
 80056e8:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 80056ea:	65ba      	str	r2, [r7, #88]	@ 0x58
 80056ec:	657b      	str	r3, [r7, #84]	@ 0x54
 80056ee:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80056f0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80056f2:	e841 2300 	strex	r3, r2, [r1]
 80056f6:	653b      	str	r3, [r7, #80]	@ 0x50
 80056f8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d1e5      	bne.n	80056ca <UART_DMAReceiveCplt+0x22>
 80056fe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	3314      	adds	r3, #20
 8005704:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005706:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005708:	e853 3f00 	ldrex	r3, [r3]
 800570c:	637b      	str	r3, [r7, #52]	@ 0x34
 800570e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005710:	f023 0301 	bic.w	r3, r3, #1
 8005714:	667b      	str	r3, [r7, #100]	@ 0x64
 8005716:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	3314      	adds	r3, #20
 800571c:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800571e:	647a      	str	r2, [r7, #68]	@ 0x44
 8005720:	643b      	str	r3, [r7, #64]	@ 0x40
 8005722:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8005724:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005726:	e841 2300 	strex	r3, r2, [r1]
 800572a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800572c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800572e:	2b00      	cmp	r3, #0
 8005730:	d1e5      	bne.n	80056fe <UART_DMAReceiveCplt+0x56>
 8005732:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	3314      	adds	r3, #20
 8005738:	627b      	str	r3, [r7, #36]	@ 0x24
 800573a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800573c:	e853 3f00 	ldrex	r3, [r3]
 8005740:	623b      	str	r3, [r7, #32]
 8005742:	6a3b      	ldr	r3, [r7, #32]
 8005744:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005748:	663b      	str	r3, [r7, #96]	@ 0x60
 800574a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800574c:	681b      	ldr	r3, [r3, #0]
 800574e:	3314      	adds	r3, #20
 8005750:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8005752:	633a      	str	r2, [r7, #48]	@ 0x30
 8005754:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005756:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005758:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800575a:	e841 2300 	strex	r3, r2, [r1]
 800575e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005760:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005762:	2b00      	cmp	r3, #0
 8005764:	d1e5      	bne.n	8005732 <UART_DMAReceiveCplt+0x8a>
 8005766:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005768:	2220      	movs	r2, #32
 800576a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800576e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005770:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005772:	2b01      	cmp	r3, #1
 8005774:	d119      	bne.n	80057aa <UART_DMAReceiveCplt+0x102>
 8005776:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	330c      	adds	r3, #12
 800577c:	613b      	str	r3, [r7, #16]
 800577e:	693b      	ldr	r3, [r7, #16]
 8005780:	e853 3f00 	ldrex	r3, [r3]
 8005784:	60fb      	str	r3, [r7, #12]
 8005786:	68fb      	ldr	r3, [r7, #12]
 8005788:	f023 0310 	bic.w	r3, r3, #16
 800578c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800578e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	330c      	adds	r3, #12
 8005794:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8005796:	61fa      	str	r2, [r7, #28]
 8005798:	61bb      	str	r3, [r7, #24]
 800579a:	69b9      	ldr	r1, [r7, #24]
 800579c:	69fa      	ldr	r2, [r7, #28]
 800579e:	e841 2300 	strex	r3, r2, [r1]
 80057a2:	617b      	str	r3, [r7, #20]
 80057a4:	697b      	ldr	r3, [r7, #20]
 80057a6:	2b00      	cmp	r3, #0
 80057a8:	d1e5      	bne.n	8005776 <UART_DMAReceiveCplt+0xce>
 80057aa:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80057ac:	2200      	movs	r2, #0
 80057ae:	635a      	str	r2, [r3, #52]	@ 0x34
 80057b0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80057b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057b4:	2b01      	cmp	r3, #1
 80057b6:	d106      	bne.n	80057c6 <UART_DMAReceiveCplt+0x11e>
 80057b8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80057ba:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80057bc:	4619      	mov	r1, r3
 80057be:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80057c0:	f7ff ff66 	bl	8005690 <HAL_UARTEx_RxEventCallback>
 80057c4:	e002      	b.n	80057cc <UART_DMAReceiveCplt+0x124>
 80057c6:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80057c8:	f7fb fe7c 	bl	80014c4 <HAL_UART_RxCpltCallback>
 80057cc:	bf00      	nop
 80057ce:	3770      	adds	r7, #112	@ 0x70
 80057d0:	46bd      	mov	sp, r7
 80057d2:	bd80      	pop	{r7, pc}

080057d4 <UART_DMARxHalfCplt>:
 80057d4:	b580      	push	{r7, lr}
 80057d6:	b084      	sub	sp, #16
 80057d8:	af00      	add	r7, sp, #0
 80057da:	6078      	str	r0, [r7, #4]
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80057e0:	60fb      	str	r3, [r7, #12]
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	2201      	movs	r2, #1
 80057e6:	635a      	str	r2, [r3, #52]	@ 0x34
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057ec:	2b01      	cmp	r3, #1
 80057ee:	d108      	bne.n	8005802 <UART_DMARxHalfCplt+0x2e>
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80057f4:	085b      	lsrs	r3, r3, #1
 80057f6:	b29b      	uxth	r3, r3
 80057f8:	4619      	mov	r1, r3
 80057fa:	68f8      	ldr	r0, [r7, #12]
 80057fc:	f7ff ff48 	bl	8005690 <HAL_UARTEx_RxEventCallback>
 8005800:	e002      	b.n	8005808 <UART_DMARxHalfCplt+0x34>
 8005802:	68f8      	ldr	r0, [r7, #12]
 8005804:	f7ff ff30 	bl	8005668 <HAL_UART_RxHalfCpltCallback>
 8005808:	bf00      	nop
 800580a:	3710      	adds	r7, #16
 800580c:	46bd      	mov	sp, r7
 800580e:	bd80      	pop	{r7, pc}

08005810 <UART_DMAError>:
 8005810:	b580      	push	{r7, lr}
 8005812:	b084      	sub	sp, #16
 8005814:	af00      	add	r7, sp, #0
 8005816:	6078      	str	r0, [r7, #4]
 8005818:	2300      	movs	r3, #0
 800581a:	60fb      	str	r3, [r7, #12]
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005820:	60bb      	str	r3, [r7, #8]
 8005822:	68bb      	ldr	r3, [r7, #8]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	695b      	ldr	r3, [r3, #20]
 8005828:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800582c:	2b80      	cmp	r3, #128	@ 0x80
 800582e:	bf0c      	ite	eq
 8005830:	2301      	moveq	r3, #1
 8005832:	2300      	movne	r3, #0
 8005834:	b2db      	uxtb	r3, r3
 8005836:	60fb      	str	r3, [r7, #12]
 8005838:	68bb      	ldr	r3, [r7, #8]
 800583a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800583e:	b2db      	uxtb	r3, r3
 8005840:	2b21      	cmp	r3, #33	@ 0x21
 8005842:	d108      	bne.n	8005856 <UART_DMAError+0x46>
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	2b00      	cmp	r3, #0
 8005848:	d005      	beq.n	8005856 <UART_DMAError+0x46>
 800584a:	68bb      	ldr	r3, [r7, #8]
 800584c:	2200      	movs	r2, #0
 800584e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005850:	68b8      	ldr	r0, [r7, #8]
 8005852:	f000 f91b 	bl	8005a8c <UART_EndTxTransfer>
 8005856:	68bb      	ldr	r3, [r7, #8]
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	695b      	ldr	r3, [r3, #20]
 800585c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005860:	2b40      	cmp	r3, #64	@ 0x40
 8005862:	bf0c      	ite	eq
 8005864:	2301      	moveq	r3, #1
 8005866:	2300      	movne	r3, #0
 8005868:	b2db      	uxtb	r3, r3
 800586a:	60fb      	str	r3, [r7, #12]
 800586c:	68bb      	ldr	r3, [r7, #8]
 800586e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005872:	b2db      	uxtb	r3, r3
 8005874:	2b22      	cmp	r3, #34	@ 0x22
 8005876:	d108      	bne.n	800588a <UART_DMAError+0x7a>
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	2b00      	cmp	r3, #0
 800587c:	d005      	beq.n	800588a <UART_DMAError+0x7a>
 800587e:	68bb      	ldr	r3, [r7, #8]
 8005880:	2200      	movs	r2, #0
 8005882:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005884:	68b8      	ldr	r0, [r7, #8]
 8005886:	f000 f929 	bl	8005adc <UART_EndRxTransfer>
 800588a:	68bb      	ldr	r3, [r7, #8]
 800588c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800588e:	f043 0210 	orr.w	r2, r3, #16
 8005892:	68bb      	ldr	r3, [r7, #8]
 8005894:	645a      	str	r2, [r3, #68]	@ 0x44
 8005896:	68b8      	ldr	r0, [r7, #8]
 8005898:	f7ff fef0 	bl	800567c <HAL_UART_ErrorCallback>
 800589c:	bf00      	nop
 800589e:	3710      	adds	r7, #16
 80058a0:	46bd      	mov	sp, r7
 80058a2:	bd80      	pop	{r7, pc}

080058a4 <UART_WaitOnFlagUntilTimeout>:
 80058a4:	b580      	push	{r7, lr}
 80058a6:	b086      	sub	sp, #24
 80058a8:	af00      	add	r7, sp, #0
 80058aa:	60f8      	str	r0, [r7, #12]
 80058ac:	60b9      	str	r1, [r7, #8]
 80058ae:	603b      	str	r3, [r7, #0]
 80058b0:	4613      	mov	r3, r2
 80058b2:	71fb      	strb	r3, [r7, #7]
 80058b4:	e03b      	b.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 80058b6:	6a3b      	ldr	r3, [r7, #32]
 80058b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80058bc:	d037      	beq.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 80058be:	f7fc fa3d 	bl	8001d3c <HAL_GetTick>
 80058c2:	4602      	mov	r2, r0
 80058c4:	683b      	ldr	r3, [r7, #0]
 80058c6:	1ad3      	subs	r3, r2, r3
 80058c8:	6a3a      	ldr	r2, [r7, #32]
 80058ca:	429a      	cmp	r2, r3
 80058cc:	d302      	bcc.n	80058d4 <UART_WaitOnFlagUntilTimeout+0x30>
 80058ce:	6a3b      	ldr	r3, [r7, #32]
 80058d0:	2b00      	cmp	r3, #0
 80058d2:	d101      	bne.n	80058d8 <UART_WaitOnFlagUntilTimeout+0x34>
 80058d4:	2303      	movs	r3, #3
 80058d6:	e03a      	b.n	800594e <UART_WaitOnFlagUntilTimeout+0xaa>
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	68db      	ldr	r3, [r3, #12]
 80058de:	f003 0304 	and.w	r3, r3, #4
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d023      	beq.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 80058e6:	68bb      	ldr	r3, [r7, #8]
 80058e8:	2b80      	cmp	r3, #128	@ 0x80
 80058ea:	d020      	beq.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 80058ec:	68bb      	ldr	r3, [r7, #8]
 80058ee:	2b40      	cmp	r3, #64	@ 0x40
 80058f0:	d01d      	beq.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	f003 0308 	and.w	r3, r3, #8
 80058fc:	2b08      	cmp	r3, #8
 80058fe:	d116      	bne.n	800592e <UART_WaitOnFlagUntilTimeout+0x8a>
 8005900:	2300      	movs	r3, #0
 8005902:	617b      	str	r3, [r7, #20]
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	617b      	str	r3, [r7, #20]
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	617b      	str	r3, [r7, #20]
 8005914:	697b      	ldr	r3, [r7, #20]
 8005916:	68f8      	ldr	r0, [r7, #12]
 8005918:	f000 f8e0 	bl	8005adc <UART_EndRxTransfer>
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	2208      	movs	r2, #8
 8005920:	645a      	str	r2, [r3, #68]	@ 0x44
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	2200      	movs	r2, #0
 8005926:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800592a:	2301      	movs	r3, #1
 800592c:	e00f      	b.n	800594e <UART_WaitOnFlagUntilTimeout+0xaa>
 800592e:	68fb      	ldr	r3, [r7, #12]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	681a      	ldr	r2, [r3, #0]
 8005934:	68bb      	ldr	r3, [r7, #8]
 8005936:	4013      	ands	r3, r2
 8005938:	68ba      	ldr	r2, [r7, #8]
 800593a:	429a      	cmp	r2, r3
 800593c:	bf0c      	ite	eq
 800593e:	2301      	moveq	r3, #1
 8005940:	2300      	movne	r3, #0
 8005942:	b2db      	uxtb	r3, r3
 8005944:	461a      	mov	r2, r3
 8005946:	79fb      	ldrb	r3, [r7, #7]
 8005948:	429a      	cmp	r2, r3
 800594a:	d0b4      	beq.n	80058b6 <UART_WaitOnFlagUntilTimeout+0x12>
 800594c:	2300      	movs	r3, #0
 800594e:	4618      	mov	r0, r3
 8005950:	3718      	adds	r7, #24
 8005952:	46bd      	mov	sp, r7
 8005954:	bd80      	pop	{r7, pc}
	...

08005958 <UART_Start_Receive_DMA>:
 8005958:	b580      	push	{r7, lr}
 800595a:	b098      	sub	sp, #96	@ 0x60
 800595c:	af00      	add	r7, sp, #0
 800595e:	60f8      	str	r0, [r7, #12]
 8005960:	60b9      	str	r1, [r7, #8]
 8005962:	4613      	mov	r3, r2
 8005964:	80fb      	strh	r3, [r7, #6]
 8005966:	68ba      	ldr	r2, [r7, #8]
 8005968:	68fb      	ldr	r3, [r7, #12]
 800596a:	629a      	str	r2, [r3, #40]	@ 0x28
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	88fa      	ldrh	r2, [r7, #6]
 8005970:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	2200      	movs	r2, #0
 8005976:	645a      	str	r2, [r3, #68]	@ 0x44
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	2222      	movs	r2, #34	@ 0x22
 800597c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005984:	4a3e      	ldr	r2, [pc, #248]	@ (8005a80 <UART_Start_Receive_DMA+0x128>)
 8005986:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800598c:	4a3d      	ldr	r2, [pc, #244]	@ (8005a84 <UART_Start_Receive_DMA+0x12c>)
 800598e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005990:	68fb      	ldr	r3, [r7, #12]
 8005992:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005994:	4a3c      	ldr	r2, [pc, #240]	@ (8005a88 <UART_Start_Receive_DMA+0x130>)
 8005996:	64da      	str	r2, [r3, #76]	@ 0x4c
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800599c:	2200      	movs	r2, #0
 800599e:	651a      	str	r2, [r3, #80]	@ 0x50
 80059a0:	f107 0308 	add.w	r3, r7, #8
 80059a4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	3304      	adds	r3, #4
 80059b0:	4619      	mov	r1, r3
 80059b2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80059b4:	681a      	ldr	r2, [r3, #0]
 80059b6:	88fb      	ldrh	r3, [r7, #6]
 80059b8:	f7fc fbb0 	bl	800211c <HAL_DMA_Start_IT>
 80059bc:	2300      	movs	r3, #0
 80059be:	613b      	str	r3, [r7, #16]
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	613b      	str	r3, [r7, #16]
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	685b      	ldr	r3, [r3, #4]
 80059ce:	613b      	str	r3, [r7, #16]
 80059d0:	693b      	ldr	r3, [r7, #16]
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	691b      	ldr	r3, [r3, #16]
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d019      	beq.n	8005a0e <UART_Start_Receive_DMA+0xb6>
 80059da:	68fb      	ldr	r3, [r7, #12]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	330c      	adds	r3, #12
 80059e0:	643b      	str	r3, [r7, #64]	@ 0x40
 80059e2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80059e4:	e853 3f00 	ldrex	r3, [r3]
 80059e8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80059ea:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80059ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80059f0:	65bb      	str	r3, [r7, #88]	@ 0x58
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	330c      	adds	r3, #12
 80059f8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80059fa:	64fa      	str	r2, [r7, #76]	@ 0x4c
 80059fc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80059fe:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8005a00:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005a02:	e841 2300 	strex	r3, r2, [r1]
 8005a06:	647b      	str	r3, [r7, #68]	@ 0x44
 8005a08:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005a0a:	2b00      	cmp	r3, #0
 8005a0c:	d1e5      	bne.n	80059da <UART_Start_Receive_DMA+0x82>
 8005a0e:	68fb      	ldr	r3, [r7, #12]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	3314      	adds	r3, #20
 8005a14:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005a16:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005a18:	e853 3f00 	ldrex	r3, [r3]
 8005a1c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005a1e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005a20:	f043 0301 	orr.w	r3, r3, #1
 8005a24:	657b      	str	r3, [r7, #84]	@ 0x54
 8005a26:	68fb      	ldr	r3, [r7, #12]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	3314      	adds	r3, #20
 8005a2c:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8005a2e:	63ba      	str	r2, [r7, #56]	@ 0x38
 8005a30:	637b      	str	r3, [r7, #52]	@ 0x34
 8005a32:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8005a34:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005a36:	e841 2300 	strex	r3, r2, [r1]
 8005a3a:	633b      	str	r3, [r7, #48]	@ 0x30
 8005a3c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	d1e5      	bne.n	8005a0e <UART_Start_Receive_DMA+0xb6>
 8005a42:	68fb      	ldr	r3, [r7, #12]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	3314      	adds	r3, #20
 8005a48:	61bb      	str	r3, [r7, #24]
 8005a4a:	69bb      	ldr	r3, [r7, #24]
 8005a4c:	e853 3f00 	ldrex	r3, [r3]
 8005a50:	617b      	str	r3, [r7, #20]
 8005a52:	697b      	ldr	r3, [r7, #20]
 8005a54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005a58:	653b      	str	r3, [r7, #80]	@ 0x50
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	3314      	adds	r3, #20
 8005a60:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8005a62:	627a      	str	r2, [r7, #36]	@ 0x24
 8005a64:	623b      	str	r3, [r7, #32]
 8005a66:	6a39      	ldr	r1, [r7, #32]
 8005a68:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a6a:	e841 2300 	strex	r3, r2, [r1]
 8005a6e:	61fb      	str	r3, [r7, #28]
 8005a70:	69fb      	ldr	r3, [r7, #28]
 8005a72:	2b00      	cmp	r3, #0
 8005a74:	d1e5      	bne.n	8005a42 <UART_Start_Receive_DMA+0xea>
 8005a76:	2300      	movs	r3, #0
 8005a78:	4618      	mov	r0, r3
 8005a7a:	3760      	adds	r7, #96	@ 0x60
 8005a7c:	46bd      	mov	sp, r7
 8005a7e:	bd80      	pop	{r7, pc}
 8005a80:	080056a9 	.word	0x080056a9
 8005a84:	080057d5 	.word	0x080057d5
 8005a88:	08005811 	.word	0x08005811

08005a8c <UART_EndTxTransfer>:
 8005a8c:	b480      	push	{r7}
 8005a8e:	b089      	sub	sp, #36	@ 0x24
 8005a90:	af00      	add	r7, sp, #0
 8005a92:	6078      	str	r0, [r7, #4]
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	681b      	ldr	r3, [r3, #0]
 8005a98:	330c      	adds	r3, #12
 8005a9a:	60fb      	str	r3, [r7, #12]
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	e853 3f00 	ldrex	r3, [r3]
 8005aa2:	60bb      	str	r3, [r7, #8]
 8005aa4:	68bb      	ldr	r3, [r7, #8]
 8005aa6:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8005aaa:	61fb      	str	r3, [r7, #28]
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	330c      	adds	r3, #12
 8005ab2:	69fa      	ldr	r2, [r7, #28]
 8005ab4:	61ba      	str	r2, [r7, #24]
 8005ab6:	617b      	str	r3, [r7, #20]
 8005ab8:	6979      	ldr	r1, [r7, #20]
 8005aba:	69ba      	ldr	r2, [r7, #24]
 8005abc:	e841 2300 	strex	r3, r2, [r1]
 8005ac0:	613b      	str	r3, [r7, #16]
 8005ac2:	693b      	ldr	r3, [r7, #16]
 8005ac4:	2b00      	cmp	r3, #0
 8005ac6:	d1e5      	bne.n	8005a94 <UART_EndTxTransfer+0x8>
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	2220      	movs	r2, #32
 8005acc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005ad0:	bf00      	nop
 8005ad2:	3724      	adds	r7, #36	@ 0x24
 8005ad4:	46bd      	mov	sp, r7
 8005ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ada:	4770      	bx	lr

08005adc <UART_EndRxTransfer>:
 8005adc:	b480      	push	{r7}
 8005ade:	b095      	sub	sp, #84	@ 0x54
 8005ae0:	af00      	add	r7, sp, #0
 8005ae2:	6078      	str	r0, [r7, #4]
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	330c      	adds	r3, #12
 8005aea:	637b      	str	r3, [r7, #52]	@ 0x34
 8005aec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005aee:	e853 3f00 	ldrex	r3, [r3]
 8005af2:	633b      	str	r3, [r7, #48]	@ 0x30
 8005af4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005af6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005afa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	330c      	adds	r3, #12
 8005b02:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005b04:	643a      	str	r2, [r7, #64]	@ 0x40
 8005b06:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005b08:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005b0a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005b0c:	e841 2300 	strex	r3, r2, [r1]
 8005b10:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005b12:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005b14:	2b00      	cmp	r3, #0
 8005b16:	d1e5      	bne.n	8005ae4 <UART_EndRxTransfer+0x8>
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	3314      	adds	r3, #20
 8005b1e:	623b      	str	r3, [r7, #32]
 8005b20:	6a3b      	ldr	r3, [r7, #32]
 8005b22:	e853 3f00 	ldrex	r3, [r3]
 8005b26:	61fb      	str	r3, [r7, #28]
 8005b28:	69fb      	ldr	r3, [r7, #28]
 8005b2a:	f023 0301 	bic.w	r3, r3, #1
 8005b2e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	3314      	adds	r3, #20
 8005b36:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005b38:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005b3a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005b3c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005b3e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005b40:	e841 2300 	strex	r3, r2, [r1]
 8005b44:	627b      	str	r3, [r7, #36]	@ 0x24
 8005b46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	d1e5      	bne.n	8005b18 <UART_EndRxTransfer+0x3c>
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b50:	2b01      	cmp	r3, #1
 8005b52:	d119      	bne.n	8005b88 <UART_EndRxTransfer+0xac>
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	330c      	adds	r3, #12
 8005b5a:	60fb      	str	r3, [r7, #12]
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	e853 3f00 	ldrex	r3, [r3]
 8005b62:	60bb      	str	r3, [r7, #8]
 8005b64:	68bb      	ldr	r3, [r7, #8]
 8005b66:	f023 0310 	bic.w	r3, r3, #16
 8005b6a:	647b      	str	r3, [r7, #68]	@ 0x44
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	330c      	adds	r3, #12
 8005b72:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005b74:	61ba      	str	r2, [r7, #24]
 8005b76:	617b      	str	r3, [r7, #20]
 8005b78:	6979      	ldr	r1, [r7, #20]
 8005b7a:	69ba      	ldr	r2, [r7, #24]
 8005b7c:	e841 2300 	strex	r3, r2, [r1]
 8005b80:	613b      	str	r3, [r7, #16]
 8005b82:	693b      	ldr	r3, [r7, #16]
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	d1e5      	bne.n	8005b54 <UART_EndRxTransfer+0x78>
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	2220      	movs	r2, #32
 8005b8c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	2200      	movs	r2, #0
 8005b94:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b96:	bf00      	nop
 8005b98:	3754      	adds	r7, #84	@ 0x54
 8005b9a:	46bd      	mov	sp, r7
 8005b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ba0:	4770      	bx	lr

08005ba2 <UART_DMAAbortOnError>:
 8005ba2:	b580      	push	{r7, lr}
 8005ba4:	b084      	sub	sp, #16
 8005ba6:	af00      	add	r7, sp, #0
 8005ba8:	6078      	str	r0, [r7, #4]
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005bae:	60fb      	str	r3, [r7, #12]
 8005bb0:	68fb      	ldr	r3, [r7, #12]
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	2200      	movs	r2, #0
 8005bba:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005bbc:	68f8      	ldr	r0, [r7, #12]
 8005bbe:	f7ff fd5d 	bl	800567c <HAL_UART_ErrorCallback>
 8005bc2:	bf00      	nop
 8005bc4:	3710      	adds	r7, #16
 8005bc6:	46bd      	mov	sp, r7
 8005bc8:	bd80      	pop	{r7, pc}

08005bca <UART_Transmit_IT>:
 8005bca:	b480      	push	{r7}
 8005bcc:	b085      	sub	sp, #20
 8005bce:	af00      	add	r7, sp, #0
 8005bd0:	6078      	str	r0, [r7, #4]
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005bd8:	b2db      	uxtb	r3, r3
 8005bda:	2b21      	cmp	r3, #33	@ 0x21
 8005bdc:	d13e      	bne.n	8005c5c <UART_Transmit_IT+0x92>
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	689b      	ldr	r3, [r3, #8]
 8005be2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005be6:	d114      	bne.n	8005c12 <UART_Transmit_IT+0x48>
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	691b      	ldr	r3, [r3, #16]
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d110      	bne.n	8005c12 <UART_Transmit_IT+0x48>
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	6a1b      	ldr	r3, [r3, #32]
 8005bf4:	60fb      	str	r3, [r7, #12]
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	881b      	ldrh	r3, [r3, #0]
 8005bfa:	461a      	mov	r2, r3
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005c04:	605a      	str	r2, [r3, #4]
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	6a1b      	ldr	r3, [r3, #32]
 8005c0a:	1c9a      	adds	r2, r3, #2
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	621a      	str	r2, [r3, #32]
 8005c10:	e008      	b.n	8005c24 <UART_Transmit_IT+0x5a>
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	6a1b      	ldr	r3, [r3, #32]
 8005c16:	1c59      	adds	r1, r3, #1
 8005c18:	687a      	ldr	r2, [r7, #4]
 8005c1a:	6211      	str	r1, [r2, #32]
 8005c1c:	781a      	ldrb	r2, [r3, #0]
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	605a      	str	r2, [r3, #4]
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005c28:	b29b      	uxth	r3, r3
 8005c2a:	3b01      	subs	r3, #1
 8005c2c:	b29b      	uxth	r3, r3
 8005c2e:	687a      	ldr	r2, [r7, #4]
 8005c30:	4619      	mov	r1, r3
 8005c32:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	d10f      	bne.n	8005c58 <UART_Transmit_IT+0x8e>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	68da      	ldr	r2, [r3, #12]
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005c46:	60da      	str	r2, [r3, #12]
 8005c48:	687b      	ldr	r3, [r7, #4]
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	68da      	ldr	r2, [r3, #12]
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005c56:	60da      	str	r2, [r3, #12]
 8005c58:	2300      	movs	r3, #0
 8005c5a:	e000      	b.n	8005c5e <UART_Transmit_IT+0x94>
 8005c5c:	2302      	movs	r3, #2
 8005c5e:	4618      	mov	r0, r3
 8005c60:	3714      	adds	r7, #20
 8005c62:	46bd      	mov	sp, r7
 8005c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c68:	4770      	bx	lr

08005c6a <UART_EndTransmit_IT>:
 8005c6a:	b580      	push	{r7, lr}
 8005c6c:	b082      	sub	sp, #8
 8005c6e:	af00      	add	r7, sp, #0
 8005c70:	6078      	str	r0, [r7, #4]
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	68da      	ldr	r2, [r3, #12]
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005c80:	60da      	str	r2, [r3, #12]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	2220      	movs	r2, #32
 8005c86:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005c8a:	6878      	ldr	r0, [r7, #4]
 8005c8c:	f7ff fce2 	bl	8005654 <HAL_UART_TxCpltCallback>
 8005c90:	2300      	movs	r3, #0
 8005c92:	4618      	mov	r0, r3
 8005c94:	3708      	adds	r7, #8
 8005c96:	46bd      	mov	sp, r7
 8005c98:	bd80      	pop	{r7, pc}

08005c9a <UART_Receive_IT>:
 8005c9a:	b580      	push	{r7, lr}
 8005c9c:	b08c      	sub	sp, #48	@ 0x30
 8005c9e:	af00      	add	r7, sp, #0
 8005ca0:	6078      	str	r0, [r7, #4]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005ca8:	b2db      	uxtb	r3, r3
 8005caa:	2b22      	cmp	r3, #34	@ 0x22
 8005cac:	f040 80ae 	bne.w	8005e0c <UART_Receive_IT+0x172>
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	689b      	ldr	r3, [r3, #8]
 8005cb4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005cb8:	d117      	bne.n	8005cea <UART_Receive_IT+0x50>
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	691b      	ldr	r3, [r3, #16]
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d113      	bne.n	8005cea <UART_Receive_IT+0x50>
 8005cc2:	2300      	movs	r3, #0
 8005cc4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005cc6:	687b      	ldr	r3, [r7, #4]
 8005cc8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005cca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	685b      	ldr	r3, [r3, #4]
 8005cd2:	b29b      	uxth	r3, r3
 8005cd4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005cd8:	b29a      	uxth	r2, r3
 8005cda:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005cdc:	801a      	strh	r2, [r3, #0]
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ce2:	1c9a      	adds	r2, r3, #2
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	629a      	str	r2, [r3, #40]	@ 0x28
 8005ce8:	e026      	b.n	8005d38 <UART_Receive_IT+0x9e>
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005cee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005cfc:	d007      	beq.n	8005d0e <UART_Receive_IT+0x74>
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	689b      	ldr	r3, [r3, #8]
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d10a      	bne.n	8005d1c <UART_Receive_IT+0x82>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	691b      	ldr	r3, [r3, #16]
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d106      	bne.n	8005d1c <UART_Receive_IT+0x82>
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	685b      	ldr	r3, [r3, #4]
 8005d14:	b2da      	uxtb	r2, r3
 8005d16:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005d18:	701a      	strb	r2, [r3, #0]
 8005d1a:	e008      	b.n	8005d2e <UART_Receive_IT+0x94>
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	685b      	ldr	r3, [r3, #4]
 8005d22:	b2db      	uxtb	r3, r3
 8005d24:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005d28:	b2da      	uxtb	r2, r3
 8005d2a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005d2c:	701a      	strb	r2, [r3, #0]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005d32:	1c5a      	adds	r2, r3, #1
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	629a      	str	r2, [r3, #40]	@ 0x28
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005d3c:	b29b      	uxth	r3, r3
 8005d3e:	3b01      	subs	r3, #1
 8005d40:	b29b      	uxth	r3, r3
 8005d42:	687a      	ldr	r2, [r7, #4]
 8005d44:	4619      	mov	r1, r3
 8005d46:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d15d      	bne.n	8005e08 <UART_Receive_IT+0x16e>
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	68da      	ldr	r2, [r3, #12]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f022 0220 	bic.w	r2, r2, #32
 8005d5a:	60da      	str	r2, [r3, #12]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	68da      	ldr	r2, [r3, #12]
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	681b      	ldr	r3, [r3, #0]
 8005d66:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005d6a:	60da      	str	r2, [r3, #12]
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	681b      	ldr	r3, [r3, #0]
 8005d70:	695a      	ldr	r2, [r3, #20]
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	f022 0201 	bic.w	r2, r2, #1
 8005d7a:	615a      	str	r2, [r3, #20]
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	2220      	movs	r2, #32
 8005d80:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	2200      	movs	r2, #0
 8005d88:	635a      	str	r2, [r3, #52]	@ 0x34
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005d8e:	2b01      	cmp	r3, #1
 8005d90:	d135      	bne.n	8005dfe <UART_Receive_IT+0x164>
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	2200      	movs	r2, #0
 8005d96:	631a      	str	r2, [r3, #48]	@ 0x30
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	330c      	adds	r3, #12
 8005d9e:	617b      	str	r3, [r7, #20]
 8005da0:	697b      	ldr	r3, [r7, #20]
 8005da2:	e853 3f00 	ldrex	r3, [r3]
 8005da6:	613b      	str	r3, [r7, #16]
 8005da8:	693b      	ldr	r3, [r7, #16]
 8005daa:	f023 0310 	bic.w	r3, r3, #16
 8005dae:	627b      	str	r3, [r7, #36]	@ 0x24
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	330c      	adds	r3, #12
 8005db6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005db8:	623a      	str	r2, [r7, #32]
 8005dba:	61fb      	str	r3, [r7, #28]
 8005dbc:	69f9      	ldr	r1, [r7, #28]
 8005dbe:	6a3a      	ldr	r2, [r7, #32]
 8005dc0:	e841 2300 	strex	r3, r2, [r1]
 8005dc4:	61bb      	str	r3, [r7, #24]
 8005dc6:	69bb      	ldr	r3, [r7, #24]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d1e5      	bne.n	8005d98 <UART_Receive_IT+0xfe>
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	f003 0310 	and.w	r3, r3, #16
 8005dd6:	2b10      	cmp	r3, #16
 8005dd8:	d10a      	bne.n	8005df0 <UART_Receive_IT+0x156>
 8005dda:	2300      	movs	r3, #0
 8005ddc:	60fb      	str	r3, [r7, #12]
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	60fb      	str	r3, [r7, #12]
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	685b      	ldr	r3, [r3, #4]
 8005dec:	60fb      	str	r3, [r7, #12]
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005df4:	4619      	mov	r1, r3
 8005df6:	6878      	ldr	r0, [r7, #4]
 8005df8:	f7ff fc4a 	bl	8005690 <HAL_UARTEx_RxEventCallback>
 8005dfc:	e002      	b.n	8005e04 <UART_Receive_IT+0x16a>
 8005dfe:	6878      	ldr	r0, [r7, #4]
 8005e00:	f7fb fb60 	bl	80014c4 <HAL_UART_RxCpltCallback>
 8005e04:	2300      	movs	r3, #0
 8005e06:	e002      	b.n	8005e0e <UART_Receive_IT+0x174>
 8005e08:	2300      	movs	r3, #0
 8005e0a:	e000      	b.n	8005e0e <UART_Receive_IT+0x174>
 8005e0c:	2302      	movs	r3, #2
 8005e0e:	4618      	mov	r0, r3
 8005e10:	3730      	adds	r7, #48	@ 0x30
 8005e12:	46bd      	mov	sp, r7
 8005e14:	bd80      	pop	{r7, pc}
	...

08005e18 <UART_SetConfig>:
 8005e18:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005e1c:	b0c0      	sub	sp, #256	@ 0x100
 8005e1e:	af00      	add	r7, sp, #0
 8005e20:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005e24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	691b      	ldr	r3, [r3, #16]
 8005e2c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005e30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e34:	68d9      	ldr	r1, [r3, #12]
 8005e36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e3a:	681a      	ldr	r2, [r3, #0]
 8005e3c:	ea40 0301 	orr.w	r3, r0, r1
 8005e40:	6113      	str	r3, [r2, #16]
 8005e42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e46:	689a      	ldr	r2, [r3, #8]
 8005e48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e4c:	691b      	ldr	r3, [r3, #16]
 8005e4e:	431a      	orrs	r2, r3
 8005e50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e54:	695b      	ldr	r3, [r3, #20]
 8005e56:	431a      	orrs	r2, r3
 8005e58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e5c:	69db      	ldr	r3, [r3, #28]
 8005e5e:	4313      	orrs	r3, r2
 8005e60:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005e64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	68db      	ldr	r3, [r3, #12]
 8005e6c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005e70:	f021 010c 	bic.w	r1, r1, #12
 8005e74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e78:	681a      	ldr	r2, [r3, #0]
 8005e7a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005e7e:	430b      	orrs	r3, r1
 8005e80:	60d3      	str	r3, [r2, #12]
 8005e82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	695b      	ldr	r3, [r3, #20]
 8005e8a:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005e8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e92:	6999      	ldr	r1, [r3, #24]
 8005e94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e98:	681a      	ldr	r2, [r3, #0]
 8005e9a:	ea40 0301 	orr.w	r3, r0, r1
 8005e9e:	6153      	str	r3, [r2, #20]
 8005ea0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ea4:	681a      	ldr	r2, [r3, #0]
 8005ea6:	4b8f      	ldr	r3, [pc, #572]	@ (80060e4 <UART_SetConfig+0x2cc>)
 8005ea8:	429a      	cmp	r2, r3
 8005eaa:	d005      	beq.n	8005eb8 <UART_SetConfig+0xa0>
 8005eac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005eb0:	681a      	ldr	r2, [r3, #0]
 8005eb2:	4b8d      	ldr	r3, [pc, #564]	@ (80060e8 <UART_SetConfig+0x2d0>)
 8005eb4:	429a      	cmp	r2, r3
 8005eb6:	d104      	bne.n	8005ec2 <UART_SetConfig+0xaa>
 8005eb8:	f7fe fbb8 	bl	800462c <HAL_RCC_GetPCLK2Freq>
 8005ebc:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005ec0:	e003      	b.n	8005eca <UART_SetConfig+0xb2>
 8005ec2:	f7fe fb9f 	bl	8004604 <HAL_RCC_GetPCLK1Freq>
 8005ec6:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005eca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ece:	69db      	ldr	r3, [r3, #28]
 8005ed0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005ed4:	f040 810c 	bne.w	80060f0 <UART_SetConfig+0x2d8>
 8005ed8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005edc:	2200      	movs	r2, #0
 8005ede:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005ee2:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005ee6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8005eea:	4622      	mov	r2, r4
 8005eec:	462b      	mov	r3, r5
 8005eee:	1891      	adds	r1, r2, r2
 8005ef0:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005ef2:	415b      	adcs	r3, r3
 8005ef4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005ef6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005efa:	4621      	mov	r1, r4
 8005efc:	eb12 0801 	adds.w	r8, r2, r1
 8005f00:	4629      	mov	r1, r5
 8005f02:	eb43 0901 	adc.w	r9, r3, r1
 8005f06:	f04f 0200 	mov.w	r2, #0
 8005f0a:	f04f 0300 	mov.w	r3, #0
 8005f0e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005f12:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005f16:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005f1a:	4690      	mov	r8, r2
 8005f1c:	4699      	mov	r9, r3
 8005f1e:	4623      	mov	r3, r4
 8005f20:	eb18 0303 	adds.w	r3, r8, r3
 8005f24:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005f28:	462b      	mov	r3, r5
 8005f2a:	eb49 0303 	adc.w	r3, r9, r3
 8005f2e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005f32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f36:	685b      	ldr	r3, [r3, #4]
 8005f38:	2200      	movs	r2, #0
 8005f3a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005f3e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005f42:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005f46:	460b      	mov	r3, r1
 8005f48:	18db      	adds	r3, r3, r3
 8005f4a:	653b      	str	r3, [r7, #80]	@ 0x50
 8005f4c:	4613      	mov	r3, r2
 8005f4e:	eb42 0303 	adc.w	r3, r2, r3
 8005f52:	657b      	str	r3, [r7, #84]	@ 0x54
 8005f54:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005f58:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005f5c:	f7fa f998 	bl	8000290 <__aeabi_uldivmod>
 8005f60:	4602      	mov	r2, r0
 8005f62:	460b      	mov	r3, r1
 8005f64:	4b61      	ldr	r3, [pc, #388]	@ (80060ec <UART_SetConfig+0x2d4>)
 8005f66:	fba3 2302 	umull	r2, r3, r3, r2
 8005f6a:	095b      	lsrs	r3, r3, #5
 8005f6c:	011c      	lsls	r4, r3, #4
 8005f6e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005f72:	2200      	movs	r2, #0
 8005f74:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005f78:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005f7c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005f80:	4642      	mov	r2, r8
 8005f82:	464b      	mov	r3, r9
 8005f84:	1891      	adds	r1, r2, r2
 8005f86:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005f88:	415b      	adcs	r3, r3
 8005f8a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005f8c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005f90:	4641      	mov	r1, r8
 8005f92:	eb12 0a01 	adds.w	sl, r2, r1
 8005f96:	4649      	mov	r1, r9
 8005f98:	eb43 0b01 	adc.w	fp, r3, r1
 8005f9c:	f04f 0200 	mov.w	r2, #0
 8005fa0:	f04f 0300 	mov.w	r3, #0
 8005fa4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005fa8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005fac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005fb0:	4692      	mov	sl, r2
 8005fb2:	469b      	mov	fp, r3
 8005fb4:	4643      	mov	r3, r8
 8005fb6:	eb1a 0303 	adds.w	r3, sl, r3
 8005fba:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005fbe:	464b      	mov	r3, r9
 8005fc0:	eb4b 0303 	adc.w	r3, fp, r3
 8005fc4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005fc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fcc:	685b      	ldr	r3, [r3, #4]
 8005fce:	2200      	movs	r2, #0
 8005fd0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005fd4:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8005fd8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005fdc:	460b      	mov	r3, r1
 8005fde:	18db      	adds	r3, r3, r3
 8005fe0:	643b      	str	r3, [r7, #64]	@ 0x40
 8005fe2:	4613      	mov	r3, r2
 8005fe4:	eb42 0303 	adc.w	r3, r2, r3
 8005fe8:	647b      	str	r3, [r7, #68]	@ 0x44
 8005fea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005fee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8005ff2:	f7fa f94d 	bl	8000290 <__aeabi_uldivmod>
 8005ff6:	4602      	mov	r2, r0
 8005ff8:	460b      	mov	r3, r1
 8005ffa:	4611      	mov	r1, r2
 8005ffc:	4b3b      	ldr	r3, [pc, #236]	@ (80060ec <UART_SetConfig+0x2d4>)
 8005ffe:	fba3 2301 	umull	r2, r3, r3, r1
 8006002:	095b      	lsrs	r3, r3, #5
 8006004:	2264      	movs	r2, #100	@ 0x64
 8006006:	fb02 f303 	mul.w	r3, r2, r3
 800600a:	1acb      	subs	r3, r1, r3
 800600c:	00db      	lsls	r3, r3, #3
 800600e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8006012:	4b36      	ldr	r3, [pc, #216]	@ (80060ec <UART_SetConfig+0x2d4>)
 8006014:	fba3 2302 	umull	r2, r3, r3, r2
 8006018:	095b      	lsrs	r3, r3, #5
 800601a:	005b      	lsls	r3, r3, #1
 800601c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006020:	441c      	add	r4, r3
 8006022:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006026:	2200      	movs	r2, #0
 8006028:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800602c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8006030:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8006034:	4642      	mov	r2, r8
 8006036:	464b      	mov	r3, r9
 8006038:	1891      	adds	r1, r2, r2
 800603a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800603c:	415b      	adcs	r3, r3
 800603e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006040:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006044:	4641      	mov	r1, r8
 8006046:	1851      	adds	r1, r2, r1
 8006048:	6339      	str	r1, [r7, #48]	@ 0x30
 800604a:	4649      	mov	r1, r9
 800604c:	414b      	adcs	r3, r1
 800604e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006050:	f04f 0200 	mov.w	r2, #0
 8006054:	f04f 0300 	mov.w	r3, #0
 8006058:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 800605c:	4659      	mov	r1, fp
 800605e:	00cb      	lsls	r3, r1, #3
 8006060:	4651      	mov	r1, sl
 8006062:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006066:	4651      	mov	r1, sl
 8006068:	00ca      	lsls	r2, r1, #3
 800606a:	4610      	mov	r0, r2
 800606c:	4619      	mov	r1, r3
 800606e:	4603      	mov	r3, r0
 8006070:	4642      	mov	r2, r8
 8006072:	189b      	adds	r3, r3, r2
 8006074:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006078:	464b      	mov	r3, r9
 800607a:	460a      	mov	r2, r1
 800607c:	eb42 0303 	adc.w	r3, r2, r3
 8006080:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006084:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006088:	685b      	ldr	r3, [r3, #4]
 800608a:	2200      	movs	r2, #0
 800608c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006090:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006094:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006098:	460b      	mov	r3, r1
 800609a:	18db      	adds	r3, r3, r3
 800609c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800609e:	4613      	mov	r3, r2
 80060a0:	eb42 0303 	adc.w	r3, r2, r3
 80060a4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80060a6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80060aa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80060ae:	f7fa f8ef 	bl	8000290 <__aeabi_uldivmod>
 80060b2:	4602      	mov	r2, r0
 80060b4:	460b      	mov	r3, r1
 80060b6:	4b0d      	ldr	r3, [pc, #52]	@ (80060ec <UART_SetConfig+0x2d4>)
 80060b8:	fba3 1302 	umull	r1, r3, r3, r2
 80060bc:	095b      	lsrs	r3, r3, #5
 80060be:	2164      	movs	r1, #100	@ 0x64
 80060c0:	fb01 f303 	mul.w	r3, r1, r3
 80060c4:	1ad3      	subs	r3, r2, r3
 80060c6:	00db      	lsls	r3, r3, #3
 80060c8:	3332      	adds	r3, #50	@ 0x32
 80060ca:	4a08      	ldr	r2, [pc, #32]	@ (80060ec <UART_SetConfig+0x2d4>)
 80060cc:	fba2 2303 	umull	r2, r3, r2, r3
 80060d0:	095b      	lsrs	r3, r3, #5
 80060d2:	f003 0207 	and.w	r2, r3, #7
 80060d6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	4422      	add	r2, r4
 80060de:	609a      	str	r2, [r3, #8]
 80060e0:	e106      	b.n	80062f0 <UART_SetConfig+0x4d8>
 80060e2:	bf00      	nop
 80060e4:	40011000 	.word	0x40011000
 80060e8:	40011400 	.word	0x40011400
 80060ec:	51eb851f 	.word	0x51eb851f
 80060f0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80060f4:	2200      	movs	r2, #0
 80060f6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80060fa:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80060fe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8006102:	4642      	mov	r2, r8
 8006104:	464b      	mov	r3, r9
 8006106:	1891      	adds	r1, r2, r2
 8006108:	6239      	str	r1, [r7, #32]
 800610a:	415b      	adcs	r3, r3
 800610c:	627b      	str	r3, [r7, #36]	@ 0x24
 800610e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006112:	4641      	mov	r1, r8
 8006114:	1854      	adds	r4, r2, r1
 8006116:	4649      	mov	r1, r9
 8006118:	eb43 0501 	adc.w	r5, r3, r1
 800611c:	f04f 0200 	mov.w	r2, #0
 8006120:	f04f 0300 	mov.w	r3, #0
 8006124:	00eb      	lsls	r3, r5, #3
 8006126:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800612a:	00e2      	lsls	r2, r4, #3
 800612c:	4614      	mov	r4, r2
 800612e:	461d      	mov	r5, r3
 8006130:	4643      	mov	r3, r8
 8006132:	18e3      	adds	r3, r4, r3
 8006134:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006138:	464b      	mov	r3, r9
 800613a:	eb45 0303 	adc.w	r3, r5, r3
 800613e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006142:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006146:	685b      	ldr	r3, [r3, #4]
 8006148:	2200      	movs	r2, #0
 800614a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800614e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006152:	f04f 0200 	mov.w	r2, #0
 8006156:	f04f 0300 	mov.w	r3, #0
 800615a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800615e:	4629      	mov	r1, r5
 8006160:	008b      	lsls	r3, r1, #2
 8006162:	4621      	mov	r1, r4
 8006164:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006168:	4621      	mov	r1, r4
 800616a:	008a      	lsls	r2, r1, #2
 800616c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006170:	f7fa f88e 	bl	8000290 <__aeabi_uldivmod>
 8006174:	4602      	mov	r2, r0
 8006176:	460b      	mov	r3, r1
 8006178:	4b60      	ldr	r3, [pc, #384]	@ (80062fc <UART_SetConfig+0x4e4>)
 800617a:	fba3 2302 	umull	r2, r3, r3, r2
 800617e:	095b      	lsrs	r3, r3, #5
 8006180:	011c      	lsls	r4, r3, #4
 8006182:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006186:	2200      	movs	r2, #0
 8006188:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800618c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006190:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006194:	4642      	mov	r2, r8
 8006196:	464b      	mov	r3, r9
 8006198:	1891      	adds	r1, r2, r2
 800619a:	61b9      	str	r1, [r7, #24]
 800619c:	415b      	adcs	r3, r3
 800619e:	61fb      	str	r3, [r7, #28]
 80061a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80061a4:	4641      	mov	r1, r8
 80061a6:	1851      	adds	r1, r2, r1
 80061a8:	6139      	str	r1, [r7, #16]
 80061aa:	4649      	mov	r1, r9
 80061ac:	414b      	adcs	r3, r1
 80061ae:	617b      	str	r3, [r7, #20]
 80061b0:	f04f 0200 	mov.w	r2, #0
 80061b4:	f04f 0300 	mov.w	r3, #0
 80061b8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80061bc:	4659      	mov	r1, fp
 80061be:	00cb      	lsls	r3, r1, #3
 80061c0:	4651      	mov	r1, sl
 80061c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80061c6:	4651      	mov	r1, sl
 80061c8:	00ca      	lsls	r2, r1, #3
 80061ca:	4610      	mov	r0, r2
 80061cc:	4619      	mov	r1, r3
 80061ce:	4603      	mov	r3, r0
 80061d0:	4642      	mov	r2, r8
 80061d2:	189b      	adds	r3, r3, r2
 80061d4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80061d8:	464b      	mov	r3, r9
 80061da:	460a      	mov	r2, r1
 80061dc:	eb42 0303 	adc.w	r3, r2, r3
 80061e0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80061e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80061e8:	685b      	ldr	r3, [r3, #4]
 80061ea:	2200      	movs	r2, #0
 80061ec:	67bb      	str	r3, [r7, #120]	@ 0x78
 80061ee:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80061f0:	f04f 0200 	mov.w	r2, #0
 80061f4:	f04f 0300 	mov.w	r3, #0
 80061f8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80061fc:	4649      	mov	r1, r9
 80061fe:	008b      	lsls	r3, r1, #2
 8006200:	4641      	mov	r1, r8
 8006202:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006206:	4641      	mov	r1, r8
 8006208:	008a      	lsls	r2, r1, #2
 800620a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800620e:	f7fa f83f 	bl	8000290 <__aeabi_uldivmod>
 8006212:	4602      	mov	r2, r0
 8006214:	460b      	mov	r3, r1
 8006216:	4611      	mov	r1, r2
 8006218:	4b38      	ldr	r3, [pc, #224]	@ (80062fc <UART_SetConfig+0x4e4>)
 800621a:	fba3 2301 	umull	r2, r3, r3, r1
 800621e:	095b      	lsrs	r3, r3, #5
 8006220:	2264      	movs	r2, #100	@ 0x64
 8006222:	fb02 f303 	mul.w	r3, r2, r3
 8006226:	1acb      	subs	r3, r1, r3
 8006228:	011b      	lsls	r3, r3, #4
 800622a:	3332      	adds	r3, #50	@ 0x32
 800622c:	4a33      	ldr	r2, [pc, #204]	@ (80062fc <UART_SetConfig+0x4e4>)
 800622e:	fba2 2303 	umull	r2, r3, r2, r3
 8006232:	095b      	lsrs	r3, r3, #5
 8006234:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006238:	441c      	add	r4, r3
 800623a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800623e:	2200      	movs	r2, #0
 8006240:	673b      	str	r3, [r7, #112]	@ 0x70
 8006242:	677a      	str	r2, [r7, #116]	@ 0x74
 8006244:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8006248:	4642      	mov	r2, r8
 800624a:	464b      	mov	r3, r9
 800624c:	1891      	adds	r1, r2, r2
 800624e:	60b9      	str	r1, [r7, #8]
 8006250:	415b      	adcs	r3, r3
 8006252:	60fb      	str	r3, [r7, #12]
 8006254:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006258:	4641      	mov	r1, r8
 800625a:	1851      	adds	r1, r2, r1
 800625c:	6039      	str	r1, [r7, #0]
 800625e:	4649      	mov	r1, r9
 8006260:	414b      	adcs	r3, r1
 8006262:	607b      	str	r3, [r7, #4]
 8006264:	f04f 0200 	mov.w	r2, #0
 8006268:	f04f 0300 	mov.w	r3, #0
 800626c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006270:	4659      	mov	r1, fp
 8006272:	00cb      	lsls	r3, r1, #3
 8006274:	4651      	mov	r1, sl
 8006276:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800627a:	4651      	mov	r1, sl
 800627c:	00ca      	lsls	r2, r1, #3
 800627e:	4610      	mov	r0, r2
 8006280:	4619      	mov	r1, r3
 8006282:	4603      	mov	r3, r0
 8006284:	4642      	mov	r2, r8
 8006286:	189b      	adds	r3, r3, r2
 8006288:	66bb      	str	r3, [r7, #104]	@ 0x68
 800628a:	464b      	mov	r3, r9
 800628c:	460a      	mov	r2, r1
 800628e:	eb42 0303 	adc.w	r3, r2, r3
 8006292:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006294:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006298:	685b      	ldr	r3, [r3, #4]
 800629a:	2200      	movs	r2, #0
 800629c:	663b      	str	r3, [r7, #96]	@ 0x60
 800629e:	667a      	str	r2, [r7, #100]	@ 0x64
 80062a0:	f04f 0200 	mov.w	r2, #0
 80062a4:	f04f 0300 	mov.w	r3, #0
 80062a8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80062ac:	4649      	mov	r1, r9
 80062ae:	008b      	lsls	r3, r1, #2
 80062b0:	4641      	mov	r1, r8
 80062b2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80062b6:	4641      	mov	r1, r8
 80062b8:	008a      	lsls	r2, r1, #2
 80062ba:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80062be:	f7f9 ffe7 	bl	8000290 <__aeabi_uldivmod>
 80062c2:	4602      	mov	r2, r0
 80062c4:	460b      	mov	r3, r1
 80062c6:	4b0d      	ldr	r3, [pc, #52]	@ (80062fc <UART_SetConfig+0x4e4>)
 80062c8:	fba3 1302 	umull	r1, r3, r3, r2
 80062cc:	095b      	lsrs	r3, r3, #5
 80062ce:	2164      	movs	r1, #100	@ 0x64
 80062d0:	fb01 f303 	mul.w	r3, r1, r3
 80062d4:	1ad3      	subs	r3, r2, r3
 80062d6:	011b      	lsls	r3, r3, #4
 80062d8:	3332      	adds	r3, #50	@ 0x32
 80062da:	4a08      	ldr	r2, [pc, #32]	@ (80062fc <UART_SetConfig+0x4e4>)
 80062dc:	fba2 2303 	umull	r2, r3, r2, r3
 80062e0:	095b      	lsrs	r3, r3, #5
 80062e2:	f003 020f 	and.w	r2, r3, #15
 80062e6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	4422      	add	r2, r4
 80062ee:	609a      	str	r2, [r3, #8]
 80062f0:	bf00      	nop
 80062f2:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80062f6:	46bd      	mov	sp, r7
 80062f8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80062fc:	51eb851f 	.word	0x51eb851f

08006300 <_strtol_l.isra.0>:
 8006300:	2b24      	cmp	r3, #36	@ 0x24
 8006302:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006306:	4686      	mov	lr, r0
 8006308:	4690      	mov	r8, r2
 800630a:	d801      	bhi.n	8006310 <_strtol_l.isra.0+0x10>
 800630c:	2b01      	cmp	r3, #1
 800630e:	d106      	bne.n	800631e <_strtol_l.isra.0+0x1e>
 8006310:	f000 fa72 	bl	80067f8 <__errno>
 8006314:	2316      	movs	r3, #22
 8006316:	6003      	str	r3, [r0, #0]
 8006318:	2000      	movs	r0, #0
 800631a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800631e:	4834      	ldr	r0, [pc, #208]	@ (80063f0 <_strtol_l.isra.0+0xf0>)
 8006320:	460d      	mov	r5, r1
 8006322:	462a      	mov	r2, r5
 8006324:	f815 4b01 	ldrb.w	r4, [r5], #1
 8006328:	5d06      	ldrb	r6, [r0, r4]
 800632a:	f016 0608 	ands.w	r6, r6, #8
 800632e:	d1f8      	bne.n	8006322 <_strtol_l.isra.0+0x22>
 8006330:	2c2d      	cmp	r4, #45	@ 0x2d
 8006332:	d110      	bne.n	8006356 <_strtol_l.isra.0+0x56>
 8006334:	782c      	ldrb	r4, [r5, #0]
 8006336:	2601      	movs	r6, #1
 8006338:	1c95      	adds	r5, r2, #2
 800633a:	f033 0210 	bics.w	r2, r3, #16
 800633e:	d115      	bne.n	800636c <_strtol_l.isra.0+0x6c>
 8006340:	2c30      	cmp	r4, #48	@ 0x30
 8006342:	d10d      	bne.n	8006360 <_strtol_l.isra.0+0x60>
 8006344:	782a      	ldrb	r2, [r5, #0]
 8006346:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800634a:	2a58      	cmp	r2, #88	@ 0x58
 800634c:	d108      	bne.n	8006360 <_strtol_l.isra.0+0x60>
 800634e:	786c      	ldrb	r4, [r5, #1]
 8006350:	3502      	adds	r5, #2
 8006352:	2310      	movs	r3, #16
 8006354:	e00a      	b.n	800636c <_strtol_l.isra.0+0x6c>
 8006356:	2c2b      	cmp	r4, #43	@ 0x2b
 8006358:	bf04      	itt	eq
 800635a:	782c      	ldrbeq	r4, [r5, #0]
 800635c:	1c95      	addeq	r5, r2, #2
 800635e:	e7ec      	b.n	800633a <_strtol_l.isra.0+0x3a>
 8006360:	2b00      	cmp	r3, #0
 8006362:	d1f6      	bne.n	8006352 <_strtol_l.isra.0+0x52>
 8006364:	2c30      	cmp	r4, #48	@ 0x30
 8006366:	bf14      	ite	ne
 8006368:	230a      	movne	r3, #10
 800636a:	2308      	moveq	r3, #8
 800636c:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8006370:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006374:	2200      	movs	r2, #0
 8006376:	fbbc f9f3 	udiv	r9, ip, r3
 800637a:	4610      	mov	r0, r2
 800637c:	fb03 ca19 	mls	sl, r3, r9, ip
 8006380:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8006384:	2f09      	cmp	r7, #9
 8006386:	d80f      	bhi.n	80063a8 <_strtol_l.isra.0+0xa8>
 8006388:	463c      	mov	r4, r7
 800638a:	42a3      	cmp	r3, r4
 800638c:	dd1b      	ble.n	80063c6 <_strtol_l.isra.0+0xc6>
 800638e:	1c57      	adds	r7, r2, #1
 8006390:	d007      	beq.n	80063a2 <_strtol_l.isra.0+0xa2>
 8006392:	4581      	cmp	r9, r0
 8006394:	d314      	bcc.n	80063c0 <_strtol_l.isra.0+0xc0>
 8006396:	d101      	bne.n	800639c <_strtol_l.isra.0+0x9c>
 8006398:	45a2      	cmp	sl, r4
 800639a:	db11      	blt.n	80063c0 <_strtol_l.isra.0+0xc0>
 800639c:	fb00 4003 	mla	r0, r0, r3, r4
 80063a0:	2201      	movs	r2, #1
 80063a2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80063a6:	e7eb      	b.n	8006380 <_strtol_l.isra.0+0x80>
 80063a8:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80063ac:	2f19      	cmp	r7, #25
 80063ae:	d801      	bhi.n	80063b4 <_strtol_l.isra.0+0xb4>
 80063b0:	3c37      	subs	r4, #55	@ 0x37
 80063b2:	e7ea      	b.n	800638a <_strtol_l.isra.0+0x8a>
 80063b4:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80063b8:	2f19      	cmp	r7, #25
 80063ba:	d804      	bhi.n	80063c6 <_strtol_l.isra.0+0xc6>
 80063bc:	3c57      	subs	r4, #87	@ 0x57
 80063be:	e7e4      	b.n	800638a <_strtol_l.isra.0+0x8a>
 80063c0:	f04f 32ff 	mov.w	r2, #4294967295
 80063c4:	e7ed      	b.n	80063a2 <_strtol_l.isra.0+0xa2>
 80063c6:	1c53      	adds	r3, r2, #1
 80063c8:	d108      	bne.n	80063dc <_strtol_l.isra.0+0xdc>
 80063ca:	2322      	movs	r3, #34	@ 0x22
 80063cc:	f8ce 3000 	str.w	r3, [lr]
 80063d0:	4660      	mov	r0, ip
 80063d2:	f1b8 0f00 	cmp.w	r8, #0
 80063d6:	d0a0      	beq.n	800631a <_strtol_l.isra.0+0x1a>
 80063d8:	1e69      	subs	r1, r5, #1
 80063da:	e006      	b.n	80063ea <_strtol_l.isra.0+0xea>
 80063dc:	b106      	cbz	r6, 80063e0 <_strtol_l.isra.0+0xe0>
 80063de:	4240      	negs	r0, r0
 80063e0:	f1b8 0f00 	cmp.w	r8, #0
 80063e4:	d099      	beq.n	800631a <_strtol_l.isra.0+0x1a>
 80063e6:	2a00      	cmp	r2, #0
 80063e8:	d1f6      	bne.n	80063d8 <_strtol_l.isra.0+0xd8>
 80063ea:	f8c8 1000 	str.w	r1, [r8]
 80063ee:	e794      	b.n	800631a <_strtol_l.isra.0+0x1a>
 80063f0:	0800786d 	.word	0x0800786d

080063f4 <strtol>:
 80063f4:	4613      	mov	r3, r2
 80063f6:	460a      	mov	r2, r1
 80063f8:	4601      	mov	r1, r0
 80063fa:	4802      	ldr	r0, [pc, #8]	@ (8006404 <strtol+0x10>)
 80063fc:	6800      	ldr	r0, [r0, #0]
 80063fe:	f7ff bf7f 	b.w	8006300 <_strtol_l.isra.0>
 8006402:	bf00      	nop
 8006404:	2000003c 	.word	0x2000003c

08006408 <std>:
 8006408:	2300      	movs	r3, #0
 800640a:	b510      	push	{r4, lr}
 800640c:	4604      	mov	r4, r0
 800640e:	e9c0 3300 	strd	r3, r3, [r0]
 8006412:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006416:	6083      	str	r3, [r0, #8]
 8006418:	8181      	strh	r1, [r0, #12]
 800641a:	6643      	str	r3, [r0, #100]	@ 0x64
 800641c:	81c2      	strh	r2, [r0, #14]
 800641e:	6183      	str	r3, [r0, #24]
 8006420:	4619      	mov	r1, r3
 8006422:	2208      	movs	r2, #8
 8006424:	305c      	adds	r0, #92	@ 0x5c
 8006426:	f000 f93c 	bl	80066a2 <memset>
 800642a:	4b0d      	ldr	r3, [pc, #52]	@ (8006460 <std+0x58>)
 800642c:	6263      	str	r3, [r4, #36]	@ 0x24
 800642e:	4b0d      	ldr	r3, [pc, #52]	@ (8006464 <std+0x5c>)
 8006430:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006432:	4b0d      	ldr	r3, [pc, #52]	@ (8006468 <std+0x60>)
 8006434:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006436:	4b0d      	ldr	r3, [pc, #52]	@ (800646c <std+0x64>)
 8006438:	6323      	str	r3, [r4, #48]	@ 0x30
 800643a:	4b0d      	ldr	r3, [pc, #52]	@ (8006470 <std+0x68>)
 800643c:	6224      	str	r4, [r4, #32]
 800643e:	429c      	cmp	r4, r3
 8006440:	d006      	beq.n	8006450 <std+0x48>
 8006442:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006446:	4294      	cmp	r4, r2
 8006448:	d002      	beq.n	8006450 <std+0x48>
 800644a:	33d0      	adds	r3, #208	@ 0xd0
 800644c:	429c      	cmp	r4, r3
 800644e:	d105      	bne.n	800645c <std+0x54>
 8006450:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006458:	f000 b9f8 	b.w	800684c <__retarget_lock_init_recursive>
 800645c:	bd10      	pop	{r4, pc}
 800645e:	bf00      	nop
 8006460:	0800661d 	.word	0x0800661d
 8006464:	0800663f 	.word	0x0800663f
 8006468:	08006677 	.word	0x08006677
 800646c:	0800669b 	.word	0x0800669b
 8006470:	20013bd0 	.word	0x20013bd0

08006474 <stdio_exit_handler>:
 8006474:	4a02      	ldr	r2, [pc, #8]	@ (8006480 <stdio_exit_handler+0xc>)
 8006476:	4903      	ldr	r1, [pc, #12]	@ (8006484 <stdio_exit_handler+0x10>)
 8006478:	4803      	ldr	r0, [pc, #12]	@ (8006488 <stdio_exit_handler+0x14>)
 800647a:	f000 b869 	b.w	8006550 <_fwalk_sglue>
 800647e:	bf00      	nop
 8006480:	20000030 	.word	0x20000030
 8006484:	080073e5 	.word	0x080073e5
 8006488:	20000040 	.word	0x20000040

0800648c <cleanup_stdio>:
 800648c:	6841      	ldr	r1, [r0, #4]
 800648e:	4b0c      	ldr	r3, [pc, #48]	@ (80064c0 <cleanup_stdio+0x34>)
 8006490:	4299      	cmp	r1, r3
 8006492:	b510      	push	{r4, lr}
 8006494:	4604      	mov	r4, r0
 8006496:	d001      	beq.n	800649c <cleanup_stdio+0x10>
 8006498:	f000 ffa4 	bl	80073e4 <_fflush_r>
 800649c:	68a1      	ldr	r1, [r4, #8]
 800649e:	4b09      	ldr	r3, [pc, #36]	@ (80064c4 <cleanup_stdio+0x38>)
 80064a0:	4299      	cmp	r1, r3
 80064a2:	d002      	beq.n	80064aa <cleanup_stdio+0x1e>
 80064a4:	4620      	mov	r0, r4
 80064a6:	f000 ff9d 	bl	80073e4 <_fflush_r>
 80064aa:	68e1      	ldr	r1, [r4, #12]
 80064ac:	4b06      	ldr	r3, [pc, #24]	@ (80064c8 <cleanup_stdio+0x3c>)
 80064ae:	4299      	cmp	r1, r3
 80064b0:	d004      	beq.n	80064bc <cleanup_stdio+0x30>
 80064b2:	4620      	mov	r0, r4
 80064b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064b8:	f000 bf94 	b.w	80073e4 <_fflush_r>
 80064bc:	bd10      	pop	{r4, pc}
 80064be:	bf00      	nop
 80064c0:	20013bd0 	.word	0x20013bd0
 80064c4:	20013c38 	.word	0x20013c38
 80064c8:	20013ca0 	.word	0x20013ca0

080064cc <global_stdio_init.part.0>:
 80064cc:	b510      	push	{r4, lr}
 80064ce:	4b0b      	ldr	r3, [pc, #44]	@ (80064fc <global_stdio_init.part.0+0x30>)
 80064d0:	4c0b      	ldr	r4, [pc, #44]	@ (8006500 <global_stdio_init.part.0+0x34>)
 80064d2:	4a0c      	ldr	r2, [pc, #48]	@ (8006504 <global_stdio_init.part.0+0x38>)
 80064d4:	601a      	str	r2, [r3, #0]
 80064d6:	4620      	mov	r0, r4
 80064d8:	2200      	movs	r2, #0
 80064da:	2104      	movs	r1, #4
 80064dc:	f7ff ff94 	bl	8006408 <std>
 80064e0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80064e4:	2201      	movs	r2, #1
 80064e6:	2109      	movs	r1, #9
 80064e8:	f7ff ff8e 	bl	8006408 <std>
 80064ec:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80064f0:	2202      	movs	r2, #2
 80064f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064f6:	2112      	movs	r1, #18
 80064f8:	f7ff bf86 	b.w	8006408 <std>
 80064fc:	20013d08 	.word	0x20013d08
 8006500:	20013bd0 	.word	0x20013bd0
 8006504:	08006475 	.word	0x08006475

08006508 <__sfp_lock_acquire>:
 8006508:	4801      	ldr	r0, [pc, #4]	@ (8006510 <__sfp_lock_acquire+0x8>)
 800650a:	f000 b9a0 	b.w	800684e <__retarget_lock_acquire_recursive>
 800650e:	bf00      	nop
 8006510:	20013d11 	.word	0x20013d11

08006514 <__sfp_lock_release>:
 8006514:	4801      	ldr	r0, [pc, #4]	@ (800651c <__sfp_lock_release+0x8>)
 8006516:	f000 b99b 	b.w	8006850 <__retarget_lock_release_recursive>
 800651a:	bf00      	nop
 800651c:	20013d11 	.word	0x20013d11

08006520 <__sinit>:
 8006520:	b510      	push	{r4, lr}
 8006522:	4604      	mov	r4, r0
 8006524:	f7ff fff0 	bl	8006508 <__sfp_lock_acquire>
 8006528:	6a23      	ldr	r3, [r4, #32]
 800652a:	b11b      	cbz	r3, 8006534 <__sinit+0x14>
 800652c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006530:	f7ff bff0 	b.w	8006514 <__sfp_lock_release>
 8006534:	4b04      	ldr	r3, [pc, #16]	@ (8006548 <__sinit+0x28>)
 8006536:	6223      	str	r3, [r4, #32]
 8006538:	4b04      	ldr	r3, [pc, #16]	@ (800654c <__sinit+0x2c>)
 800653a:	681b      	ldr	r3, [r3, #0]
 800653c:	2b00      	cmp	r3, #0
 800653e:	d1f5      	bne.n	800652c <__sinit+0xc>
 8006540:	f7ff ffc4 	bl	80064cc <global_stdio_init.part.0>
 8006544:	e7f2      	b.n	800652c <__sinit+0xc>
 8006546:	bf00      	nop
 8006548:	0800648d 	.word	0x0800648d
 800654c:	20013d08 	.word	0x20013d08

08006550 <_fwalk_sglue>:
 8006550:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006554:	4607      	mov	r7, r0
 8006556:	4688      	mov	r8, r1
 8006558:	4614      	mov	r4, r2
 800655a:	2600      	movs	r6, #0
 800655c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006560:	f1b9 0901 	subs.w	r9, r9, #1
 8006564:	d505      	bpl.n	8006572 <_fwalk_sglue+0x22>
 8006566:	6824      	ldr	r4, [r4, #0]
 8006568:	2c00      	cmp	r4, #0
 800656a:	d1f7      	bne.n	800655c <_fwalk_sglue+0xc>
 800656c:	4630      	mov	r0, r6
 800656e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006572:	89ab      	ldrh	r3, [r5, #12]
 8006574:	2b01      	cmp	r3, #1
 8006576:	d907      	bls.n	8006588 <_fwalk_sglue+0x38>
 8006578:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800657c:	3301      	adds	r3, #1
 800657e:	d003      	beq.n	8006588 <_fwalk_sglue+0x38>
 8006580:	4629      	mov	r1, r5
 8006582:	4638      	mov	r0, r7
 8006584:	47c0      	blx	r8
 8006586:	4306      	orrs	r6, r0
 8006588:	3568      	adds	r5, #104	@ 0x68
 800658a:	e7e9      	b.n	8006560 <_fwalk_sglue+0x10>

0800658c <iprintf>:
 800658c:	b40f      	push	{r0, r1, r2, r3}
 800658e:	b507      	push	{r0, r1, r2, lr}
 8006590:	4906      	ldr	r1, [pc, #24]	@ (80065ac <iprintf+0x20>)
 8006592:	ab04      	add	r3, sp, #16
 8006594:	6808      	ldr	r0, [r1, #0]
 8006596:	f853 2b04 	ldr.w	r2, [r3], #4
 800659a:	6881      	ldr	r1, [r0, #8]
 800659c:	9301      	str	r3, [sp, #4]
 800659e:	f000 fbf9 	bl	8006d94 <_vfiprintf_r>
 80065a2:	b003      	add	sp, #12
 80065a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80065a8:	b004      	add	sp, #16
 80065aa:	4770      	bx	lr
 80065ac:	2000003c 	.word	0x2000003c

080065b0 <sniprintf>:
 80065b0:	b40c      	push	{r2, r3}
 80065b2:	b530      	push	{r4, r5, lr}
 80065b4:	4b18      	ldr	r3, [pc, #96]	@ (8006618 <sniprintf+0x68>)
 80065b6:	1e0c      	subs	r4, r1, #0
 80065b8:	681d      	ldr	r5, [r3, #0]
 80065ba:	b09d      	sub	sp, #116	@ 0x74
 80065bc:	da08      	bge.n	80065d0 <sniprintf+0x20>
 80065be:	238b      	movs	r3, #139	@ 0x8b
 80065c0:	602b      	str	r3, [r5, #0]
 80065c2:	f04f 30ff 	mov.w	r0, #4294967295
 80065c6:	b01d      	add	sp, #116	@ 0x74
 80065c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80065cc:	b002      	add	sp, #8
 80065ce:	4770      	bx	lr
 80065d0:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80065d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80065d8:	f04f 0300 	mov.w	r3, #0
 80065dc:	931b      	str	r3, [sp, #108]	@ 0x6c
 80065de:	bf14      	ite	ne
 80065e0:	f104 33ff 	addne.w	r3, r4, #4294967295
 80065e4:	4623      	moveq	r3, r4
 80065e6:	9304      	str	r3, [sp, #16]
 80065e8:	9307      	str	r3, [sp, #28]
 80065ea:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80065ee:	9002      	str	r0, [sp, #8]
 80065f0:	9006      	str	r0, [sp, #24]
 80065f2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80065f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80065f8:	ab21      	add	r3, sp, #132	@ 0x84
 80065fa:	a902      	add	r1, sp, #8
 80065fc:	4628      	mov	r0, r5
 80065fe:	9301      	str	r3, [sp, #4]
 8006600:	f000 faa2 	bl	8006b48 <_svfiprintf_r>
 8006604:	1c43      	adds	r3, r0, #1
 8006606:	bfbc      	itt	lt
 8006608:	238b      	movlt	r3, #139	@ 0x8b
 800660a:	602b      	strlt	r3, [r5, #0]
 800660c:	2c00      	cmp	r4, #0
 800660e:	d0da      	beq.n	80065c6 <sniprintf+0x16>
 8006610:	9b02      	ldr	r3, [sp, #8]
 8006612:	2200      	movs	r2, #0
 8006614:	701a      	strb	r2, [r3, #0]
 8006616:	e7d6      	b.n	80065c6 <sniprintf+0x16>
 8006618:	2000003c 	.word	0x2000003c

0800661c <__sread>:
 800661c:	b510      	push	{r4, lr}
 800661e:	460c      	mov	r4, r1
 8006620:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006624:	f000 f8c4 	bl	80067b0 <_read_r>
 8006628:	2800      	cmp	r0, #0
 800662a:	bfab      	itete	ge
 800662c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800662e:	89a3      	ldrhlt	r3, [r4, #12]
 8006630:	181b      	addge	r3, r3, r0
 8006632:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006636:	bfac      	ite	ge
 8006638:	6563      	strge	r3, [r4, #84]	@ 0x54
 800663a:	81a3      	strhlt	r3, [r4, #12]
 800663c:	bd10      	pop	{r4, pc}

0800663e <__swrite>:
 800663e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006642:	461f      	mov	r7, r3
 8006644:	898b      	ldrh	r3, [r1, #12]
 8006646:	05db      	lsls	r3, r3, #23
 8006648:	4605      	mov	r5, r0
 800664a:	460c      	mov	r4, r1
 800664c:	4616      	mov	r6, r2
 800664e:	d505      	bpl.n	800665c <__swrite+0x1e>
 8006650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006654:	2302      	movs	r3, #2
 8006656:	2200      	movs	r2, #0
 8006658:	f000 f898 	bl	800678c <_lseek_r>
 800665c:	89a3      	ldrh	r3, [r4, #12]
 800665e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006662:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006666:	81a3      	strh	r3, [r4, #12]
 8006668:	4632      	mov	r2, r6
 800666a:	463b      	mov	r3, r7
 800666c:	4628      	mov	r0, r5
 800666e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006672:	f000 b8af 	b.w	80067d4 <_write_r>

08006676 <__sseek>:
 8006676:	b510      	push	{r4, lr}
 8006678:	460c      	mov	r4, r1
 800667a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800667e:	f000 f885 	bl	800678c <_lseek_r>
 8006682:	1c43      	adds	r3, r0, #1
 8006684:	89a3      	ldrh	r3, [r4, #12]
 8006686:	bf15      	itete	ne
 8006688:	6560      	strne	r0, [r4, #84]	@ 0x54
 800668a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800668e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8006692:	81a3      	strheq	r3, [r4, #12]
 8006694:	bf18      	it	ne
 8006696:	81a3      	strhne	r3, [r4, #12]
 8006698:	bd10      	pop	{r4, pc}

0800669a <__sclose>:
 800669a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800669e:	f000 b865 	b.w	800676c <_close_r>

080066a2 <memset>:
 80066a2:	4402      	add	r2, r0
 80066a4:	4603      	mov	r3, r0
 80066a6:	4293      	cmp	r3, r2
 80066a8:	d100      	bne.n	80066ac <memset+0xa>
 80066aa:	4770      	bx	lr
 80066ac:	f803 1b01 	strb.w	r1, [r3], #1
 80066b0:	e7f9      	b.n	80066a6 <memset+0x4>
	...

080066b4 <strtok>:
 80066b4:	4b16      	ldr	r3, [pc, #88]	@ (8006710 <strtok+0x5c>)
 80066b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066ba:	681f      	ldr	r7, [r3, #0]
 80066bc:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 80066be:	4605      	mov	r5, r0
 80066c0:	460e      	mov	r6, r1
 80066c2:	b9ec      	cbnz	r4, 8006700 <strtok+0x4c>
 80066c4:	2050      	movs	r0, #80	@ 0x50
 80066c6:	f000 f92d 	bl	8006924 <malloc>
 80066ca:	4602      	mov	r2, r0
 80066cc:	6478      	str	r0, [r7, #68]	@ 0x44
 80066ce:	b920      	cbnz	r0, 80066da <strtok+0x26>
 80066d0:	4b10      	ldr	r3, [pc, #64]	@ (8006714 <strtok+0x60>)
 80066d2:	4811      	ldr	r0, [pc, #68]	@ (8006718 <strtok+0x64>)
 80066d4:	215b      	movs	r1, #91	@ 0x5b
 80066d6:	f000 f8bd 	bl	8006854 <__assert_func>
 80066da:	e9c0 4400 	strd	r4, r4, [r0]
 80066de:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80066e2:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80066e6:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 80066ea:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 80066ee:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 80066f2:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 80066f6:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 80066fa:	6184      	str	r4, [r0, #24]
 80066fc:	7704      	strb	r4, [r0, #28]
 80066fe:	6244      	str	r4, [r0, #36]	@ 0x24
 8006700:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006702:	4631      	mov	r1, r6
 8006704:	4628      	mov	r0, r5
 8006706:	2301      	movs	r3, #1
 8006708:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800670c:	f000 b806 	b.w	800671c <__strtok_r>
 8006710:	2000003c 	.word	0x2000003c
 8006714:	0800796d 	.word	0x0800796d
 8006718:	08007984 	.word	0x08007984

0800671c <__strtok_r>:
 800671c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800671e:	4604      	mov	r4, r0
 8006720:	b908      	cbnz	r0, 8006726 <__strtok_r+0xa>
 8006722:	6814      	ldr	r4, [r2, #0]
 8006724:	b144      	cbz	r4, 8006738 <__strtok_r+0x1c>
 8006726:	4620      	mov	r0, r4
 8006728:	f814 5b01 	ldrb.w	r5, [r4], #1
 800672c:	460f      	mov	r7, r1
 800672e:	f817 6b01 	ldrb.w	r6, [r7], #1
 8006732:	b91e      	cbnz	r6, 800673c <__strtok_r+0x20>
 8006734:	b965      	cbnz	r5, 8006750 <__strtok_r+0x34>
 8006736:	6015      	str	r5, [r2, #0]
 8006738:	2000      	movs	r0, #0
 800673a:	e005      	b.n	8006748 <__strtok_r+0x2c>
 800673c:	42b5      	cmp	r5, r6
 800673e:	d1f6      	bne.n	800672e <__strtok_r+0x12>
 8006740:	2b00      	cmp	r3, #0
 8006742:	d1f0      	bne.n	8006726 <__strtok_r+0xa>
 8006744:	6014      	str	r4, [r2, #0]
 8006746:	7003      	strb	r3, [r0, #0]
 8006748:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800674a:	461c      	mov	r4, r3
 800674c:	e00c      	b.n	8006768 <__strtok_r+0x4c>
 800674e:	b91d      	cbnz	r5, 8006758 <__strtok_r+0x3c>
 8006750:	4627      	mov	r7, r4
 8006752:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006756:	460e      	mov	r6, r1
 8006758:	f816 5b01 	ldrb.w	r5, [r6], #1
 800675c:	42ab      	cmp	r3, r5
 800675e:	d1f6      	bne.n	800674e <__strtok_r+0x32>
 8006760:	2b00      	cmp	r3, #0
 8006762:	d0f2      	beq.n	800674a <__strtok_r+0x2e>
 8006764:	2300      	movs	r3, #0
 8006766:	703b      	strb	r3, [r7, #0]
 8006768:	6014      	str	r4, [r2, #0]
 800676a:	e7ed      	b.n	8006748 <__strtok_r+0x2c>

0800676c <_close_r>:
 800676c:	b538      	push	{r3, r4, r5, lr}
 800676e:	4d06      	ldr	r5, [pc, #24]	@ (8006788 <_close_r+0x1c>)
 8006770:	2300      	movs	r3, #0
 8006772:	4604      	mov	r4, r0
 8006774:	4608      	mov	r0, r1
 8006776:	602b      	str	r3, [r5, #0]
 8006778:	f7fb f9d4 	bl	8001b24 <_close>
 800677c:	1c43      	adds	r3, r0, #1
 800677e:	d102      	bne.n	8006786 <_close_r+0x1a>
 8006780:	682b      	ldr	r3, [r5, #0]
 8006782:	b103      	cbz	r3, 8006786 <_close_r+0x1a>
 8006784:	6023      	str	r3, [r4, #0]
 8006786:	bd38      	pop	{r3, r4, r5, pc}
 8006788:	20013d0c 	.word	0x20013d0c

0800678c <_lseek_r>:
 800678c:	b538      	push	{r3, r4, r5, lr}
 800678e:	4d07      	ldr	r5, [pc, #28]	@ (80067ac <_lseek_r+0x20>)
 8006790:	4604      	mov	r4, r0
 8006792:	4608      	mov	r0, r1
 8006794:	4611      	mov	r1, r2
 8006796:	2200      	movs	r2, #0
 8006798:	602a      	str	r2, [r5, #0]
 800679a:	461a      	mov	r2, r3
 800679c:	f7fb f9e9 	bl	8001b72 <_lseek>
 80067a0:	1c43      	adds	r3, r0, #1
 80067a2:	d102      	bne.n	80067aa <_lseek_r+0x1e>
 80067a4:	682b      	ldr	r3, [r5, #0]
 80067a6:	b103      	cbz	r3, 80067aa <_lseek_r+0x1e>
 80067a8:	6023      	str	r3, [r4, #0]
 80067aa:	bd38      	pop	{r3, r4, r5, pc}
 80067ac:	20013d0c 	.word	0x20013d0c

080067b0 <_read_r>:
 80067b0:	b538      	push	{r3, r4, r5, lr}
 80067b2:	4d07      	ldr	r5, [pc, #28]	@ (80067d0 <_read_r+0x20>)
 80067b4:	4604      	mov	r4, r0
 80067b6:	4608      	mov	r0, r1
 80067b8:	4611      	mov	r1, r2
 80067ba:	2200      	movs	r2, #0
 80067bc:	602a      	str	r2, [r5, #0]
 80067be:	461a      	mov	r2, r3
 80067c0:	f7fb f977 	bl	8001ab2 <_read>
 80067c4:	1c43      	adds	r3, r0, #1
 80067c6:	d102      	bne.n	80067ce <_read_r+0x1e>
 80067c8:	682b      	ldr	r3, [r5, #0]
 80067ca:	b103      	cbz	r3, 80067ce <_read_r+0x1e>
 80067cc:	6023      	str	r3, [r4, #0]
 80067ce:	bd38      	pop	{r3, r4, r5, pc}
 80067d0:	20013d0c 	.word	0x20013d0c

080067d4 <_write_r>:
 80067d4:	b538      	push	{r3, r4, r5, lr}
 80067d6:	4d07      	ldr	r5, [pc, #28]	@ (80067f4 <_write_r+0x20>)
 80067d8:	4604      	mov	r4, r0
 80067da:	4608      	mov	r0, r1
 80067dc:	4611      	mov	r1, r2
 80067de:	2200      	movs	r2, #0
 80067e0:	602a      	str	r2, [r5, #0]
 80067e2:	461a      	mov	r2, r3
 80067e4:	f7fb f982 	bl	8001aec <_write>
 80067e8:	1c43      	adds	r3, r0, #1
 80067ea:	d102      	bne.n	80067f2 <_write_r+0x1e>
 80067ec:	682b      	ldr	r3, [r5, #0]
 80067ee:	b103      	cbz	r3, 80067f2 <_write_r+0x1e>
 80067f0:	6023      	str	r3, [r4, #0]
 80067f2:	bd38      	pop	{r3, r4, r5, pc}
 80067f4:	20013d0c 	.word	0x20013d0c

080067f8 <__errno>:
 80067f8:	4b01      	ldr	r3, [pc, #4]	@ (8006800 <__errno+0x8>)
 80067fa:	6818      	ldr	r0, [r3, #0]
 80067fc:	4770      	bx	lr
 80067fe:	bf00      	nop
 8006800:	2000003c 	.word	0x2000003c

08006804 <__libc_init_array>:
 8006804:	b570      	push	{r4, r5, r6, lr}
 8006806:	4d0d      	ldr	r5, [pc, #52]	@ (800683c <__libc_init_array+0x38>)
 8006808:	4c0d      	ldr	r4, [pc, #52]	@ (8006840 <__libc_init_array+0x3c>)
 800680a:	1b64      	subs	r4, r4, r5
 800680c:	10a4      	asrs	r4, r4, #2
 800680e:	2600      	movs	r6, #0
 8006810:	42a6      	cmp	r6, r4
 8006812:	d109      	bne.n	8006828 <__libc_init_array+0x24>
 8006814:	4d0b      	ldr	r5, [pc, #44]	@ (8006844 <__libc_init_array+0x40>)
 8006816:	4c0c      	ldr	r4, [pc, #48]	@ (8006848 <__libc_init_array+0x44>)
 8006818:	f000 fff0 	bl	80077fc <_init>
 800681c:	1b64      	subs	r4, r4, r5
 800681e:	10a4      	asrs	r4, r4, #2
 8006820:	2600      	movs	r6, #0
 8006822:	42a6      	cmp	r6, r4
 8006824:	d105      	bne.n	8006832 <__libc_init_array+0x2e>
 8006826:	bd70      	pop	{r4, r5, r6, pc}
 8006828:	f855 3b04 	ldr.w	r3, [r5], #4
 800682c:	4798      	blx	r3
 800682e:	3601      	adds	r6, #1
 8006830:	e7ee      	b.n	8006810 <__libc_init_array+0xc>
 8006832:	f855 3b04 	ldr.w	r3, [r5], #4
 8006836:	4798      	blx	r3
 8006838:	3601      	adds	r6, #1
 800683a:	e7f2      	b.n	8006822 <__libc_init_array+0x1e>
 800683c:	08007a58 	.word	0x08007a58
 8006840:	08007a58 	.word	0x08007a58
 8006844:	08007a58 	.word	0x08007a58
 8006848:	08007a5c 	.word	0x08007a5c

0800684c <__retarget_lock_init_recursive>:
 800684c:	4770      	bx	lr

0800684e <__retarget_lock_acquire_recursive>:
 800684e:	4770      	bx	lr

08006850 <__retarget_lock_release_recursive>:
 8006850:	4770      	bx	lr
	...

08006854 <__assert_func>:
 8006854:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006856:	4614      	mov	r4, r2
 8006858:	461a      	mov	r2, r3
 800685a:	4b09      	ldr	r3, [pc, #36]	@ (8006880 <__assert_func+0x2c>)
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	4605      	mov	r5, r0
 8006860:	68d8      	ldr	r0, [r3, #12]
 8006862:	b14c      	cbz	r4, 8006878 <__assert_func+0x24>
 8006864:	4b07      	ldr	r3, [pc, #28]	@ (8006884 <__assert_func+0x30>)
 8006866:	9100      	str	r1, [sp, #0]
 8006868:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800686c:	4906      	ldr	r1, [pc, #24]	@ (8006888 <__assert_func+0x34>)
 800686e:	462b      	mov	r3, r5
 8006870:	f000 fde0 	bl	8007434 <fiprintf>
 8006874:	f000 febc 	bl	80075f0 <abort>
 8006878:	4b04      	ldr	r3, [pc, #16]	@ (800688c <__assert_func+0x38>)
 800687a:	461c      	mov	r4, r3
 800687c:	e7f3      	b.n	8006866 <__assert_func+0x12>
 800687e:	bf00      	nop
 8006880:	2000003c 	.word	0x2000003c
 8006884:	080079de 	.word	0x080079de
 8006888:	080079eb 	.word	0x080079eb
 800688c:	08007a19 	.word	0x08007a19

08006890 <_free_r>:
 8006890:	b538      	push	{r3, r4, r5, lr}
 8006892:	4605      	mov	r5, r0
 8006894:	2900      	cmp	r1, #0
 8006896:	d041      	beq.n	800691c <_free_r+0x8c>
 8006898:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800689c:	1f0c      	subs	r4, r1, #4
 800689e:	2b00      	cmp	r3, #0
 80068a0:	bfb8      	it	lt
 80068a2:	18e4      	addlt	r4, r4, r3
 80068a4:	f000 f8e8 	bl	8006a78 <__malloc_lock>
 80068a8:	4a1d      	ldr	r2, [pc, #116]	@ (8006920 <_free_r+0x90>)
 80068aa:	6813      	ldr	r3, [r2, #0]
 80068ac:	b933      	cbnz	r3, 80068bc <_free_r+0x2c>
 80068ae:	6063      	str	r3, [r4, #4]
 80068b0:	6014      	str	r4, [r2, #0]
 80068b2:	4628      	mov	r0, r5
 80068b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80068b8:	f000 b8e4 	b.w	8006a84 <__malloc_unlock>
 80068bc:	42a3      	cmp	r3, r4
 80068be:	d908      	bls.n	80068d2 <_free_r+0x42>
 80068c0:	6820      	ldr	r0, [r4, #0]
 80068c2:	1821      	adds	r1, r4, r0
 80068c4:	428b      	cmp	r3, r1
 80068c6:	bf01      	itttt	eq
 80068c8:	6819      	ldreq	r1, [r3, #0]
 80068ca:	685b      	ldreq	r3, [r3, #4]
 80068cc:	1809      	addeq	r1, r1, r0
 80068ce:	6021      	streq	r1, [r4, #0]
 80068d0:	e7ed      	b.n	80068ae <_free_r+0x1e>
 80068d2:	461a      	mov	r2, r3
 80068d4:	685b      	ldr	r3, [r3, #4]
 80068d6:	b10b      	cbz	r3, 80068dc <_free_r+0x4c>
 80068d8:	42a3      	cmp	r3, r4
 80068da:	d9fa      	bls.n	80068d2 <_free_r+0x42>
 80068dc:	6811      	ldr	r1, [r2, #0]
 80068de:	1850      	adds	r0, r2, r1
 80068e0:	42a0      	cmp	r0, r4
 80068e2:	d10b      	bne.n	80068fc <_free_r+0x6c>
 80068e4:	6820      	ldr	r0, [r4, #0]
 80068e6:	4401      	add	r1, r0
 80068e8:	1850      	adds	r0, r2, r1
 80068ea:	4283      	cmp	r3, r0
 80068ec:	6011      	str	r1, [r2, #0]
 80068ee:	d1e0      	bne.n	80068b2 <_free_r+0x22>
 80068f0:	6818      	ldr	r0, [r3, #0]
 80068f2:	685b      	ldr	r3, [r3, #4]
 80068f4:	6053      	str	r3, [r2, #4]
 80068f6:	4408      	add	r0, r1
 80068f8:	6010      	str	r0, [r2, #0]
 80068fa:	e7da      	b.n	80068b2 <_free_r+0x22>
 80068fc:	d902      	bls.n	8006904 <_free_r+0x74>
 80068fe:	230c      	movs	r3, #12
 8006900:	602b      	str	r3, [r5, #0]
 8006902:	e7d6      	b.n	80068b2 <_free_r+0x22>
 8006904:	6820      	ldr	r0, [r4, #0]
 8006906:	1821      	adds	r1, r4, r0
 8006908:	428b      	cmp	r3, r1
 800690a:	bf04      	itt	eq
 800690c:	6819      	ldreq	r1, [r3, #0]
 800690e:	685b      	ldreq	r3, [r3, #4]
 8006910:	6063      	str	r3, [r4, #4]
 8006912:	bf04      	itt	eq
 8006914:	1809      	addeq	r1, r1, r0
 8006916:	6021      	streq	r1, [r4, #0]
 8006918:	6054      	str	r4, [r2, #4]
 800691a:	e7ca      	b.n	80068b2 <_free_r+0x22>
 800691c:	bd38      	pop	{r3, r4, r5, pc}
 800691e:	bf00      	nop
 8006920:	20013d18 	.word	0x20013d18

08006924 <malloc>:
 8006924:	4b02      	ldr	r3, [pc, #8]	@ (8006930 <malloc+0xc>)
 8006926:	4601      	mov	r1, r0
 8006928:	6818      	ldr	r0, [r3, #0]
 800692a:	f000 b825 	b.w	8006978 <_malloc_r>
 800692e:	bf00      	nop
 8006930:	2000003c 	.word	0x2000003c

08006934 <sbrk_aligned>:
 8006934:	b570      	push	{r4, r5, r6, lr}
 8006936:	4e0f      	ldr	r6, [pc, #60]	@ (8006974 <sbrk_aligned+0x40>)
 8006938:	460c      	mov	r4, r1
 800693a:	6831      	ldr	r1, [r6, #0]
 800693c:	4605      	mov	r5, r0
 800693e:	b911      	cbnz	r1, 8006946 <sbrk_aligned+0x12>
 8006940:	f000 fe38 	bl	80075b4 <_sbrk_r>
 8006944:	6030      	str	r0, [r6, #0]
 8006946:	4621      	mov	r1, r4
 8006948:	4628      	mov	r0, r5
 800694a:	f000 fe33 	bl	80075b4 <_sbrk_r>
 800694e:	1c43      	adds	r3, r0, #1
 8006950:	d103      	bne.n	800695a <sbrk_aligned+0x26>
 8006952:	f04f 34ff 	mov.w	r4, #4294967295
 8006956:	4620      	mov	r0, r4
 8006958:	bd70      	pop	{r4, r5, r6, pc}
 800695a:	1cc4      	adds	r4, r0, #3
 800695c:	f024 0403 	bic.w	r4, r4, #3
 8006960:	42a0      	cmp	r0, r4
 8006962:	d0f8      	beq.n	8006956 <sbrk_aligned+0x22>
 8006964:	1a21      	subs	r1, r4, r0
 8006966:	4628      	mov	r0, r5
 8006968:	f000 fe24 	bl	80075b4 <_sbrk_r>
 800696c:	3001      	adds	r0, #1
 800696e:	d1f2      	bne.n	8006956 <sbrk_aligned+0x22>
 8006970:	e7ef      	b.n	8006952 <sbrk_aligned+0x1e>
 8006972:	bf00      	nop
 8006974:	20013d14 	.word	0x20013d14

08006978 <_malloc_r>:
 8006978:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800697c:	1ccd      	adds	r5, r1, #3
 800697e:	f025 0503 	bic.w	r5, r5, #3
 8006982:	3508      	adds	r5, #8
 8006984:	2d0c      	cmp	r5, #12
 8006986:	bf38      	it	cc
 8006988:	250c      	movcc	r5, #12
 800698a:	2d00      	cmp	r5, #0
 800698c:	4606      	mov	r6, r0
 800698e:	db01      	blt.n	8006994 <_malloc_r+0x1c>
 8006990:	42a9      	cmp	r1, r5
 8006992:	d904      	bls.n	800699e <_malloc_r+0x26>
 8006994:	230c      	movs	r3, #12
 8006996:	6033      	str	r3, [r6, #0]
 8006998:	2000      	movs	r0, #0
 800699a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800699e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006a74 <_malloc_r+0xfc>
 80069a2:	f000 f869 	bl	8006a78 <__malloc_lock>
 80069a6:	f8d8 3000 	ldr.w	r3, [r8]
 80069aa:	461c      	mov	r4, r3
 80069ac:	bb44      	cbnz	r4, 8006a00 <_malloc_r+0x88>
 80069ae:	4629      	mov	r1, r5
 80069b0:	4630      	mov	r0, r6
 80069b2:	f7ff ffbf 	bl	8006934 <sbrk_aligned>
 80069b6:	1c43      	adds	r3, r0, #1
 80069b8:	4604      	mov	r4, r0
 80069ba:	d158      	bne.n	8006a6e <_malloc_r+0xf6>
 80069bc:	f8d8 4000 	ldr.w	r4, [r8]
 80069c0:	4627      	mov	r7, r4
 80069c2:	2f00      	cmp	r7, #0
 80069c4:	d143      	bne.n	8006a4e <_malloc_r+0xd6>
 80069c6:	2c00      	cmp	r4, #0
 80069c8:	d04b      	beq.n	8006a62 <_malloc_r+0xea>
 80069ca:	6823      	ldr	r3, [r4, #0]
 80069cc:	4639      	mov	r1, r7
 80069ce:	4630      	mov	r0, r6
 80069d0:	eb04 0903 	add.w	r9, r4, r3
 80069d4:	f000 fdee 	bl	80075b4 <_sbrk_r>
 80069d8:	4581      	cmp	r9, r0
 80069da:	d142      	bne.n	8006a62 <_malloc_r+0xea>
 80069dc:	6821      	ldr	r1, [r4, #0]
 80069de:	1a6d      	subs	r5, r5, r1
 80069e0:	4629      	mov	r1, r5
 80069e2:	4630      	mov	r0, r6
 80069e4:	f7ff ffa6 	bl	8006934 <sbrk_aligned>
 80069e8:	3001      	adds	r0, #1
 80069ea:	d03a      	beq.n	8006a62 <_malloc_r+0xea>
 80069ec:	6823      	ldr	r3, [r4, #0]
 80069ee:	442b      	add	r3, r5
 80069f0:	6023      	str	r3, [r4, #0]
 80069f2:	f8d8 3000 	ldr.w	r3, [r8]
 80069f6:	685a      	ldr	r2, [r3, #4]
 80069f8:	bb62      	cbnz	r2, 8006a54 <_malloc_r+0xdc>
 80069fa:	f8c8 7000 	str.w	r7, [r8]
 80069fe:	e00f      	b.n	8006a20 <_malloc_r+0xa8>
 8006a00:	6822      	ldr	r2, [r4, #0]
 8006a02:	1b52      	subs	r2, r2, r5
 8006a04:	d420      	bmi.n	8006a48 <_malloc_r+0xd0>
 8006a06:	2a0b      	cmp	r2, #11
 8006a08:	d917      	bls.n	8006a3a <_malloc_r+0xc2>
 8006a0a:	1961      	adds	r1, r4, r5
 8006a0c:	42a3      	cmp	r3, r4
 8006a0e:	6025      	str	r5, [r4, #0]
 8006a10:	bf18      	it	ne
 8006a12:	6059      	strne	r1, [r3, #4]
 8006a14:	6863      	ldr	r3, [r4, #4]
 8006a16:	bf08      	it	eq
 8006a18:	f8c8 1000 	streq.w	r1, [r8]
 8006a1c:	5162      	str	r2, [r4, r5]
 8006a1e:	604b      	str	r3, [r1, #4]
 8006a20:	4630      	mov	r0, r6
 8006a22:	f000 f82f 	bl	8006a84 <__malloc_unlock>
 8006a26:	f104 000b 	add.w	r0, r4, #11
 8006a2a:	1d23      	adds	r3, r4, #4
 8006a2c:	f020 0007 	bic.w	r0, r0, #7
 8006a30:	1ac2      	subs	r2, r0, r3
 8006a32:	bf1c      	itt	ne
 8006a34:	1a1b      	subne	r3, r3, r0
 8006a36:	50a3      	strne	r3, [r4, r2]
 8006a38:	e7af      	b.n	800699a <_malloc_r+0x22>
 8006a3a:	6862      	ldr	r2, [r4, #4]
 8006a3c:	42a3      	cmp	r3, r4
 8006a3e:	bf0c      	ite	eq
 8006a40:	f8c8 2000 	streq.w	r2, [r8]
 8006a44:	605a      	strne	r2, [r3, #4]
 8006a46:	e7eb      	b.n	8006a20 <_malloc_r+0xa8>
 8006a48:	4623      	mov	r3, r4
 8006a4a:	6864      	ldr	r4, [r4, #4]
 8006a4c:	e7ae      	b.n	80069ac <_malloc_r+0x34>
 8006a4e:	463c      	mov	r4, r7
 8006a50:	687f      	ldr	r7, [r7, #4]
 8006a52:	e7b6      	b.n	80069c2 <_malloc_r+0x4a>
 8006a54:	461a      	mov	r2, r3
 8006a56:	685b      	ldr	r3, [r3, #4]
 8006a58:	42a3      	cmp	r3, r4
 8006a5a:	d1fb      	bne.n	8006a54 <_malloc_r+0xdc>
 8006a5c:	2300      	movs	r3, #0
 8006a5e:	6053      	str	r3, [r2, #4]
 8006a60:	e7de      	b.n	8006a20 <_malloc_r+0xa8>
 8006a62:	230c      	movs	r3, #12
 8006a64:	6033      	str	r3, [r6, #0]
 8006a66:	4630      	mov	r0, r6
 8006a68:	f000 f80c 	bl	8006a84 <__malloc_unlock>
 8006a6c:	e794      	b.n	8006998 <_malloc_r+0x20>
 8006a6e:	6005      	str	r5, [r0, #0]
 8006a70:	e7d6      	b.n	8006a20 <_malloc_r+0xa8>
 8006a72:	bf00      	nop
 8006a74:	20013d18 	.word	0x20013d18

08006a78 <__malloc_lock>:
 8006a78:	4801      	ldr	r0, [pc, #4]	@ (8006a80 <__malloc_lock+0x8>)
 8006a7a:	f7ff bee8 	b.w	800684e <__retarget_lock_acquire_recursive>
 8006a7e:	bf00      	nop
 8006a80:	20013d10 	.word	0x20013d10

08006a84 <__malloc_unlock>:
 8006a84:	4801      	ldr	r0, [pc, #4]	@ (8006a8c <__malloc_unlock+0x8>)
 8006a86:	f7ff bee3 	b.w	8006850 <__retarget_lock_release_recursive>
 8006a8a:	bf00      	nop
 8006a8c:	20013d10 	.word	0x20013d10

08006a90 <__ssputs_r>:
 8006a90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006a94:	688e      	ldr	r6, [r1, #8]
 8006a96:	461f      	mov	r7, r3
 8006a98:	42be      	cmp	r6, r7
 8006a9a:	680b      	ldr	r3, [r1, #0]
 8006a9c:	4682      	mov	sl, r0
 8006a9e:	460c      	mov	r4, r1
 8006aa0:	4690      	mov	r8, r2
 8006aa2:	d82d      	bhi.n	8006b00 <__ssputs_r+0x70>
 8006aa4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006aa8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006aac:	d026      	beq.n	8006afc <__ssputs_r+0x6c>
 8006aae:	6965      	ldr	r5, [r4, #20]
 8006ab0:	6909      	ldr	r1, [r1, #16]
 8006ab2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006ab6:	eba3 0901 	sub.w	r9, r3, r1
 8006aba:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006abe:	1c7b      	adds	r3, r7, #1
 8006ac0:	444b      	add	r3, r9
 8006ac2:	106d      	asrs	r5, r5, #1
 8006ac4:	429d      	cmp	r5, r3
 8006ac6:	bf38      	it	cc
 8006ac8:	461d      	movcc	r5, r3
 8006aca:	0553      	lsls	r3, r2, #21
 8006acc:	d527      	bpl.n	8006b1e <__ssputs_r+0x8e>
 8006ace:	4629      	mov	r1, r5
 8006ad0:	f7ff ff52 	bl	8006978 <_malloc_r>
 8006ad4:	4606      	mov	r6, r0
 8006ad6:	b360      	cbz	r0, 8006b32 <__ssputs_r+0xa2>
 8006ad8:	6921      	ldr	r1, [r4, #16]
 8006ada:	464a      	mov	r2, r9
 8006adc:	f000 fd7a 	bl	80075d4 <memcpy>
 8006ae0:	89a3      	ldrh	r3, [r4, #12]
 8006ae2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006ae6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006aea:	81a3      	strh	r3, [r4, #12]
 8006aec:	6126      	str	r6, [r4, #16]
 8006aee:	6165      	str	r5, [r4, #20]
 8006af0:	444e      	add	r6, r9
 8006af2:	eba5 0509 	sub.w	r5, r5, r9
 8006af6:	6026      	str	r6, [r4, #0]
 8006af8:	60a5      	str	r5, [r4, #8]
 8006afa:	463e      	mov	r6, r7
 8006afc:	42be      	cmp	r6, r7
 8006afe:	d900      	bls.n	8006b02 <__ssputs_r+0x72>
 8006b00:	463e      	mov	r6, r7
 8006b02:	6820      	ldr	r0, [r4, #0]
 8006b04:	4632      	mov	r2, r6
 8006b06:	4641      	mov	r1, r8
 8006b08:	f000 fd3a 	bl	8007580 <memmove>
 8006b0c:	68a3      	ldr	r3, [r4, #8]
 8006b0e:	1b9b      	subs	r3, r3, r6
 8006b10:	60a3      	str	r3, [r4, #8]
 8006b12:	6823      	ldr	r3, [r4, #0]
 8006b14:	4433      	add	r3, r6
 8006b16:	6023      	str	r3, [r4, #0]
 8006b18:	2000      	movs	r0, #0
 8006b1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b1e:	462a      	mov	r2, r5
 8006b20:	f000 fd6d 	bl	80075fe <_realloc_r>
 8006b24:	4606      	mov	r6, r0
 8006b26:	2800      	cmp	r0, #0
 8006b28:	d1e0      	bne.n	8006aec <__ssputs_r+0x5c>
 8006b2a:	6921      	ldr	r1, [r4, #16]
 8006b2c:	4650      	mov	r0, sl
 8006b2e:	f7ff feaf 	bl	8006890 <_free_r>
 8006b32:	230c      	movs	r3, #12
 8006b34:	f8ca 3000 	str.w	r3, [sl]
 8006b38:	89a3      	ldrh	r3, [r4, #12]
 8006b3a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006b3e:	81a3      	strh	r3, [r4, #12]
 8006b40:	f04f 30ff 	mov.w	r0, #4294967295
 8006b44:	e7e9      	b.n	8006b1a <__ssputs_r+0x8a>
	...

08006b48 <_svfiprintf_r>:
 8006b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b4c:	4698      	mov	r8, r3
 8006b4e:	898b      	ldrh	r3, [r1, #12]
 8006b50:	061b      	lsls	r3, r3, #24
 8006b52:	b09d      	sub	sp, #116	@ 0x74
 8006b54:	4607      	mov	r7, r0
 8006b56:	460d      	mov	r5, r1
 8006b58:	4614      	mov	r4, r2
 8006b5a:	d510      	bpl.n	8006b7e <_svfiprintf_r+0x36>
 8006b5c:	690b      	ldr	r3, [r1, #16]
 8006b5e:	b973      	cbnz	r3, 8006b7e <_svfiprintf_r+0x36>
 8006b60:	2140      	movs	r1, #64	@ 0x40
 8006b62:	f7ff ff09 	bl	8006978 <_malloc_r>
 8006b66:	6028      	str	r0, [r5, #0]
 8006b68:	6128      	str	r0, [r5, #16]
 8006b6a:	b930      	cbnz	r0, 8006b7a <_svfiprintf_r+0x32>
 8006b6c:	230c      	movs	r3, #12
 8006b6e:	603b      	str	r3, [r7, #0]
 8006b70:	f04f 30ff 	mov.w	r0, #4294967295
 8006b74:	b01d      	add	sp, #116	@ 0x74
 8006b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b7a:	2340      	movs	r3, #64	@ 0x40
 8006b7c:	616b      	str	r3, [r5, #20]
 8006b7e:	2300      	movs	r3, #0
 8006b80:	9309      	str	r3, [sp, #36]	@ 0x24
 8006b82:	2320      	movs	r3, #32
 8006b84:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006b88:	f8cd 800c 	str.w	r8, [sp, #12]
 8006b8c:	2330      	movs	r3, #48	@ 0x30
 8006b8e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8006d2c <_svfiprintf_r+0x1e4>
 8006b92:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006b96:	f04f 0901 	mov.w	r9, #1
 8006b9a:	4623      	mov	r3, r4
 8006b9c:	469a      	mov	sl, r3
 8006b9e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006ba2:	b10a      	cbz	r2, 8006ba8 <_svfiprintf_r+0x60>
 8006ba4:	2a25      	cmp	r2, #37	@ 0x25
 8006ba6:	d1f9      	bne.n	8006b9c <_svfiprintf_r+0x54>
 8006ba8:	ebba 0b04 	subs.w	fp, sl, r4
 8006bac:	d00b      	beq.n	8006bc6 <_svfiprintf_r+0x7e>
 8006bae:	465b      	mov	r3, fp
 8006bb0:	4622      	mov	r2, r4
 8006bb2:	4629      	mov	r1, r5
 8006bb4:	4638      	mov	r0, r7
 8006bb6:	f7ff ff6b 	bl	8006a90 <__ssputs_r>
 8006bba:	3001      	adds	r0, #1
 8006bbc:	f000 80a7 	beq.w	8006d0e <_svfiprintf_r+0x1c6>
 8006bc0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006bc2:	445a      	add	r2, fp
 8006bc4:	9209      	str	r2, [sp, #36]	@ 0x24
 8006bc6:	f89a 3000 	ldrb.w	r3, [sl]
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	f000 809f 	beq.w	8006d0e <_svfiprintf_r+0x1c6>
 8006bd0:	2300      	movs	r3, #0
 8006bd2:	f04f 32ff 	mov.w	r2, #4294967295
 8006bd6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006bda:	f10a 0a01 	add.w	sl, sl, #1
 8006bde:	9304      	str	r3, [sp, #16]
 8006be0:	9307      	str	r3, [sp, #28]
 8006be2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006be6:	931a      	str	r3, [sp, #104]	@ 0x68
 8006be8:	4654      	mov	r4, sl
 8006bea:	2205      	movs	r2, #5
 8006bec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006bf0:	484e      	ldr	r0, [pc, #312]	@ (8006d2c <_svfiprintf_r+0x1e4>)
 8006bf2:	f7f9 fafd 	bl	80001f0 <memchr>
 8006bf6:	9a04      	ldr	r2, [sp, #16]
 8006bf8:	b9d8      	cbnz	r0, 8006c32 <_svfiprintf_r+0xea>
 8006bfa:	06d0      	lsls	r0, r2, #27
 8006bfc:	bf44      	itt	mi
 8006bfe:	2320      	movmi	r3, #32
 8006c00:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c04:	0711      	lsls	r1, r2, #28
 8006c06:	bf44      	itt	mi
 8006c08:	232b      	movmi	r3, #43	@ 0x2b
 8006c0a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c0e:	f89a 3000 	ldrb.w	r3, [sl]
 8006c12:	2b2a      	cmp	r3, #42	@ 0x2a
 8006c14:	d015      	beq.n	8006c42 <_svfiprintf_r+0xfa>
 8006c16:	9a07      	ldr	r2, [sp, #28]
 8006c18:	4654      	mov	r4, sl
 8006c1a:	2000      	movs	r0, #0
 8006c1c:	f04f 0c0a 	mov.w	ip, #10
 8006c20:	4621      	mov	r1, r4
 8006c22:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006c26:	3b30      	subs	r3, #48	@ 0x30
 8006c28:	2b09      	cmp	r3, #9
 8006c2a:	d94b      	bls.n	8006cc4 <_svfiprintf_r+0x17c>
 8006c2c:	b1b0      	cbz	r0, 8006c5c <_svfiprintf_r+0x114>
 8006c2e:	9207      	str	r2, [sp, #28]
 8006c30:	e014      	b.n	8006c5c <_svfiprintf_r+0x114>
 8006c32:	eba0 0308 	sub.w	r3, r0, r8
 8006c36:	fa09 f303 	lsl.w	r3, r9, r3
 8006c3a:	4313      	orrs	r3, r2
 8006c3c:	9304      	str	r3, [sp, #16]
 8006c3e:	46a2      	mov	sl, r4
 8006c40:	e7d2      	b.n	8006be8 <_svfiprintf_r+0xa0>
 8006c42:	9b03      	ldr	r3, [sp, #12]
 8006c44:	1d19      	adds	r1, r3, #4
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	9103      	str	r1, [sp, #12]
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	bfbb      	ittet	lt
 8006c4e:	425b      	neglt	r3, r3
 8006c50:	f042 0202 	orrlt.w	r2, r2, #2
 8006c54:	9307      	strge	r3, [sp, #28]
 8006c56:	9307      	strlt	r3, [sp, #28]
 8006c58:	bfb8      	it	lt
 8006c5a:	9204      	strlt	r2, [sp, #16]
 8006c5c:	7823      	ldrb	r3, [r4, #0]
 8006c5e:	2b2e      	cmp	r3, #46	@ 0x2e
 8006c60:	d10a      	bne.n	8006c78 <_svfiprintf_r+0x130>
 8006c62:	7863      	ldrb	r3, [r4, #1]
 8006c64:	2b2a      	cmp	r3, #42	@ 0x2a
 8006c66:	d132      	bne.n	8006cce <_svfiprintf_r+0x186>
 8006c68:	9b03      	ldr	r3, [sp, #12]
 8006c6a:	1d1a      	adds	r2, r3, #4
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	9203      	str	r2, [sp, #12]
 8006c70:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006c74:	3402      	adds	r4, #2
 8006c76:	9305      	str	r3, [sp, #20]
 8006c78:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8006d3c <_svfiprintf_r+0x1f4>
 8006c7c:	7821      	ldrb	r1, [r4, #0]
 8006c7e:	2203      	movs	r2, #3
 8006c80:	4650      	mov	r0, sl
 8006c82:	f7f9 fab5 	bl	80001f0 <memchr>
 8006c86:	b138      	cbz	r0, 8006c98 <_svfiprintf_r+0x150>
 8006c88:	9b04      	ldr	r3, [sp, #16]
 8006c8a:	eba0 000a 	sub.w	r0, r0, sl
 8006c8e:	2240      	movs	r2, #64	@ 0x40
 8006c90:	4082      	lsls	r2, r0
 8006c92:	4313      	orrs	r3, r2
 8006c94:	3401      	adds	r4, #1
 8006c96:	9304      	str	r3, [sp, #16]
 8006c98:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006c9c:	4824      	ldr	r0, [pc, #144]	@ (8006d30 <_svfiprintf_r+0x1e8>)
 8006c9e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006ca2:	2206      	movs	r2, #6
 8006ca4:	f7f9 faa4 	bl	80001f0 <memchr>
 8006ca8:	2800      	cmp	r0, #0
 8006caa:	d036      	beq.n	8006d1a <_svfiprintf_r+0x1d2>
 8006cac:	4b21      	ldr	r3, [pc, #132]	@ (8006d34 <_svfiprintf_r+0x1ec>)
 8006cae:	bb1b      	cbnz	r3, 8006cf8 <_svfiprintf_r+0x1b0>
 8006cb0:	9b03      	ldr	r3, [sp, #12]
 8006cb2:	3307      	adds	r3, #7
 8006cb4:	f023 0307 	bic.w	r3, r3, #7
 8006cb8:	3308      	adds	r3, #8
 8006cba:	9303      	str	r3, [sp, #12]
 8006cbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006cbe:	4433      	add	r3, r6
 8006cc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8006cc2:	e76a      	b.n	8006b9a <_svfiprintf_r+0x52>
 8006cc4:	fb0c 3202 	mla	r2, ip, r2, r3
 8006cc8:	460c      	mov	r4, r1
 8006cca:	2001      	movs	r0, #1
 8006ccc:	e7a8      	b.n	8006c20 <_svfiprintf_r+0xd8>
 8006cce:	2300      	movs	r3, #0
 8006cd0:	3401      	adds	r4, #1
 8006cd2:	9305      	str	r3, [sp, #20]
 8006cd4:	4619      	mov	r1, r3
 8006cd6:	f04f 0c0a 	mov.w	ip, #10
 8006cda:	4620      	mov	r0, r4
 8006cdc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006ce0:	3a30      	subs	r2, #48	@ 0x30
 8006ce2:	2a09      	cmp	r2, #9
 8006ce4:	d903      	bls.n	8006cee <_svfiprintf_r+0x1a6>
 8006ce6:	2b00      	cmp	r3, #0
 8006ce8:	d0c6      	beq.n	8006c78 <_svfiprintf_r+0x130>
 8006cea:	9105      	str	r1, [sp, #20]
 8006cec:	e7c4      	b.n	8006c78 <_svfiprintf_r+0x130>
 8006cee:	fb0c 2101 	mla	r1, ip, r1, r2
 8006cf2:	4604      	mov	r4, r0
 8006cf4:	2301      	movs	r3, #1
 8006cf6:	e7f0      	b.n	8006cda <_svfiprintf_r+0x192>
 8006cf8:	ab03      	add	r3, sp, #12
 8006cfa:	9300      	str	r3, [sp, #0]
 8006cfc:	462a      	mov	r2, r5
 8006cfe:	4b0e      	ldr	r3, [pc, #56]	@ (8006d38 <_svfiprintf_r+0x1f0>)
 8006d00:	a904      	add	r1, sp, #16
 8006d02:	4638      	mov	r0, r7
 8006d04:	f3af 8000 	nop.w
 8006d08:	1c42      	adds	r2, r0, #1
 8006d0a:	4606      	mov	r6, r0
 8006d0c:	d1d6      	bne.n	8006cbc <_svfiprintf_r+0x174>
 8006d0e:	89ab      	ldrh	r3, [r5, #12]
 8006d10:	065b      	lsls	r3, r3, #25
 8006d12:	f53f af2d 	bmi.w	8006b70 <_svfiprintf_r+0x28>
 8006d16:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006d18:	e72c      	b.n	8006b74 <_svfiprintf_r+0x2c>
 8006d1a:	ab03      	add	r3, sp, #12
 8006d1c:	9300      	str	r3, [sp, #0]
 8006d1e:	462a      	mov	r2, r5
 8006d20:	4b05      	ldr	r3, [pc, #20]	@ (8006d38 <_svfiprintf_r+0x1f0>)
 8006d22:	a904      	add	r1, sp, #16
 8006d24:	4638      	mov	r0, r7
 8006d26:	f000 f9bb 	bl	80070a0 <_printf_i>
 8006d2a:	e7ed      	b.n	8006d08 <_svfiprintf_r+0x1c0>
 8006d2c:	08007a1a 	.word	0x08007a1a
 8006d30:	08007a24 	.word	0x08007a24
 8006d34:	00000000 	.word	0x00000000
 8006d38:	08006a91 	.word	0x08006a91
 8006d3c:	08007a20 	.word	0x08007a20

08006d40 <__sfputc_r>:
 8006d40:	6893      	ldr	r3, [r2, #8]
 8006d42:	3b01      	subs	r3, #1
 8006d44:	2b00      	cmp	r3, #0
 8006d46:	b410      	push	{r4}
 8006d48:	6093      	str	r3, [r2, #8]
 8006d4a:	da08      	bge.n	8006d5e <__sfputc_r+0x1e>
 8006d4c:	6994      	ldr	r4, [r2, #24]
 8006d4e:	42a3      	cmp	r3, r4
 8006d50:	db01      	blt.n	8006d56 <__sfputc_r+0x16>
 8006d52:	290a      	cmp	r1, #10
 8006d54:	d103      	bne.n	8006d5e <__sfputc_r+0x1e>
 8006d56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006d5a:	f000 bb7d 	b.w	8007458 <__swbuf_r>
 8006d5e:	6813      	ldr	r3, [r2, #0]
 8006d60:	1c58      	adds	r0, r3, #1
 8006d62:	6010      	str	r0, [r2, #0]
 8006d64:	7019      	strb	r1, [r3, #0]
 8006d66:	4608      	mov	r0, r1
 8006d68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006d6c:	4770      	bx	lr

08006d6e <__sfputs_r>:
 8006d6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d70:	4606      	mov	r6, r0
 8006d72:	460f      	mov	r7, r1
 8006d74:	4614      	mov	r4, r2
 8006d76:	18d5      	adds	r5, r2, r3
 8006d78:	42ac      	cmp	r4, r5
 8006d7a:	d101      	bne.n	8006d80 <__sfputs_r+0x12>
 8006d7c:	2000      	movs	r0, #0
 8006d7e:	e007      	b.n	8006d90 <__sfputs_r+0x22>
 8006d80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006d84:	463a      	mov	r2, r7
 8006d86:	4630      	mov	r0, r6
 8006d88:	f7ff ffda 	bl	8006d40 <__sfputc_r>
 8006d8c:	1c43      	adds	r3, r0, #1
 8006d8e:	d1f3      	bne.n	8006d78 <__sfputs_r+0xa>
 8006d90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006d94 <_vfiprintf_r>:
 8006d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d98:	460d      	mov	r5, r1
 8006d9a:	b09d      	sub	sp, #116	@ 0x74
 8006d9c:	4614      	mov	r4, r2
 8006d9e:	4698      	mov	r8, r3
 8006da0:	4606      	mov	r6, r0
 8006da2:	b118      	cbz	r0, 8006dac <_vfiprintf_r+0x18>
 8006da4:	6a03      	ldr	r3, [r0, #32]
 8006da6:	b90b      	cbnz	r3, 8006dac <_vfiprintf_r+0x18>
 8006da8:	f7ff fbba 	bl	8006520 <__sinit>
 8006dac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006dae:	07d9      	lsls	r1, r3, #31
 8006db0:	d405      	bmi.n	8006dbe <_vfiprintf_r+0x2a>
 8006db2:	89ab      	ldrh	r3, [r5, #12]
 8006db4:	059a      	lsls	r2, r3, #22
 8006db6:	d402      	bmi.n	8006dbe <_vfiprintf_r+0x2a>
 8006db8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006dba:	f7ff fd48 	bl	800684e <__retarget_lock_acquire_recursive>
 8006dbe:	89ab      	ldrh	r3, [r5, #12]
 8006dc0:	071b      	lsls	r3, r3, #28
 8006dc2:	d501      	bpl.n	8006dc8 <_vfiprintf_r+0x34>
 8006dc4:	692b      	ldr	r3, [r5, #16]
 8006dc6:	b99b      	cbnz	r3, 8006df0 <_vfiprintf_r+0x5c>
 8006dc8:	4629      	mov	r1, r5
 8006dca:	4630      	mov	r0, r6
 8006dcc:	f000 fb82 	bl	80074d4 <__swsetup_r>
 8006dd0:	b170      	cbz	r0, 8006df0 <_vfiprintf_r+0x5c>
 8006dd2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006dd4:	07dc      	lsls	r4, r3, #31
 8006dd6:	d504      	bpl.n	8006de2 <_vfiprintf_r+0x4e>
 8006dd8:	f04f 30ff 	mov.w	r0, #4294967295
 8006ddc:	b01d      	add	sp, #116	@ 0x74
 8006dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006de2:	89ab      	ldrh	r3, [r5, #12]
 8006de4:	0598      	lsls	r0, r3, #22
 8006de6:	d4f7      	bmi.n	8006dd8 <_vfiprintf_r+0x44>
 8006de8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006dea:	f7ff fd31 	bl	8006850 <__retarget_lock_release_recursive>
 8006dee:	e7f3      	b.n	8006dd8 <_vfiprintf_r+0x44>
 8006df0:	2300      	movs	r3, #0
 8006df2:	9309      	str	r3, [sp, #36]	@ 0x24
 8006df4:	2320      	movs	r3, #32
 8006df6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006dfa:	f8cd 800c 	str.w	r8, [sp, #12]
 8006dfe:	2330      	movs	r3, #48	@ 0x30
 8006e00:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006fb0 <_vfiprintf_r+0x21c>
 8006e04:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006e08:	f04f 0901 	mov.w	r9, #1
 8006e0c:	4623      	mov	r3, r4
 8006e0e:	469a      	mov	sl, r3
 8006e10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006e14:	b10a      	cbz	r2, 8006e1a <_vfiprintf_r+0x86>
 8006e16:	2a25      	cmp	r2, #37	@ 0x25
 8006e18:	d1f9      	bne.n	8006e0e <_vfiprintf_r+0x7a>
 8006e1a:	ebba 0b04 	subs.w	fp, sl, r4
 8006e1e:	d00b      	beq.n	8006e38 <_vfiprintf_r+0xa4>
 8006e20:	465b      	mov	r3, fp
 8006e22:	4622      	mov	r2, r4
 8006e24:	4629      	mov	r1, r5
 8006e26:	4630      	mov	r0, r6
 8006e28:	f7ff ffa1 	bl	8006d6e <__sfputs_r>
 8006e2c:	3001      	adds	r0, #1
 8006e2e:	f000 80a7 	beq.w	8006f80 <_vfiprintf_r+0x1ec>
 8006e32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006e34:	445a      	add	r2, fp
 8006e36:	9209      	str	r2, [sp, #36]	@ 0x24
 8006e38:	f89a 3000 	ldrb.w	r3, [sl]
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	f000 809f 	beq.w	8006f80 <_vfiprintf_r+0x1ec>
 8006e42:	2300      	movs	r3, #0
 8006e44:	f04f 32ff 	mov.w	r2, #4294967295
 8006e48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006e4c:	f10a 0a01 	add.w	sl, sl, #1
 8006e50:	9304      	str	r3, [sp, #16]
 8006e52:	9307      	str	r3, [sp, #28]
 8006e54:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006e58:	931a      	str	r3, [sp, #104]	@ 0x68
 8006e5a:	4654      	mov	r4, sl
 8006e5c:	2205      	movs	r2, #5
 8006e5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006e62:	4853      	ldr	r0, [pc, #332]	@ (8006fb0 <_vfiprintf_r+0x21c>)
 8006e64:	f7f9 f9c4 	bl	80001f0 <memchr>
 8006e68:	9a04      	ldr	r2, [sp, #16]
 8006e6a:	b9d8      	cbnz	r0, 8006ea4 <_vfiprintf_r+0x110>
 8006e6c:	06d1      	lsls	r1, r2, #27
 8006e6e:	bf44      	itt	mi
 8006e70:	2320      	movmi	r3, #32
 8006e72:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006e76:	0713      	lsls	r3, r2, #28
 8006e78:	bf44      	itt	mi
 8006e7a:	232b      	movmi	r3, #43	@ 0x2b
 8006e7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006e80:	f89a 3000 	ldrb.w	r3, [sl]
 8006e84:	2b2a      	cmp	r3, #42	@ 0x2a
 8006e86:	d015      	beq.n	8006eb4 <_vfiprintf_r+0x120>
 8006e88:	9a07      	ldr	r2, [sp, #28]
 8006e8a:	4654      	mov	r4, sl
 8006e8c:	2000      	movs	r0, #0
 8006e8e:	f04f 0c0a 	mov.w	ip, #10
 8006e92:	4621      	mov	r1, r4
 8006e94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006e98:	3b30      	subs	r3, #48	@ 0x30
 8006e9a:	2b09      	cmp	r3, #9
 8006e9c:	d94b      	bls.n	8006f36 <_vfiprintf_r+0x1a2>
 8006e9e:	b1b0      	cbz	r0, 8006ece <_vfiprintf_r+0x13a>
 8006ea0:	9207      	str	r2, [sp, #28]
 8006ea2:	e014      	b.n	8006ece <_vfiprintf_r+0x13a>
 8006ea4:	eba0 0308 	sub.w	r3, r0, r8
 8006ea8:	fa09 f303 	lsl.w	r3, r9, r3
 8006eac:	4313      	orrs	r3, r2
 8006eae:	9304      	str	r3, [sp, #16]
 8006eb0:	46a2      	mov	sl, r4
 8006eb2:	e7d2      	b.n	8006e5a <_vfiprintf_r+0xc6>
 8006eb4:	9b03      	ldr	r3, [sp, #12]
 8006eb6:	1d19      	adds	r1, r3, #4
 8006eb8:	681b      	ldr	r3, [r3, #0]
 8006eba:	9103      	str	r1, [sp, #12]
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	bfbb      	ittet	lt
 8006ec0:	425b      	neglt	r3, r3
 8006ec2:	f042 0202 	orrlt.w	r2, r2, #2
 8006ec6:	9307      	strge	r3, [sp, #28]
 8006ec8:	9307      	strlt	r3, [sp, #28]
 8006eca:	bfb8      	it	lt
 8006ecc:	9204      	strlt	r2, [sp, #16]
 8006ece:	7823      	ldrb	r3, [r4, #0]
 8006ed0:	2b2e      	cmp	r3, #46	@ 0x2e
 8006ed2:	d10a      	bne.n	8006eea <_vfiprintf_r+0x156>
 8006ed4:	7863      	ldrb	r3, [r4, #1]
 8006ed6:	2b2a      	cmp	r3, #42	@ 0x2a
 8006ed8:	d132      	bne.n	8006f40 <_vfiprintf_r+0x1ac>
 8006eda:	9b03      	ldr	r3, [sp, #12]
 8006edc:	1d1a      	adds	r2, r3, #4
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	9203      	str	r2, [sp, #12]
 8006ee2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006ee6:	3402      	adds	r4, #2
 8006ee8:	9305      	str	r3, [sp, #20]
 8006eea:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8006fc0 <_vfiprintf_r+0x22c>
 8006eee:	7821      	ldrb	r1, [r4, #0]
 8006ef0:	2203      	movs	r2, #3
 8006ef2:	4650      	mov	r0, sl
 8006ef4:	f7f9 f97c 	bl	80001f0 <memchr>
 8006ef8:	b138      	cbz	r0, 8006f0a <_vfiprintf_r+0x176>
 8006efa:	9b04      	ldr	r3, [sp, #16]
 8006efc:	eba0 000a 	sub.w	r0, r0, sl
 8006f00:	2240      	movs	r2, #64	@ 0x40
 8006f02:	4082      	lsls	r2, r0
 8006f04:	4313      	orrs	r3, r2
 8006f06:	3401      	adds	r4, #1
 8006f08:	9304      	str	r3, [sp, #16]
 8006f0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006f0e:	4829      	ldr	r0, [pc, #164]	@ (8006fb4 <_vfiprintf_r+0x220>)
 8006f10:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006f14:	2206      	movs	r2, #6
 8006f16:	f7f9 f96b 	bl	80001f0 <memchr>
 8006f1a:	2800      	cmp	r0, #0
 8006f1c:	d03f      	beq.n	8006f9e <_vfiprintf_r+0x20a>
 8006f1e:	4b26      	ldr	r3, [pc, #152]	@ (8006fb8 <_vfiprintf_r+0x224>)
 8006f20:	bb1b      	cbnz	r3, 8006f6a <_vfiprintf_r+0x1d6>
 8006f22:	9b03      	ldr	r3, [sp, #12]
 8006f24:	3307      	adds	r3, #7
 8006f26:	f023 0307 	bic.w	r3, r3, #7
 8006f2a:	3308      	adds	r3, #8
 8006f2c:	9303      	str	r3, [sp, #12]
 8006f2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f30:	443b      	add	r3, r7
 8006f32:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f34:	e76a      	b.n	8006e0c <_vfiprintf_r+0x78>
 8006f36:	fb0c 3202 	mla	r2, ip, r2, r3
 8006f3a:	460c      	mov	r4, r1
 8006f3c:	2001      	movs	r0, #1
 8006f3e:	e7a8      	b.n	8006e92 <_vfiprintf_r+0xfe>
 8006f40:	2300      	movs	r3, #0
 8006f42:	3401      	adds	r4, #1
 8006f44:	9305      	str	r3, [sp, #20]
 8006f46:	4619      	mov	r1, r3
 8006f48:	f04f 0c0a 	mov.w	ip, #10
 8006f4c:	4620      	mov	r0, r4
 8006f4e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006f52:	3a30      	subs	r2, #48	@ 0x30
 8006f54:	2a09      	cmp	r2, #9
 8006f56:	d903      	bls.n	8006f60 <_vfiprintf_r+0x1cc>
 8006f58:	2b00      	cmp	r3, #0
 8006f5a:	d0c6      	beq.n	8006eea <_vfiprintf_r+0x156>
 8006f5c:	9105      	str	r1, [sp, #20]
 8006f5e:	e7c4      	b.n	8006eea <_vfiprintf_r+0x156>
 8006f60:	fb0c 2101 	mla	r1, ip, r1, r2
 8006f64:	4604      	mov	r4, r0
 8006f66:	2301      	movs	r3, #1
 8006f68:	e7f0      	b.n	8006f4c <_vfiprintf_r+0x1b8>
 8006f6a:	ab03      	add	r3, sp, #12
 8006f6c:	9300      	str	r3, [sp, #0]
 8006f6e:	462a      	mov	r2, r5
 8006f70:	4b12      	ldr	r3, [pc, #72]	@ (8006fbc <_vfiprintf_r+0x228>)
 8006f72:	a904      	add	r1, sp, #16
 8006f74:	4630      	mov	r0, r6
 8006f76:	f3af 8000 	nop.w
 8006f7a:	4607      	mov	r7, r0
 8006f7c:	1c78      	adds	r0, r7, #1
 8006f7e:	d1d6      	bne.n	8006f2e <_vfiprintf_r+0x19a>
 8006f80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006f82:	07d9      	lsls	r1, r3, #31
 8006f84:	d405      	bmi.n	8006f92 <_vfiprintf_r+0x1fe>
 8006f86:	89ab      	ldrh	r3, [r5, #12]
 8006f88:	059a      	lsls	r2, r3, #22
 8006f8a:	d402      	bmi.n	8006f92 <_vfiprintf_r+0x1fe>
 8006f8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006f8e:	f7ff fc5f 	bl	8006850 <__retarget_lock_release_recursive>
 8006f92:	89ab      	ldrh	r3, [r5, #12]
 8006f94:	065b      	lsls	r3, r3, #25
 8006f96:	f53f af1f 	bmi.w	8006dd8 <_vfiprintf_r+0x44>
 8006f9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006f9c:	e71e      	b.n	8006ddc <_vfiprintf_r+0x48>
 8006f9e:	ab03      	add	r3, sp, #12
 8006fa0:	9300      	str	r3, [sp, #0]
 8006fa2:	462a      	mov	r2, r5
 8006fa4:	4b05      	ldr	r3, [pc, #20]	@ (8006fbc <_vfiprintf_r+0x228>)
 8006fa6:	a904      	add	r1, sp, #16
 8006fa8:	4630      	mov	r0, r6
 8006faa:	f000 f879 	bl	80070a0 <_printf_i>
 8006fae:	e7e4      	b.n	8006f7a <_vfiprintf_r+0x1e6>
 8006fb0:	08007a1a 	.word	0x08007a1a
 8006fb4:	08007a24 	.word	0x08007a24
 8006fb8:	00000000 	.word	0x00000000
 8006fbc:	08006d6f 	.word	0x08006d6f
 8006fc0:	08007a20 	.word	0x08007a20

08006fc4 <_printf_common>:
 8006fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006fc8:	4616      	mov	r6, r2
 8006fca:	4698      	mov	r8, r3
 8006fcc:	688a      	ldr	r2, [r1, #8]
 8006fce:	690b      	ldr	r3, [r1, #16]
 8006fd0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006fd4:	4293      	cmp	r3, r2
 8006fd6:	bfb8      	it	lt
 8006fd8:	4613      	movlt	r3, r2
 8006fda:	6033      	str	r3, [r6, #0]
 8006fdc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8006fe0:	4607      	mov	r7, r0
 8006fe2:	460c      	mov	r4, r1
 8006fe4:	b10a      	cbz	r2, 8006fea <_printf_common+0x26>
 8006fe6:	3301      	adds	r3, #1
 8006fe8:	6033      	str	r3, [r6, #0]
 8006fea:	6823      	ldr	r3, [r4, #0]
 8006fec:	0699      	lsls	r1, r3, #26
 8006fee:	bf42      	ittt	mi
 8006ff0:	6833      	ldrmi	r3, [r6, #0]
 8006ff2:	3302      	addmi	r3, #2
 8006ff4:	6033      	strmi	r3, [r6, #0]
 8006ff6:	6825      	ldr	r5, [r4, #0]
 8006ff8:	f015 0506 	ands.w	r5, r5, #6
 8006ffc:	d106      	bne.n	800700c <_printf_common+0x48>
 8006ffe:	f104 0a19 	add.w	sl, r4, #25
 8007002:	68e3      	ldr	r3, [r4, #12]
 8007004:	6832      	ldr	r2, [r6, #0]
 8007006:	1a9b      	subs	r3, r3, r2
 8007008:	42ab      	cmp	r3, r5
 800700a:	dc26      	bgt.n	800705a <_printf_common+0x96>
 800700c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007010:	6822      	ldr	r2, [r4, #0]
 8007012:	3b00      	subs	r3, #0
 8007014:	bf18      	it	ne
 8007016:	2301      	movne	r3, #1
 8007018:	0692      	lsls	r2, r2, #26
 800701a:	d42b      	bmi.n	8007074 <_printf_common+0xb0>
 800701c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007020:	4641      	mov	r1, r8
 8007022:	4638      	mov	r0, r7
 8007024:	47c8      	blx	r9
 8007026:	3001      	adds	r0, #1
 8007028:	d01e      	beq.n	8007068 <_printf_common+0xa4>
 800702a:	6823      	ldr	r3, [r4, #0]
 800702c:	6922      	ldr	r2, [r4, #16]
 800702e:	f003 0306 	and.w	r3, r3, #6
 8007032:	2b04      	cmp	r3, #4
 8007034:	bf02      	ittt	eq
 8007036:	68e5      	ldreq	r5, [r4, #12]
 8007038:	6833      	ldreq	r3, [r6, #0]
 800703a:	1aed      	subeq	r5, r5, r3
 800703c:	68a3      	ldr	r3, [r4, #8]
 800703e:	bf0c      	ite	eq
 8007040:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007044:	2500      	movne	r5, #0
 8007046:	4293      	cmp	r3, r2
 8007048:	bfc4      	itt	gt
 800704a:	1a9b      	subgt	r3, r3, r2
 800704c:	18ed      	addgt	r5, r5, r3
 800704e:	2600      	movs	r6, #0
 8007050:	341a      	adds	r4, #26
 8007052:	42b5      	cmp	r5, r6
 8007054:	d11a      	bne.n	800708c <_printf_common+0xc8>
 8007056:	2000      	movs	r0, #0
 8007058:	e008      	b.n	800706c <_printf_common+0xa8>
 800705a:	2301      	movs	r3, #1
 800705c:	4652      	mov	r2, sl
 800705e:	4641      	mov	r1, r8
 8007060:	4638      	mov	r0, r7
 8007062:	47c8      	blx	r9
 8007064:	3001      	adds	r0, #1
 8007066:	d103      	bne.n	8007070 <_printf_common+0xac>
 8007068:	f04f 30ff 	mov.w	r0, #4294967295
 800706c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007070:	3501      	adds	r5, #1
 8007072:	e7c6      	b.n	8007002 <_printf_common+0x3e>
 8007074:	18e1      	adds	r1, r4, r3
 8007076:	1c5a      	adds	r2, r3, #1
 8007078:	2030      	movs	r0, #48	@ 0x30
 800707a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800707e:	4422      	add	r2, r4
 8007080:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007084:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007088:	3302      	adds	r3, #2
 800708a:	e7c7      	b.n	800701c <_printf_common+0x58>
 800708c:	2301      	movs	r3, #1
 800708e:	4622      	mov	r2, r4
 8007090:	4641      	mov	r1, r8
 8007092:	4638      	mov	r0, r7
 8007094:	47c8      	blx	r9
 8007096:	3001      	adds	r0, #1
 8007098:	d0e6      	beq.n	8007068 <_printf_common+0xa4>
 800709a:	3601      	adds	r6, #1
 800709c:	e7d9      	b.n	8007052 <_printf_common+0x8e>
	...

080070a0 <_printf_i>:
 80070a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80070a4:	7e0f      	ldrb	r7, [r1, #24]
 80070a6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80070a8:	2f78      	cmp	r7, #120	@ 0x78
 80070aa:	4691      	mov	r9, r2
 80070ac:	4680      	mov	r8, r0
 80070ae:	460c      	mov	r4, r1
 80070b0:	469a      	mov	sl, r3
 80070b2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80070b6:	d807      	bhi.n	80070c8 <_printf_i+0x28>
 80070b8:	2f62      	cmp	r7, #98	@ 0x62
 80070ba:	d80a      	bhi.n	80070d2 <_printf_i+0x32>
 80070bc:	2f00      	cmp	r7, #0
 80070be:	f000 80d1 	beq.w	8007264 <_printf_i+0x1c4>
 80070c2:	2f58      	cmp	r7, #88	@ 0x58
 80070c4:	f000 80b8 	beq.w	8007238 <_printf_i+0x198>
 80070c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80070cc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80070d0:	e03a      	b.n	8007148 <_printf_i+0xa8>
 80070d2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80070d6:	2b15      	cmp	r3, #21
 80070d8:	d8f6      	bhi.n	80070c8 <_printf_i+0x28>
 80070da:	a101      	add	r1, pc, #4	@ (adr r1, 80070e0 <_printf_i+0x40>)
 80070dc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80070e0:	08007139 	.word	0x08007139
 80070e4:	0800714d 	.word	0x0800714d
 80070e8:	080070c9 	.word	0x080070c9
 80070ec:	080070c9 	.word	0x080070c9
 80070f0:	080070c9 	.word	0x080070c9
 80070f4:	080070c9 	.word	0x080070c9
 80070f8:	0800714d 	.word	0x0800714d
 80070fc:	080070c9 	.word	0x080070c9
 8007100:	080070c9 	.word	0x080070c9
 8007104:	080070c9 	.word	0x080070c9
 8007108:	080070c9 	.word	0x080070c9
 800710c:	0800724b 	.word	0x0800724b
 8007110:	08007177 	.word	0x08007177
 8007114:	08007205 	.word	0x08007205
 8007118:	080070c9 	.word	0x080070c9
 800711c:	080070c9 	.word	0x080070c9
 8007120:	0800726d 	.word	0x0800726d
 8007124:	080070c9 	.word	0x080070c9
 8007128:	08007177 	.word	0x08007177
 800712c:	080070c9 	.word	0x080070c9
 8007130:	080070c9 	.word	0x080070c9
 8007134:	0800720d 	.word	0x0800720d
 8007138:	6833      	ldr	r3, [r6, #0]
 800713a:	1d1a      	adds	r2, r3, #4
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	6032      	str	r2, [r6, #0]
 8007140:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007144:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007148:	2301      	movs	r3, #1
 800714a:	e09c      	b.n	8007286 <_printf_i+0x1e6>
 800714c:	6833      	ldr	r3, [r6, #0]
 800714e:	6820      	ldr	r0, [r4, #0]
 8007150:	1d19      	adds	r1, r3, #4
 8007152:	6031      	str	r1, [r6, #0]
 8007154:	0606      	lsls	r6, r0, #24
 8007156:	d501      	bpl.n	800715c <_printf_i+0xbc>
 8007158:	681d      	ldr	r5, [r3, #0]
 800715a:	e003      	b.n	8007164 <_printf_i+0xc4>
 800715c:	0645      	lsls	r5, r0, #25
 800715e:	d5fb      	bpl.n	8007158 <_printf_i+0xb8>
 8007160:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007164:	2d00      	cmp	r5, #0
 8007166:	da03      	bge.n	8007170 <_printf_i+0xd0>
 8007168:	232d      	movs	r3, #45	@ 0x2d
 800716a:	426d      	negs	r5, r5
 800716c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007170:	4858      	ldr	r0, [pc, #352]	@ (80072d4 <_printf_i+0x234>)
 8007172:	230a      	movs	r3, #10
 8007174:	e011      	b.n	800719a <_printf_i+0xfa>
 8007176:	6821      	ldr	r1, [r4, #0]
 8007178:	6833      	ldr	r3, [r6, #0]
 800717a:	0608      	lsls	r0, r1, #24
 800717c:	f853 5b04 	ldr.w	r5, [r3], #4
 8007180:	d402      	bmi.n	8007188 <_printf_i+0xe8>
 8007182:	0649      	lsls	r1, r1, #25
 8007184:	bf48      	it	mi
 8007186:	b2ad      	uxthmi	r5, r5
 8007188:	2f6f      	cmp	r7, #111	@ 0x6f
 800718a:	4852      	ldr	r0, [pc, #328]	@ (80072d4 <_printf_i+0x234>)
 800718c:	6033      	str	r3, [r6, #0]
 800718e:	bf14      	ite	ne
 8007190:	230a      	movne	r3, #10
 8007192:	2308      	moveq	r3, #8
 8007194:	2100      	movs	r1, #0
 8007196:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800719a:	6866      	ldr	r6, [r4, #4]
 800719c:	60a6      	str	r6, [r4, #8]
 800719e:	2e00      	cmp	r6, #0
 80071a0:	db05      	blt.n	80071ae <_printf_i+0x10e>
 80071a2:	6821      	ldr	r1, [r4, #0]
 80071a4:	432e      	orrs	r6, r5
 80071a6:	f021 0104 	bic.w	r1, r1, #4
 80071aa:	6021      	str	r1, [r4, #0]
 80071ac:	d04b      	beq.n	8007246 <_printf_i+0x1a6>
 80071ae:	4616      	mov	r6, r2
 80071b0:	fbb5 f1f3 	udiv	r1, r5, r3
 80071b4:	fb03 5711 	mls	r7, r3, r1, r5
 80071b8:	5dc7      	ldrb	r7, [r0, r7]
 80071ba:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80071be:	462f      	mov	r7, r5
 80071c0:	42bb      	cmp	r3, r7
 80071c2:	460d      	mov	r5, r1
 80071c4:	d9f4      	bls.n	80071b0 <_printf_i+0x110>
 80071c6:	2b08      	cmp	r3, #8
 80071c8:	d10b      	bne.n	80071e2 <_printf_i+0x142>
 80071ca:	6823      	ldr	r3, [r4, #0]
 80071cc:	07df      	lsls	r7, r3, #31
 80071ce:	d508      	bpl.n	80071e2 <_printf_i+0x142>
 80071d0:	6923      	ldr	r3, [r4, #16]
 80071d2:	6861      	ldr	r1, [r4, #4]
 80071d4:	4299      	cmp	r1, r3
 80071d6:	bfde      	ittt	le
 80071d8:	2330      	movle	r3, #48	@ 0x30
 80071da:	f806 3c01 	strble.w	r3, [r6, #-1]
 80071de:	f106 36ff 	addle.w	r6, r6, #4294967295
 80071e2:	1b92      	subs	r2, r2, r6
 80071e4:	6122      	str	r2, [r4, #16]
 80071e6:	f8cd a000 	str.w	sl, [sp]
 80071ea:	464b      	mov	r3, r9
 80071ec:	aa03      	add	r2, sp, #12
 80071ee:	4621      	mov	r1, r4
 80071f0:	4640      	mov	r0, r8
 80071f2:	f7ff fee7 	bl	8006fc4 <_printf_common>
 80071f6:	3001      	adds	r0, #1
 80071f8:	d14a      	bne.n	8007290 <_printf_i+0x1f0>
 80071fa:	f04f 30ff 	mov.w	r0, #4294967295
 80071fe:	b004      	add	sp, #16
 8007200:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007204:	6823      	ldr	r3, [r4, #0]
 8007206:	f043 0320 	orr.w	r3, r3, #32
 800720a:	6023      	str	r3, [r4, #0]
 800720c:	4832      	ldr	r0, [pc, #200]	@ (80072d8 <_printf_i+0x238>)
 800720e:	2778      	movs	r7, #120	@ 0x78
 8007210:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007214:	6823      	ldr	r3, [r4, #0]
 8007216:	6831      	ldr	r1, [r6, #0]
 8007218:	061f      	lsls	r7, r3, #24
 800721a:	f851 5b04 	ldr.w	r5, [r1], #4
 800721e:	d402      	bmi.n	8007226 <_printf_i+0x186>
 8007220:	065f      	lsls	r7, r3, #25
 8007222:	bf48      	it	mi
 8007224:	b2ad      	uxthmi	r5, r5
 8007226:	6031      	str	r1, [r6, #0]
 8007228:	07d9      	lsls	r1, r3, #31
 800722a:	bf44      	itt	mi
 800722c:	f043 0320 	orrmi.w	r3, r3, #32
 8007230:	6023      	strmi	r3, [r4, #0]
 8007232:	b11d      	cbz	r5, 800723c <_printf_i+0x19c>
 8007234:	2310      	movs	r3, #16
 8007236:	e7ad      	b.n	8007194 <_printf_i+0xf4>
 8007238:	4826      	ldr	r0, [pc, #152]	@ (80072d4 <_printf_i+0x234>)
 800723a:	e7e9      	b.n	8007210 <_printf_i+0x170>
 800723c:	6823      	ldr	r3, [r4, #0]
 800723e:	f023 0320 	bic.w	r3, r3, #32
 8007242:	6023      	str	r3, [r4, #0]
 8007244:	e7f6      	b.n	8007234 <_printf_i+0x194>
 8007246:	4616      	mov	r6, r2
 8007248:	e7bd      	b.n	80071c6 <_printf_i+0x126>
 800724a:	6833      	ldr	r3, [r6, #0]
 800724c:	6825      	ldr	r5, [r4, #0]
 800724e:	6961      	ldr	r1, [r4, #20]
 8007250:	1d18      	adds	r0, r3, #4
 8007252:	6030      	str	r0, [r6, #0]
 8007254:	062e      	lsls	r6, r5, #24
 8007256:	681b      	ldr	r3, [r3, #0]
 8007258:	d501      	bpl.n	800725e <_printf_i+0x1be>
 800725a:	6019      	str	r1, [r3, #0]
 800725c:	e002      	b.n	8007264 <_printf_i+0x1c4>
 800725e:	0668      	lsls	r0, r5, #25
 8007260:	d5fb      	bpl.n	800725a <_printf_i+0x1ba>
 8007262:	8019      	strh	r1, [r3, #0]
 8007264:	2300      	movs	r3, #0
 8007266:	6123      	str	r3, [r4, #16]
 8007268:	4616      	mov	r6, r2
 800726a:	e7bc      	b.n	80071e6 <_printf_i+0x146>
 800726c:	6833      	ldr	r3, [r6, #0]
 800726e:	1d1a      	adds	r2, r3, #4
 8007270:	6032      	str	r2, [r6, #0]
 8007272:	681e      	ldr	r6, [r3, #0]
 8007274:	6862      	ldr	r2, [r4, #4]
 8007276:	2100      	movs	r1, #0
 8007278:	4630      	mov	r0, r6
 800727a:	f7f8 ffb9 	bl	80001f0 <memchr>
 800727e:	b108      	cbz	r0, 8007284 <_printf_i+0x1e4>
 8007280:	1b80      	subs	r0, r0, r6
 8007282:	6060      	str	r0, [r4, #4]
 8007284:	6863      	ldr	r3, [r4, #4]
 8007286:	6123      	str	r3, [r4, #16]
 8007288:	2300      	movs	r3, #0
 800728a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800728e:	e7aa      	b.n	80071e6 <_printf_i+0x146>
 8007290:	6923      	ldr	r3, [r4, #16]
 8007292:	4632      	mov	r2, r6
 8007294:	4649      	mov	r1, r9
 8007296:	4640      	mov	r0, r8
 8007298:	47d0      	blx	sl
 800729a:	3001      	adds	r0, #1
 800729c:	d0ad      	beq.n	80071fa <_printf_i+0x15a>
 800729e:	6823      	ldr	r3, [r4, #0]
 80072a0:	079b      	lsls	r3, r3, #30
 80072a2:	d413      	bmi.n	80072cc <_printf_i+0x22c>
 80072a4:	68e0      	ldr	r0, [r4, #12]
 80072a6:	9b03      	ldr	r3, [sp, #12]
 80072a8:	4298      	cmp	r0, r3
 80072aa:	bfb8      	it	lt
 80072ac:	4618      	movlt	r0, r3
 80072ae:	e7a6      	b.n	80071fe <_printf_i+0x15e>
 80072b0:	2301      	movs	r3, #1
 80072b2:	4632      	mov	r2, r6
 80072b4:	4649      	mov	r1, r9
 80072b6:	4640      	mov	r0, r8
 80072b8:	47d0      	blx	sl
 80072ba:	3001      	adds	r0, #1
 80072bc:	d09d      	beq.n	80071fa <_printf_i+0x15a>
 80072be:	3501      	adds	r5, #1
 80072c0:	68e3      	ldr	r3, [r4, #12]
 80072c2:	9903      	ldr	r1, [sp, #12]
 80072c4:	1a5b      	subs	r3, r3, r1
 80072c6:	42ab      	cmp	r3, r5
 80072c8:	dcf2      	bgt.n	80072b0 <_printf_i+0x210>
 80072ca:	e7eb      	b.n	80072a4 <_printf_i+0x204>
 80072cc:	2500      	movs	r5, #0
 80072ce:	f104 0619 	add.w	r6, r4, #25
 80072d2:	e7f5      	b.n	80072c0 <_printf_i+0x220>
 80072d4:	08007a2b 	.word	0x08007a2b
 80072d8:	08007a3c 	.word	0x08007a3c

080072dc <__sflush_r>:
 80072dc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80072e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072e4:	0716      	lsls	r6, r2, #28
 80072e6:	4605      	mov	r5, r0
 80072e8:	460c      	mov	r4, r1
 80072ea:	d454      	bmi.n	8007396 <__sflush_r+0xba>
 80072ec:	684b      	ldr	r3, [r1, #4]
 80072ee:	2b00      	cmp	r3, #0
 80072f0:	dc02      	bgt.n	80072f8 <__sflush_r+0x1c>
 80072f2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80072f4:	2b00      	cmp	r3, #0
 80072f6:	dd48      	ble.n	800738a <__sflush_r+0xae>
 80072f8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80072fa:	2e00      	cmp	r6, #0
 80072fc:	d045      	beq.n	800738a <__sflush_r+0xae>
 80072fe:	2300      	movs	r3, #0
 8007300:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8007304:	682f      	ldr	r7, [r5, #0]
 8007306:	6a21      	ldr	r1, [r4, #32]
 8007308:	602b      	str	r3, [r5, #0]
 800730a:	d030      	beq.n	800736e <__sflush_r+0x92>
 800730c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800730e:	89a3      	ldrh	r3, [r4, #12]
 8007310:	0759      	lsls	r1, r3, #29
 8007312:	d505      	bpl.n	8007320 <__sflush_r+0x44>
 8007314:	6863      	ldr	r3, [r4, #4]
 8007316:	1ad2      	subs	r2, r2, r3
 8007318:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800731a:	b10b      	cbz	r3, 8007320 <__sflush_r+0x44>
 800731c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800731e:	1ad2      	subs	r2, r2, r3
 8007320:	2300      	movs	r3, #0
 8007322:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007324:	6a21      	ldr	r1, [r4, #32]
 8007326:	4628      	mov	r0, r5
 8007328:	47b0      	blx	r6
 800732a:	1c43      	adds	r3, r0, #1
 800732c:	89a3      	ldrh	r3, [r4, #12]
 800732e:	d106      	bne.n	800733e <__sflush_r+0x62>
 8007330:	6829      	ldr	r1, [r5, #0]
 8007332:	291d      	cmp	r1, #29
 8007334:	d82b      	bhi.n	800738e <__sflush_r+0xb2>
 8007336:	4a2a      	ldr	r2, [pc, #168]	@ (80073e0 <__sflush_r+0x104>)
 8007338:	40ca      	lsrs	r2, r1
 800733a:	07d6      	lsls	r6, r2, #31
 800733c:	d527      	bpl.n	800738e <__sflush_r+0xb2>
 800733e:	2200      	movs	r2, #0
 8007340:	6062      	str	r2, [r4, #4]
 8007342:	04d9      	lsls	r1, r3, #19
 8007344:	6922      	ldr	r2, [r4, #16]
 8007346:	6022      	str	r2, [r4, #0]
 8007348:	d504      	bpl.n	8007354 <__sflush_r+0x78>
 800734a:	1c42      	adds	r2, r0, #1
 800734c:	d101      	bne.n	8007352 <__sflush_r+0x76>
 800734e:	682b      	ldr	r3, [r5, #0]
 8007350:	b903      	cbnz	r3, 8007354 <__sflush_r+0x78>
 8007352:	6560      	str	r0, [r4, #84]	@ 0x54
 8007354:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007356:	602f      	str	r7, [r5, #0]
 8007358:	b1b9      	cbz	r1, 800738a <__sflush_r+0xae>
 800735a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800735e:	4299      	cmp	r1, r3
 8007360:	d002      	beq.n	8007368 <__sflush_r+0x8c>
 8007362:	4628      	mov	r0, r5
 8007364:	f7ff fa94 	bl	8006890 <_free_r>
 8007368:	2300      	movs	r3, #0
 800736a:	6363      	str	r3, [r4, #52]	@ 0x34
 800736c:	e00d      	b.n	800738a <__sflush_r+0xae>
 800736e:	2301      	movs	r3, #1
 8007370:	4628      	mov	r0, r5
 8007372:	47b0      	blx	r6
 8007374:	4602      	mov	r2, r0
 8007376:	1c50      	adds	r0, r2, #1
 8007378:	d1c9      	bne.n	800730e <__sflush_r+0x32>
 800737a:	682b      	ldr	r3, [r5, #0]
 800737c:	2b00      	cmp	r3, #0
 800737e:	d0c6      	beq.n	800730e <__sflush_r+0x32>
 8007380:	2b1d      	cmp	r3, #29
 8007382:	d001      	beq.n	8007388 <__sflush_r+0xac>
 8007384:	2b16      	cmp	r3, #22
 8007386:	d11e      	bne.n	80073c6 <__sflush_r+0xea>
 8007388:	602f      	str	r7, [r5, #0]
 800738a:	2000      	movs	r0, #0
 800738c:	e022      	b.n	80073d4 <__sflush_r+0xf8>
 800738e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007392:	b21b      	sxth	r3, r3
 8007394:	e01b      	b.n	80073ce <__sflush_r+0xf2>
 8007396:	690f      	ldr	r7, [r1, #16]
 8007398:	2f00      	cmp	r7, #0
 800739a:	d0f6      	beq.n	800738a <__sflush_r+0xae>
 800739c:	0793      	lsls	r3, r2, #30
 800739e:	680e      	ldr	r6, [r1, #0]
 80073a0:	bf08      	it	eq
 80073a2:	694b      	ldreq	r3, [r1, #20]
 80073a4:	600f      	str	r7, [r1, #0]
 80073a6:	bf18      	it	ne
 80073a8:	2300      	movne	r3, #0
 80073aa:	eba6 0807 	sub.w	r8, r6, r7
 80073ae:	608b      	str	r3, [r1, #8]
 80073b0:	f1b8 0f00 	cmp.w	r8, #0
 80073b4:	dde9      	ble.n	800738a <__sflush_r+0xae>
 80073b6:	6a21      	ldr	r1, [r4, #32]
 80073b8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80073ba:	4643      	mov	r3, r8
 80073bc:	463a      	mov	r2, r7
 80073be:	4628      	mov	r0, r5
 80073c0:	47b0      	blx	r6
 80073c2:	2800      	cmp	r0, #0
 80073c4:	dc08      	bgt.n	80073d8 <__sflush_r+0xfc>
 80073c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80073ca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80073ce:	81a3      	strh	r3, [r4, #12]
 80073d0:	f04f 30ff 	mov.w	r0, #4294967295
 80073d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073d8:	4407      	add	r7, r0
 80073da:	eba8 0800 	sub.w	r8, r8, r0
 80073de:	e7e7      	b.n	80073b0 <__sflush_r+0xd4>
 80073e0:	20400001 	.word	0x20400001

080073e4 <_fflush_r>:
 80073e4:	b538      	push	{r3, r4, r5, lr}
 80073e6:	690b      	ldr	r3, [r1, #16]
 80073e8:	4605      	mov	r5, r0
 80073ea:	460c      	mov	r4, r1
 80073ec:	b913      	cbnz	r3, 80073f4 <_fflush_r+0x10>
 80073ee:	2500      	movs	r5, #0
 80073f0:	4628      	mov	r0, r5
 80073f2:	bd38      	pop	{r3, r4, r5, pc}
 80073f4:	b118      	cbz	r0, 80073fe <_fflush_r+0x1a>
 80073f6:	6a03      	ldr	r3, [r0, #32]
 80073f8:	b90b      	cbnz	r3, 80073fe <_fflush_r+0x1a>
 80073fa:	f7ff f891 	bl	8006520 <__sinit>
 80073fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007402:	2b00      	cmp	r3, #0
 8007404:	d0f3      	beq.n	80073ee <_fflush_r+0xa>
 8007406:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8007408:	07d0      	lsls	r0, r2, #31
 800740a:	d404      	bmi.n	8007416 <_fflush_r+0x32>
 800740c:	0599      	lsls	r1, r3, #22
 800740e:	d402      	bmi.n	8007416 <_fflush_r+0x32>
 8007410:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007412:	f7ff fa1c 	bl	800684e <__retarget_lock_acquire_recursive>
 8007416:	4628      	mov	r0, r5
 8007418:	4621      	mov	r1, r4
 800741a:	f7ff ff5f 	bl	80072dc <__sflush_r>
 800741e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8007420:	07da      	lsls	r2, r3, #31
 8007422:	4605      	mov	r5, r0
 8007424:	d4e4      	bmi.n	80073f0 <_fflush_r+0xc>
 8007426:	89a3      	ldrh	r3, [r4, #12]
 8007428:	059b      	lsls	r3, r3, #22
 800742a:	d4e1      	bmi.n	80073f0 <_fflush_r+0xc>
 800742c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800742e:	f7ff fa0f 	bl	8006850 <__retarget_lock_release_recursive>
 8007432:	e7dd      	b.n	80073f0 <_fflush_r+0xc>

08007434 <fiprintf>:
 8007434:	b40e      	push	{r1, r2, r3}
 8007436:	b503      	push	{r0, r1, lr}
 8007438:	4601      	mov	r1, r0
 800743a:	ab03      	add	r3, sp, #12
 800743c:	4805      	ldr	r0, [pc, #20]	@ (8007454 <fiprintf+0x20>)
 800743e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007442:	6800      	ldr	r0, [r0, #0]
 8007444:	9301      	str	r3, [sp, #4]
 8007446:	f7ff fca5 	bl	8006d94 <_vfiprintf_r>
 800744a:	b002      	add	sp, #8
 800744c:	f85d eb04 	ldr.w	lr, [sp], #4
 8007450:	b003      	add	sp, #12
 8007452:	4770      	bx	lr
 8007454:	2000003c 	.word	0x2000003c

08007458 <__swbuf_r>:
 8007458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800745a:	460e      	mov	r6, r1
 800745c:	4614      	mov	r4, r2
 800745e:	4605      	mov	r5, r0
 8007460:	b118      	cbz	r0, 800746a <__swbuf_r+0x12>
 8007462:	6a03      	ldr	r3, [r0, #32]
 8007464:	b90b      	cbnz	r3, 800746a <__swbuf_r+0x12>
 8007466:	f7ff f85b 	bl	8006520 <__sinit>
 800746a:	69a3      	ldr	r3, [r4, #24]
 800746c:	60a3      	str	r3, [r4, #8]
 800746e:	89a3      	ldrh	r3, [r4, #12]
 8007470:	071a      	lsls	r2, r3, #28
 8007472:	d501      	bpl.n	8007478 <__swbuf_r+0x20>
 8007474:	6923      	ldr	r3, [r4, #16]
 8007476:	b943      	cbnz	r3, 800748a <__swbuf_r+0x32>
 8007478:	4621      	mov	r1, r4
 800747a:	4628      	mov	r0, r5
 800747c:	f000 f82a 	bl	80074d4 <__swsetup_r>
 8007480:	b118      	cbz	r0, 800748a <__swbuf_r+0x32>
 8007482:	f04f 37ff 	mov.w	r7, #4294967295
 8007486:	4638      	mov	r0, r7
 8007488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800748a:	6823      	ldr	r3, [r4, #0]
 800748c:	6922      	ldr	r2, [r4, #16]
 800748e:	1a98      	subs	r0, r3, r2
 8007490:	6963      	ldr	r3, [r4, #20]
 8007492:	b2f6      	uxtb	r6, r6
 8007494:	4283      	cmp	r3, r0
 8007496:	4637      	mov	r7, r6
 8007498:	dc05      	bgt.n	80074a6 <__swbuf_r+0x4e>
 800749a:	4621      	mov	r1, r4
 800749c:	4628      	mov	r0, r5
 800749e:	f7ff ffa1 	bl	80073e4 <_fflush_r>
 80074a2:	2800      	cmp	r0, #0
 80074a4:	d1ed      	bne.n	8007482 <__swbuf_r+0x2a>
 80074a6:	68a3      	ldr	r3, [r4, #8]
 80074a8:	3b01      	subs	r3, #1
 80074aa:	60a3      	str	r3, [r4, #8]
 80074ac:	6823      	ldr	r3, [r4, #0]
 80074ae:	1c5a      	adds	r2, r3, #1
 80074b0:	6022      	str	r2, [r4, #0]
 80074b2:	701e      	strb	r6, [r3, #0]
 80074b4:	6962      	ldr	r2, [r4, #20]
 80074b6:	1c43      	adds	r3, r0, #1
 80074b8:	429a      	cmp	r2, r3
 80074ba:	d004      	beq.n	80074c6 <__swbuf_r+0x6e>
 80074bc:	89a3      	ldrh	r3, [r4, #12]
 80074be:	07db      	lsls	r3, r3, #31
 80074c0:	d5e1      	bpl.n	8007486 <__swbuf_r+0x2e>
 80074c2:	2e0a      	cmp	r6, #10
 80074c4:	d1df      	bne.n	8007486 <__swbuf_r+0x2e>
 80074c6:	4621      	mov	r1, r4
 80074c8:	4628      	mov	r0, r5
 80074ca:	f7ff ff8b 	bl	80073e4 <_fflush_r>
 80074ce:	2800      	cmp	r0, #0
 80074d0:	d0d9      	beq.n	8007486 <__swbuf_r+0x2e>
 80074d2:	e7d6      	b.n	8007482 <__swbuf_r+0x2a>

080074d4 <__swsetup_r>:
 80074d4:	b538      	push	{r3, r4, r5, lr}
 80074d6:	4b29      	ldr	r3, [pc, #164]	@ (800757c <__swsetup_r+0xa8>)
 80074d8:	4605      	mov	r5, r0
 80074da:	6818      	ldr	r0, [r3, #0]
 80074dc:	460c      	mov	r4, r1
 80074de:	b118      	cbz	r0, 80074e8 <__swsetup_r+0x14>
 80074e0:	6a03      	ldr	r3, [r0, #32]
 80074e2:	b90b      	cbnz	r3, 80074e8 <__swsetup_r+0x14>
 80074e4:	f7ff f81c 	bl	8006520 <__sinit>
 80074e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80074ec:	0719      	lsls	r1, r3, #28
 80074ee:	d422      	bmi.n	8007536 <__swsetup_r+0x62>
 80074f0:	06da      	lsls	r2, r3, #27
 80074f2:	d407      	bmi.n	8007504 <__swsetup_r+0x30>
 80074f4:	2209      	movs	r2, #9
 80074f6:	602a      	str	r2, [r5, #0]
 80074f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80074fc:	81a3      	strh	r3, [r4, #12]
 80074fe:	f04f 30ff 	mov.w	r0, #4294967295
 8007502:	e033      	b.n	800756c <__swsetup_r+0x98>
 8007504:	0758      	lsls	r0, r3, #29
 8007506:	d512      	bpl.n	800752e <__swsetup_r+0x5a>
 8007508:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800750a:	b141      	cbz	r1, 800751e <__swsetup_r+0x4a>
 800750c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007510:	4299      	cmp	r1, r3
 8007512:	d002      	beq.n	800751a <__swsetup_r+0x46>
 8007514:	4628      	mov	r0, r5
 8007516:	f7ff f9bb 	bl	8006890 <_free_r>
 800751a:	2300      	movs	r3, #0
 800751c:	6363      	str	r3, [r4, #52]	@ 0x34
 800751e:	89a3      	ldrh	r3, [r4, #12]
 8007520:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8007524:	81a3      	strh	r3, [r4, #12]
 8007526:	2300      	movs	r3, #0
 8007528:	6063      	str	r3, [r4, #4]
 800752a:	6923      	ldr	r3, [r4, #16]
 800752c:	6023      	str	r3, [r4, #0]
 800752e:	89a3      	ldrh	r3, [r4, #12]
 8007530:	f043 0308 	orr.w	r3, r3, #8
 8007534:	81a3      	strh	r3, [r4, #12]
 8007536:	6923      	ldr	r3, [r4, #16]
 8007538:	b94b      	cbnz	r3, 800754e <__swsetup_r+0x7a>
 800753a:	89a3      	ldrh	r3, [r4, #12]
 800753c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8007540:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007544:	d003      	beq.n	800754e <__swsetup_r+0x7a>
 8007546:	4621      	mov	r1, r4
 8007548:	4628      	mov	r0, r5
 800754a:	f000 f8ac 	bl	80076a6 <__smakebuf_r>
 800754e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007552:	f013 0201 	ands.w	r2, r3, #1
 8007556:	d00a      	beq.n	800756e <__swsetup_r+0x9a>
 8007558:	2200      	movs	r2, #0
 800755a:	60a2      	str	r2, [r4, #8]
 800755c:	6962      	ldr	r2, [r4, #20]
 800755e:	4252      	negs	r2, r2
 8007560:	61a2      	str	r2, [r4, #24]
 8007562:	6922      	ldr	r2, [r4, #16]
 8007564:	b942      	cbnz	r2, 8007578 <__swsetup_r+0xa4>
 8007566:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800756a:	d1c5      	bne.n	80074f8 <__swsetup_r+0x24>
 800756c:	bd38      	pop	{r3, r4, r5, pc}
 800756e:	0799      	lsls	r1, r3, #30
 8007570:	bf58      	it	pl
 8007572:	6962      	ldrpl	r2, [r4, #20]
 8007574:	60a2      	str	r2, [r4, #8]
 8007576:	e7f4      	b.n	8007562 <__swsetup_r+0x8e>
 8007578:	2000      	movs	r0, #0
 800757a:	e7f7      	b.n	800756c <__swsetup_r+0x98>
 800757c:	2000003c 	.word	0x2000003c

08007580 <memmove>:
 8007580:	4288      	cmp	r0, r1
 8007582:	b510      	push	{r4, lr}
 8007584:	eb01 0402 	add.w	r4, r1, r2
 8007588:	d902      	bls.n	8007590 <memmove+0x10>
 800758a:	4284      	cmp	r4, r0
 800758c:	4623      	mov	r3, r4
 800758e:	d807      	bhi.n	80075a0 <memmove+0x20>
 8007590:	1e43      	subs	r3, r0, #1
 8007592:	42a1      	cmp	r1, r4
 8007594:	d008      	beq.n	80075a8 <memmove+0x28>
 8007596:	f811 2b01 	ldrb.w	r2, [r1], #1
 800759a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800759e:	e7f8      	b.n	8007592 <memmove+0x12>
 80075a0:	4402      	add	r2, r0
 80075a2:	4601      	mov	r1, r0
 80075a4:	428a      	cmp	r2, r1
 80075a6:	d100      	bne.n	80075aa <memmove+0x2a>
 80075a8:	bd10      	pop	{r4, pc}
 80075aa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80075ae:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80075b2:	e7f7      	b.n	80075a4 <memmove+0x24>

080075b4 <_sbrk_r>:
 80075b4:	b538      	push	{r3, r4, r5, lr}
 80075b6:	4d06      	ldr	r5, [pc, #24]	@ (80075d0 <_sbrk_r+0x1c>)
 80075b8:	2300      	movs	r3, #0
 80075ba:	4604      	mov	r4, r0
 80075bc:	4608      	mov	r0, r1
 80075be:	602b      	str	r3, [r5, #0]
 80075c0:	f7fa fae4 	bl	8001b8c <_sbrk>
 80075c4:	1c43      	adds	r3, r0, #1
 80075c6:	d102      	bne.n	80075ce <_sbrk_r+0x1a>
 80075c8:	682b      	ldr	r3, [r5, #0]
 80075ca:	b103      	cbz	r3, 80075ce <_sbrk_r+0x1a>
 80075cc:	6023      	str	r3, [r4, #0]
 80075ce:	bd38      	pop	{r3, r4, r5, pc}
 80075d0:	20013d0c 	.word	0x20013d0c

080075d4 <memcpy>:
 80075d4:	440a      	add	r2, r1
 80075d6:	4291      	cmp	r1, r2
 80075d8:	f100 33ff 	add.w	r3, r0, #4294967295
 80075dc:	d100      	bne.n	80075e0 <memcpy+0xc>
 80075de:	4770      	bx	lr
 80075e0:	b510      	push	{r4, lr}
 80075e2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80075e6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80075ea:	4291      	cmp	r1, r2
 80075ec:	d1f9      	bne.n	80075e2 <memcpy+0xe>
 80075ee:	bd10      	pop	{r4, pc}

080075f0 <abort>:
 80075f0:	b508      	push	{r3, lr}
 80075f2:	2006      	movs	r0, #6
 80075f4:	f000 f8bc 	bl	8007770 <raise>
 80075f8:	2001      	movs	r0, #1
 80075fa:	f7fa fa4f 	bl	8001a9c <_exit>

080075fe <_realloc_r>:
 80075fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007602:	4607      	mov	r7, r0
 8007604:	4614      	mov	r4, r2
 8007606:	460d      	mov	r5, r1
 8007608:	b921      	cbnz	r1, 8007614 <_realloc_r+0x16>
 800760a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800760e:	4611      	mov	r1, r2
 8007610:	f7ff b9b2 	b.w	8006978 <_malloc_r>
 8007614:	b92a      	cbnz	r2, 8007622 <_realloc_r+0x24>
 8007616:	f7ff f93b 	bl	8006890 <_free_r>
 800761a:	4625      	mov	r5, r4
 800761c:	4628      	mov	r0, r5
 800761e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007622:	f000 f8e3 	bl	80077ec <_malloc_usable_size_r>
 8007626:	4284      	cmp	r4, r0
 8007628:	4606      	mov	r6, r0
 800762a:	d802      	bhi.n	8007632 <_realloc_r+0x34>
 800762c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007630:	d8f4      	bhi.n	800761c <_realloc_r+0x1e>
 8007632:	4621      	mov	r1, r4
 8007634:	4638      	mov	r0, r7
 8007636:	f7ff f99f 	bl	8006978 <_malloc_r>
 800763a:	4680      	mov	r8, r0
 800763c:	b908      	cbnz	r0, 8007642 <_realloc_r+0x44>
 800763e:	4645      	mov	r5, r8
 8007640:	e7ec      	b.n	800761c <_realloc_r+0x1e>
 8007642:	42b4      	cmp	r4, r6
 8007644:	4622      	mov	r2, r4
 8007646:	4629      	mov	r1, r5
 8007648:	bf28      	it	cs
 800764a:	4632      	movcs	r2, r6
 800764c:	f7ff ffc2 	bl	80075d4 <memcpy>
 8007650:	4629      	mov	r1, r5
 8007652:	4638      	mov	r0, r7
 8007654:	f7ff f91c 	bl	8006890 <_free_r>
 8007658:	e7f1      	b.n	800763e <_realloc_r+0x40>

0800765a <__swhatbuf_r>:
 800765a:	b570      	push	{r4, r5, r6, lr}
 800765c:	460c      	mov	r4, r1
 800765e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007662:	2900      	cmp	r1, #0
 8007664:	b096      	sub	sp, #88	@ 0x58
 8007666:	4615      	mov	r5, r2
 8007668:	461e      	mov	r6, r3
 800766a:	da0d      	bge.n	8007688 <__swhatbuf_r+0x2e>
 800766c:	89a3      	ldrh	r3, [r4, #12]
 800766e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8007672:	f04f 0100 	mov.w	r1, #0
 8007676:	bf14      	ite	ne
 8007678:	2340      	movne	r3, #64	@ 0x40
 800767a:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800767e:	2000      	movs	r0, #0
 8007680:	6031      	str	r1, [r6, #0]
 8007682:	602b      	str	r3, [r5, #0]
 8007684:	b016      	add	sp, #88	@ 0x58
 8007686:	bd70      	pop	{r4, r5, r6, pc}
 8007688:	466a      	mov	r2, sp
 800768a:	f000 f879 	bl	8007780 <_fstat_r>
 800768e:	2800      	cmp	r0, #0
 8007690:	dbec      	blt.n	800766c <__swhatbuf_r+0x12>
 8007692:	9901      	ldr	r1, [sp, #4]
 8007694:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8007698:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800769c:	4259      	negs	r1, r3
 800769e:	4159      	adcs	r1, r3
 80076a0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80076a4:	e7eb      	b.n	800767e <__swhatbuf_r+0x24>

080076a6 <__smakebuf_r>:
 80076a6:	898b      	ldrh	r3, [r1, #12]
 80076a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80076aa:	079d      	lsls	r5, r3, #30
 80076ac:	4606      	mov	r6, r0
 80076ae:	460c      	mov	r4, r1
 80076b0:	d507      	bpl.n	80076c2 <__smakebuf_r+0x1c>
 80076b2:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80076b6:	6023      	str	r3, [r4, #0]
 80076b8:	6123      	str	r3, [r4, #16]
 80076ba:	2301      	movs	r3, #1
 80076bc:	6163      	str	r3, [r4, #20]
 80076be:	b003      	add	sp, #12
 80076c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80076c2:	ab01      	add	r3, sp, #4
 80076c4:	466a      	mov	r2, sp
 80076c6:	f7ff ffc8 	bl	800765a <__swhatbuf_r>
 80076ca:	9f00      	ldr	r7, [sp, #0]
 80076cc:	4605      	mov	r5, r0
 80076ce:	4639      	mov	r1, r7
 80076d0:	4630      	mov	r0, r6
 80076d2:	f7ff f951 	bl	8006978 <_malloc_r>
 80076d6:	b948      	cbnz	r0, 80076ec <__smakebuf_r+0x46>
 80076d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80076dc:	059a      	lsls	r2, r3, #22
 80076de:	d4ee      	bmi.n	80076be <__smakebuf_r+0x18>
 80076e0:	f023 0303 	bic.w	r3, r3, #3
 80076e4:	f043 0302 	orr.w	r3, r3, #2
 80076e8:	81a3      	strh	r3, [r4, #12]
 80076ea:	e7e2      	b.n	80076b2 <__smakebuf_r+0xc>
 80076ec:	89a3      	ldrh	r3, [r4, #12]
 80076ee:	6020      	str	r0, [r4, #0]
 80076f0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80076f4:	81a3      	strh	r3, [r4, #12]
 80076f6:	9b01      	ldr	r3, [sp, #4]
 80076f8:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80076fc:	b15b      	cbz	r3, 8007716 <__smakebuf_r+0x70>
 80076fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007702:	4630      	mov	r0, r6
 8007704:	f000 f84e 	bl	80077a4 <_isatty_r>
 8007708:	b128      	cbz	r0, 8007716 <__smakebuf_r+0x70>
 800770a:	89a3      	ldrh	r3, [r4, #12]
 800770c:	f023 0303 	bic.w	r3, r3, #3
 8007710:	f043 0301 	orr.w	r3, r3, #1
 8007714:	81a3      	strh	r3, [r4, #12]
 8007716:	89a3      	ldrh	r3, [r4, #12]
 8007718:	431d      	orrs	r5, r3
 800771a:	81a5      	strh	r5, [r4, #12]
 800771c:	e7cf      	b.n	80076be <__smakebuf_r+0x18>

0800771e <_raise_r>:
 800771e:	291f      	cmp	r1, #31
 8007720:	b538      	push	{r3, r4, r5, lr}
 8007722:	4605      	mov	r5, r0
 8007724:	460c      	mov	r4, r1
 8007726:	d904      	bls.n	8007732 <_raise_r+0x14>
 8007728:	2316      	movs	r3, #22
 800772a:	6003      	str	r3, [r0, #0]
 800772c:	f04f 30ff 	mov.w	r0, #4294967295
 8007730:	bd38      	pop	{r3, r4, r5, pc}
 8007732:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8007734:	b112      	cbz	r2, 800773c <_raise_r+0x1e>
 8007736:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800773a:	b94b      	cbnz	r3, 8007750 <_raise_r+0x32>
 800773c:	4628      	mov	r0, r5
 800773e:	f000 f853 	bl	80077e8 <_getpid_r>
 8007742:	4622      	mov	r2, r4
 8007744:	4601      	mov	r1, r0
 8007746:	4628      	mov	r0, r5
 8007748:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800774c:	f000 b83a 	b.w	80077c4 <_kill_r>
 8007750:	2b01      	cmp	r3, #1
 8007752:	d00a      	beq.n	800776a <_raise_r+0x4c>
 8007754:	1c59      	adds	r1, r3, #1
 8007756:	d103      	bne.n	8007760 <_raise_r+0x42>
 8007758:	2316      	movs	r3, #22
 800775a:	6003      	str	r3, [r0, #0]
 800775c:	2001      	movs	r0, #1
 800775e:	e7e7      	b.n	8007730 <_raise_r+0x12>
 8007760:	2100      	movs	r1, #0
 8007762:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007766:	4620      	mov	r0, r4
 8007768:	4798      	blx	r3
 800776a:	2000      	movs	r0, #0
 800776c:	e7e0      	b.n	8007730 <_raise_r+0x12>
	...

08007770 <raise>:
 8007770:	4b02      	ldr	r3, [pc, #8]	@ (800777c <raise+0xc>)
 8007772:	4601      	mov	r1, r0
 8007774:	6818      	ldr	r0, [r3, #0]
 8007776:	f7ff bfd2 	b.w	800771e <_raise_r>
 800777a:	bf00      	nop
 800777c:	2000003c 	.word	0x2000003c

08007780 <_fstat_r>:
 8007780:	b538      	push	{r3, r4, r5, lr}
 8007782:	4d07      	ldr	r5, [pc, #28]	@ (80077a0 <_fstat_r+0x20>)
 8007784:	2300      	movs	r3, #0
 8007786:	4604      	mov	r4, r0
 8007788:	4608      	mov	r0, r1
 800778a:	4611      	mov	r1, r2
 800778c:	602b      	str	r3, [r5, #0]
 800778e:	f7fa f9d5 	bl	8001b3c <_fstat>
 8007792:	1c43      	adds	r3, r0, #1
 8007794:	d102      	bne.n	800779c <_fstat_r+0x1c>
 8007796:	682b      	ldr	r3, [r5, #0]
 8007798:	b103      	cbz	r3, 800779c <_fstat_r+0x1c>
 800779a:	6023      	str	r3, [r4, #0]
 800779c:	bd38      	pop	{r3, r4, r5, pc}
 800779e:	bf00      	nop
 80077a0:	20013d0c 	.word	0x20013d0c

080077a4 <_isatty_r>:
 80077a4:	b538      	push	{r3, r4, r5, lr}
 80077a6:	4d06      	ldr	r5, [pc, #24]	@ (80077c0 <_isatty_r+0x1c>)
 80077a8:	2300      	movs	r3, #0
 80077aa:	4604      	mov	r4, r0
 80077ac:	4608      	mov	r0, r1
 80077ae:	602b      	str	r3, [r5, #0]
 80077b0:	f7fa f9d4 	bl	8001b5c <_isatty>
 80077b4:	1c43      	adds	r3, r0, #1
 80077b6:	d102      	bne.n	80077be <_isatty_r+0x1a>
 80077b8:	682b      	ldr	r3, [r5, #0]
 80077ba:	b103      	cbz	r3, 80077be <_isatty_r+0x1a>
 80077bc:	6023      	str	r3, [r4, #0]
 80077be:	bd38      	pop	{r3, r4, r5, pc}
 80077c0:	20013d0c 	.word	0x20013d0c

080077c4 <_kill_r>:
 80077c4:	b538      	push	{r3, r4, r5, lr}
 80077c6:	4d07      	ldr	r5, [pc, #28]	@ (80077e4 <_kill_r+0x20>)
 80077c8:	2300      	movs	r3, #0
 80077ca:	4604      	mov	r4, r0
 80077cc:	4608      	mov	r0, r1
 80077ce:	4611      	mov	r1, r2
 80077d0:	602b      	str	r3, [r5, #0]
 80077d2:	f7fa f953 	bl	8001a7c <_kill>
 80077d6:	1c43      	adds	r3, r0, #1
 80077d8:	d102      	bne.n	80077e0 <_kill_r+0x1c>
 80077da:	682b      	ldr	r3, [r5, #0]
 80077dc:	b103      	cbz	r3, 80077e0 <_kill_r+0x1c>
 80077de:	6023      	str	r3, [r4, #0]
 80077e0:	bd38      	pop	{r3, r4, r5, pc}
 80077e2:	bf00      	nop
 80077e4:	20013d0c 	.word	0x20013d0c

080077e8 <_getpid_r>:
 80077e8:	f7fa b940 	b.w	8001a6c <_getpid>

080077ec <_malloc_usable_size_r>:
 80077ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80077f0:	1f18      	subs	r0, r3, #4
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	bfbc      	itt	lt
 80077f6:	580b      	ldrlt	r3, [r1, r0]
 80077f8:	18c0      	addlt	r0, r0, r3
 80077fa:	4770      	bx	lr

080077fc <_init>:
 80077fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80077fe:	bf00      	nop
 8007800:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007802:	bc08      	pop	{r3}
 8007804:	469e      	mov	lr, r3
 8007806:	4770      	bx	lr

08007808 <_fini>:
 8007808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800780a:	bf00      	nop
 800780c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800780e:	bc08      	pop	{r3}
 8007810:	469e      	mov	lr, r3
 8007812:	4770      	bx	lr
